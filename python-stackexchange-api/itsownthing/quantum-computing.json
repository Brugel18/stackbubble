46_0:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '1567', 'Title': 'How to define quantum Turing machines?', 'LastEditDate': '2012-12-13T02:14:16.660', 'AnswerCount': '2', 'Score': '30', 'PostTypeId': '1', 'OwnerUserId': '157', 'FavoriteCount': '3', 'Body': '<p>In quantum computation, what is the equivalent model of a Turing machine? \nIt is quite clear to me how quantum <strong>circuits</strong> can be constructed out of quantum gates, but how can we define a quantum Turing machine (QTM) that can actually benefit from quantum effects, namely, perform on high-dimensional systems?</p>\n', 'Tags': '<quantum-computing><turing-machines><computation-models>', 'LastEditorUserId': '472', 'LastActivityDate': '2012-12-13T02:14:16.660', 'CommentCount': '4', 'AcceptedAnswerId': '230', 'CreationDate': '2012-03-08T04:51:08.750', 'Id': '125'},46_1:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '893', 'Title': 'Universality of the Toffoli gate', 'LastEditDate': '2012-04-15T18:16:37.757', 'AnswerCount': '2', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '157', 'FavoriteCount': '1', 'Body': '<p>Regarding the quantum <a href="https://en.wikipedia.org/wiki/Toffoli_gate" rel="nofollow">Toffoli gate</a>:</p>\n\n<ol>\n<li>is it <em>classicaly</em> universal, and if so, why?</li>\n<li>is it <em>quantumly</em> universal, and why?</li>\n</ol>\n', 'Tags': '<quantum-computing><circuits><turing-completeness>', 'LastEditorUserId': '157', 'LastActivityDate': '2012-04-15T18:16:37.757', 'CommentCount': '8', 'AcceptedAnswerId': '345', 'CreationDate': '2012-03-13T06:22:59.583', 'Id': '289'},46_2:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Simply put, if one were to build a quantum computing device with the power of, say, 20 qubits,  could such a computer be used to make any kind of modern hashing algorithm useless?</p>\n\n<p>Would it even be possible to harness the power of quantum computing in a traditional computing application?</p>\n', 'ViewCount': '896', 'Title': 'Could quantum computing eventually be used to make modern day hashing trivial to break?', 'LastEditorUserId': '39', 'LastActivityDate': '2012-03-25T21:54:37.717', 'LastEditDate': '2012-03-25T21:54:37.717', 'AnswerCount': '2', 'CommentCount': '2', 'AcceptedAnswerId': '751', 'Score': '10', 'PostTypeId': '1', 'OwnerUserId': '367', 'Tags': '<cryptography><quantum-computing><hash>', 'CreationDate': '2012-03-21T07:01:46.637', 'Id': '586'},46_3:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '430', 'Title': 'Quantum lambda calculus', 'LastEditDate': '2012-04-02T03:49:36.880', 'AnswerCount': '1', 'Score': '19', 'PostTypeId': '1', 'OwnerUserId': '55', 'FavoriteCount': '5', 'Body': '<p>Classically, there are 3 popular ways to think about computation: Turing machine, circuits, and lambda-calculus (I use this as a catch all for most functional views). All 3 have been fruitful ways to think about different types of problems, and different fields use different formulation for this reason. </p>\n\n<p>When I work with quantum computing, however, I only ever think about the circuit model. Originally, QC was defined in terms of <a href="http://cs.stackexchange.com/q/125/55">quantum Turing machines</a> but as far as I understand, this definition (although equivalent to quantum circuits if both are formulated carefully) has not been nearly as fruitful. The 3rd formulation (in terms of lambda-calculus or similar functional settings) I am completely unfamiliar with. Hence my questions:</p>\n\n<ul>\n<li><p><strong>What are useful definitions of quantum lambda-calculus (or other functional paradigms)?</strong></p></li>\n<li><p><strong>What subfields of QIP gain deeper insight from using this formulation instead of the circuit model?</strong></p></li>\n</ul>\n\n<hr>\n\n<h3>Notes</h3>\n\n<p>I am aware that I am ignoring many other popular formalisms like cellular automata, RAM-models, etc. I exclude these mostly because I don\'t have experience with thinking in terms of these models classically, let alone <a href="http://cstheory.stackexchange.com/q/6932/1037">quantumly</a>. </p>\n\n<p>I am also aware that there are popular alternatives in the quantum setting, such as measurement-based, topological, and adiabatic. I do not discuss them because I am not familiar with the classical counterparts.</p>\n', 'Tags': '<lambda-calculus><quantum-computing><reference-request><computation-models>', 'LastEditorUserId': '41', 'LastActivityDate': '2012-04-20T22:51:58.170', 'CommentCount': '3', 'AcceptedAnswerId': '1400', 'CreationDate': '2012-04-02T00:30:46.053', 'Id': '971'},46_4:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Will there be a need to change the definitions of security if we have quantum computers? What cryptographic constructions will break? Do you know a survey or an article that explains what will be needed to change?</p>\n', 'ViewCount': '314', 'Title': 'What is the difference between classical crypto and post-quantum crypto?', 'LastEditorUserId': '69', 'LastActivityDate': '2012-04-30T19:48:18.947', 'LastEditDate': '2012-04-30T17:21:10.673', 'AnswerCount': '2', 'CommentCount': '2', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '1318', 'Tags': '<reference-request><cryptography><quantum-computing>', 'CreationDate': '2012-04-30T17:11:36.020', 'FavoriteCount': '1', 'Id': '1595'},46_5:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>What are devices and their interconnections used alongwith Quantum Processors? Are they compatible with hardware devices like Cache, RAM, Disks of current computers?</p>\n', 'ViewCount': '236', 'Title': 'Organisation and Architecture of Quantum Computers', 'LastActivityDate': '2012-05-07T14:37:34.633', 'AnswerCount': '2', 'CommentCount': '1', 'AcceptedAnswerId': '1720', 'Score': '10', 'PostTypeId': '1', 'OwnerUserId': '191', 'Tags': '<computer-architecture><quantum-computing>', 'CreationDate': '2012-05-07T04:34:49.127', 'FavoriteCount': '1', 'Id': '1710'},46_6:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '755', 'Title': 'What is the difference between quantum TM and nondetermistic TM?', 'LastEditDate': '2012-08-21T07:36:36.807', 'AnswerCount': '2', 'Score': '10', 'PostTypeId': '1', 'OwnerUserId': '2137', 'FavoriteCount': '1', 'Body': '<p>I was going through the discussion on the question <a href="http://cs.stackexchange.com/questions/125/how-to-define-quantum-turing-machines/">How to define quantum-turing-machines?</a> and I feel that quantum TM and <em>nondetermistic</em> TM are one and the same. The answers to the other question do not touch on that. Are these two models one and the same?</p>\n\n<p>If no,</p>\n\n<ol>\n<li>What are the differences between quantum TM and NDTM? </li>\n<li>Is there any computation which a NDTM would do quicker than Quantum TM? </li>\n<li>If this is the case then quantum TM is a DTM, then why is there so much fuzz about this technology, we already have so many DTM. Why to design a new DTM in the end?</li>\n</ol>\n', 'Tags': '<computability><turing-machines><quantum-computing><nondeterminism>', 'LastEditorUserId': '2137', 'LastActivityDate': '2012-08-21T07:36:36.807', 'CommentCount': '1', 'AcceptedAnswerId': '2721', 'CreationDate': '2012-07-13T05:56:28.627', 'Id': '2718'},46_7:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I want to learn quantum computation and information. I am studying from Nielsen &amp; Chuang book for this.\nIs there any online vedio (lecture series) starts from\nbasics of quantum computation and information up to factorization, discrete log, search etc? </p>\n', 'ViewCount': '98', 'Title': 'Help need to learn Quantum Computation and Information', 'LastEditorUserId': '157', 'LastActivityDate': '2012-10-24T21:54:57.560', 'LastEditDate': '2012-10-24T17:01:17.093', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '6292', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '4343', 'Tags': '<reference-request><education><quantum-computing>', 'CreationDate': '2012-10-24T12:51:39.047', 'Id': '6290'},46_8:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I was told that quantum computers are not computationally more powerful than Turing machines.\nCould someone kindly help in giving some literature references explaining that fact?</p>\n', 'ViewCount': '217', 'Title': 'References on comparison between quantum computers and Turing machines', 'LastEditorUserId': '98', 'LastActivityDate': '2012-10-30T05:24:51.813', 'LastEditDate': '2012-10-25T11:04:54.370', 'AnswerCount': '3', 'CommentCount': '1', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '4349', 'Tags': '<computability><reference-request><turing-machines><quantum-computing>', 'CreationDate': '2012-10-24T20:44:35.533', 'Id': '6296'},46_9:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '82', 'Title': 'Tensor Product in Quantum Computation', 'LastEditDate': '2012-10-31T01:33:10.520', 'AnswerCount': '1', 'Score': '3', 'OwnerDisplayName': 'user12290', 'PostTypeId': '1', 'OwnerUserId': '4343', 'Body': '<p>I can not understand the following equality   $$\\langle ij|(|0\\rangle \\langle 0|\\otimes I)kl \\rangle= \\langle i|0\\rangle \\langle 0|k \\rangle \\langle j|I|l \\rangle?$$</p>\n\n<p>Also to estimate phase $\\phi$ in Nielsen &amp; Chuang book, I can not understand why \n$(|0 \\rangle + e^{2\\pi i 2^{t-1}\\phi} |1 \\rangle)(|0 \\rangle + e^{2\\pi i2^{t-2}\\phi }|1 \\rangle)\\cdots (|0 \\rangle + e^{2\\pi i 2^{0}\\phi} |1 \\rangle)= \\displaystyle\\sum_{k=0}^{2^t-1}e^{2\\pi i \\phi^k} |k\\rangle$. </p>\n\n<p>Will you kindly help me?    </p>\n', 'Tags': '<quantum-computing>', 'LastEditorUserId': '157', 'LastActivityDate': '2012-10-31T01:33:10.520', 'CommentCount': '3', 'AcceptedAnswerId': '6335', 'CreationDate': '2012-10-24T04:15:51.240', 'Id': '6334'},46_10:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>As far as I understand, you receive an output from a quantum computer for an algorithm in the form of an amplitude, which is one of the many states your qubits may be in, however this amplitude is a complex number.</p>\n\n<p>I understand that you have to square the amplitude to find the probability of finding that amplitude, but how do you convert that original amplitude into something relevant to the problem (i.e. that 3*5=15)? Is there coding within the algorithm to change the amplitude into a malleable answer?</p>\n', 'ViewCount': '131', 'Title': "Quantum computing 'amplitudes'", 'LastEditorUserId': '157', 'LastActivityDate': '2012-11-02T00:30:20.283', 'LastEditDate': '2012-10-31T21:58:26.033', 'AnswerCount': '2', 'CommentCount': '2', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '4415', 'Tags': '<quantum-computing><computation-models>', 'CreationDate': '2012-10-31T21:53:05.420', 'Id': '6408'},46_11:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Who was/were the first person/people to introduce the topic of quantum complexity theory and problem classes like BQP and QMA?</p>\n', 'ViewCount': '93', 'Title': 'Origin of quantum complexity theory', 'LastActivityDate': '2012-12-10T17:22:34.170', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '7306', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '12230', 'Tags': '<complexity-theory><quantum-computing><history>', 'CreationDate': '2012-12-10T07:48:42.793', 'FavoriteCount': '1', 'Id': '7293'},46_12:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I\'m trying to understand the theory of quantum computing, and I\'m a bit confused on a particular circuit:</p>\n\n<p><img src="http://i.stack.imgur.com/i4Wzr.png" alt="http://i.stack.imgur.com/WWvxr.png"></p>\n\n<p>Would the controlled NOT gate be a type of measurement, causing Q1 to be either |0> or |1>, or would the circuit be in a superposition of the |00> and |11> states until an actual measurement of Q1 or Q2 took place?</p>\n', 'ViewCount': '67', 'Title': 'Controlled NOT gate a type of measurement?', 'LastActivityDate': '2013-03-19T15:06:12.083', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '10619', 'Score': '3', 'OwnerDisplayName': 'Sam Kennedy', 'PostTypeId': '1', 'OwnerUserId': '7351', 'Tags': '<quantum-computing>', 'CreationDate': '2013-03-18T15:04:58.583', 'Id': '10616'},46_13:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I was thinking about how nature can efficiently compute ridiculous (i.e. NP) problems with ease. For example, a quantum system requires a $2^n$ element vector to represent the state, where $n$ is just the number of particles. Nature doesn\'t need any extra time despite the exponential nature of "solving" this $n$-particle system.</p>\n\n<p>This may not be a wholly valid assumption, but the action principle in physics makes me think that nature always wants to do things the easiest way. If that\'s not true, then this question is probably moot.</p>\n\n<p>If we found that nature was NOT capable of solving some problems efficiently, does this mean we are doomed in terms of being able to solve NP problems in polynomial time? Are the laws of physics a strong enough weapon for tackling P vs. NP? Is the converse of the first question/assertion also true (if nature can do it, then there must be a way for us to as well)?</p>\n', 'ViewCount': '358', 'Title': "What is the relation between P vs. NP and Nature's ability to solve NP problems efficiently?", 'LastActivityDate': '2013-04-05T03:52:33.673', 'AnswerCount': '3', 'CommentCount': '5', 'AcceptedAnswerId': '11027', 'Score': '4', 'OwnerDisplayName': 'anon', 'PostTypeId': '1', 'Tags': '<complexity-theory><quantum-computing>', 'CreationDate': '2013-03-30T19:28:37.943', 'FavoriteCount': '2', 'Id': '11026'},46_14:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>From <a href="http://programmers.stackexchange.com/questions/194552/what-is-the-difference-between-quantum-annealing-and-simulated-annealing">that question</a> about differences between Quantum annealing and simulated annealing, we found (in commets to answer) that physical implementation of quantum annealing is exists (D-Wave quantum computers).</p>\n\n<p>Can anyone explain that algorithm in terms of quantum gates and quantum algorithms, or in physical terms (a part of algorithm that depends on quantum hardware)?</p>\n\n<p>Does anyone have any ideas about that?\nPlease tell me, if you know some links related this question.</p>\n', 'ViewCount': '419', 'Title': 'The physical implementation of quantum annealing algorithm', 'LastActivityDate': '2013-04-19T20:20:45.790', 'AnswerCount': '4', 'CommentCount': '3', 'AcceptedAnswerId': '11362', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '7672', 'Tags': '<algorithms><randomized-algorithms><quantum-computing>', 'CreationDate': '2013-04-11T07:05:16.517', 'FavoriteCount': '2', 'Id': '11218'},46_15:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>Ok, I have done a lot of research on Quantum computers. I understand that they are possibly the future of computers and may be commonplace in approximately 30-50 years time.</p>\n\n<p>I know that a Binary is either 0 or 1, but a Qubit can be 0 or 1. But what I don't understand is how it can be anything other then 0 or 1. Surely a computer can only understand on and off, despite however fast it may be?</p>\n", 'ViewCount': '294', 'Title': 'The difference between a bit and a Qubit', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-22T14:39:15.300', 'LastEditDate': '2013-04-21T23:12:18.507', 'AnswerCount': '4', 'CommentCount': '1', 'AcceptedAnswerId': '11477', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '7830', 'Tags': '<terminology><quantum-computing>', 'CreationDate': '2013-04-21T17:55:43.693', 'Id': '11471'},46_16:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '230', 'Title': 'Quantum computing roadmap', 'LastEditDate': '2013-06-14T19:38:39.543', 'AnswerCount': '1', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '8667', 'FavoriteCount': '1', 'Body': '<p>I have to create a roadmap for the quantum computing technology. Looking around I found the <a href="http://en.wikipedia.org/wiki/Timeline_of_quantum_computing" rel="nofollow">timeline</a> on wikipedia that is pretty wide but does not highlight the key events in quantum computing research neither sets the possible future for research.</p>\n\n<p>Could somebody help me to define which are key events in the quantum computing fields? When (and why) we started to explore this technology, for which milestones we passed through and (maybe) what we can set as future milestones?</p>\n', 'Tags': '<reference-request><quantum-computing>', 'LastEditorUserId': '3011', 'LastActivityDate': '2013-06-14T19:38:39.543', 'CommentCount': '3', 'AcceptedAnswerId': '12675', 'CreationDate': '2013-06-14T13:17:36.910', 'Id': '12672'},46_17:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I\'ve read that quantum computers can solve \'certain problems\' exponentially better than classical computers.  As I think I understand it, it\'s NOT the same to say that quantum computers take any problems that are EXPTIME-complete, 2-EXPTIME,... and convert them to linear time or constant-time.</p>\n\n<p>I would like to know something more about this matter:</p>\n\n<ul>\n<li>Why can/can\'t a quantum computer solve exponential problems in sub-exponential time?</li>\n<li>Is it at least theoretically possible to imagine a computer (quantum or otherwise) able to solve EXPTIME-complete problems in constant time? Or does this lead to a contradiction?</li>\n</ul>\n\n<p><strong>EDIT</strong>  a third related item:</p>\n\n<ul>\n<li>Can quantum computers do parallel computing?</li>\n</ul>\n\n<p>Now that the subject came up from comments, the idea about parallel computing, that\'s the usual/pop vision about quantum computers, like if quantum computers were able to compute "all posibilities at once" of any given problem (I think if that were the case, wouldn\'t be necesary to call great Peter Shor to invent a factoring algorithm!). Then "why" question about quantum computers can/cannot do parallel computing is half a computer science and a physics question.</p>\n\n<p>Here a source of confusion: <a href="http://physics.about.com/od/physicsqtot/g/quantumparallel.htm" rel="nofollow">http://physics.about.com/od/physicsqtot/g/quantumparallel.htm</a></p>\n', 'ViewCount': '250', 'Title': 'Quantum computers, parallel computing and exponential time', 'LastEditorUserId': '1396', 'LastActivityDate': '2013-06-25T18:57:45.420', 'LastEditDate': '2013-06-25T18:36:11.587', 'AnswerCount': '2', 'CommentCount': '5', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '1396', 'Tags': '<complexity-theory><time-complexity><quantum-computing>', 'CreationDate': '2013-06-25T15:36:04.140', 'FavoriteCount': '2', 'Id': '12892'},46_18:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Suppose I want to write a classical software simulator of a quantum circuit with $N$ qubits.  When it comes time to simulate the quantum Fourier transform I can evaluate all $2^N$ states to determine the probability amplitudes, and then perform a Fast-Fourier Transform on the probability amplitudes in time $o(N 2^N)$.  Finally in $o(2^N)$ time I can generate a scan of the partial sums of the probabilities of all the result states.  Then I can choose a random number in the range $[0,1]$ and use it to do a binary search of the partial sums.</p>\n\n<p>This results in a simulator that, each time is run outputs a single $N$ bit binary number with the probability distribution predicted by theory.</p>\n\n<p>Can I do better?  Of course I can\'t do exponentially better in general, but perhaps I could reduce the time to simulate a single experiment to $o(2^N)$?</p>\n\n<p>I can do significantly better under some circumstances.  For example, <a href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.135.7607">Gilbert, Guha, Indyk, Muthukrishnan, and Strauss, "Near-Optimal Sparse Fourier Representations via Sampling", <em>ACM Symp Theory Comp</em>, STOC-44:152-161, 2002,</a> seems to indicate that if there are only $B$ frequencies (or if the $B$ frequencies make up "most" of the power of the signal) then there is a randomized algorithm that will recover all of them (and their amplitudes) in time, space and number of samples polynomial in $B$ and $N$.</p>\n\n<p>I guess I\'m hoping for something like that, but only to get one frequency, and to have some guarantee that the probability of getting a particular frequency will be proportional to the amplitude of its coefficient.</p>\n', 'ViewCount': '61', 'Title': '(Slightly) faster simulation of quantum Fourier transform', 'LastActivityDate': '2013-07-18T03:50:14.887', 'AnswerCount': '0', 'CommentCount': '1', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '7459', 'Tags': '<randomized-algorithms><quantum-computing><fourier-transform>', 'CreationDate': '2013-07-18T03:50:14.887', 'FavoriteCount': '1', 'Id': '13325'},46_19:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '93', 'Title': "Finding all marked elements using Grover's algorithm", 'LastEditDate': '2013-07-30T13:30:03.557', 'AnswerCount': '2', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '9423', 'FavoriteCount': '0', 'Body': "<p>Grover's algorithm uses an oracle function $f(x) \\to \\{0,1\\}$ to find the location of a single marked element from an unordered database of $2^n$ elements with high probability. As part of an assignment I am supposed to design a variant of the algorithm that finds <em>all</em> of the $t$ marked elements ($t$ is known). I want to do this by repeating the following procedure $t$-times:</p>\n\n<ol>\n<li>Use Grover's algorithm to find any marked element $x$.</li>\n<li>Delete $x$ from the data base.</li>\n</ol>\n\n<p>I think my solution is correct, but I am still not feeling comfortable with quantum computing. In particular, I am unsure of how one could implement the removal step since it would mean to manipulate the function $f$. </p>\n\n<p>Can anyone clarify?</p>\n", 'Tags': '<algorithms><quantum-computing>', 'LastEditorUserId': '472', 'LastActivityDate': '2013-08-05T15:00:31.243', 'CommentCount': '3', 'AcceptedAnswerId': '13615', 'CreationDate': '2013-07-30T11:06:23.053', 'Id': '13513'},46_20:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>In these notes about <a href="http://www.scottaaronson.com/democritus/lec10.html" rel="nofollow">quantum computation</a> by Scott Aronson, he explains that the computation classes $\\mathsf{BPP}$ is contained in $\\mathsf{BQP}$, but that they are not equal, and</p>\n\n<blockquote>\n  <p>So, the bottom line is that we get a problem -- Simon\'s problem -- that quantum computers can provably solve exponentially faster than classical computers. Admittedly, this problem is rather contrived, relying as it does on a mythical "black box" for computing a function f with a certain global symmetry. Because of its black-box formulation, Simon\'s problem certainly doesn\'t prove that $\\mathsf{BPP} \\neq \\mathsf{BQP}$. What it does prove that there exists an oracle relative to which $\\mathsf{BPP} \\neq \\mathsf{BQP}$. This is what I meant by formal evidence that quantum computers are more powerful than classical ones.</p>\n</blockquote>\n\n<p>What does he mean by an <em>oracle</em> separation?</p>\n\n<p>My understanding of an oracle for a Turing machine is one that solves the halting problem. Surely that can\'t be the case here?</p>\n', 'ViewCount': '234', 'Title': 'What is meant by an oracle separation between classes $\\mathsf{BPP}$ and $\\mathsf{BQP}$?', 'LastEditorUserId': '472', 'LastActivityDate': '2013-07-31T16:02:03.220', 'LastEditDate': '2013-07-31T16:02:03.220', 'AnswerCount': '2', 'CommentCount': '2', 'Score': '4', 'OwnerDisplayName': 'Mozibur Ullah', 'PostTypeId': '1', 'Tags': '<complexity-theory><quantum-computing><oracle-machines>', 'CreationDate': '2013-07-30T23:54:56.503', 'FavoriteCount': '1', 'Id': '13528'},46_21:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<ol>\n<li><p><strong>How is Quantum Algorithms and Complexity Theory essentially different from Classical Counterparts?</strong></p></li>\n<li><p>Also how are non-deterministic Turing Machines(NTM) different from Quantum Turing Machines(QTM)? More precisely, Is there an QTM that can solve the SAT 'fairly fast'? </p></li>\n</ol>\n\n<p>I wanted to know how are QTMs different from NTMs, for instance we have parallelism in NTMs which (i think) are not exhibited by QTMs, also there are certain class of problems (in linear optics) that the QTMs can solve easier than NTMs.. </p>\n\n<p>So, what are their limitations and computational powers?</p>\n", 'ViewCount': '49', 'Title': 'Quantum Algorithms and CT vs Classical counterparts', 'LastEditorUserId': '9736', 'LastActivityDate': '2013-08-30T11:10:11.807', 'LastEditDate': '2013-08-30T11:10:11.807', 'AnswerCount': '0', 'CommentCount': '8', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '9736', 'Tags': '<quantum-computing>', 'CreationDate': '2013-08-29T10:52:41.040', 'FavoriteCount': '1', 'Id': '14018'},46_22:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>It is well known now that <a href="http://en.wikipedia.org/wiki/Grover%27s_algorithm" rel="nofollow">Grover\'s quantum algorithm</a> can <strong>SORT</strong> a database of $N$ entries in $O(\\sqrt{N})$ time. How can an algorithm work without reading through the list of entries which needs $O(N)$ operation. How does Grover\'s algorithm avoid reading the list? Is there a special representation that can be used classically as well? I understand any such representation will not help the classical case. However I am curious to understand how Grover avoids reading the list?</p>\n', 'ViewCount': '146', 'Title': "How does Grover's Quantum Sorting avoid reading the list?", 'LastEditorUserId': '98', 'LastActivityDate': '2013-09-22T06:29:18.927', 'LastEditDate': '2013-09-20T16:27:01.477', 'AnswerCount': '2', 'CommentCount': '2', 'AcceptedAnswerId': '14445', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '9753', 'Tags': '<algorithms><sorting><quantum-computing>', 'CreationDate': '2013-09-19T14:55:35.013', 'Id': '14442'},46_23:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I'm a fledgling computer science scholar, and I'm being asked to write a paper which involves integer factorization. As a result, I'm having to look into Shor's algorithm on quantum computers.</p>\n\n<p>For the other algorithms, I was able to find specific equations to calculate the number of instructions of the algorithm for a given input size (from which I could calculate the time required to calculate on a machine with a given speed). However, for Shor's algorithm, the most I can find is its complexity: <code>O( (log N)^3 )</code>.</p>\n\n<p>Is there either some way I can find its speed/actual complexity from its Big-O Notation? If not, is there someone who can tell me what I want, or how to find it?</p>\n", 'ViewCount': '161', 'Title': "Shor's Algorithm speed", 'LastActivityDate': '2013-11-04T09:54:16.450', 'AnswerCount': '2', 'CommentCount': '0', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '11162', 'Tags': '<time-complexity><quantum-computing><factoring>', 'CreationDate': '2013-11-04T00:54:24.083', 'Id': '16684'},46_24:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I just read the <a href="https://en.wikipedia.org/wiki/Simon%27s_problem" rel="nofollow">Wiki article for Simon\'s Problem</a> but I don\'t fully understand it because I don\'t follow the symbolic notation used to describe functions (I am not a computer scientist). </p>\n\n<p>Can someone just briefly explain it in simple language, like is it just XOR\'ing two binary strings and trying to isolate each string? Also, if this problem is known to take exponential time to solve, why isn\'t it being used as a cryptographic primitive?</p>\n', 'ViewCount': '105', 'Title': "Simple explanation of Simon's Problem", 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-06T14:47:26.853', 'LastEditDate': '2014-01-06T06:21:48.723', 'AnswerCount': '2', 'CommentCount': '2', 'AcceptedAnswerId': '19521', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '8367', 'Tags': '<algorithms><quantum-computing>', 'CreationDate': '2014-01-05T23:55:30.393', 'Id': '19519'},46_25:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '69', 'Title': 'How to measure processing power of a quantum computer?', 'LastEditDate': '2014-01-28T08:20:02.857', 'AnswerCount': '1', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '12657', 'FavoriteCount': '1', 'Body': '<p>Is there any way to get an equivalent of computing power of quantum computers in terms of computing power of common computers? I mean, how many teraflops (or so) can a quantum computer compute? How can I calculate that equivalence? I think it depends on the architecture, like a x64 in common computer, and a 512-qubit.</p>\n', 'Tags': '<terminology><quantum-computing>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-28T08:20:02.857', 'CommentCount': '1', 'AcceptedAnswerId': '20024', 'CreationDate': '2014-01-27T19:56:09.843', 'Id': '20014'},46_26:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>everyone! I don't know a whole lot about the fields of encryption or quantum computing, but I've read a lot of articles on the subjects and that is prescisley what caused this question. I've been a little scared about the whole NSA quantum computer that is build for the sole purpose of cracking encryption codes. I am fairly certain that they wouldn't use that power to get into random civilians' information, but if they did how hard would it be to block them out?</p>\n\n<p>According to the numbers I've seen this computer could crack a typical encryption code within a little more than a week. And I recall seeing that a typical encryption key used in a consumer application is either 64 or 128 bits (or bytes?) long. I'm sorry if I'm getting these numbers wrong. Now, a week is an awful long time to to wait to crack a code (but wickedly better than with conventional computers), so they wouldn't waste their time on the password hash for your Facebook account. But say they did, wouldn't it be easy to overwhelm that system? According to mathematics the total number of time it would take to break the code would double with every bit longer the code is, and multiply by 256 with every byte. So, assuming a computer that could crack a 64bit code in up to a week, it would take 3.54^17 years to crack a 128 bit one.</p>\n\n<p>Is this true? And if it is, then wouldn't this make the NSA computer useless? Because anyone that the angency would want to hack into could simply just increase the length of their encryption keys.</p>\n\n<p>Thanks for any insight on the matter, and sorry if I have my facts wrong.</p>\n", 'ViewCount': '59', 'Title': 'Quantum computer code cracking', 'LastActivityDate': '2014-02-06T05:19:44.877', 'AnswerCount': '2', 'CommentCount': '3', 'Score': '3', 'OwnerDisplayName': 'TheJ', 'PostTypeId': '1', 'Tags': '<quantum-computing>', 'CreationDate': '2014-02-02T07:51:38.073', 'Id': '21353'},46_27:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I'm currently reading a book (and alot of wikipedia) about quantum physics and I'm yet to understand how is a quantum computer can be faster than the computers we have today? what causes the possibility of a quantum computer to solve a problem of exponential time in sub-exp time? </p>\n", 'ViewCount': '2054', 'Title': 'Why and how is a quantum computer faster than a regular computer?', 'LastActivityDate': '2014-02-18T18:20:43.030', 'AnswerCount': '3', 'CommentCount': '2', 'AcceptedAnswerId': '21729', 'Score': '15', 'PostTypeId': '1', 'OwnerUserId': '11713', 'Tags': '<quantum-computing>', 'CreationDate': '2014-02-17T07:41:03.597', 'FavoriteCount': '6', 'Id': '21727'},46_28:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I read in <a href="http://www.cs.virginia.edu/~robins/The_Limits_of_Quantum_Computers.pdf" rel="nofollow">this article</a> that the amount of bits that can be emulated by a certain number of qubits is 2^(number of qubits). This is because each qubit can be in one of 2 states after it collapses, and so before all the quantum... whatevers collapse, that is the function that gets that result. At least, that was generally what it was saying, but I probably mangled the explanation myself; sorry.</p>\n\n<p>Anyway, this relation (2^n) happens to be the same as the relation between memory registers and RAM in classical computers (i.e. if the computer has n bits in the register, it can have up to 2^n bytes in RAM). Is this important? Does it mean qubits will become like the memory registers and their states like the RAM when we switch to quantum computers? Or is it just something that seems important but is actually meaningless in practice?</p>\n\n<p>By the way, there don\'t seem to be any tags for some things I referenced, like RAM &amp; memory registers. Is that because the site is so new, or am I just not looking hard enough?</p>\n', 'ViewCount': '35', 'Title': 'Qubits Related to RAM?', 'LastEditorUserId': '14777', 'LastActivityDate': '2014-02-18T00:15:53.710', 'LastEditDate': '2014-02-17T23:37:17.640', 'AnswerCount': '1', 'CommentCount': '5', 'AcceptedAnswerId': '21745', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '14777', 'Tags': '<memory-management><quantum-computing>', 'CreationDate': '2014-02-17T22:52:31.283', 'Id': '21744'},46_29:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '72', 'Title': 'What languages does a (1-way) quantum finite state automata recognize?', 'LastEditDate': '2014-03-03T14:59:28.130', 'AnswerCount': '2', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '15077', 'FavoriteCount': '1', 'Body': '<p>Sorry if this is well known, but most of the research is paywalled.</p>\n\n<p>So far I know that it is a subset of the regular languages, but I cannot seem to find any (available) research which pins it down.</p>\n\n<p>Thanks!</p>\n', 'Tags': '<finite-automata><quantum-computing>', 'LastEditorUserId': '15077', 'LastActivityDate': '2014-03-03T14:59:28.130', 'CommentCount': '0', 'AcceptedAnswerId': '22165', 'CreationDate': '2014-02-26T18:59:37.350', 'Id': '22059'},46_30:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>We used to have analog computers several decades ago. Modern days computers are Digital. What about Quantum computers? Is it analog or digital? I am asking this since qubit can be many things at the same time. </p>\n', 'ViewCount': '102', 'Title': 'Is Quantum Computer analog?', 'LastActivityDate': '2014-03-20T15:14:03.690', 'AnswerCount': '2', 'CommentCount': '1', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '6466', 'Tags': '<quantum-computing>', 'CreationDate': '2014-03-20T09:01:11.493', 'Id': '22856'},46_31:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>In class last week, my professor commented and said that Turing machines are used as a standard measure/model of what is computable and are a helpful basis of discussion for that subject. She also said that all variants of Turing machines are proven to be computationally equivalent -- read, just as powerful -- as one another. W</p>\n\n<p>I commented and said yesterday that, regarding computability power, I noticed that some turing machines can take incredibly large amounts of time to compute something very simple, while a turing machine with more tapes can compute something in a lower asymptotic complexity with respect to the number of steps needed.</p>\n\n<p>She said that with respect to class discourse, the runtime of a particular algorithm on a turing machine does not change the definition of computability, or the power with which we measure computability. "We\'re concerned about what is computable, not what is efficiently computable at this point." So, it doesn\'t matter if the turing machines has more and more tapes, and more and more tapes implies that it can compute in lesser steps. Okay, I get that we\'re really focusing on what IS computable, not the speed at which we can compute it. </p>\n\n<p>Something about that just bothers me, because up to this point, algorithms with abnormally large asymptotic time and space complexity really define the limits of what is, maybe I should say, practically, computable. </p>\n\n<p>So, I have a couple of questions:</p>\n\n<ol>\n<li>Suppose we have a model for <a href="http://cs.stackexchange.com/questions/125/how-to-define-quantum-turing-machines">a quantum turing machine</a>, this must be equivalent to a "regular" turing machine, right? </li>\n</ol>\n\n<p>So, the answer to that question I think really is going towards my reason for writing this post. Does quantum computing technology antiquate the classical definitions of what is computable via a turing machine?</p>\n\n<ol>\n<li>Is this something above my head and should I delete this post? I don\'t mean to be precocious, I just didn\'t see a question similar to mine. </li>\n</ol>\n', 'ViewCount': '860', 'Title': 'Quantum Computing and Turing Machines: Are Turing Machines still an Accurate Measure?', 'LastActivityDate': '2014-03-28T04:10:44.753', 'AnswerCount': '1', 'CommentCount': '3', 'AcceptedAnswerId': '23164', 'Score': '10', 'PostTypeId': '1', 'OwnerUserId': '12863', 'Tags': '<turing-machines><quantum-computing>', 'CreationDate': '2014-03-28T03:34:32.470', 'FavoriteCount': '1', 'Id': '23162'},46_32:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I want to do tensor product of two qubits which are passed through two Hadamard gates.\nI understand feeding the control bit of CN gate the output of Hadamard gate and target bit <strong>|0></strong> gives me the Bell state, but is it possible to get a normal state with all possible combinations of zeroes and ones when I feed even the target bit the output of Hadamard gate?\nAny kind of input is appreciated. Thank you.</p>\n', 'ViewCount': '48', 'ClosedDate': '2014-05-03T23:50:10.063', 'Title': 'How to do Tensor product of two qubits using gates', 'LastActivityDate': '2014-03-28T18:13:14.573', 'AnswerCount': '0', 'CommentCount': '10', 'Score': '1', 'OwnerDisplayName': 'user2755321', 'PostTypeId': '1', 'OwnerUserId': '16271', 'Tags': '<quantum-computing>', 'CreationDate': '2014-03-28T14:37:17.957', 'FavoriteCount': '1', 'Id': '23189'},46_33:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '137', 'Title': 'Quantum algorithms and quantum computation', 'LastEditDate': '2014-04-04T12:48:55.663', 'AnswerCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '16266', 'FavoriteCount': '3', 'Body': "<p>Is my (very high-level) understanding correct here regarding quantum algorithms &mdash;</p>\n\n<p>Quantum computers can process a massive amount of operations in parallel to the nature of qubits and their ability to have states that are superpositions of $|0\\rangle$ and $|1\\rangle$.</p>\n\n<p>Yet when we measure the qubits all the possible states collapse into a single state of either $|0\\rangle$ or $|1\\rangle$, which seems to negate the potential benefits of parallel operations. All we really know are the probabilities that the states will end up as.</p>\n\n<p>However, we can exploit quantum properties to increase the probability that we end up with a certain result. I believe Shor's algorithm is based on exploiting quantum properties too, although I'm not sure in what way?</p>\n\n<p><em>e.g.</em> in a quantum walk, quantum interference means the walk spreads faster than a classical random walk and hence can out-perform classical walks.</p>\n\n<p>That is my very high level understanding of what is going on with quantum algorithms. Am I correct, 'sort-of' correct, or way-off? Can someone clarify my understanding?</p>\n", 'Tags': '<quantum-computing><random-walks>', 'LastEditorUserId': '2152', 'LastActivityDate': '2014-04-04T13:08:09.397', 'CommentCount': '0', 'AcceptedAnswerId': '23418', 'CreationDate': '2014-04-04T12:43:38.880', 'Id': '23417'},46_34:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>We know that $BPP \\subseteq BQP$ but we have no proof $BPP \\subset BQP$\n(Though we have the proof that BQP $!=$ BPP with an oracle)</p>\n\n<p>Since Simon's problem (as factoring) it's easily solvable by a quantum computer, and in exponential time complexity solvable by a classical computer, that's a hint of the separation between BQP and BPP and therefore this can be a pure NP problem. \nAm I right?</p>\n", 'ViewCount': '26', 'Title': "Is Simon's problem a good NP-intermediate candidate?", 'LastActivityDate': '2014-04-21T14:52:08.960', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '23989', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '7955', 'Tags': '<complexity-theory><complexity-classes><quantum-computing>', 'CreationDate': '2014-04-21T12:57:28.700', 'Id': '23985'}