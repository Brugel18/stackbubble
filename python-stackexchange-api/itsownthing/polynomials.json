3540:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>What does it mean to multiply or divide polynomials?</p>\n\n<p>I have used them so many times, in error correcting codes, cryptography, etc. but it was never clear to me what would be a graphical representation/ interpretation.</p>\n\n<p>I have always pondered what did it mean when someone multiplies a line with a curve to get another hyperplane of a bigger dimension.</p>\n\n<p>I know the formulae and properties of polynomial multiplication &amp; division, I am specifically looking for a graphical/algebraic interpretation of it.</p>\n', 'ViewCount': '109', 'Title': 'What does it mean to multiply or divide polynomials?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-09-20T03:52:30.580', 'LastEditDate': '2013-09-18T09:15:33.427', 'AnswerCount': '2', 'CommentCount': '3', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '9736', 'Tags': '<mathematical-analysis><intuition><polynomials>', 'CreationDate': '2013-09-18T00:11:09.867', 'Id': '14393'},3541:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '106', 'Title': 'Writing a program to find polynomial $f(x)$ from $f(1)$ and $f(f(1))$', 'LastEditDate': '2013-10-06T18:17:17.187', 'AnswerCount': '3', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '7890', 'FavoriteCount': '1', 'Body': '<p>Let $f(x)=a_0+a_1x+a_2x^2+\\dots+a_nx^n$, where $a_i\\ge0$ and $a_i$ is integer.</p>\n\n<p>Given $f(1)=p$ and $f(f(1))=q$, we have to find $a_0$, $a_1$, $a_2$, $a_3$, $\\dots$, $a_n$, where such $f(x)$ exists. Or we have to confirm if such $f(x)$ exists or if the polynomial is ambiguous e.g. for $p=1$ and $q=2$, no such $f(x)$ exists but for $p=1$ and $q=1$, $f(x)=1$, $f(x)=x^2$ both can be solution.</p>\n\n<p>I have to write a program to do that. What should be my procedure?</p>\n', 'Tags': '<mathematical-programming><polynomials>', 'LastEditorUserId': '7890', 'LastActivityDate': '2013-10-07T22:36:49.737', 'CommentCount': '0', 'AcceptedAnswerId': '14876', 'CreationDate': '2013-10-06T04:32:02.160', 'Id': '14853'},3542:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p><a href="http://courses.csail.mit.edu/6.046/spring04/handouts/prac-quiz2-sol.pdf" rel="nofollow">http://courses.csail.mit.edu/6.046/spring04/handouts/prac-quiz2-sol.pdf</a></p>\n\n<p>I\'m confused as to the solution for the snowball question. To start with, I have two specific questions:</p>\n\n<p>(1) Each pair $a_i,b_j$ will account for one term (and why ONE term)? What is meant by term here? The coefficient, $c_k$ of the polynomial C? Or maybe the $x$ value at the $kth$ spot?</p>\n\n<p>(2) Why is $c_k$ the number of such pairs?</p>\n', 'ViewCount': '50', 'Title': 'Snowball Question FFT', 'LastEditorUserId': '10599', 'LastActivityDate': '2013-10-19T23:11:09.083', 'LastEditDate': '2013-10-19T22:37:55.200', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '16242', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '10599', 'Tags': '<algorithms><fourier-transform><polynomials>', 'CreationDate': '2013-10-19T22:30:58.810', 'Id': '16240'},3543:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I need to evaluate a polynomial of degree n at the n cube roots of unity. Simple evaluation would take $O(n^2)$ time. I know that polynomial evaluation can be done in $O(n\\log n)$ time using FFT.</p>\n\n<p>But the problem that I am facing is this. FFT only works when $n$ is a power of 2. If I extend my polynomial by appending zeroes at the end, that would not solve my problem because then I would be evaluating my polynomial at cube roots of $m$ (where $m$ is a power of $2$ greater than $n$) which I don't want.</p>\n\n<p>Any ideas on this?</p>\n", 'ViewCount': '40', 'Title': 'Discrete fourier transform of a polynomial whose degree is not a power of 2', 'LastEditorUserId': '683', 'LastActivityDate': '2013-12-11T07:55:55.970', 'LastEditDate': '2013-12-11T07:55:55.970', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '11899', 'Tags': '<algorithms><divide-and-conquer><polynomials>', 'CreationDate': '2013-12-07T09:42:01.607', 'Id': '18710'},3544:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>Suppose we are given matrices $A_1, \\ldots, A_k$ which are $n \\times n$ matrices with rational entries and are asked to determine whether the polynomial ${\\rm det}(\\alpha_1 A_1 + \\alpha_2 A_2 + \\cdots + \\alpha_k A_k)$ is identically zero. How can we do this <strong>deterministically</strong> in polynomial time in $n$ and $k$?</p>\n\n<p>I'm aware that black-box polynomial identity testing is a difficult problem, but then this is not quite a black box. </p>\n", 'ViewCount': '150', 'Title': 'Testing whether a determinant polynomial is identically zero', 'LastEditorUserId': '12370', 'LastActivityDate': '2013-12-29T04:06:42.227', 'LastEditDate': '2013-12-29T04:06:42.227', 'AnswerCount': '1', 'CommentCount': '10', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '12370', 'Tags': '<algorithms><linear-algebra><polynomials>', 'CreationDate': '2013-12-25T16:01:54.260', 'Id': '19278'},3545:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I am a teaching assistant on a course for computer science students where we recently talked about big-O notation. For this course I would like to teach the students a general method for  finding the constants $C$ and $k$ in the definition of big-O\n$$\n|f(x)| \\leq C|g(x)|, x &gt; k,\n$$\nwhen the function $f(x)$ is a fraction of polynomials.</p>\n\n<p>I have tried to concoct my own method, but I am unsure of its correctness. I was inspired by the easy method of finding $C$ and $k$ for a polynomial where for example we can show that $x^3+2x+3$ is $O(x^3)$ by\n$$\nx^3+2x+3 \\leq x^3+2x^3+3x^3 = 6x^3\n$$\nto find $C = 6$ and $k = 1$.</p>\n\n<p>Now, for a fraction of polynomials I am unsure what to do with the denominator. My attempt at a general method is as follows. I would like to show that $\\frac{x^4+x^2x1}{x^3+1}$ is $O(x)$. First I divide by the highest term in the denominator to get a $1$ in the denominator:\n$$\n\\frac{(x^4+x^2+1)/x^3}{(x^3+1)/x^3} = \\frac{x+\\frac{1}{x}+\\frac{1}{x^2}}{1+\\frac{1}{x^3}}\n$$\nNow I argue, somewhat analogously to the previous example, that the fractions in the numerator must be less than (when x > 0) x, and since a smaller denominator makes the expression smaller, setting all the terms in denominator except the $1$ to $0$, I obtain the inequality\n$$\n\\frac{x+\\frac{1}{x}+\\frac{1}{x^2}}{1+\\frac{1}{x^3}} \\leq \\frac{x+x+x}{1+0} = 3x\n$$\nand I find $C = 3$ and $k = 1$.</p>\n\n<p>Now my question is, does this homebrewed method actually work or is it complete nonsense? And if it is nonsense, does anybody know of another general method for finding $C$ and $k$ in instances like this?</p>\n\n<p>Note that I need to find the constants $C$ and $k$, not just show that a given function is big-O of some other function, and the students have had no course in calculus, so I can use no concepts from there, such as limits.</p>\n', 'ViewCount': '99', 'Title': 'Finding constants C and k for big-O of fraction of polynomials', 'LastActivityDate': '2014-03-02T21:10:23.610', 'AnswerCount': '3', 'CommentCount': '2', 'AcceptedAnswerId': '22141', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '15140', 'Tags': '<asymptotics><polynomials>', 'CreationDate': '2014-02-28T19:28:09.083', 'Id': '22137'},3546:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I\'m reading <a href="http://download-software.intel.com/sites/default/files/article/165685/clmul-wp-rev-2.01-2012-09-21.pdf">this Intel white paper on carry-less multiplication</a>. It describes multiplication of polynomials in $\\text{GF}(2^n)$. On a high level, this is performed in two steps: (1) multiplication of polynomials over $\\text{GF}(2)$, and (2) reducing the result modulo an irreducible polynomial. We use the "standard" bitstring representation of polynomials, i.e. $x^3+x+1 = [1011]$.</p>\n\n<p>The paper gives an algorithm for calculation of the remainder polynomial on page 16 in Algorithm 3. However, I\'m having trouble understanding the reduction algorithm on pages 16-17 (Algorithm 4). Essentially, I think we need Algorithm 4 for larger fields when our or partial results don\'t fit 128 bits anymore. They give an example for multiplication of two polynomials in $\\text{GF}(2^{128})$.</p>\n\n<blockquote>\n  <p>Where do the "magic constants" 63, 62, and 57 for right shifts, and the "magic constants" 1, 2, and 7 for left shifts come from?</p>\n</blockquote>\n\n<p>For example, how does one generalize the algorithm for smaller fields, say $\\text{GF}(2^{32})$? Would the corresponding shift values then be 15, 14, 9 and 1, 2, 7?</p>\n\n<blockquote>\n  <p>In the final step 4, the algorithm tells you to "XOR $[E_1:E_0]$, $[F_1:F_0]$, and $[G_1:G_0]$ with each other and $[X_3:D]$".</p>\n</blockquote>\n\n<p>Why do we do this? As far as I can see, the result of this XOR operation is neither stored anywhere nor used anywhere. Is it somehow used for computing $[H_1 : H_0]$?</p>\n', 'ViewCount': '79', 'Title': "Understanding Intel's algorithm for reducing a polynomial modulo an irreducible polynomial", 'LastEditorUserId': '16379', 'LastActivityDate': '2014-04-10T16:46:42.737', 'LastEditDate': '2014-04-08T12:51:39.823', 'AnswerCount': '2', 'CommentCount': '1', 'AcceptedAnswerId': '23574', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '16379', 'Tags': '<algorithms><integers><polynomials><multiplication>', 'CreationDate': '2014-04-08T12:44:30.947', 'Id': '23549'},3547:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>A polynomial map is equal to another polynomial map iff they take on the same values at each point.  So this is different from formal polynomials.   So since in $\\Bbb{Z}_p$, $x^{p-1} = 1$ for all $x \\neq 0$, and is $0$ on $0$, we have that there are a finite number of polynomial maps in $\\Bbb{Z}_p[x_1, \\dots, x_k]$.  For now let's work in $\\Bbb{Z}_2$ for simplicity.</p>\n\n<p>The coefficients are arbitrarily chosen $c_i \\in \\Bbb{Z}_2$, and polynomials are in $\\Bbb{Z}_2[x_1, \\dots, x_k]$.  Then </p>\n\n<p>$c_0 + c_1x_1$ obviously has complexity $2$ (2 operations explicitly required).</p>\n\n<p>$c_0 + c_1x_1 + c_2 x_2$ needs $4$ ops.</p>\n\n<p>$c_0 + c_1x_1 + (c_2+ c_3 x_1) x_2$ needs $6$ ops max.</p>\n\n<p>$c_0 + c_1x_1 + c_2 x_2 + c_3 x_3 + c_4 x_1 x_2 + c_5 x_1 x_3 + c_6 x_2 x_3 + c_7 x_1 x_2 x_3 = \\\\ c_0 + x_1(c_1 + x_2 (c_4 + c_7 x_3) + c_5 x_3) + x_2 (c_2 + c_6 x_3) + c_3 x_3$ </p>\n\n<p>needs $14$ ops.  The pattern seems to be</p>\n\n<p>$1 + (k + (k-1) + \\dots + 1) + ((k-2) + (k-1) + \\dots + 1) + \\dots + 1$ which is $O(k^3)$, so is polynomial complexity polynomial?</p>\n\n<p>Where did I make any mistake?  Thanks.</p>\n\n<p>This doesn't make sense as there are about $p^k$ coefficients, and each one must be visited.</p>\n\n<p>$* + x_1(* + x_2(* + x_3(* + *x_4) + *x_3 + *x_4)) + x_2 (* + x_3(* + *x_4) + *x_4) + x_3(* + *x_4) + *x_4$</p>\n", 'ViewCount': '28', 'Title': 'Complexity of general polynomial map evaluation is polynomial?', 'LastEditorUserId': '12373', 'LastActivityDate': '2014-04-20T23:51:52.963', 'LastEditDate': '2014-04-19T20:31:32.287', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '23943', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '12373', 'Tags': '<algorithms><complexity-theory><polynomial-time><polynomials>', 'CreationDate': '2014-04-19T20:08:43.153', 'Id': '23941'},3548:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>For instance, given the polynomial expression $xy + x + y + 1$ it will output $(x+1)(y+1)$.</p>\n\n<p>Thanks!</p>\n', 'ViewCount': '27', 'ClosedDate': '2014-04-23T16:45:51.777', 'Title': 'Do you know of a brute-force algorithm for optimizing polynomial expressions?', 'LastActivityDate': '2014-04-21T16:39:59.570', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '23995', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '12373', 'Tags': '<polynomials>', 'CreationDate': '2014-04-21T05:10:51.057', 'Id': '23975'}