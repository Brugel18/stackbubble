{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>You have one coin. You may flip it as many times as you want. </p>\n\n<p>You want to generate a random number $r$ such that $a \\leq r &lt; b$ where $r,a,b\\in \\mathbb{Z}^+$. </p>\n\n<p>Distribution of the numbers should be uniform. </p>\n\n<p>It is easy if $b -a = 2^n$:</p>\n\n<pre><code>r = a + binary2dec(flip n times write 0 for heads and 1 for tails) \n</code></pre>\n\n<p>What if $b-a \\neq 2^n$?</p>\n', 'ViewCount': '2142', 'Title': 'Generating uniformly distributed random numbers using a coin', 'LastEditorUserId': '39', 'LastActivityDate': '2013-01-24T21:55:20.950', 'LastEditDate': '2012-04-29T20:51:09.547', 'AnswerCount': '7', 'CommentCount': '0', 'Score': '11', 'PostTypeId': '1', 'OwnerUserId': '244', 'Tags': '<algorithms><probability-theory><randomness><random-number-generator>', 'CreationDate': '2012-03-21T03:12:00.883', 'FavoriteCount': '4', 'Id': '570'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '961', 'Title': 'Most efficient algorithm to print 1-100 using a given random number generator', 'LastEditDate': '2012-07-02T19:46:10.570', 'AnswerCount': '4', 'Score': '10', 'PostTypeId': '1', 'OwnerUserId': '2042', 'FavoriteCount': '4', 'Body': u'<p>We are given a random number generator <code>RandNum50</code> which generates a random integer uniformly in the range 1\u201350.\nWe may use only this random number generator to generate and print all integers from 1 to 100 in a random order. Every number must come exactly once, and the probability of any number occurring at any place must be equal.</p>\n\n<p>What is the most efficient algorithm for this?</p>\n', 'Tags': '<algorithms><integers><randomness><random-number-generator>', 'LastEditorUserId': '39', 'LastActivityDate': '2012-07-24T20:32:31.727', 'CommentCount': '6', 'AcceptedAnswerId': '2578', 'CreationDate': '2012-07-02T05:57:26.373', 'Id': '2576'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '445', 'Title': 'Is rejection sampling the only way to get a truly uniform distribution of random numbers?', 'LastEditDate': '2012-08-17T17:42:18.317', 'AnswerCount': '3', 'Score': '13', 'PostTypeId': '1', 'OwnerUserId': '140', 'FavoriteCount': '2', 'Body': '<p>Suppose that we have a random generator that outputs\nnumbers in the range $[0..R-1]$ with uniform distribution and we\nneed to generate random numbers in the range $[0..N-1]$\nwith uniform distribution.</p>\n\n<p>Suppose that $N &lt; R$ and $N$ does not evenly divide $R$;\nin order to get a <strong>truly uniform distribution</strong> we can use the\n<a href="http://en.wikipedia.org/wiki/Rejection_sampling">rejection sampling</a> method:</p>\n\n<ul>\n<li>if $k$ is the greatest integer such that $k N &lt; R$</li>\n<li>pick a random number $r$ in $[0..R-1]$</li>\n<li>if $r &lt; k N$ then output $r \\mod N$, otherwise keep trying with other random numbers r\', r", ... until the condition is met</li>\n</ul>\n\n<blockquote>\nIs rejection sampling the only way to get a truly uniform discrete distribution?\n</blockquote>\n\n<p>If the answer is yes, why? </p>\n\n<p>Note: if $N &gt; R$ the idea is the same: generate a random number $r\'$ in $[0..R^m-1], R^m &gt;= N$, for example $r\' = R(...R(R r_1 + r_2)...)+r_m$ where $r_i$ is a random number in the range $[0..R-1]$</p>\n', 'Tags': '<probability-theory><randomness><random-number-generator><sampling>', 'LastEditorUserId': '2205', 'LastActivityDate': '2012-08-18T14:29:51.573', 'CommentCount': '1', 'AcceptedAnswerId': '2619', 'CreationDate': '2012-07-04T07:46:04.420', 'Id': '2605'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '780', 'Title': 'Uniform sampling from a simplex', 'LastEditDate': '2012-08-17T09:22:28.433', 'AnswerCount': '2', 'Score': '9', 'PostTypeId': '1', 'OwnerUserId': '2553', 'FavoriteCount': '1', 'Body': "<p>I am looking for an algorithm to generate an array of N random numbers, such that the sum of the N numbers is 1, and all numbers lie within 0 and 1. For example, N=3, the random point (x, y, z) should lie within the triangle:</p>\n\n<pre><code>x + y + z = 1\n0 &lt; x &lt; 1\n0 &lt; y &lt; 1\n0 &lt; z &lt; 1\n</code></pre>\n\n<p>Ideally I want each point within the area to have equal probability. If it's too hard, I can drop the requirement. Thanks.</p>\n", 'Tags': '<algorithms><randomness><random-number-generator><sampling>', 'LastEditorUserId': '2205', 'LastActivityDate': '2012-09-27T21:24:11.037', 'CommentCount': '2', 'AcceptedAnswerId': '3229', 'CreationDate': '2012-08-16T19:45:16.167', 'Id': '3227'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '414', 'Title': 'How can it be detected that a number generator is not really random?', 'LastEditDate': '2013-12-31T20:49:26.480', 'AnswerCount': '5', 'Score': '13', 'PostTypeId': '1', 'OwnerUserId': '4409', 'FavoriteCount': '3', 'Body': "<p>I heard that random number generation in computers isn't really random, but there is no efficient algorithm to detect it. How can it be detected at all ? </p>\n", 'Tags': '<random><random-number-generator>', 'LastEditorUserId': '10637', 'LastActivityDate': '2014-01-03T06:32:42.663', 'CommentCount': '3', 'AcceptedAnswerId': '7742', 'CreationDate': '2013-01-03T11:58:09.193', 'Id': '7729'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I am trying to understand how the Mersenne Twister random number generator works (in particular, the 32-bit TinyMT). I am still relatively new to the concept of RNG. As I read the source code, I noticed there were two ways to seed the MT: with a single integer seed or an array of integer seeds. What is the point in seeding with an array? Does it produce a better distribution or a longer period? </p>\n\n<p>Also, I would appreciate it if somebody could explain to me what is meant by the "state" of the RNG, as I am seeing that word all over the source code. Is it like a finite state machine in a way? </p>\n\n<p>Thanks for your time!</p>\n', 'ViewCount': '152', 'Title': 'Seeding the Mersenne Twister Random Number Generator', 'LastEditorUserId': '39', 'LastActivityDate': '2014-03-24T14:19:28.083', 'LastEditDate': '2014-03-24T14:19:28.083', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '8783', 'Tags': '<algorithms><randomized-algorithms><pseudo-random-generators><random-number-generator>', 'CreationDate': '2013-06-20T16:09:56.607', 'Id': '12792'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Given a set $S$ of $k$ numbers in $[0, N)$.\nThe task is to randomly generate numbers in the range $[0, N)$ such that none belongs to $S$.</p>\n\n<p><strong>Edit</strong> - Also given an API to generate random numbers between $[0, N)$. We have to use it  to randomly generate numbers in the range $[0, N)$ such that none belongs to $S$.</p>\n\n<p>I would also like a generic strategy for such questions. Another one I came across was to generate random numbers between [0,7] given a random number generator that generates numbers in range [0, 5].</p>\n', 'ViewCount': '225', 'Title': 'Generate random numbers from an interval with holes', 'LastEditorUserId': '9166', 'LastActivityDate': '2013-07-17T16:03:32.970', 'LastEditDate': '2013-07-15T07:05:30.703', 'AnswerCount': '2', 'CommentCount': '6', 'AcceptedAnswerId': '13272', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '9166', 'Tags': '<algorithms><probability-theory><sampling><random-number-generator>', 'CreationDate': '2013-07-14T13:12:52.417', 'Id': '13271'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I would like to sample a uniformly random point in a polygon...</p>\n\n<p>If sample a large number they\'d be equally likely to fall into two regions if they have the same area.</p>\n\n<p>This would be quite simple if it were a square since I would take two random numbers in [0,1] as my coordinates.</p>\n\n<p>The shape I have is a regular polygon, but I\'d like it to work for any polygon.</p>\n\n<p><a href="http://stackoverflow.com/questions/3058150/how-to-find-a-random-point-in-a-quadrangle">http://stackoverflow.com/questions/3058150/how-to-find-a-random-point-in-a-quadrangle</a></p>\n\n<p><img src="http://mathworld.wolfram.com/images/eps-gif/TrianglePointPicking_700.gif" width="400"></p>\n', 'ViewCount': '192', 'Title': 'Random sampling in a polygon', 'LastEditorUserId': '98', 'LastActivityDate': '2013-08-29T14:38:32.687', 'LastEditDate': '2013-08-29T14:38:32.687', 'AnswerCount': '3', 'CommentCount': '0', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '3131', 'Tags': '<algorithms><randomness><sampling><random-number-generator>', 'CreationDate': '2013-08-29T00:36:47.990', 'Id': '14007'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>If the clock shows 14:15:36.909302, why not just use the fractions of a second part (09302) as a kind of random number? </p>\n\n<p>What is wrong with this form of generating random numbers?</p>\n\n<p>I am aware that obtaining truly random numbers is a difficult task, so I am assuming that there is something wrong with this method.</p>\n', 'ViewCount': '67', 'Title': "What's the problem of using the clock to generate random numbers?", 'LastActivityDate': '2013-12-31T21:13:25.033', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '19426', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '10637', 'Tags': '<randomness><random><random-number-generator>', 'CreationDate': '2013-12-31T20:18:04.223', 'Id': '19421'}