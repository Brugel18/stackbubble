{'ViewCount': '2317', 'Title': 'Are there NP problems, not in P and not NP Complete?', 'LastEditDate': '2012-05-12T23:47:17.100', 'AnswerCount': '4', 'Score': '14', 'OwnerDisplayName': 'vpiTriumph', 'PostTypeId': '1', 'OwnerUserId': '1472', 'FavoriteCount': '9', 'Body': "<p>Are there any known problems in $\\mathsf{NP}$ (and not in $\\mathsf{P}$) that aren't $\\mathsf{NP}$ Complete?  My understanding is that there are no currently known problems where this is the case, but it hasn't been ruled out as a possibility.  </p>\n\n<p>If there is a problem that is $\\mathsf{NP}$ (and not $\\mathsf{P}$) but not $\\mathsf{NP\\text{-}complete}$, would this be a result of no existing  isomorphism between instances of that problem and the $\\mathsf{NP\\text{-}complete}$ set?  If this case, how would we know that the $\\mathsf{NP}$ problem isn't 'harder' than what we currently identify as the $\\mathsf{NP\\text{-}complete}$ set?</p>\n", 'Tags': '<complexity-theory><np-complete><p-vs-np>', 'LastEditorUserId': '55', 'LastActivityDate': '2012-05-12T23:47:17.100', 'CommentCount': '5', 'AcceptedAnswerId': '1813', 'CreationDate': '2012-05-12T19:54:22.680', 'Id': '1810''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>There are lots of attempts at proving either $\\mathsf{P} = \\mathsf{NP} $ or $\\mathsf{P} \\neq \\mathsf{NP}$, and naturally many people think about the question, having ideas for proving either direction.</p>\n\n<p>I know that there are approaches that have been proven to not work, and there are probably more that have a history of failing. There also seem to be so-called <em>barriers</em> that many proof attemps fail to overcome. </p>\n\n<p>We want to avoid investigating into dead-ends, so what are they?</p>\n', 'ViewCount': '6113', 'Title': 'How not to solve P=NP?', 'LastEditorUserId': '6716', 'LastActivityDate': '2014-03-26T03:42:53.937', 'LastEditDate': '2013-06-06T14:08:25.930', 'AnswerCount': '5', 'CommentCount': '5', 'Score': '41', 'PostTypeId': '1', 'OwnerUserId': '98', 'Tags': '<complexity-theory><reference-request><history><p-vs-np><reference-question>', 'CreationDate': '2012-05-17T01:24:29.327', 'FavoriteCount': '24', 'Id': '1877''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Maybe I am missing something obvious, but can it be that P = co-NP $\\subsetneq$ NP or vice versa? My feeling is that there must be some theorem that rules out this possibility.</p>\n', 'ViewCount': '193', 'Title': 'Can exactly one of NP and co-NP be equal to P?', 'LastActivityDate': '2012-06-12T22:12:12.280', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '2343', 'Score': '8', 'PostTypeId': '1', 'OwnerUserId': '208', 'Tags': '<complexity-theory><p-vs-np>', 'CreationDate': '2012-06-12T16:45:58.787', 'FavoriteCount': '1', 'Id': '2341''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>I'd like your help with proving that the language\n$$L=\\{\\langle M \\rangle \\mathrel| L(M) \\in \\mathrm{NP}\\smallsetminus \\mathrm{P} \\}$$\nis decidable iff $\\mathrm{P}=\\mathrm{NP}$.</p>\n\n<p>If $\\mathrm{P}=\\mathrm{NP}$, I get that it's the language of empty Turing machines. So $L$ is a $\\text{co-RE}$ problem &mdash; but that's not what's being asked, so I got confused.</p>\n\n<p>I know that in order to show $\\mathrm{P}=\\mathrm{NP}$, I need to show problem which it's $\\mathrm{NPC}$ and $\\mathrm{P}$ as well.</p>\n\n<p>Any help? \nThanks!</p>\n", 'ViewCount': '126', 'Title': 'How to show that the set of machines which accept languages in $\\mathrm{NP}\\smallsetminus\\mathrm P$, is decidable only if $\\mathrm P=\\mathrm{NP}$?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-08-09T21:03:07.123', 'LastEditDate': '2012-08-09T21:03:07.123', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '1183', 'Tags': '<computability><undecidability><p-vs-np>', 'CreationDate': '2012-08-09T11:56:04.413', 'Id': '3103''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>If there is someone can prove that the problem "is P equals to NP?" is a NP-COMPLETE problem, what we can conclude from this?</p>\n', 'ViewCount': '198', 'Title': u'If the \u201cis P equals to NP?\u201d is a NP-COMPLETE, what does it tell us?. Some conclusions?', 'LastEditorUserId': '41', 'LastActivityDate': '2012-09-26T22:18:03.690', 'LastEditDate': '2012-09-22T19:13:41.907', 'AnswerCount': '2', 'CommentCount': '5', 'Score': '-1', 'OwnerDisplayName': 'TesterNP', 'PostTypeId': '1', 'Tags': '<complexity-theory><p-vs-np>', 'CreationDate': '2012-09-21T18:41:33.697', 'Id': '4671''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '527', 'Title': 'How can P =? NP enhance integer factorization', 'LastEditDate': '2012-11-13T20:01:21.107', 'AnswerCount': '2', 'Score': '9', 'PostTypeId': '1', 'OwnerUserId': '4365', 'FavoriteCount': '3', 'Body': '<p>If ${\\sf P}$ does in fact equal ${\\sf NP}$, how would this enhance our algorithms to factor integers faster. In other words, what kind of insight would this fact give us in understanding integer factorization better?</p>\n', 'Tags': '<complexity-theory><computability><np-complete><p-vs-np><factoring>', 'LastEditorUserId': '2755', 'LastActivityDate': '2012-11-18T19:44:37.800', 'CommentCount': '0', 'AcceptedAnswerId': '6652', 'CreationDate': '2012-11-13T19:13:56.870', 'Id': '6650''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '271', 'Title': 'Proving that if $\\mathrm{NTime}(n^{100}) \\subseteq \\mathrm{DTime}(n^{1000})$ then $\\mathrm{P}=\\mathrm{NP}$', 'LastEditDate': '2012-12-13T02:35:05.343', 'AnswerCount': '3', 'Score': '9', 'PostTypeId': '1', 'OwnerUserId': '2329', 'FavoriteCount': '3', 'Body': "<p>I'd really like your help with proving the following.</p>\n\n<p>If $\\mathrm{NTime}(n^{100}) \\subseteq \\mathrm{DTime}(n^{1000})$ then $\\mathrm{P}=\\mathrm{NP}$.</p>\n\n<p>Here, $\\mathrm{NTime}(n^{100})$ is the class of all languages which can be decided by nondeterministic Turing machine in polynomial time of $O(n^{100})$ and $\\mathrm{DTime}(n^{1000})$  is the class of all languages which can be decided by a deterministic Turing machine in polynomial time of $O(n^{1000})$.</p>\n\n<p>Any help/suggestions?</p>\n", 'Tags': '<time-complexity><complexity-classes><p-vs-np>', 'LastEditorUserId': '472', 'LastActivityDate': '2012-12-13T02:35:05.343', 'CommentCount': '2', 'AcceptedAnswerId': '6730', 'CreationDate': '2012-11-16T12:57:46.333', 'Id': '6695''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>Taking an NP-complete problem like vertex cover if we can find a reduction which is exponential and not polynomial and the reduction we do to a problem can be solved in polynomial time, then what would be it's implications?</p>\n\n<p>Based on Yuval's answer, I wanted to throw this scenario into the place also.</p>\n\n<p>If we have a problem in P which we can reduce in polynomial time to an NP-complete problem for e.g vertex cover, what happens then?</p>\n", 'ViewCount': '201', 'Title': 'What would an exponential reduction from an NP-complete problem to P signify?', 'LastEditorUserId': '472', 'LastActivityDate': '2013-05-24T03:09:52.037', 'LastEditDate': '2013-05-24T03:09:52.037', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '366', 'Tags': '<complexity-theory><np-complete><p-vs-np>', 'CreationDate': '2012-11-20T15:03:43.400', 'Id': '6785''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I\'m reviewing for finals and have a sample problem that I <strong>think</strong> I understand, but would like someone to bless my understanding or smack me and tell me why I\'m wrong.</p>\n\n<p>I\'m presented with a problem $\\Pi$  of unknown complexity class.  If I can transform $\\Pi$ to some problem $X$, where $X  \\in {\\sf P}$, what does that tell me about $\\Pi$?</p>\n\n<p>I think allows me to conclude that $\\Pi \\in {\\sf P}$, right? If I can reduce $\\Pi$ to another problem that\'s deterministically solvable in polynomial time, and the transformation itself can be done "easily" in polynomial time, then I can conclude that $\\Pi$ is deterministically solvable in polynomial time, and therefore that $\\Pi \\in {\\sf P}$ correct?</p>\n\n<p>Conversely, given the same input, transforming $X$ to $\\Pi$ in polynomial time allows me to conclude nothing meaningful, since nothing is known about  $\\Pi$ right?</p>\n', 'ViewCount': '110', 'Title': 'Implications of polynomial time reductions', 'LastEditorUserId': '472', 'LastActivityDate': '2012-12-16T19:03:45.837', 'LastEditDate': '2012-12-16T19:03:45.837', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '7439', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '5084', 'Tags': '<complexity-theory><reductions><complexity-classes><p-vs-np>', 'CreationDate': '2012-12-16T15:28:34.083', 'Id': '7438''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Is it possible that P != NP and the cardinality of P is the same as the cardinality of NP?  Or does P != NP mean that P and NP must have different cardinalities?</p>\n', 'ViewCount': '655', 'Title': 'Does P != NP imply that | NP | > | P |?', 'LastActivityDate': '2014-04-09T02:56:34.357', 'AnswerCount': '3', 'CommentCount': '1', 'Score': '7', 'OwnerDisplayName': 'Jason Baker', 'PostTypeId': '1', 'OwnerUserId': '4849', 'Tags': '<complexity-classes><p-vs-np>', 'CreationDate': '2012-12-31T17:09:57.310', 'FavoriteCount': '5', 'Id': '7665''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>This is my first post after being a passive user for some time now.\nI wish to ask some questions if I may.  I am not a mathematician but my question relates to the field of maths/computer science.  In particular, the P vs NP problem.  I am aware that this is a problem that elite professionals have not yet been able to solve ... </p>\n\n<p>Regardless, I would like to ask:</p>\n\n<p>If a person who is neither a mathematician nor a programmer were to come up with a flowchart or a series of steps written in basic English that allegedly provides a solution to one of the P vs NP problem, would that be counted as 'proving' that P = NP .. in order to claim the Clays Institute prize :) ? Or is it a must for one to write the solution as mathematical proofs / computer program?</p>\n\n<p>Thank you.</p>\n", 'ViewCount': '1273', 'Title': 'Proving P = NP without mathematical statements / computer program', 'LastEditorUserId': '98', 'LastActivityDate': '2013-11-23T18:41:59.157', 'LastEditDate': '2013-01-14T11:33:59.730', 'AnswerCount': '3', 'CommentCount': '4', 'AcceptedAnswerId': '7727', 'Score': '9', 'OwnerDisplayName': 'user5287', 'PostTypeId': '1', 'Tags': '<complexity-theory><p-vs-np>', 'CreationDate': '2013-01-03T10:32:51.870', 'Id': '7726''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>If a language is defined such that<br>\n$L = (0+1)^{\\ast}$   if $\\mathsf{P} = \\mathsf{NP}$ and $\\emptyset$   otherwise</p>\n\n<p>Then $L$ is a regular language if $\\mathsf{P} = \\mathsf{NP}$, otherwise it is the empty langauge. \nTherefore $\\mathsf{P} = \\mathsf{NP}$ , $L$ is recursive (being regular), but is $L$ still recursive if $\\mathsf{P} \\neq \\mathsf{NP}$?</p>\n', 'ViewCount': '150', 'Title': 'Recusively Enumerable or Recursive dependent on whether P=NP', 'LastEditorUserId': '157', 'LastActivityDate': '2013-01-10T11:51:40.033', 'LastEditDate': '2013-01-10T06:57:26.673', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '0', 'OwnerDisplayName': 'Arjun J Rao', 'PostTypeId': '1', 'OwnerUserId': '5418', 'Tags': '<computability><regular-languages><p-vs-np>', 'CreationDate': '2013-01-10T01:41:26.263', 'Id': '7859''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Does the proof of the widely believed result P $\\neq$ NP depend on the proof of NP $\\neq$ Co-NP ?</p>\n', 'ViewCount': '201', 'Title': 'If NP $\\neq$ Co-NP then is P $\\neq$ NP', 'LastEditorUserId': '98', 'LastActivityDate': '2013-01-12T17:03:17.257', 'LastEditDate': '2013-01-12T17:03:17.257', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '3', 'OwnerDisplayName': 'Arjun J Rao', 'PostTypeId': '1', 'OwnerUserId': '5418', 'Tags': '<complexity-theory><complexity-classes><p-vs-np>', 'CreationDate': '2013-01-10T01:36:06.260', 'Id': '7861''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '11016', 'Title': 'In basic terms, what is the definition of P, NP, NP-Complete, and NP-Hard?', 'LastEditDate': '2013-06-06T14:06:56.640', 'AnswerCount': '5', 'Score': '56', 'PostTypeId': '1', 'OwnerUserId': '6569', 'FavoriteCount': '54', 'Body': "<p>I'm in a course about computing and complexity, and am unable to understand what these terms mean. All I know is that np is a subset of np complete which is a subset of np hard... but I have no idea what they actually mean. Wikipedia isn't much help either as the explanations are still a bit too high level.</p>\n", 'Tags': '<complexity-theory><terminology><p-vs-np><reference-question>', 'LastEditorUserId': '6716', 'LastActivityDate': '2014-04-16T09:27:50.623', 'CommentCount': '4', 'AcceptedAnswerId': '9566', 'CreationDate': '2013-02-06T20:38:08.297', 'Id': '9556''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Professor Tim Roughgarden from Stanford University while teaching a <a href="https://class.coursera.org/algo2-2012-001/class/index" rel="nofollow">MOOC</a> said that solutions to problems in the class NP must be polynomial in length. But the <a href="https://en.wikipedia.org/wiki/NP_%28complexity%29" rel="nofollow">wikipedia article</a> says that NP problems are decision problems. So what type of problems are basically in the class NP ? And is it unnecessary to say that solutions to such problems have a polynomial length output(as decision problems necessarily output either 0 or 1) ? </p>\n', 'ViewCount': '83', 'Title': 'Is it necessary for NP problems to be decision problems?', 'LastActivityDate': '2013-02-11T06:23:11.520', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '9665', 'Score': '3', 'OwnerDisplayName': 'user189535', 'PostTypeId': '1', 'OwnerUserId': '6823', 'Tags': '<algorithms><np><p-vs-np>', 'CreationDate': '2013-02-10T16:30:58.997', 'FavoriteCount': '2', 'Id': '9664''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '160', 'Title': 'Is the open question NP=co-NP the same as P=NP?', 'LastEditDate': '2013-02-15T07:34:14.460', 'AnswerCount': '2', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '6569', 'FavoriteCount': '1', 'Body': "<p>I'm wondering this based on several places online that call $\\sf NP=$ co-$\\sf NP$ a major open problem... but I can't find any indication as to whether or not this is the same as $\\sf P=NP$ problem...</p>\n", 'Tags': '<complexity-theory><complexity-classes><p-vs-np>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-02-15T10:57:56.617', 'CommentCount': '0', 'AcceptedAnswerId': '9798', 'CreationDate': '2013-02-15T01:38:55.790', 'Id': '9795''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I am currently confused by the following situation: </p>\n\n<p>1) The metric $k$-center problem is inapproximable in polynomial time within $2-\\epsilon$ unless $P=NP$. <br>\n2) The metric $k$-center problem can approximated within $1+\\epsilon$ in time $O(k^{O(k/ \\epsilon)})$</p>\n\n<p>Did I just win a million dollars or why isn\'t this a contradiction?\nI guess my confusion comes from the unprecise statement  "in polynomial time" in 1).</p>\n', 'ViewCount': '151', 'Title': '$1+\\epsilon$ approximation for inapproximable problems', 'LastEditorUserId': '6716', 'LastActivityDate': '2013-05-10T12:15:42.897', 'LastEditDate': '2013-05-10T12:15:42.897', 'AnswerCount': '1', 'CommentCount': '3', 'AcceptedAnswerId': '10302', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '7159', 'Tags': '<complexity-theory><np-complete><approximation><p-vs-np><parametrized-complexity>', 'CreationDate': '2013-03-05T19:27:39.220', 'Id': '10300''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '1328', 'Title': 'Flaw in my NP = CoNP Proof?', 'LastEditDate': '2013-03-13T14:36:43.313', 'AnswerCount': '3', 'Score': '6', 'OwnerDisplayName': 'simpleton', 'PostTypeId': '1', 'OwnerUserId': '7253', 'FavoriteCount': '1', 'Body': '<p>I have this very simple "proof" for NP = CoNP and I think I did something wrongly somewhere, but I cannot find what is wrong. Can someone help me out?</p>\n\n<p>Let A be some problem in NP, and let M be the decider for A. Let B be the complement, i.e. B is in CoNP. Since M is a decider, you can use it to decide B as well (just flip the answer). Doesn\'t that mean that we solve both NP and CoNP problems with the same M?</p>\n\n<p>To put it more concretely.</p>\n\n<p>Let A be some NP-complete problem, and let M be decider for A. Consider any problem B in CoNP. We consider its complement not-B, which is in NP, and then get a polynomial reduction to A. Then we run our decider M and flip our answer. We thus obtain a decider for B. This implies B is in NP as well. </p>\n\n<p>May I know what is wrong with my reasoning?</p>\n', 'Tags': '<complexity-theory><p-vs-np><check-my-proof><np>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-03-13T14:36:43.313', 'CommentCount': '2', 'CreationDate': '2013-03-12T09:52:11.097', 'Id': '10485''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>Define the problem $W$:</p>\n\n<blockquote>\n  <p><strong>Input:</strong> A multi-set of numbers $S$, and a number $t$.</p>\n  \n  <p><strong>Question:</strong> What is the smallest subset $s \\subseteq S$ so that $\\sum_{k \\in s} k = t$, if there is one? (If not, return <code>none</code>.)</p>\n</blockquote>\n\n<p>I am trying to find some polytime equivalent decision problem $D$ and provide a polytime algorithm for the non-decision problem $W$ assuming the existence of a polytime algorithm for $D$.</p>\n\n<p>Here is my attempt at a related decision problem:</p>\n\n<blockquote>\n  <p>$\\mathrm{MIN\\text{-}W}$:</p>\n  \n  <p><strong>Input:</strong> A multi-set of numbers $S$, two numbers $t$ and $k$.</p>\n  \n  <p><strong>Question:</strong> Is there a subset $s \\subseteq S$ so that $\\sum_{k \\in s} k = t$ and $|s| \\leq k$?</p>\n</blockquote>\n\n<p>Proof of polytime equivalence:</p>\n\n<p>Assume $W \\in \\mathsf{P}$.</p>\n\n<pre><code>solveMIN-W(S, t, k):\n1. S = sort(S)\n2. Q = {}\n3. for i=1 to k:\n4.     Q.add(S_i)\n5.     res = solveW(Q, t)\n6.     if res != none and res = t: return Yes\n7. return No\n</code></pre>\n\n<p>I'm not sure about this algorithm though. Can anyone help please?</p>\n", 'ViewCount': '89', 'Title': 'How to prove polynomial time equivalence?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-03-22T13:44:52.263', 'LastEditDate': '2013-03-22T13:44:52.263', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '10692', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '7168', 'Tags': '<complexity-theory><reductions><p-vs-np>', 'CreationDate': '2013-03-22T04:50:15.547', 'Id': '10690''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Assume there exists some algorithm that solves vertex cover problem in time polynomial in terms of $n$ and exponential for $k$ with the run time that looks like this $O(k^2 55^k n^3)$. Can we claim that independent set can also be solved in time polynomial in terms of $n$ and exponential in terms of $k$ ? ($k$ here stands for the minimum size of an independent set) </p>\n', 'ViewCount': '831', 'Title': 'Reduction from Vertex Cover to an Independent Set problem', 'LastEditorUserId': '6716', 'LastActivityDate': '2013-05-10T12:12:20.603', 'LastEditDate': '2013-05-10T12:12:20.603', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '11905', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '7336', 'Tags': '<graphs><np-complete><np><p-vs-np><parametrized-complexity>', 'CreationDate': '2013-05-08T23:39:30.063', 'Id': '11904''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I am new in complexity theory and this question is a part of a homework that I have and I am stuck on it.</p>\n\n<blockquote>\n  <p>Let ${\\sf coNP}$ be the class of languages $\\{\\overline{L}: L \\in {\\sf NP} \\}$.</p>\n  \n  <p>Show that if ${\\sf NP} \\neq {\\sf coNP}$, then ${\\sf P}\\neq  {\\sf NP}$.</p>\n</blockquote>\n', 'ViewCount': '729', 'Title': 'Proving that if coNP $\\neq$ NP then P $\\neq$ NP', 'LastEditorUserId': '4249', 'LastActivityDate': '2013-05-21T18:53:59.637', 'LastEditDate': '2013-05-21T18:53:59.637', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '1', 'OwnerDisplayName': 'user16111', 'PostTypeId': '1', 'Tags': '<complexity-theory><complexity-classes><np><p-vs-np>', 'CreationDate': '2013-05-21T09:05:11.783', 'Id': '12195''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>I'm studing P and NP complexity classes. I like know, why is SAT not in P? Is it because I can not determine if any Boolean expression is satisfiable?</p>\n", 'ViewCount': '54', 'ClosedDate': '2013-11-08T13:17:52.880', 'Title': 'Why is SAT not in P?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-11-08T13:16:31.463', 'LastEditDate': '2013-11-08T13:16:31.463', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '-1', 'PostTypeId': '1', 'OwnerUserId': '11241', 'Tags': '<complexity-theory><satisfiability><p-vs-np>', 'CreationDate': '2013-11-07T23:50:44.720', 'Id': '16807''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Lets assume that I found a polynomial solution for <a href="http://en.wikipedia.org/wiki/Hamiltonian_path_problem" rel="nofollow">Hamiltonian path problem</a>. It is known that you can reduce this problem to <a href="http://en.wikipedia.org/wiki/Boolean_satisfiability_problem" rel="nofollow">SAT</a>.\nHow ever it will be a special case of <strong>SAT</strong>. Just the case where there is only one interpretation that satisfies that Boolean formula.</p>\n\n<p>Can you extends this special case for general case? If not, how would you define the <a href="http://en.wikipedia.org/wiki/NP_%28complexity%29" rel="nofollow">NP</a> group now?</p>\n\n<p>Are all the <a href="http://en.wikipedia.org/wiki/NP-complete" rel="nofollow">NP-complete</a> problems have a strong reduction? If I solve one <strong>NP-complete</strong> problem, can I state that I found the solution for <a href="http://en.wikipedia.org/wiki/P_versus_NP_problem" rel="nofollow">P versus NP problem</a>. Or it will brake the very definition of <strong>P versus NP</strong> as some problems will remind part unsolved.</p>\n\n<p>In one case I know for sure that I found the <strong>P versus NP problem</strong> solution - If I can find polynomial solution for <strong>SAT</strong> as it stays in the top of the pyramid. But is it true for all the rest of the problems?</p>\n', 'ViewCount': '81', 'Title': 'Is it possible that P vs NP is not the real problem?', 'LastActivityDate': '2013-11-24T08:53:04.743', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '18291', 'Score': '-5', 'PostTypeId': '1', 'OwnerUserId': '10572', 'Tags': '<p-vs-np>', 'CreationDate': '2013-11-24T08:44:12.950', 'Id': '18290''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I Know that determining Hamiltonian cycle in a graph is NP complete. For the sake of my clarification, I just want to know that whether the problem remains NP complete with following restrictions ? </p>\n\n<p>1) Graph is undirected , and  every node has degree two.</p>\n\n<p>Any help will be appreciated. Thanks.</p>\n', 'ViewCount': '27', 'Title': 'Complexity class of Determining Hamiltonian cycle', 'LastActivityDate': '2013-11-26T04:54:16.490', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '11629', 'Tags': '<complexity-theory><graph-theory><p-vs-np>', 'CreationDate': '2013-11-26T04:17:18.607', 'Id': '18352''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '108', 'Title': 'Existence of NP problems with complexity intermediate between P and NP-hard', 'LastEditDate': '2014-01-07T08:03:04.937', 'AnswerCount': '1', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '10447', 'FavoriteCount': '0', 'Body': "<p>Assuming P!=NP, there is a result that there are decision problems intermediate between P and NP-complete. That is, the class NP cannot be a union of two disjoint subsets: P and NP-complete.</p>\n\n<p>I could never quite understand the proof of the above result. The proof I saw in a textbook was starting with the assumption that one can enumerate all P and NP-hard problems, and then proceeding with a construction of a function that didn't fit in either. However, this construction seemed a bit fishy to me; in particular, the assumption that one can start with enumerated set of problems in a particular class, the NP.</p>\n\n<p>Could you refer me to a clear self-contained proof of the statement in the 1st paragraph? More generally, what would be a good reference for proofs of such results?</p>\n", 'Tags': '<complexity-theory><reference-request><np><p-vs-np>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-07T21:14:35.700', 'CommentCount': '0', 'AcceptedAnswerId': '19566', 'CreationDate': '2014-01-06T20:23:25.287', 'Id': '19543''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>I'm a novice to the topic of provability so bear with me... </p>\n\n<p>During a discussion with a friend, the question came up whether it could be possible that proving that $NP \\neq P$ (or $NP = P$) is an unprovable statement. My friend opposed that, if indeed it was unprovable, then this would imply that there cannot be a polynomial time algorithm for NP-hard problems (as the existence of such proves the statement), thus implying $NP \\neq P$. This seems to be imply that the statement cannot be unprovable or am I missing something?</p>\n", 'ViewCount': '82', 'Title': 'Provability of NP /= P?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-30T15:17:53.247', 'LastEditDate': '2014-01-30T15:17:53.247', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '13244', 'Tags': '<complexity-theory><np><p-vs-np>', 'CreationDate': '2014-01-30T13:57:04.927', 'FavoriteCount': '1', 'Id': '20106''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': u'<p>I can\'t understand or imagine some fact about NP-hard problems. If I understand it correctly there is only one polynomial-time algorithm needed &ndash; for whichever NP-complete problem &ndash; to prove that P = NP.</p>\n\n<p>Let\'s take the subset sum problem, which is NP-complete. It says that given a set such as $\\{-7, -3, -2, 5, 8\\}$, we\'re able to find out if there exists a subset of this set summing to zero, within exponential time (and obviously check a solution, for instance $\\{-3, -2, 5\\}$ within polynomial time).</p>\n\n<p>So if someone finds an polynomial-time algorithm for this task, he\'ll show that P = NP, right?</p>\n\n<p>EDIT: I removed:</p>\n\n<blockquote>\n  <p>Assuming, that opinions whether P = NP or P \u2260 NP amongst computer scientists are about 1:1 (<a href="http://www.win.tue.nl/~gwoegi/P-versus-NP.htmh9zmHrJjx7Gfw&amp;bvm=bv.60983673,d.Yms" rel="nofollow">this site</a> claims that they\'re ~ 52% and ~44% respectively)...</p>\n</blockquote>\n\n<p>As the guys noticed in comments, it\'s wrong. I should say the proven cases are like 1:1.</p>\n\n<p>Okay, so it gets more intuitive now. I mean, P \u2260 NP actually seems to be \'more likely now\':</p>\n\n<p>However, assuming that there are still, say, 5-10% of formally educated people who believes that P = NP and the cited problem is not, say, the most complex one, how is that even possible that no one  of them had found a polynomial-time algorithm yet OR (maybe more likely?) no one of their opponents proved that there\'s no such an algorithm? Or, does it also mean that (in terms of those people\'s opinions, again) the \'chances\' of there being  such an algorithm are like 1:1, too?</p>\n\n<p>From my (maybe naive) point of view, the subset sum problem seems so simple to crack &ndash; at least for advanced computer scientists.</p>\n\n<p>As you\'re probably aware of, searching in the Net would not help me much as I just can\'t deeper into this problem. I\'ve got no such mathematical knowledge to even comprehend it more.</p>\n', 'ViewCount': '93', 'ClosedDate': '2014-02-10T08:25:27.573', 'Title': u'What makes it so difficult to prove P =/\u2260 NP? \u2014 The subset sum issue', 'LastEditorUserId': '98', 'LastActivityDate': '2014-02-10T08:24:17.317', 'LastEditDate': '2014-02-10T08:24:17.317', 'AnswerCount': '1', 'CommentCount': '8', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '14531', 'Tags': '<complexity-theory><np-complete><p-vs-np>', 'CreationDate': '2014-02-09T23:35:04.740', 'Id': '21478''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Nobody yet knows if ${\\sf P}={\\sf NP}$. Let us consider the following language</p>\n\n<p>$$L = \\begin{cases} (0+1)^* &amp; \\text{ if ${\\sf P}$ = ${\\sf NP}$} \\\\ \\emptyset &amp;\\text{ otherwise}. \\end{cases}$$</p>\n\n<p>A language is said to be recursive if there exists any rule to determine whether a string belong to language or not. We have a rule here, but the rule itself depends upon an unknown equation. So can we say $L$ is recursive?</p>\n', 'ViewCount': '121', 'Title': 'Is this language depending on P = NP recursive?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-02-26T05:55:59.580', 'LastEditDate': '2014-02-25T20:21:10.610', 'AnswerCount': '2', 'CommentCount': '1', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '12234', 'Tags': '<computability><undecidability><p-vs-np>', 'CreationDate': '2014-02-25T08:55:19.393', 'Id': '22017''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Assume $P\\neq NP$.</p>\n\n<p>What can we say about the runtime bounds of all NP-complete problems?</p>\n\n<p>i.e. what are the tightest functions $L,U:\\mathbb{N}\\to\\mathbb{N}$ for which we can guarantee that an optimal algorithm for <strong>any</strong> NP-complete problem runs in time of at least $\\omega(L(n))$ and at most $o(U(n))$ on a input of length $n$?</p>\n\n<p>Obviously, $\\forall c:L(n)=\\Omega(n^c)$.\nAlso, $U(n) = O(2^{n^{\\omega(1)}})$.</p>\n\n<h2>Without assuming $QP\\neq NP$, $ETH$, or any other assumption which is not implied by $P\\neq NP$, can we give any better bounds on $L,U$?</h2>\n\n<p><strong>EDIT:</strong> </p>\n\n<p>Note that at least one of $L,U$ has to be far from the bounds I gave here, since being NPC problems, these problems has poly time reduction between each other, meaning that if some NPC problem has an optimal algorithm of time $f(n)$, then all problems has an algorithm (optimal or not) of runtime $O(f(n^{O(1)}))$.</p>\n', 'ViewCount': '152', 'Title': u'Runtime bounds on algorithms of NP complete problems assuming P\u2260NP', 'LastEditorUserId': '12969', 'LastActivityDate': '2014-03-16T16:00:29.563', 'LastEditDate': '2014-03-16T16:00:29.563', 'AnswerCount': '1', 'CommentCount': '4', 'Score': '10', 'PostTypeId': '1', 'OwnerUserId': '12969', 'Tags': '<complexity-theory><time-complexity><np-complete><p-vs-np>', 'CreationDate': '2014-03-11T20:05:43.997', 'FavoriteCount': '1', 'Id': '22511''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I am trying to either prove or refute the claim mentioned in the title.\nAny ideas ?</p>\n', 'ViewCount': '64', 'ClosedDate': '2014-03-15T11:24:37.173', 'Title': 'Assume that $\\mathsf{NP} \\subseteq \\mathsf{P}/\\text{log(n)}$, does it imply that $\\mathsf{P} = \\mathsf{NP}$?', 'LastActivityDate': '2014-03-14T23:45:11.077', 'AnswerCount': '0', 'CommentCount': '3', 'Score': '0', 'OwnerDisplayName': 'Robert777', 'PostTypeId': '1', 'OwnerUserId': '7068', 'Tags': '<complexity-theory><p-vs-np>', 'CreationDate': '2014-03-14T21:05:23.827', 'Id': '22635''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '66', 'Title': 'what are the basic/typical/common mistakes in P=NP claims?', 'LastEditDate': '2014-03-19T08:20:32.237', 'AnswerCount': '1', 'Score': '-1', 'PostTypeId': '1', 'OwnerUserId': '699', 'FavoriteCount': '1', 'Body': '<p>the P vs NP problem attracts a lot of attention, not all of it desirable, for a wide variety of reasons. there are many P=NP claims eg on this widely cited list maintained by mathematician Woegeorgi, <a href="http://www.win.tue.nl/~gwoegi/P-versus-NP.htm" rel="nofollow">P vs NP page</a>. also, intermittently there are hot questions on SE sites related to P vs NP (eg recently [2],[3]) below, &amp; there is even a <code>p-vs-np</code> tag on both cs.se (<a href="/questions/tagged/p-vs-np" class="post-tag" title="show questions tagged &#39;p-vs-np&#39;" rel="tag">p-vs-np</a>) &amp; <a href="http://cstheory.stackexchange.com/questions/tagged/p-vs-np">tcs.se</a> sites. the following is intended somewhat as a reference question.</p>\n\n<blockquote>\n  <p>what are the basic/typical/common mistakes in P=NP claims?</p>\n</blockquote>\n\n<p>[1] <a href="http://cs.stackexchange.com/questions/1877/how-not-to-solve-p-np">How not to solve P=NP?</a>, cs.se<br>\n[2] <a href="http://codegolf.stackexchange.com/questions/24401/so-obviously-p-np">P vs NP code exercise, codegolf.se</a><br>\n[3] <a href="http://mathoverflow.net/questions/160265/analogues-of-p-vs-np-in-the-history-of-mathematics">Analogs of P vs NP in the history of mathematics</a> MO.se</p>\n', 'ClosedDate': '2014-03-20T00:00:45.987', 'Tags': '<complexity-theory><p-vs-np>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-19T08:20:32.237', 'CommentCount': '3', 'AcceptedAnswerId': '22794', 'CreationDate': '2014-03-19T03:57:10.470', 'Id': '22792''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '394', 'Title': 'If I solve hard instance, therefore I prove NP=P?', 'LastEditDate': '2014-03-25T13:53:27.870', 'AnswerCount': '1', 'Score': '-4', 'PostTypeId': '1', 'OwnerUserId': '15913', 'Body': '<p>If someone (off-topic) asks a question (on-topic) like this:</p>\n\n<p>Suppose that he claims that $\\mathcal{P=NP}$. Suppose that someone else (on-topic) gives him an instance of an NP-complete problem that cannot be solved by any computer optimally, i.e., to get the optimal solution, one must run an algorithm for very long time (the age of the universe for example).</p>\n\n<p>If this someone (off-topic) solves this instance very fast optimally. Because the problem is NP-complete, we know that it can be easily verified.  </p>\n\n<p>Can we verify easily that it is the optimal solution or we can only verify that it is just a solution?</p>\n\n<p>In the other hand, if this someone (off-topic) solves every instance (hard instances) of an NP-hard problem very fast. Can we claim that he proved that $\\mathcal{P=NP}$?</p>\n\n<p>I want an answer, not a vote up/down or on/off-topic. </p>\n', 'ClosedDate': '2014-03-22T23:04:55.900', 'Tags': '<complexity-theory><p-vs-np>', 'LastEditorUserId': '-1', 'LastActivityDate': '2014-03-25T13:53:27.870', 'CommentCount': '4', 'AcceptedAnswerId': '22944', 'CreationDate': '2014-03-22T16:10:59.560', 'Id': '22939''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}