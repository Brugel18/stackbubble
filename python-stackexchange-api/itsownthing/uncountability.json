{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p><a href="http://en.wikipedia.org/wiki/Coq" rel="nofollow">COQ</a> is an interactive theorem prover that uses the calculus of inductive constructions, i.e. it relies heavily on inductive types. Using those, discrete structures like natural numbers, rational numbers, graphs, grammars, semantics etc. are very concisely represented.</p>\n\n<p>However, since I grew to like the proof assistant, I was wondering whether there are libraries for uncountable structures, like real numbers, complex numbers, probability bounds and such. I am of course aware that one cannot define these structures inductively (at least not as far as I know), but they can be defined axiomatically, using for instance the <a href="http://en.wikipedia.org/wiki/Real_number#Axiomatic_approach" rel="nofollow">axiomatic approach</a>.</p>\n\n<p>Is there any work that provides basic properties, or even probabilistic bounds like Chernoff bound or union bound as a library?</p>\n', 'ViewCount': '185', 'Title': 'Does there exist any work on creating a Real Number/Probability Theory Framework in COQ?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-06-08T12:14:12.083', 'LastEditDate': '2012-06-08T12:08:11.160', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '2281', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '1534', 'Tags': '<probability-theory><coq><real-numbers><uncountability>', 'CreationDate': '2012-06-08T11:28:23.800', 'Id': '2280'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': "<p>Could anyone please explain Cantor's diagonalization principle in simple terms?</p>\n", 'ViewCount': '389', 'Title': "Cantor's diagonal method in simple terms?", 'LastEditorUserId': '472', 'LastActivityDate': '2012-11-22T03:35:01.137', 'LastEditDate': '2012-11-22T03:35:01.137', 'AnswerCount': '2', 'CommentCount': '4', 'AcceptedAnswerId': '6759', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '947', 'Tags': '<complexity-theory><sets><uncountability>', 'CreationDate': '2012-11-19T02:53:30.917', 'Id': '6753'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': "<p>I was reading about counting principle related to TOC. I understand that the set of TMs are countable infinity. I couldn't understand the significance of it. What is its not countable?</p>\n", 'ViewCount': '129', 'Title': "If set of TM's is not countable?", 'LastEditorUserId': '947', 'LastActivityDate': '2013-01-27T03:55:56.253', 'LastEditDate': '2013-01-13T07:37:55.000', 'AnswerCount': '3', 'CommentCount': '2', 'Score': '-2', 'PostTypeId': '1', 'OwnerUserId': '947', 'Tags': '<computability><turing-machines><uncountability><church-turing-thesis>', 'CreationDate': '2013-01-13T06:49:46.727', 'Id': '7915'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': "<p>I'm not sure if this statement is correct, but my friend said so.</p>\n\n<p>The problem arose from this T/F question:\nLet $F=\\{f: f$ be a primitive recursive function from $\\mathbb{N}$ to $\\mathbb{N}\\}$, then $2^F$ (Power set of $F$) is uncountable.</p>\n\n<p>And its answer is True. The set of primitive recursive functions is countable, and I would like to know the proof to the statement above...I believe I've seen it somewhere in the book but can't find it now.</p>\n\n<p>Thank you for your time.</p>\n", 'ViewCount': '95', 'Title': 'How to prove "The power set of a countable set must be uncountable"?', 'LastActivityDate': '2013-01-17T12:28:11.867', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '8987', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '6455', 'Tags': '<turing-machines><recursion><uncountability>', 'CreationDate': '2013-01-17T12:17:47.200', 'Id': '8986'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>I have a a few fundamental doubts in recursive enumerability and countability and below, I have written what I understand them to be with proofs. But there are contradictions at the end. What is wrong with the statements/proofs i have made?</p>\n\n<p>Countability (C=Countable): A set $X$ is C when a bijection exists between the set of natural numbers and the set $X$</p>\n\n<p>Recursive Enumerability (RE= Recursively Enumerable): Say set $S\'$ is a subset of another set $S$. When there exists a turing machine with alphabet $A$ (where $S$ is a subset of $A^*$) which halts if the input to it belongs to the set $S\'$ and does not halt if the input belongs to $S-S\'$ then I say that the set $S\'$ is recursively enumerable (given the fact that inputs comes only from the set $S$ and not from $A^*-S$ hence the latter will not concern us.) I have referred to the book "Elements of the theory of Computation" by Papadimitrou for this definition, though the introduction of an alphabet A is my own addition to make things more firm</p>\n\n<p>Now I will prove 2 statements:</p>\n\n<ol>\n<li>if a set $X$ is RE then it is C</li>\n<li>if a set $X$ is C then it is RE</li>\n</ol>\n\n<p>Hence proving 3. RE iff C </p>\n\n<p>I will prove 2 first.</p>\n\n<p>I can write a Turing Machine $M$ which when asked to check if an element $x$ belongs to $X$ or not will follow the algorithm:</p>\n\n<p>There exists a mapping from the set of natural numbers to $X$ call it $f$. $M$ can search for $x$ (like a linear search algorithm running on $X$) starting from $f(1)$ going to $f(2)$... and it keeps going till it finds $x$. By this method, $M$ terminates iff $x$ belongs to $X$.</p>\n\n<p>The behaviour above proves that $X$ is RE</p>\n\n<p>Now I prove 1- Given a Turing Machine $M$ exists which halts iff $x$ belongs to $X$</p>\n\n<p>I can construct a bijective map from the set of naturals to $X$ as follows: To map $x$ (given it belongs to $X$) , we run it as input against $M$. I take the concatenation of all configurations (Configuration=tape head position+tape content+state) of $M$ which it goes through from the starting of a computation to the end and decode that string as a natural number. It will be unique.</p>\n\n<p>Hence 1. is proven and so is 3.</p>\n\n<p>But then I find certain resources on the internet which tell me that enumerability and recursive enumerability are different things. How is it possible? Furthermore- We know that the power set of a countably infinite set is uncountably infinite. If $X$ was countably infinite, it would be RE (see 2.). Now we know that the subset of a set which is C is also C. Hence all subsets of $X$ would be C hence they would be RE. Now there would be an uncountable number of RE sets. </p>\n\n<p>Now for each RE set, we can write a turing machine (with appropriate halting behaviour) which can be encoded as a natural number implying that the "set of all RE sets" must be C. This contradicts the conclusion of the previous paragraph.</p>\n\n<p>Where exactly am I wrong?\nThankyou in advance!</p>\n', 'ViewCount': '116', 'Title': 'Where am I wrong?: "countability" and "recursive enumerability"', 'LastActivityDate': '2013-06-13T19:55:03.743', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '12665', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '8657', 'Tags': '<computability><turing-machines><uncountability>', 'CreationDate': '2013-06-13T19:33:00.480', 'Id': '12664'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>Is the set of all syntactically valid C programs countable or uncountable?</p>\n', 'ViewCount': '182', 'Title': 'Is the set of all valid C programs countable?', 'LastEditorUserId': '472', 'LastActivityDate': '2013-10-04T21:11:39.313', 'LastEditDate': '2013-10-04T21:11:39.313', 'AnswerCount': '2', 'CommentCount': '4', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '10285', 'Tags': '<formal-languages><programming-languages><uncountability>', 'CreationDate': '2013-10-03T14:11:27.090', 'Id': '14782'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>This question is prompted by <a href="http://cs.stackexchange.com/questions/19329/undecidable-unary-languages-also-known-as-tally-languages">Undecidable unary languages (also known as Tally languages)</a></p>\n\n<p>How does the countability of a language imply (un)decidability?</p>\n', 'ViewCount': '52', 'Title': 'Undecidability and Countability', 'LastEditorUserId': '9550', 'LastActivityDate': '2014-02-13T21:45:51.177', 'LastEditDate': '2014-02-13T21:45:51.177', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '14650', 'Tags': '<undecidability><uncountability>', 'CreationDate': '2014-02-13T21:20:47.597', 'Id': '21609'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'ViewCount': '101', 'Title': 'Why are pushdown automata countable?', 'LastEditDate': '2014-03-04T19:03:17.140', 'AnswerCount': '2', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '13257', 'FavoriteCount': '0', 'Body': '<p>I began a chapter in a textbook on computational theory where they begin to talk about decidable languages. </p>\n\n<p>The problems in this section are pretty confusing and I honestly don\'t know how to begin them because I\'m not 100% on what they mean when they say "countable". </p>\n\n<p>Can anyone help walk me through this problem in the book, that simply states;</p>\n\n<blockquote>\n  <p>Show that the number of push-down automatons is countable.</p>\n</blockquote>\n', 'ClosedDate': '2014-03-06T15:52:04.650', 'Tags': '<terminology><automata><pushdown-automata><uncountability>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-04T19:03:17.140', 'CommentCount': '6', 'AcceptedAnswerId': '22265', 'CreationDate': '2014-03-04T03:41:50.343', 'Id': '22255'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': u"<p>I'm going over some of the pre-requisite math regarding Automata theory, and finite representations.</p>\n\n<p>I read the following:</p>\n\n<p>If \u2211 is a finite alphabet the set of all strings over the alphabet (\u2211*) is <strong>countably infinite</strong>.</p>\n\n<p>The set of all possible languages over an alphabet \u2211 is <strong>uncountably infinite</strong>.</p>\n\n<p>How can the set of languages possible from \u2211 be <strong>uncountably infinite</strong>, yet the possible application of that alphabet to a language be <strong>countably infinite</strong>?</p>\n\n<p>Can I ask those replying to not use too much complex notation, as I'm not a mathematics wizz.</p>\n", 'ViewCount': '18', 'ClosedDate': '2014-03-05T07:08:58.450', 'Title': 'Automata Theory countably and uncountably infinite', 'LastActivityDate': '2014-03-05T01:00:25.613', 'AnswerCount': '0', 'CommentCount': '1', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '15290', 'Tags': '<automata><programming-languages><uncountability>', 'CreationDate': '2014-03-05T01:00:25.613', 'Id': '22285'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': u'<p>I\'m stuck on a theory/set proof question: </p>\n\n<blockquote>\n  <p>$S$ is the set of all total functions $f : \\{0, 1\\} \\to \\mathbb{N}$ (natural numbers), prove that S is countable.</p>\n</blockquote>\n\n<p>I have found a sample solution already but I do not understand what is going on.</p>\n\n<p>Quoting from <a href="http://www.sci.ccny.cuny.edu/~szlam/2012-fall-308/homework10_solutions.pdf" rel="nofollow">here</a>:</p>\n\n<blockquote>\n  <p>To show this, we define a mapping $g$ from $S$ to $N \xd7 N$ and show the mapping is a bijection.</p>\n</blockquote>\n\n<ol>\n<li><p>Why must I prove <em>bijection</em> when the definition of countable (according to wikipedia) states "A set $S$ is called countable if there exists an <em>injective</em> function $f$ from $S$ to the natural numbers"?</p></li>\n<li><p>Also why a bijection/injection from $S$ to $\\mathbb{N} \\times \\mathbb{N}$ and not just $S$ to $\\mathbb{N}$?</p></li>\n</ol>\n', 'ViewCount': '52', 'ClosedDate': '2014-03-19T17:31:43.043', 'Title': 'Prove that the set of all total functions is countable', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-19T15:39:12.313', 'LastEditDate': '2014-03-19T15:27:41.750', 'AnswerCount': '1', 'CommentCount': '4', 'Score': '0', 'OwnerDisplayName': 'user15860', 'PostTypeId': '1', 'Tags': '<uncountability>', 'CreationDate': '2014-03-19T09:51:47.793', 'Id': '22799'}}