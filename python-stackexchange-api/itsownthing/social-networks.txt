{'ViewCount': '1098', 'Title': 'How to determine likely connections in a social network?', 'LastEditDate': '2012-04-22T16:33:09.770', 'AnswerCount': '4', 'Score': '20', 'PostTypeId': '1', 'OwnerUserId': '151', 'FavoriteCount': '2', 'Body': '<p>I am curious in determining an approach to tackling a "suggested friends" algorithm.</p>\n\n<p><a href="http://facebook.com">Facebook</a> has a feature in which it will recommended individuals to you which it thinks you may be acquainted with. These users normally (excluding the edge cases in <a href="http://www.facebook.com/help/?faq=154758887925123#How-do-I-suggest-a-friend-to-someone?">which a user specifically recommends a friend</a>) have a highly similar network to oneself. That is, the number of friends in common are high. I assume Twitter follows a similar path for their "Who To Follow" mechanism.</p>\n\n<p><a href="http://stackoverflow.com/a/6851193/321505">Stephen Doyle (Igy)</a>, a Facebook employee suggested that the related newsfeed that uses <a href="http://www.quora.com/How-does-Facebook-calculate-weight-for-edges-in-the-EdgeRank-formula">EdgeRank formula</a> which seems to indicate that more is to valued than friends such as appearance is similar posts. Another user suggested the Google Rank system. </p>\n\n<p>Facebook states their News Feed Optimization as $\\sum u_{e}w_{e}d_{e}$ where</p>\n\n<p>$u_{e}$ = affinity score between viewing user and edge creator<br>\n$w_{e}$ = weight for this edge (create, comment, like, tag, etc)<br>\n$d_{e}$ = time decay factor based on how long ago the edge was created   </p>\n\n<p>Summing these items is supposed to give an object\'s rank which I assume as Igy hinted, means something in a similar format is used for suggested friends.</p>\n\n<p>So I\'m guessing that this is the way in which connections for all types are done in general via a rank system?</p>\n', 'Tags': '<algorithms><machine-learning><modelling><social-networks>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-04-22T16:33:09.770', 'CommentCount': '2', 'AcceptedAnswerId': '314', 'CreationDate': '2012-03-12T23:24:54.360', 'Id': '261'}{'Body': "<p>I'm trying to figure out a way I could represent a Facebook user as a vector. I decided to go with stacking the different attributes/parameters of the user into one big vector (i.e. age is a vector of size 100, where 100 is the maximum age you can have, if you are lets say 50, the first 50 values of the vector would be 1 just like a thermometer).</p>\n\n<p>Now I want to represent the Facebook interests as a vector too, and I just can't figure out a way. They are a collection of words and the space that represents all the words is huge, I can't go for a model like a bag of words or something similar. How should I proceed? I'm still new to this, any reference would be highly appreciated.</p>\n", 'ViewCount': '101', 'Title': 'How to represent the interests of a Facebook user', 'LastEditorUserId': '41', 'LastActivityDate': '2012-04-22T16:01:26.117', 'LastEditDate': '2012-04-22T16:01:26.117', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '1395', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '1173', 'Tags': '<machine-learning><modelling><social-networks><knowledge-representation>', 'CreationDate': '2012-04-20T16:24:33.100', 'Id': '1394'}{'Body': "<p>I'm not even sure if this is the right StackExchange to post this, but it seems like sentiment analysis would go here.</p>\n\n<p>What would be the best approach to determine if two people on Twitter are actually friends?</p>\n\n<p>I think that the first criteria would be that they are following each other. This would eliminate all of the celebrities, companies, etc. that a person follows.</p>\n\n<p>The second criteria could be physical proximity to one another. If two people tweet from the same general areas, then there's probably a higher chance that they actually know each other.</p>\n\n<p>After that, I'm not sure what criteria I should look for. Would sentiment analysis of their tweets to each other be a viable option? With that friendly sentiment could indicate that they actually know each other.</p>\n", 'ViewCount': '133', 'Title': 'Analyzing Twitter Relationships', 'LastEditorUserId': '41', 'LastActivityDate': '2012-10-25T01:49:05.057', 'LastEditDate': '2012-08-06T03:48:54.740', 'AnswerCount': '2', 'CommentCount': '4', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '2214', 'Tags': '<algorithms><machine-learning><computer-networks><social-networks>', 'CreationDate': '2012-08-05T17:56:11.877', 'Id': '3050'}{'Body': '<p>Let Alice and Bob be two users chosen uniformly at random from a social network (e.g. Facebook). What is the probability that they are friends assuming that they share $k$ mutual friends?</p>\n\n<p>I am interested both in the experimental values (or estimates) from currently existing social networks (e.g. Facebook) and values predicted by random graph models for these social networks.</p>\n', 'ViewCount': '193', 'Title': 'What is the probability of friendship conditioned on the number of mutual friends', 'LastActivityDate': '2012-09-17T07:17:51.607', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '41', 'Tags': '<graph-theory><combinatorics><social-networks><random-graphs>', 'CreationDate': '2012-09-16T00:29:01.343', 'Id': '4571'}{'Body': "<p>I'm looking for empirical papers which investigate if a user can benefit from Q&amp;A sites like Stack Overflow. I welcome any papers related to this topic, e.g: </p>\n\n<ul>\n<li>an experiment, investigating if a specific task can be executed faster,</li>\n<li>an analysis, investigating if a user understands the solutions on Q&amp;A sites or if he just does copy&amp;paste without thinking about it,</li>\n<li>a comparative analysis of the code quality of users with access to Q&amp;A sites in contrast to users without internet access (but just offline documentation of APIs).</li>\n</ul>\n", 'ViewCount': '112', 'Title': 'Empirical studies about benefits of Q&A sites for programming', 'LastEditorUserId': '1636', 'LastActivityDate': '2014-01-24T14:29:31.617', 'LastEditDate': '2013-07-04T01:32:24.893', 'AnswerCount': '2', 'CommentCount': '2', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '8988', 'Tags': '<reference-request><software-engineering><empirical-research><social-networks>', 'CreationDate': '2013-07-03T11:36:45.447', 'Id': '13056'}{'Body': '<p>There are a number of collections of network (or graph) data sets freely available on the web, e.g.</p>\n\n<ul>\n<li><a href="http://snap.stanford.edu/data/index.html" rel="nofollow">http://snap.stanford.edu/data/index.html</a></li>\n<li><a href="http://www.cc.gatech.edu/dimacs10/downloads.shtml" rel="nofollow">http://www.cc.gatech.edu/dimacs10/downloads.shtml</a></li>\n</ul>\n\n<p>I am looking for dynamic network data sets, i.e. networks whose structure varies over time. They seem to be quite rare: The SNAP collection contains only a few "temporal" graphs.</p>\n\n<p>Do you known any other possible sources?</p>\n', 'ViewCount': '56', 'Title': 'Looking for dynamic network data sets', 'LastActivityDate': '2013-07-31T15:18:51.787', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '9450', 'Tags': '<graphs><data-sets><social-networks><big-data>', 'CreationDate': '2013-07-31T15:18:51.787', 'Id': '13542'}{'Body': '<p>In a directed graph i want to call bfs on some of the vertices so that all of the vertices will be met.</p>\n\n<p>(in other words all of the other vertices are reachable from these chosen vertices.)</p>\n\n<p>I want to find the minimum number of such vertices.</p>\n\n<p>Actually this problem arises in social networks when we want to find the minimum number of people to which if we send a message then all of the network members will get that.(suppose that we know when someone gets the message he/she will send that to all of his/her followers.)</p>\n\n<p>Can anyone help?</p>\n', 'ViewCount': '158', 'Title': 'find the minimum number of vertices in a directed graph from which the other vertices are reachable', 'LastEditorUserId': '12820', 'LastActivityDate': '2014-04-05T15:47:19.383', 'LastEditDate': '2014-01-14T00:00:43.170', 'AnswerCount': '1', 'CommentCount': '5', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '12820', 'Tags': '<algorithms><graph-theory><social-networks>', 'CreationDate': '2014-01-13T23:54:48.383', 'Id': '19707'}{'Body': "<p>I have a social network in the form of an undirected graph $G = (V,E)$ with distinct non-negative integer keys. For each node $u \\in V$, let the set $\\Gamma(u) = \\{ v \\in V : (u,v) \\in E \\}$ be the <strong><em>neighbourhood</em></strong> of $u$. Clearly, I got that $d(u) = \\left | \\Gamma(u) \\right |$, where $d(u)$ is the <strong><em>degree</em></strong> of $u$.</p>\n\n<p>I now want to split $\\Gamma(u)$ into two sets of nodes</p>\n\n<p>$$\\Gamma_{\\text{low}}(u)  = \\{ v \\in V : v \\in \\Gamma(u) \\text{ and } v &lt; u \\}$$\n$$\\Gamma_{\\text{high}}(u) = \\{ v \\in V : v \\in \\Gamma(u) \\text{ and } v &gt; u \\}$$</p>\n\n<p>i.e. $\\Gamma_{\\text{low}}(u)$ and $\\Gamma_{\\text{high}}(u)$ contain neighbours of $u$ whose key is less than or greater than $u$'s, respectively.</p>\n\n<p>Assuming that the graph has got $m$ edges, is there a way to obtain an upper bound for $d_{\\text{low}}(u) = \\left | \\Gamma_{\\text{low}}(u) \\right |$ and $d_{\\text{high}}(u) = \\left | \\Gamma_{\\text{high}}(u) \\right |$ for varying $m$? I just can obtain the following relationship</p>\n\n<p>$$\\sum_{u \\in V} d_{\\text{low}}(u) + \\sum_{u \\in V} d_{\\text{high}}(u) = 2m,$$</p>\n\n<p>because the graph is undirected. I read somewhere that $d(u) = O\\left ( \\sqrt{m} \\right )$ is a good bound for social networks, but how do I prove it?</p>\n", 'ViewCount': '45', 'Title': 'Need an upper bound for node degree', 'LastActivityDate': '2014-01-30T14:19:42.420', 'AnswerCount': '0', 'CommentCount': '6', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '13243', 'Tags': '<algorithms><graph-theory><space-complexity><social-networks>', 'CreationDate': '2014-01-30T14:19:42.420', 'Id': '20108'}