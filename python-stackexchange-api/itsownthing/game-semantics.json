{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I\'m doing some research on game semantics using <a href="http://www.cs.bath.ac.uk/~gam23/papers/marktoberdorf.ps.gz" rel="nofollow">these notes</a>. Currently I\'m trying to prove that the definition of composite-strategy is indeed a strategy.</p>\n\n<p>I have already proved all the conditions of strategies except that it is prefix-closed(for even-length prefixes) and respects the alternation rule. </p>\n\n<p>Can somebody give me a <strong>hint</strong> on approaching this two specific conditions? I have already tried many times but all my attempts led to unfinished proofs with a lot of cases (e.g. 10-12) and after proving most of those I couldn\'t finish the others, so I believe I\'m approaching the problem from the wrong point of view.</p>\n\n<hr>\n\n<p>For the definitions please refer to Chapter 3 of the notes linked above, not to the articles of, say, Abramsky and Hyland/Ong, since the definitions are slightly different(e.g strategies contains only even-length strings, while Hyland/Ong admit odd-length strings). <em>If</em> you refer to these you should also give some hint as to how to apply the techniques to the definitions in the notes.</p>\n\n<p>Also note that the missing conditions that I\'m trying to prove are all about proving that $u \\upharpoonright A, C$ is a legal position for $A \\multimap C$, which, in Ong\'s article, is something <em>assumed</em> in <em>their</em> definition of composite strategy.</p>\n', 'ViewCount': '48', 'Title': 'How to prove that the composite strategy is prefix-closed and respects the alternation condition?', 'LastEditorUserId': '7246', 'LastActivityDate': '2013-09-24T08:56:34.510', 'LastEditDate': '2013-09-24T08:56:34.510', 'AnswerCount': '0', 'CommentCount': '2', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '7246', 'Tags': '<proof-techniques><semantics><game-semantics>', 'CreationDate': '2013-09-24T07:59:34.780', 'Id': '14577'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I\'m reading <a href="http://www.pps.univ-paris-diderot.fr/~mellies/mpri/mpri-ens/articles/harmer-hyland-mellies-categorical-combinatorics.pdf" rel="nofollow">this</a> article about game semantics and I\'m a bit puzzled with the definition given for $\\Upsilon$ in section $3.3$. There are some points that are either unintelligible or that don\'t make sense at all.</p>\n\n<p>The definition provided is based on the concept of <em>schedule</em>:</p>\n\n<blockquote>\n  <p>A schedule $e:\\{1, \\ldots, n\\} \\rightarrow {0, 1}$ is a sequence of\n  $0$ and $1$s. We also define $|e| = n$, $|e|_0$ is the number of $0$s\n  in $e$ and $|e|_1$ is the number of $1$s. The notation $e \\upharpoonright m$ denotes the restriction of $e$ to its first $m$ terms.</p>\n</blockquote>\n\n<p>(Where $e$ is actually a function, but we can view $e$ as the sequence $e(1)\\cdot e(2)\\cdots e(n)$.)</p>\n\n<p>Now the definition of the category $\\Upsilon$ is:</p>\n\n<blockquote>\n  <ul>\n  <li>The objects are the natural numbers. We think of $p \\in \\Upsilon_0$ as the totally ordered set $(p) = \\{1, \\ldots, p\\}$. We\n  write $(p)^+$ for the set of even elements and $(p)^-$ for the set of\n  odd elements of $(p)$.</li>\n  <li><p>The morphism in $\\Upsilon(p, q)$ are schedules $e$ such that $|e|_0 = p$ and $|e|_1 = q$. </p>\n  \n  <p><strong>A schedule $e: p \\rightarrow q$ corresponds to obvious order preserving (collectively surjective) embeddings $l:(p) \\rightarrow (p+q)$\n  and $r : (q) \\rightarrow (p+q)$ and thus to order relations\n  $l(x) &lt; r(y)$ from $(p)^+$ to $(q)^+$ and $r(y) &lt; l(x)$ from $(q)^-$\n  to $(p)^-$</strong></p></li>\n  <li><p>The identity in $\\Upsilon(p, p)$ is the copy-cat function $c$ of length $2p$, such that $c(2k+1) \\neq c(2k+2)$. <strong>The induced orders are\n  $\\leq$ on $(p)^+$ and on $(p)^-$</strong></p></li>\n  <li><p>Let $e:p \\rightarrow q$ and $f: q \\rightarrow r$ be morphisms in $\\Upsilon$, then their composition $e;f:p \\rightarrow r$ is defined by\n  taking the corresponding order relations , composing them as relations\n  and <strong>reconstructing the function</strong></p></li>\n  </ul>\n</blockquote>\n\n<p>Where I emphasized in bold the parts I don\'t understand. In particular:</p>\n\n<ul>\n<li><p>What\'s the meaning of <em>embedding</em> when he defined morphisms? I know what an embedding <em>functor</em> is, but this definition doesn\'t apply here.</p></li>\n<li><p>What does "$l(x) &lt; r(y)$ from $(p)^+$ to $(q)^+$" mean? Where do $x$ and $y$ come from? My <em>guess</em> is: $x \\in (p)^+$ and $y \\in (q)^+$. What are $l$ and $r$? My <em>guess</em> would be that $l$, given the index $x$ of a $0$ returns its index in $e$ and $r$ does the same for $1$s but then the $l(x) &lt; r(y)$ part doesn\'t make any sense to me.</p></li>\n<li><p>What\'s an <em>induced order</em>?</p></li>\n<li><p>What does <em>reconstructing a function</em> mean?</p></li>\n</ul>\n\n<hr>\n\n<p>I hope my question is on-topic here. I didn\'t ask it on tcs because it doesn\'t look like a research level question to me.</p>\n\n<hr>\n\n<p><strong>Edit</strong></p>\n\n<p>Reading carefully the rest of the paper, later mentions that $l$ and $r$ are <em>injections</em>, so maybe for <em>embedding</em> he simply meant injection(?).</p>\n\n<p>Assuming this, this is what I thought:\nthe point about morphism means that $e$ could be seen to represent two injective functions $l:\\{1, \\ldots, p\\} \\rightarrow \\{1, \\ldots, p+q\\}$ and $r:\\{1, \\ldots, q\\} \\rightarrow \\{1, \\ldots, p+q\\}$ such that the union of their images is $\\{1, \\ldots, p+q\\}$.\nThese functions have the property that, for $x \\in (p)^+, y \\in (q)^+$, $l(x) &lt; r(y)$ and for $x \\in (p)^-, y \\in (q)^-, r(y) &lt; l(x)$ (although in the text this seems like a consequence of an "obvious order preserving ...". no idea what order he\'s talking about and how it\'s obvious.)</p>\n\n<p>We can obtain these functions assigning the lowest values to even arguments for $l$, the next lower values for even arguments to $r$, then the next lower values to odd arguments for $r$ and finally the remaining values for $l$.\n(i.e. $r(2) = 1, r(4) = 2, \\ldots, r(2k) = k$ then $l(1) = k+1, \\ldots l(2t+1) = k+t+1$ etc.) </p>\n\n<p><em>However</em> such $l$ and $r$ are <em>not</em> unique, which <em>is</em> a problem in the rest of the paper since he later uses $l$ and $r$ in some definitions, which cannot be done if $l$ and $r$ aren\'t unique.</p>\n\n<p><strong>Edit2</strong></p>\n\n<p>Maybe the <em>embedding</em> means <a href="http://en.wikipedia.org/wiki/Order-embedding" rel="nofollow">order-embedding</a>. However even in this case I don\'t see how $e$ can be related with <em>one</em> obvious couple of order embeddings.\nI mean: the most obvious choice is to put $l(x)$ to be the index of the $x$th $0$ in $e$ and similarly for $r(y)$ and $1$s, but then the last statement in the description is wrong(take $e = 010$ we have that $r(1) = 2 &gt; l(1) = 1$ but we should have $r(y) &lt; l(x)$ for odd $x$ and $y$.</p>\n\n<p>Is there any obvious way to define two embeddings $l$ and $r$ in a unique way?</p>\n', 'ViewCount': '45', 'Title': "What's the correct definition of the $\\Upsilon$ category of schedules?", 'LastEditorUserId': '7246', 'LastActivityDate': '2013-10-14T12:52:33.647', 'LastEditDate': '2013-10-11T18:08:07.680', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '16070', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '7246', 'Tags': '<combinatorics><category-theory><game-semantics>', 'CreationDate': '2013-10-10T13:54:23.550', 'Id': '14986'}