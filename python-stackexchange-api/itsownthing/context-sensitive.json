{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>There are two context-sensitive languages, $L_1$ and $L_2$. Which of the following statements about them are decidable respectively undecidable?</p>\n\n<ol>\n<li>$L_1 = \\emptyset$</li>\n<li>$L_1 = \\Sigma^*$</li>\n<li>$L_1 \\cap L_2 = \\emptyset$</li>\n<li>$\\overline{L_1}$ is also a context-sensitive language.</li>\n<li>$L_1 = L_2$</li>\n</ol>\n', 'ViewCount': '238', 'Title': 'Which properties of context sensitive languages are decidable?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-10-10T14:20:05.680', 'LastEditDate': '2012-10-10T14:17:55.793', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '4997', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '3138', 'Tags': '<formal-languages><undecidability><context-sensitive>', 'CreationDate': '2012-10-10T09:17:09.567', 'Id': '4992'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'ViewCount': '257', 'Title': 'Are all context-sensitive languages decidable?', 'LastEditDate': '2012-10-16T12:12:02.693', 'AnswerCount': '1', 'Score': '8', 'PostTypeId': '1', 'OwnerUserId': '2137', 'FavoriteCount': '2', 'Body': '<p>I was going through the <a href="http://en.wikipedia.org/wiki/Context-sensitive_language">Wikipedia definition of <em>context-sensitive language</em></a> and I found this:</p>\n\n<blockquote>\n  <p>Each category of languages is a proper subset of the category directly above it. Any automaton and any grammar in each category has an equivalent automaton or grammar in the category directly above it.</p>\n</blockquote>\n\n<p>I could see that linear-bounded automaton is directly below decider in the article\'s ordering. If this is the case, then that means every computation on a LBA will halt at some point (since every LBA would be a decider). But I feel that there may be some computation which can run on a LBA at the same time never to halt. For example we can write a computation on LBA which would</p>\n\n<ol>\n<li>read the first symbol on the tape and move right;</li>\n<li>read the next symbol and move back left.</li>\n</ol>\n\n<p>This (useless) computation (which is obviously a LB computation) would run indefinitely oscillating left and right and never halt and hence cannot be a decider. Where am I thinking wrong?</p>\n', 'Tags': '<formal-grammars><turing-machines><undecidability><context-sensitive>', 'LastEditorUserId': '39', 'LastActivityDate': '2012-10-17T06:19:22.953', 'CommentCount': '1', 'AcceptedAnswerId': '6109', 'CreationDate': '2012-10-16T11:57:26.330', 'Id': '6108'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'ViewCount': '535', 'Title': 'Can someone give a simple but non-toy example of a context-sensitive grammar?', 'LastEditDate': '2013-01-03T14:56:30.403', 'AnswerCount': '3', 'Score': '7', 'OwnerDisplayName': 'BlueBomber', 'PostTypeId': '1', 'OwnerUserId': '5291', 'Body': "<p>I'm trying to understand context-sensitive grammars.</p>\n\n<p>I understand why languages like</p>\n\n<blockquote>\n  <ol>\n  <li>$\\{ww \\mid w \\in A^*\\}$</li>\n  <li>$\\{a^n b^n c^n \\mid n\\in\\mathbb{N}\\}$</li>\n  </ol>\n</blockquote>\n\n<p>are not context free, but what I'd like to know if a language similar to the untyped lambda calculus is context sensitive.</p>\n\n<p>I'd like to see an example of a simple, but non-toy (I consider the above toy examples), example of a context-sensitive grammar that can, for some production rule, e.g., tell whether or not some string of symbols is in scope currently (e.g. when producing the body of a function).</p>\n\n<p>Are context sensitive grammars powerful enough to make undefined/undeclared/unbound variables a syntactic (rather than semantic) error?</p>\n", 'Tags': '<formal-grammars><programming-languages><lambda-calculus><context-sensitive>', 'LastEditorUserId': '39', 'LastActivityDate': '2013-01-09T16:31:26.590', 'CommentCount': '0', 'AcceptedAnswerId': '7718', 'CreationDate': '2013-01-01T07:51:23.580', 'Id': '7716'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': "<p>I'm trying to understand the equivalence in expressive power of formal grammars whose rules take the form:</p>\n\n<p>$$ \\alpha \\rightarrow \\beta $$ where $ |\\alpha| \\leq |\\beta| $ (called a <em>monotonic</em> grammar), and grammars whose rules take the form:</p>\n\n<p>$$ \\alpha B \\gamma \\rightarrow \\alpha C \\gamma  $$</p>\n\n<p>where $\\alpha $ and $\\gamma$ are strings of terminals &amp; non-terminals or possibly empty, and $B$ and $C$ are single non-terminals. I understand that grammars of the second kind are already, by definition, grammars of the first kind, but I'd like to understand how to derive a grammar of the second kind, given one of the first kind (a monotonic grammar). Can anyone suggest a good reference for this? Many thanks in advance.</p>\n", 'ViewCount': '100', 'Title': 'Demonstrating that for every monotonic grammar there is an equivalent context-sensitive grammar', 'LastActivityDate': '2013-01-03T18:51:00.423', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '7735', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '5291', 'Tags': '<formal-grammars><context-sensitive>', 'CreationDate': '2013-01-03T16:39:35.637', 'Id': '7734'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>Have read in Compiler textbook that type inference is context sensitive. Can anyone explain why is it so? This means that we need context sensitive grammar in semantic analysis phase of a compiler with this feature? How is it done in popular programming languages like C?</p>\n', 'ViewCount': '104', 'Title': 'Type inference in compiler is context sensitive?', 'LastActivityDate': '2013-01-06T09:52:09.023', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '947', 'Tags': '<formal-languages><programming-languages><context-free><compilers><context-sensitive>', 'CreationDate': '2013-01-06T03:14:11.183', 'Id': '7796'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>So, I have a book here, which has an example for context sensitive grammar, and the grammar is the famous $0^n1^n2^n$ , and it has:</p>\n\n<p>$$ \\begin{align}\nS  &amp;\\rightarrow 0BS2 \\mid 012 \\\\\nB0 &amp;\\rightarrow 0B \\\\\nB1 &amp;\\rightarrow 11 \\\\\n\\end{align} $$</p>\n\n<p>I agree that the above works, but what is wrong with just saying:\n$S\\rightarrow 0S12 |\\epsilon$</p>\n\n<p>The above also generators the same number of $0$s as $1$s and $2$s.</p>\n', 'ViewCount': '60', 'Title': 'Can this grammar be simplified?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-05-19T14:56:16.890', 'LastEditDate': '2013-05-19T14:56:16.890', 'AnswerCount': '2', 'CommentCount': '1', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '8104', 'Tags': '<formal-languages><formal-grammars><context-sensitive>', 'CreationDate': '2013-05-17T18:13:47.270', 'Id': '12090'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': u'<p>I\'m looking for a context-sensitive grammar that describes the following language: \n$L = \\{ ww \\mid w \u2208 \\{a,b\\}^{\\ast}, |w| \u2265 1\\}$ .</p>\n\n<p>I\'ve got problems with the fact that no rules such as $X \\to \\varepsilon$ are allowed and therefore I can\'t place any nonterminal indicating the "middle" of the word. Is there any trick to the problem? </p>\n', 'ViewCount': '147', 'Title': 'Context-sensitive grammar for the language of words concatenated with themselves', 'LastEditorUserId': '98', 'LastActivityDate': '2013-07-31T11:23:29.890', 'LastEditDate': '2013-07-19T10:47:36.873', 'AnswerCount': '3', 'CommentCount': '1', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '9231', 'Tags': '<formal-languages><formal-grammars><context-sensitive>', 'CreationDate': '2013-07-18T06:25:58.770', 'FavoriteCount': '1', 'Id': '13327'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>This is a question from the exam of our "Automata and Formal Languages" course. There is a question where asked to prove or disprove that any "relative complement" operation between two context sensitive languages will also produce a context sensitive language. </p>\n\n<p>From the context sensitive closure properties <a href="http://en.wikipedia.org/wiki/Context-sensitive_language" rel="nofollow">Wikipedia</a>, and <a href="http://www.princeton.edu/~achaney/tmve/wiki100k/docs/Context-sensitive_language.html" rel="nofollow">princeton.edu</a>. \nI know that those languages are closed under intersection and complement.   </p>\n\n<p>I have spent too much time on finding the formal prove of those statements. Where / How can I find the proofs? Or how to prove them by myself? Can anyone point me to a reference ? Can any one post here the proofs ? </p>\n', 'ViewCount': '482', 'Title': 'How to prove that context sensitive languages are closed under intersection and complement?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-10-14T12:05:26.827', 'LastEditDate': '2013-10-14T12:05:26.827', 'AnswerCount': '1', 'CommentCount': '3', 'AcceptedAnswerId': '15016', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '10674', 'Tags': '<formal-languages><closure-properties><context-sensitive>', 'CreationDate': '2013-10-12T11:14:06.500', 'Id': '15014'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>Construct a context-sensitive grammar that generates L:</p>\n\n<pre><code>L = {a^n b^m c^k|k&gt;n, k&gt;m}\n</code></pre>\n\n<p>I believe my productions should go along this lines:</p>\n\n<pre><code>S-&gt; ABCC\nA-&gt; a|aBC|BC\nB-&gt; b|bBC\nC-&gt; c|Cc\nCB-&gt;BC\n</code></pre>\n\n<p>The idea is to start with 2 c and keep always one more c, and then with C->c|Cc ad as much c as i want. \nHow can my production for C remember the numbers of m and n.</p>\n', 'ViewCount': '56', 'Title': 'Grammar generating specific language', 'LastEditorUserId': '7955', 'LastActivityDate': '2013-12-27T15:40:00.330', 'LastEditDate': '2013-10-26T17:47:10.667', 'AnswerCount': '2', 'CommentCount': '0', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '7955', 'Tags': '<context-free><formal-grammars><context-sensitive>', 'CreationDate': '2013-10-26T17:09:58.687', 'Id': '16448'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>In my opinion it is not since if we want to know the inequality of $w_1$ and $w_2$ we must be aware of their equality and that is not a $CFG$.</p>\n', 'ViewCount': '39', 'Title': 'is $L = \\{w_1cw_2 : w_1, w_2 \\in \\{a, b\\}^* , w_1 \\neq w_2 \\}$ a CFL?', 'LastEditorUserId': '10252', 'LastActivityDate': '2013-12-09T14:19:33.777', 'LastEditDate': '2013-12-09T14:08:51.467', 'AnswerCount': '1', 'CommentCount': '5', 'AcceptedAnswerId': '18777', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '10252', 'Tags': '<context-free><context-sensitive>', 'CreationDate': '2013-12-09T12:40:13.930', 'Id': '18774'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': "<p>I'm trying to find a formal proof of the following fact:</p>\n\n<blockquote>\n  <p>Given a context-free language $L_1$ and a context-sensitive language $L_2$, it is NOT decidable if their intersection is empty ($L_1 \\cap L_2 = \\varnothing$).</p>\n</blockquote>\n\n<p>I want to be able to prove it by contradiction, knowing the fact that it's undecidable to say if a given context sensitive grammar is empty.</p>\n\n<p>I know that the intersection of two context-free languages is undecidable, but I have to make a formal proof by contradiction. Taking $L_1$ as $\\Sigma^*$ ends up with a CS intersection, ok that's fine but I would like to make a better and more formal proof, without recurring to take specific languages, in a more general way... </p>\n", 'ViewCount': '76', 'Title': 'Intersection between context-free and context-sensitive language decidability', 'LastEditorUserId': '39', 'LastActivityDate': '2013-12-28T16:25:05.513', 'LastEditDate': '2013-12-28T16:25:05.513', 'AnswerCount': '0', 'CommentCount': '3', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '12405', 'Tags': '<computability><context-free><automata><undecidability><context-sensitive>', 'CreationDate': '2013-12-27T14:51:43.293', 'Id': '19326'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>The question is really confusing me. I know every context sensitive grammar is monotonic but not vice versa. e.g. AB--->BA is monotonic but not context sensitive. Can someone explain to me in simple terms why this is?</p>\n', 'ViewCount': '56', 'Title': "Why isn't every monotonic grammar context sensitive free?", 'LastEditorUserId': '9550', 'LastActivityDate': '2014-01-10T21:38:53.880', 'LastEditDate': '2014-01-10T15:15:30.257', 'AnswerCount': '3', 'CommentCount': '6', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '12719', 'Tags': '<formal-grammars><context-sensitive>', 'CreationDate': '2014-01-10T00:15:55.083', 'Id': '19609'}}