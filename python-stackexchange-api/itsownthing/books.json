212_0:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>For my pet project I need to cluster some data which could be easily represented as graph, so I want to use this as an opportunity to educate myself and play with various algorithms. I'd prefer the book on graph clustering as it often more self contained but articles are fine too. Back in the days I used to work in the field of numerical linear algebra so I'd also prefer algebraical view on things (so books which view graph as a matrix with specific properties are more accessible to me).</p>\n\n<p>p.s. I've tried scholar.google.com but was overwhelmed by vast number of results.  </p>\n", 'ViewCount': '81', 'Title': 'Could someone suggest me a good introductory book or an article on graph clustering?', 'LastEditorUserId': '41', 'LastActivityDate': '2012-05-25T14:29:21.953', 'LastEditDate': '2012-05-25T14:19:42.963', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '2077', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '1647', 'Tags': '<algorithms><graphs><graph-theory><reference-request><books>', 'CreationDate': '2012-05-25T13:00:28.593', 'Id': '2076'},212_1:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I\'ve finished most of the material in Cormen\'s Intro to Algorithms book and I am looking for an algorithms book that covers material beyond Corman\'s book. Are there any recommendations?</p>\n\n<p>NOTE: I asked this on stackoverflow but wasn\'t all too happy with the answer. </p>\n\n<p>NOTE: Looking at most of the comments I think ideally I would like to find a book that would cover the material of the the 787 course in <a href="http://www.cs.wisc.edu/academic-programs/courses/cs-course-descriptions">this course description</a>.</p>\n', 'ViewCount': '918', 'Title': 'Book for algorithms beyond Cormen', 'LastEditorUserId': '98', 'LastActivityDate': '2012-06-27T12:45:45.290', 'LastEditDate': '2012-06-27T12:45:45.290', 'AnswerCount': '3', 'CommentCount': '6', 'AcceptedAnswerId': '2505', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '1790', 'Tags': '<algorithms><reference-request><books>', 'CreationDate': '2012-06-26T02:30:47.140', 'Id': '2495'},212_2:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '464', 'Title': 'Standard or Top Text on Applied Graph Theory', 'LastEditDate': '2012-07-23T07:12:08.633', 'AnswerCount': '5', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '1022', 'FavoriteCount': '3', 'Body': '<p>I am looking for a reference text on applied graph theory and graph algorithms.  Is there a standard text used in most computer science programs?  If not, what are the most respected texts in the field? I have Cormen et al.</p>\n', 'Tags': '<algorithms><graph-theory><reference-request><education><books>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-07-27T05:17:04.987', 'CommentCount': '6', 'AcceptedAnswerId': '2911', 'CreationDate': '2012-07-20T20:50:07.910', 'Id': '2845'},212_3:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '291', 'Title': 'Looking for books on creating and understanding theorems targeted at Computer Science', 'LastEditDate': '2012-08-13T05:45:40.903', 'AnswerCount': '6', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '268', 'FavoriteCount': '2', 'Body': '<p>In studying logic to understand verifying programs I have found that there are books on logic targeted at Computer Science e.g.</p>\n\n<ul>\n<li><a href="http://rads.stackoverflow.com/amzn/click/052154310X" rel="nofollow">Logic in Computer Science: Modelling and Reasoning about Systems </a></li>\n<li><a href="http://rads.stackoverflow.com/amzn/click/1447141288" rel="nofollow">Mathematical Logic for Computer Science </a></li>\n<li><a href="http://rads.stackoverflow.com/amzn/click/0521701465" rel="nofollow">Computability and Logic </a></li>\n<li><a href="http://rads.stackoverflow.com/amzn/click/0521899575" rel="nofollow">Handbook of Practical Logic and Automated Reasoning </a></li>\n</ul>\n\n<p>With regards to books on understating theorems targeted at Computer Science I find only one that may fit. As I don\'t have the book I can\'t say for sure.</p>\n\n<ul>\n<li><a href="http://rads.stackoverflow.com/amzn/click/081764220X" rel="nofollow">Handbook of Logic and Proof Techniques for Computer Science </a></li>\n</ul>\n\n<p>Are there any books for understating theorems targeted at Computer Science? In other words are there books for understating syntax, semantics and construction of theorems that don\'t rely on a heavy math background and that give examples more from the world of computer science and explain in a style more natural to a person in computer science.</p>\n\n<p>EDIT</p>\n\n<p>After seeking more on this topic I have come upon the phrases "informal mathematics" and "mathematical discourse" which are starting to turn up useful info from Google. In particular the following: <a href="https://sites.google.com/site/clauszinn/verifying-informal-proofs/37_04.pdf?attredirects=0" rel="nofollow">Understanding Informal Mathematical Discourse</a> found at <a href="https://sites.google.com/site/clauszinn/verifying-informal-proofs/" rel="nofollow">Understanding Informal Mathematical Proofs</a></p>\n', 'Tags': '<logic><proof-techniques><books>', 'LastEditorUserId': '41', 'LastActivityDate': '2013-12-03T00:50:57.973', 'CommentCount': '6', 'AcceptedAnswerId': '2969', 'CreationDate': '2012-07-31T14:38:51.147', 'Id': '2965'},212_4:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '233', 'Title': 'Good text on algorithm complexity', 'LastEditDate': '2012-08-16T15:01:05.350', 'AnswerCount': '3', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '2530', 'FavoriteCount': '1', 'Body': '<p>Where should I look for a good introductory text in algorithm complexity? So far, I have had an Algorithms class, and several language classes, but nothing with a theoretical backbone. I get the whole complexity, but sometimes it\'s hard for me to differentiate between O(1) and O(n) plus there\'s the whole theta notation and all that, basic explanation of P=NP and simple algorithms, tractability. I want a text that covers all that, and that doesn\'t require a heavy mathematical background, or something that can be read through.</p>\n\n<p>LE: I\'m still in highschool, not in University, and by heavy mathematical background I mean something perhaps not very high above Calculus and Linear Algebra (it\'s not that I can\'t understand it, it\'s the fact that for example learning Taylor series without having done Calculus I is a bit of a stretch; that\'s what I meant by not mathematically heavy. Something in which the math, with a normal amount of effort can be understood). And, do pardon if I\'m wrong, but theoretically speaking, a class at which they teach algorithm design methods and actual algorithms should be called an "Algorithms" class, don\'t you think?\nIn terms of my current understanding, infinite series, limits and integrals I know (most of the complexity books I\'ve glanced at seemed to use those concepts), but you\'ve lost me at the Fast Fourier Transform.</p>\n', 'Tags': '<complexity-theory><reference-request><algorithm-analysis><education><books>', 'LastEditorUserId': '2205', 'LastActivityDate': '2012-08-16T15:37:01.093', 'CommentCount': '1', 'AcceptedAnswerId': '3222', 'CreationDate': '2012-08-15T18:15:23.667', 'Id': '3201'},212_5:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '152', 'Title': 'Recommended Reading for non-CS undergraduate student doing a research Project on Travelling Salesman Problem', 'LastEditDate': '2013-06-06T15:05:33.373', 'AnswerCount': '2', 'Score': '3', 'OwnerDisplayName': 'rrampage', 'PostTypeId': '1', 'OwnerUserId': '2642', 'FavoriteCount': '1', 'Body': '<p>I am an undergraduate student in Industrial Engineering. I have taken the topic of Travelling Salesman Problem as a Research Project for my final year. More specifically, I am focusing on <strong>Convex Hulls for solving the Euclidean TSP</strong>.</p>\n\n<p>I have gone through the published literature and have found that there are no approximation bounds for solving TSP using this method. I have just a little background in TheoCS (Started reading for fun since the last 3 months).</p>\n\n<p><strong>My Question:</strong> </p>\n\n<p>Additional Books / Papers needed for achieving a good understanding of the mathematical rigor of the problem.</p>\n\n<p>Here\'s what I am currently going through:</p>\n\n<ul>\n<li>Approximation Algorithms - Vazirani</li>\n<li>Introduction to Algorithms - CLRS</li>\n<li>Introduction to Graph Theory - Douglas West</li>\n<li>Randomized Algorithms - Motwani and Raghavan</li>\n</ul>\n\n<p>I have also completed an introductory online course on Algorithms by Udacity.</p>\n\n<p>I think I may need some background reading in Computational Geometry (Currently I do not know more than what I read in the chapter from Cormen)</p>\n\n<p>This is my first question here, so sincere apologies in case my question does not conform to the Community Standards.</p>\n\n<p>EDIT:</p>\n\n<p>A resource I stumbled across today: <a href="http://press.princeton.edu/titles/9531.html" rel="nofollow">In Pursuit of the Traveling Salesman - Mathematics at the Limits of Computation</a>.\nThis is a good book for popular reading, providing a survey of the problem and various methods that have been used to solve it.</p>\n', 'Tags': '<reference-request><optimization><books><traveling-salesman>', 'LastEditorUserId': '39', 'LastActivityDate': '2013-06-06T15:05:33.373', 'CommentCount': '0', 'CreationDate': '2012-09-13T21:59:28.047', 'Id': '3539'},212_6:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '145', 'Title': 'References on collective intelligence with respect to CS applications', 'LastEditDate': '2012-09-28T16:28:05.587', 'AnswerCount': '1', 'Score': '-4', 'PostTypeId': '1', 'OwnerUserId': '699', 'FavoriteCount': '1', 'Body': '<p>In recent years the field of "collective intelligence" sometimes known as <a href="http://en.wikipedia.org/wiki/Web_2.0" rel="nofollow">Web 2.0</a> has had a big impact on computer science, software engineering, and software development. Stackexchange software itself is a large scale evolving application or implementation and experiment along the lines of harnessing collective intelligence. </p>\n\n<blockquote>\n  <p>What are some references especially with a CS angle on this connection between collective intelligence/Web 2.0 and CS?</p>\n</blockquote>\n', 'Tags': '<reference-request><education><software-engineering><books>', 'LastEditorUserId': '472', 'LastActivityDate': '2012-09-28T16:28:05.587', 'CommentCount': '5', 'AcceptedAnswerId': '4769', 'CreationDate': '2012-09-27T18:26:13.057', 'Id': '4768'},212_7:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>What is a good textbook for a seminar about </p>\n\n<ul>\n<li>virtual environments,  virtual worlds,  augmented reality  and\nsimilar topics?</li>\n</ul>\n\n<p>The seminar is at the graduate studies level and is supposed to give introduction to virtual environments, technologies and applications as well as  current research directions.</p>\n\n<p>A creative commons license and availability online would be a plus.</p>\n\n<p>Here are my own results after some search:</p>\n\n<ul>\n<li><a href="http://www.intechopen.com/books/augmented-reality" rel="nofollow">Augmented Reality</a> - open access book at Intechopen</li>\n</ul>\n\n<p>I was suggested these books (no online access) at another source (ResearchGate):</p>\n\n<ul>\n<li>"Virtual Reality Technology" (Grigore C. Burdea, Philippe Coiffet)</li>\n<li>"Understanding Virtual Reality: Interface, Application, and Design" (William R. Sherman, Alan B. Craig) </li>\n<li>"Developing Virtual Reality Applications:Foundations of Effective Design" (Alan Craig , William R. Sherman)</li>\n<li>"Stepping into Virtual Reality " (Mario Gutierrez, F. Vexo, Daniel Thalmann)</li>\n</ul>\n\n<p>In your answer please comment, why do you suggest a particular source and why it is fundamental or current in the field.</p>\n', 'ViewCount': '39', 'Title': 'A text for virtual environments seminar', 'LastEditorUserId': '3019', 'LastActivityDate': '2012-10-04T07:36:44.627', 'LastEditDate': '2012-10-04T07:36:44.627', 'AnswerCount': '0', 'CommentCount': '3', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '3019', 'Tags': '<reference-request><books><graphics><computer-games><hci>', 'CreationDate': '2012-09-30T20:44:48.760', 'Id': '4821'},212_8:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I ask simply if is there an equivalent to the <em>Princeton Companion to Mathematics</em> for Computer Science, both as aim and quality. \nI see similar questions about book suggestions on the site, but no so specific.</p>\n', 'ViewCount': '146', 'ClosedDate': '2012-12-11T21:14:15.143', 'Title': 'Best book to get an overall vision of Computer Science', 'LastActivityDate': '2012-12-11T20:23:02.843', 'AnswerCount': '2', 'CommentCount': '1', 'AcceptedAnswerId': '6184', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '1665', 'Tags': '<books>', 'CreationDate': '2012-10-20T00:21:14.337', 'Id': '6182'},212_9:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '223', 'Title': 'Studying Programming Language Theory', 'LastEditDate': '2013-02-17T01:14:39.193', 'AnswerCount': '2', 'Score': '8', 'PostTypeId': '1', 'OwnerUserId': '106', 'FavoriteCount': '2', 'Body': "<p>I have recently become extremely interested in understanding and proving aspects of (functional) programming languages.</p>\n\n<p>However as I dive deeper in, things like $\\lambda$ calculus, category theory, and denotational semantics are a little difficult to grok without proper explanation.</p>\n\n<p>I read SICP (quite an enlightening book) but I'm looking to dive deeper into the theory of functional programming. Are there any books/blogs/sites/you-name-it that would discuss the theory of functional programming languages from the ground up?</p>\n", 'Tags': '<reference-request><lambda-calculus><functional-programming><books>', 'LastEditorUserId': '106', 'LastActivityDate': '2013-02-18T01:07:53.190', 'CommentCount': '0', 'AcceptedAnswerId': '7323', 'CreationDate': '2012-12-11T04:40:37.923', 'Id': '7322'},212_10:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': u"<p>I am a non-CS grad and my field of study is unrelated to CS. However, as part of a larger plan to become a computer scientist, I want to obtain a solid background in theoretical computer science and math as it relates to CS. I did a plenty of research and selected the following best/really good books on the topic of CS and math and would like to ask for your opinions on:</p>\n\n<ul>\n<li>Completeness of topics covered (please recommend anything I've missed)</li>\n<li>Overlap of material covered / overkill area (please recommend books that should be removed from the list)</li>\n<li>Order to study the books (I listed in the order that I think they should be studied)</li>\n</ul>\n\n<p>The list feels excessively long, so I would appreciate recommendations to remove some books, without the loss of the core knowledge require for CS.</p>\n\n<p>So, the books are:</p>\n\n<ol>\n<li>Mathematician's Delight by W. W. Sawyer</li>\n<li>How to Prove It: A Structured Approach by Daniel J. Velleman</li>\n<li>How to Solve It: A New Aspect of Mathematical Method by G. Polya</li>\n<li>An Introduction to Functional Programming Through Lambda Calculus by Greg Michaelson</li>\n<li>Foundations of Computer Science by Al Aho and Jeff Ullman (http://i.stanford.edu/~ullman/focs.html)</li>\n<li>Concrete Mathematics: A Foundation for Computer Science by Graham, Knuth, and Patashnik</li>\n<li>Introduction to the Theory of Computation by Michael Sipser</li>\n<li>Introduction to Automata Theory, Languages, and Computation by John E. Hopcroft, Rajeev Motwani, Jeffrey D. Ullman</li>\n<li>Computational Complexity: A Conceptual Perspective by Oded Goldreich</li>\n<li>Computational Complexity: A Modern Approach by Sanjeev Arora, Boaz Barak</li>\n<li>A Course in Combinatorics by J. H. van Lint, R. M. Wilson</li>\n<li>Computability: An Introduction to Recursive Function Theory by Nigel Cutland</li>\n<li>Computers and Intractability: A Guide to the Theory of NP-Completeness by M.R. Garey, D.S. Johnson</li>\n<li>Theory of Recursive Functions and Effective Computability by Hartley Rogers</li>\n<li>Inequalities by G.H. Hardy, J. E. Littlewood, G. Polya</li>\n<li>Mathematical Logic: A Course With Exercises (Part I): Propositional Calculus, Bookean Algebras, Predicate Calculus by Ren\xe9 Cori, Daniel Lascar</li>\n<li>Mathematical Logic: A Course With Exercises (Part II): Recursion Theory, Godel's Theorems, Set Theory, Model Theory by Ren\xe9 Cori, Daniel Lascar</li>\n</ol>\n", 'ViewCount': '672', 'Title': 'Theoretical CS and Math - self-study recommendations', 'LastActivityDate': '2012-12-12T18:46:27.380', 'AnswerCount': '3', 'CommentCount': '7', 'AcceptedAnswerId': '7338', 'Score': '9', 'PostTypeId': '1', 'OwnerUserId': '5039', 'Tags': '<books>', 'CreationDate': '2012-12-11T19:59:41.603', 'FavoriteCount': '7', 'Id': '7334'},212_11:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I've been tasked with building a library of books on algorithms for our small company (about 15 people). The budget is more than 5k, but certainly less than 10k, so I can buy a fair number of books. All people here have at least a Bachelor's degree in CS or a closely related field, so while I will get some basic textbook like Cormen, I'm more interested in good books on advanced topics. (I will get Knuth's 4 volumes, BTW.)</p>\n\n<p>Some list of topics would be:</p>\n\n<ul>\n<li><p>Sorting algorithms</p></li>\n<li><p>Graph algorithms</p></li>\n<li><p>String algorithms</p></li>\n<li><p>Randomized algorithms</p></li>\n<li><p>Distributed algorithms</p></li>\n<li><p>Combinatorial algorithms</p></li>\n<li><p>etc.</p></li>\n</ul>\n\n<p>Essentially I'm looking for good recommendations on books about major topics within CS related to algorithms and data structures. Especially stuff that goes beyond what's typically covered in algorithm and data structure classes as part of a Bachelor's degree at a good school. I know the question is quite fuzzy, since I'm looking for generically useful material. The software we develop is mostly system level stuff handling large amounts of data.</p>\n\n<p>The ideal would also be to find anything that would cover fairly recent cool data structures and algorithms, which most people might not have heard about.</p>\n\n<hr>\n\n<p>EDIT: Here are some preliminary books that I think I should get:</p>\n\n<ul>\n<li><p>Introduction to Algorithms by Cormen et al. </p></li>\n<li><p>Algorithm Design by Kleinberg, Tardos</p></li>\n<li><p>The Art of Computer Programming Vol 1-4 by Knuth</p></li>\n<li><p>Approximation Algorithms by Vazirani</p></li>\n<li><p>The Design of Approximation Algorithms by Williamson, Shmoys</p></li>\n<li><p>Randomized Algorithms by Motwani, Raghavan</p></li>\n<li><p>Introduction to the Theory of Computation by Sipser</p></li>\n<li><p>Computational Complexity by Arora, Barak</p></li>\n<li><p>Computers and Intractability by Garey and Johnson</p></li>\n<li><p>Combinatorial Optimization by Schrijver</p></li>\n</ul>\n\n<p>A few other books my colleagues wanted that deal with techniques and algorithms for language design, compilers and formal methods are:</p>\n\n<ul>\n<li><p>Types and Programming Languages by Pierce</p></li>\n<li><p>Principles of Model Checking by Baier, Katoen</p></li>\n<li><p>Compilers: Principles, Techniques, and Tools by Aho, Lam, Sethi, Ullman</p></li>\n<li><p>The Compiler Design Handbook: Optimizations and Machine Code Generation, Second Edition by Srikant, Shankar</p></li>\n<li><p>The Garbage Collection Handbook: The Art of Automatic Memory Management by Jones, Hosking, Moss</p></li>\n</ul>\n", 'ViewCount': '368', 'Title': 'Algorithm books on a range of topics', 'LastEditorUserId': '6675', 'LastActivityDate': '2013-02-02T21:46:22.347', 'LastEditDate': '2013-02-02T19:14:58.860', 'AnswerCount': '5', 'CommentCount': '10', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '6675', 'Tags': '<algorithms><reference-request><data-structures><books>', 'CreationDate': '2013-02-02T05:57:06.183', 'FavoriteCount': '2', 'Id': '9413'},212_12:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I was reading the ADA 95 reference manual. I came across these  two words in annexes \n Normative and informative . I couldnt find the difference between those. Your help will  be much appreciated.</p>\n', 'ViewCount': '232', 'Title': 'Difference between Normative annexes and Informative annexes in ADA 95', 'LastActivityDate': '2013-02-11T02:47:40.117', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '9658', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '7004', 'Tags': '<reference-request><programming-languages><books>', 'CreationDate': '2013-02-11T02:20:37.720', 'Id': '9657'},212_13:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Can anyone suggest me some good books on cryptography? I have just starting studying cryptography but I know elementary number theory, abstract algebra and algorithms. Also please mention the difficulty level of the book. </p>\n', 'ViewCount': '998', 'Title': 'A good introductory book on cryptography', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-02T07:48:42.810', 'LastEditDate': '2013-04-02T07:48:42.810', 'AnswerCount': '4', 'CommentCount': '2', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '778', 'Tags': '<reference-request><cryptography><books>', 'CreationDate': '2013-03-31T16:45:31.587', 'Id': '10938'},212_14:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>An intelligent 15-year-old I know is interested in both computer science and genetics.  I told her that these fields make an excellent combination.  I'd like to give her a book on bioinformatics or computational genomics.  I'm looking for a fun book, not a textbook.  Specifically, it should inspire people to want to study the field, not aim to provide in-depth knowledge itself.  I am not interested in books on genetic algorithms.  Any suggestions?</p>\n", 'ViewCount': '68', 'Title': 'Seeking popular science book on bioinformatics or computational genomics', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-07T12:59:33.960', 'LastEditDate': '2013-04-07T12:59:33.960', 'AnswerCount': '0', 'CommentCount': '2', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '40', 'Tags': '<education><books><bioinformatics>', 'CreationDate': '2013-04-07T05:16:02.867', 'Id': '11089'},212_15:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I'm looking for a good book that explains these subjects in a readable way.\nAny suggestions ?</p>\n\n<p>I currently pursuing my BSC in computer science, and I just failed to pass the course introduction to thr theory of computation and complexity.\nI would like to have more reference and sources of knowledge so I can understand the subject better. Examples and solutions for various problems like proving undecidability, many to one reductions, etc can help me alot.</p>\n", 'ViewCount': '214', 'Title': 'Introduction to complexity and computability', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-21T14:20:11.200', 'LastEditDate': '2013-04-21T14:20:11.200', 'AnswerCount': '2', 'CommentCount': '3', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '5187', 'Tags': '<complexity-theory><computability><reference-request><books>', 'CreationDate': '2013-04-19T06:54:25.990', 'FavoriteCount': '1', 'Id': '11399'},212_16:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': u'<p>In Bernard Chazelle\'s book <em>The Discrepancy Method</em>, which is <a href="http://www.cs.princeton.edu/~chazelle/pubs/book.pdf" rel="nofollow">available free as a PDF from the author\'s website</a>, the very first statement requiring thought by the reader (on page 3, just before Theorem 1) is obtained by a simple probability argument.  Unfortunately, I fail to follow the intended argument.  Could someone enlighten me?</p>\n\n<p>Here $\\chi(S_i) = \\sum_{v\\in S_i} \\chi(v)$ is the <em>discrepancy</em> of the set $S_i$ with respect to a function $\\chi$ that assigns weights to each element.</p>\n\n<blockquote>\n  <p>Given a set system $(V,S)$, with $|V| = n$ and $|S| = m$, pick a random coloring $\\chi$, meaning that for each $v_j$, the "color" $\\chi(v_j)$ is chosen randomly, uniformly, and independently, in $\\{-1,1\\}$.  We say that $S_i$ is <em>bad</em> if $|\\chi(S_i)| &gt; \\sqrt{2|S_i|\\ln (2m)}$.  By Chernoff\'s bound, we immediately derive\n  $$Pr[S_i \\text{ is bad}] &lt; \\frac{1}{m};$$</p>\n</blockquote>\n\n<p>and now the bit I don\'t follow:</p>\n\n<blockquote>\n  <p>therefore, with nonzero probability, no $S_i$ is bad.</p>\n</blockquote>\n\n<p>Clearly this holds if the $m$ events "$S_i$ is not bad" are mutually independent.  It also holds by a form of the <a href="http://en.wikipedia.org/wiki/Lov%C3%A1sz_local_lemma" rel="nofollow">Lov\xe1sz Local Lemma</a> if these events form the edges of a hypergraph (with $V$ as vertices) that is "nice enough".  But I don\'t see why this is immediately apparent in every case, as the author seems to imply.  If the $n$ individual values $\\chi(v_j)$ are iid, then I simply don\'t see that the $m$ events "$S_i$ is not bad" are necessarily of a nice enough form to use the probabilistic method, and they certainly don\'t seem to be iid.</p>\n\n<p>What am I missing?</p>\n\n<p>Any counterexample must be rather large (with the size of $m$ exponential in $|S_i|$), so I provisionally do believe the statement.  But I would like a convincing proof, or a pointer to another reference.</p>\n', 'ViewCount': '42', 'Title': "Chazelle's discrepancy book: greedy method", 'LastEditorUserId': '5323', 'LastActivityDate': '2013-05-03T10:18:17.243', 'LastEditDate': '2013-05-03T07:01:44.673', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '11754', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '5323', 'Tags': '<reference-request><combinatorics><probability-theory><books>', 'CreationDate': '2013-05-03T06:55:55.880', 'Id': '11752'},212_17:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I often interact with people who want to ask for an algorithm for a computational problem (or its complexity), but they don\'t express it in a rigorous way for us (computer scientists) to understand.</p>\n\n<p>Referring them to books like CLRS is not helpful because the examples there usually have a quite straightforward way of stating rigorously, e.g. given the adjacency list of a graph and two vertices in it compute the shortest path between those vertices.</p>\n\n<blockquote>\n  <p>Is there any good book (or some other resource) where a person with minimal knowledge of CS can learn how one should formulate and state computational problems in a rigorous way that is understandable to computer scientists? </p>\n</blockquote>\n\n<p>Preferably the book should have many examples of how to formulate computational problems rigorously from various domain and real world examples.</p>\n\n<hr>\n\n<h3>Clarification</h3>\n\n<p>To make the question more specific, let\'s assume that they know basic math/CS terminology like sets, functions, graphs, lists, etc. at the level of 1st/2nd year undergraduate CS student (which is the case with people who I have in mind). For example, they have read some introductory textbook like Aho and Ullman (although they might not have understood it completely).</p>\n\n<ul>\n<li>Al Aho and Jeff Ullman, <a href="http://infolab.stanford.edu/~ullman/focs.html" rel="nofollow">Foundations of Computer Science</a>, 1992.</li>\n</ul>\n', 'ViewCount': '244', 'Title': 'How to formulate a computational problem rigorously?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-09-10T18:58:51.437', 'LastEditDate': '2013-09-02T10:36:14.787', 'AnswerCount': '2', 'CommentCount': '13', 'Score': '15', 'PostTypeId': '1', 'OwnerUserId': '41', 'Tags': '<algorithms><reference-request><books>', 'CreationDate': '2013-07-08T20:06:02.727', 'FavoriteCount': '2', 'Id': '13165'},212_18:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I need to study fuzzy logic and its application in the field of A.I.<br></p>\n\n<p>I\'m reading "First Course On Fuzzy Theory and Application" (<a href="http://www.shahroodut.ac.ir/fa/download.php?id=1111119783" rel="nofollow">pdf</a>) (<a href="http://www.worldcat.org/oclc/56878880" rel="nofollow">WorldCat</a>), but not much of examples there and \nI couldn\'t find a solution manual for it.</p>\n\n<p>Any recommendation for a self study book ?</p>\n', 'ViewCount': '67', 'Title': 'Introductory book to fuzzy logic for Artificial Intelligence', 'LastEditorUserId': '98', 'LastActivityDate': '2013-11-18T21:18:54.847', 'LastEditDate': '2013-11-18T21:18:54.847', 'AnswerCount': '0', 'CommentCount': '1', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '11347', 'Tags': '<reference-request><logic><artificial-intelligence><books>', 'CreationDate': '2013-11-18T14:27:28.253', 'Id': '18117'},212_19:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '82', 'Title': 'Undergraduate Computer Science Textbooks', 'LastEditDate': '2013-12-06T16:13:29.357', 'AnswerCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '11873', 'FavoriteCount': '1', 'Body': '<p>What books would you recommend for someone starting B.Sc in Computer Science? </p>\n\n<p>My Personal Info:<br>\nI am currently looking at B.Sc in Computer Science (Games), which is computer science, accept for the last year which is tailored more towards game dev.</p>\n\n<p>I have a fair bit of programming experience with Unity and other things. But as far as CS goes, have little to no experience. I have just finished reading <a href="http://www.amazon.co.uk/Introduction-Computation-Programming-Using-Python/dp/0262525003" rel="nofollow">\'Introduction to Computation and Programming Using Python\'</a>. But am after something more in-depth and maths based.</p>\n\n<p>My maths experience is quite poor which concerns me, as I have only studied maths up to GCSE level. <a href="http://en.wikipedia.org/wiki/General_Certificate_of_Secondary_Education" rel="nofollow">(GCSE = English, there is no American equivalent. Taken at age 16)</a></p>\n\n<p>Understanding CS is a broad topic, I was just looking for some reading that could introduce me to some key ideas that could be covered in an undergraduate course at uni.</p>\n\n<p>Thanks for your time,<br>\nMagnus :)</p>\n', 'ClosedDate': '2013-12-06T20:32:56.710', 'Tags': '<books>', 'LastEditorUserId': '11873', 'LastActivityDate': '2013-12-06T16:52:15.693', 'CommentCount': '4', 'AcceptedAnswerId': '18687', 'CreationDate': '2013-12-06T12:45:07.757', 'Id': '18681'},212_20:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Not sure if I should ask it here but I\'ll just go ahead. I was reading <a href="http://mitpress.mit.edu/sicp/full-text/book/book.html" rel="nofollow">SICP</a> (Structure and Interpretation of Computer Programs). And there was one quote from Alan Perlis in the <a href="http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-6.html" rel="nofollow">preface</a> to the second edition.</p>\n\n<blockquote>\n  <p>Is it possible that software is not like anything else, that it is meant to be discarded: that the whole point is to always see it as a soap bubble?</p>\n</blockquote>\n\n<p>First, I can\'t understand at all what he tries to say here, despite the sentence being totally grammatically-correct. Second, I would like to know how does this sentence fit into the context of SICP?(e.g., how might one get additional insight from understanding this sentence, in line with SICP?)</p>\n\n<p>Thanks in advance!</p>\n', 'ViewCount': '46', 'Title': 'Difficulty understanding a quote from SICP', 'LastEditorUserId': '268', 'LastActivityDate': '2013-12-22T00:23:46.797', 'LastEditDate': '2013-12-22T00:23:46.797', 'AnswerCount': '0', 'CommentCount': '2', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '12291', 'Tags': '<books>', 'CreationDate': '2013-12-21T22:31:54.450', 'FavoriteCount': '1', 'Id': '19180'},212_21:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '155', 'Title': "Books to prepare before reading Knuth's The Art Of Computer Programming (TAOCP)", 'LastEditDate': '2014-02-16T16:32:07.537', 'AnswerCount': '2', 'Score': '3', 'OwnerDisplayName': 'faif', 'PostTypeId': '1', 'OwnerUserId': '14720', 'Body': '<p>Many people say that TAOCP is not supposed to be read as a book (actually a volume of books), but if I decide to go that way, which math/computer science books/topics do I need to study to help me follow it? There is a related <a href="http://stackoverflow.com/questions/3549401/what-math-do-you-need-to-read-the-art-of-computer-programming">question</a> on stackoverflow but I would like to read the suggestions of cs.se users. </p>\n', 'Tags': '<books>', 'LastEditorUserId': '14720', 'LastActivityDate': '2014-02-16T23:04:53.350', 'CommentCount': '10', 'AcceptedAnswerId': '21685', 'CreationDate': '2014-02-15T17:28:53.937', 'Id': '21684'},212_22:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I am preparing to graduate high school. Although I do not intend to study computer science in college, I feel like it might be useful to familiarize myself with the theoretical CS concepts taught in academia (eg. algorithms, structures, compilers). Can you recommend books that are either frequently used in current CS curricula or equate what one would learn in a CS curriculum?</p>\n\n<p>Right now, I am planning on buying The C Programming Language, The Algorithm Design Manual, Algorithms + Data Structures = Programs, and Compilers: Principles, Techniques, and Tools.</p>\n', 'ViewCount': '214', 'ClosedDate': '2014-02-28T08:40:24.853', 'Title': 'What CS Textbooks should I buy?', 'LastActivityDate': '2014-02-28T02:53:59.663', 'AnswerCount': '2', 'CommentCount': '5', 'AcceptedAnswerId': '22117', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '15115', 'Tags': '<books>', 'CreationDate': '2014-02-28T00:40:11.640', 'FavoriteCount': '5', 'Id': '22115'},212_23:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '68', 'Title': 'Good beginner source to learn about how computers work', 'LastEditDate': '2014-03-06T17:25:02.217', 'AnswerCount': '3', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '15319', 'FavoriteCount': '1', 'Body': "<p>I am a senior year high school student. I love programming and my chosen language is Java. I'm very much into high-level programming and Object Oriented design.</p>\n\n<p>Recently, I started to show first interest in the low-level side of things. Especially the most basic level of how computers work (the more theoretical level, not the hardware side).</p>\n\n<p>For example, how computers make basic calculations has always been a mystery to me. How is it that a computer can even come up with the result for <code>5 + 2</code>? (As a kid I used to think that every computer stores the answers for all of the possible calculations.. lol)</p>\n\n<p>I am also interested in the most basic level of how computers, well, generally do things internally. Again, at the most basic and fundamental level.</p>\n\n<p>As you can see it's hard for me to phrase what I'm interested in learning, probably because I know almost nothing in computer science. But I hope you get the idea.</p>\n\n<p>Could you direct me to a good source that I can learn from - at the most beginner level - this kind of knowledge? (A website or a book [preferably a website]).</p>\n\n<p>Thanks</p>\n", 'ClosedDate': '2014-03-06T18:50:20.420', 'Tags': '<books>', 'LastEditorUserId': '6447', 'LastActivityDate': '2014-03-06T18:21:34.780', 'CommentCount': '2', 'CreationDate': '2014-03-05T20:39:10.160', 'Id': '22314'}