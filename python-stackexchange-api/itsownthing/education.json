92_0:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I am a graduate student taking a course in theory of computation and I have serious trouble producing content once I'm asked to. I'm able to follow the textbook (Introduction to the Theory of Computation by Michael Sipser) and lectures; however when asked to prove something or come up with a formal description of a specific TM, I just choke. </p>\n\n<p>What can I do in such situations? I guess my issue is with fully comprehending abstract concepts to the point I can actually use them. Is there a structured way to approaching a new, abstract concept and eventually build intuition?</p>\n", 'ViewCount': '390', 'Title': 'Strategies for becoming unstuck in understanding TCS', 'LastEditorUserId': '98', 'LastActivityDate': '2012-09-04T18:07:41.553', 'LastEditDate': '2012-09-02T15:23:23.673', 'AnswerCount': '4', 'CommentCount': '7', 'Score': '14', 'PostTypeId': '1', 'OwnerUserId': '196', 'Tags': '<computability><education><intuition>', 'CreationDate': '2012-03-13T08:04:00.633', 'FavoriteCount': '3', 'Id': '294'},92_1:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>It is not uncommon to see students starting their PhDs with only a limited background in mathematics and the formal aspects of computer science. Obviously it will be very difficult for such students to become theoretical computer scientists, but it would be good if they could become savvy with using formal methods and reading papers that contain formal methods.</p>\n\n<blockquote>\n  <p>What is a good short term path that starting PhD students could follow to gain the expose required to get them reading papers involving formal methods and eventually writing papers that use such formal methods?</p>\n</blockquote>\n\n<p>In terms of context, I'm thinking more in terms of Theory B and formal verification as the kinds of things that they should learn, but also classical TCS topics such as automata theory.</p>\n", 'ViewCount': '408', 'Title': 'Path to formal methods', 'LastEditorUserId': '31', 'LastActivityDate': '2012-04-24T06:33:17.017', 'LastEditDate': '2012-03-14T17:21:44.037', 'AnswerCount': '3', 'CommentCount': '2', 'Score': '12', 'PostTypeId': '1', 'OwnerUserId': '31', 'Tags': '<formal-methods><education>', 'CreationDate': '2012-03-14T16:51:55.943', 'FavoriteCount': '5', 'Id': '386'},92_2:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '664', 'Title': "List of intro TCS books for those who don't know much about TCS", 'LastEditDate': '2012-05-17T00:41:27.477', 'AnswerCount': '7', 'Score': '8', 'PostTypeId': '1', 'OwnerUserId': '5', 'FavoriteCount': '3', 'Body': '<p>If you have to recommend books for someone who wants to learn more about TCS at the introductory level such as automata theory, algorithmics, complexity theory, etc, what book(s) would you recommend for those who are interested and want to learn more about TCS, but not had any exposure to it?</p>\n', 'ClosedDate': '2012-03-18T22:59:16.213', 'Tags': '<education>', 'LastEditorUserId': '41', 'LastActivityDate': '2012-05-17T00:41:27.477', 'CommentCount': '8', 'CreationDate': '2012-03-17T06:58:42.813', 'Id': '454'},92_3:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>What are some good online resources that will help me better understand BigO notation, running time &amp; invariants?</p>\n\n<p>I'm looking for lectures, interactive examples if possible. </p>\n", 'ViewCount': '464', 'Title': 'BigO, Running Time, Invariants - Learning Resources', 'LastEditorUserId': '41', 'LastActivityDate': '2012-03-29T08:45:22.170', 'LastEditDate': '2012-03-26T05:30:58.720', 'AnswerCount': '2', 'CommentCount': '5', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '326', 'Tags': '<algorithms><landau-notation><education><runtime-analysis>', 'CreationDate': '2012-03-21T03:05:09.847', 'FavoriteCount': '2', 'Id': '569'},92_4:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '635', 'Title': 'How To Best Learn About Algorithms In Depth', 'LastEditDate': '2012-03-29T15:01:07.467', 'AnswerCount': '4', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '106', 'FavoriteCount': '5', 'Body': '<p>I have been reading this site with a great deal of interest, but I find a lot of it goes over my head. This has made me wish to learn a lot more about algorithms and CS in general. As far as I can tell from my research, there are 2 main ways of doing this. </p>\n\n<ol>\n<li><p>I can by a nice thick heavy book and work my way through it slowly but surely.</p></li>\n<li><p>I can "learn by doing" and by a nice book, but instead of reading it cover to cover, move to parts that interest me and work on implementing and applying algorithms I like.</p></li>\n<li><p>?</p></li>\n</ol>\n\n<p>My question is, which of the above did the you use and would you recommend the same approach to someone else?</p>\n', 'Tags': '<algorithms><education>', 'LastEditorUserId': '5', 'LastActivityDate': '2012-09-17T10:09:54.860', 'CommentCount': '1', 'AcceptedAnswerId': '819', 'CreationDate': '2012-03-27T13:12:49.160', 'Id': '818'},92_5:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>What is a good beginner computer science book for a young adult, say, a 15 year old? I want to get started in CS, but have no idea where to start. I have limited experience in programming.</p>\n', 'ViewCount': '628', 'Title': 'Computer Science Book for Young Adults', 'LastEditorUserId': '98', 'LastActivityDate': '2012-07-27T10:37:57.800', 'LastEditDate': '2012-04-22T16:19:19.600', 'AnswerCount': '6', 'CommentCount': '2', 'Score': '14', 'OwnerDisplayName': 'Solomon081', 'PostTypeId': '1', 'Tags': '<education><reference-request>', 'CreationDate': '2012-03-22T20:52:09.317', 'FavoriteCount': '3', 'Id': '888'},92_6:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>My question goes to those who are concerned with computational biology algorithmics. I'm going to take a course on bioinformatics this fall; the problem, however, is that I have too little background in biology and chemistry to feel prepared for that cycle of lections (I was rather weak at these subjects at school).</p>\n\n<p>Could you recommend any books that would provide a good introduction to the questions of natural sciences that bioinformatics focuses on?</p>\n", 'ViewCount': '196', 'Title': 'Introductory books on nature sciences behind bioinformatics', 'LastEditorUserId': '6416', 'LastActivityDate': '2013-01-14T23:06:35.373', 'LastEditDate': '2013-01-14T20:32:01.657', 'AnswerCount': '4', 'CommentCount': '8', 'Score': '10', 'PostTypeId': '1', 'OwnerUserId': '162', 'Tags': '<algorithms><reference-request><education><bioinformatics>', 'CreationDate': '2012-04-09T09:12:41.920', 'FavoriteCount': '3', 'Id': '1156'},92_7:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '88', 'Title': 'Where can I find good study material on Role Mining?', 'LastEditDate': '2012-04-16T18:15:31.373', 'AnswerCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '1045', 'FavoriteCount': '1', 'Body': u'<p>I need to cover these topics in Role Mining. If anyone knows good site which well summarizes the topics and concepts are well explained please help out.</p>\n\n<p>Basic role mining problem<br>\n\u2022 Delta-approx RMP<br>\n\u2022 Min-noise RMP<br>\n\u2022 Nature of the RMP problems<br>\n\u2022 Mapping RMP to database tiling problem<br>\n\u2022 Minimum tiling problem<br>\n\u2022 Mapping min-noise RMP to database tiling problem<br>\n\u2022 Mapping RMP to minimum biclique cover problem<br></p>\n', 'Tags': '<education><reference-request><security><access-control>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-04-16T18:15:31.373', 'CommentCount': '0', 'AcceptedAnswerId': '1248', 'CreationDate': '2012-04-13T06:06:48.493', 'Id': '1246'},92_8:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '4509', 'Title': 'Quicksort explained to kids', 'LastEditDate': '2012-04-19T21:11:51.423', 'AnswerCount': '4', 'Score': '10', 'OwnerDisplayName': 'd555', 'PostTypeId': '1', 'OwnerUserId': '1152', 'FavoriteCount': '3', 'Body': u'<p>Last year, I was reading a fantastic <a href="http://arxiv.org/abs/quant-ph/0510032">paper on \u201cQuantum Mechanics for Kindergarden\u201d</a>. It was not easy paper.</p>\n\n<p>Now, I wonder how to explain quicksort in the simplest words possible. How can I prove (or at least handwave) that the average complexity is $O(n \\log n)$, and what the best and the worst cases are, to a kindergarden class? Or at least in primary school?</p>\n', 'Tags': '<algorithms><education><algorithm-analysis><didactics><sorting>', 'LastEditorUserId': '5', 'LastActivityDate': '2012-04-20T14:53:59.763', 'CommentCount': '8', 'AcceptedAnswerId': '1369', 'CreationDate': '2012-04-19T20:23:14.023', 'Id': '1367'},92_9:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>Why do you think it is that most C++ instructors teaching college level computer sciences discourage or even forbid using strings for text, instead requiring students to use character arrays?</p>\n\n<p>I am assuming this methodology is somehow intended to teach good programming habits, but in my experience I don't see anything wrong with just using strings, and they are significantly easier to use and learn.</p>\n", 'ViewCount': '1582', 'Title': 'C++ Strings vs. Character Arrays', 'LastEditorUserId': '5', 'LastActivityDate': '2012-08-13T00:45:31.913', 'LastEditDate': '2012-04-20T03:26:07.963', 'AnswerCount': '6', 'CommentCount': '5', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '1157', 'Tags': '<education><arrays><strings>', 'CreationDate': '2012-04-20T02:11:18.667', 'FavoriteCount': '2', 'Id': '1375'},92_10:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>As a university-level CS educator, the issue of which programming language to teach in the first programming course often comes up for discussion. There are thousands of languages to choose between, and lots of religious fever (or fevour) supporting one language camp over another. All of this subjective bias surrounding each programming language makes it very difficult for an educator to choose one.</p>\n\n<p>My question is: </p>\n\n<blockquote>\n  <p>What <strong>objective</strong> criteria can an educator use to select a programming language to use as the basis for a first year university programming course? What is the basis for these criteria?</p>\n</blockquote>\n\n<p><strong>Note</strong>: I do not want to see a list of programming languages and why they are the best one to use. The question isn\'t about the best language, it is about <em>the criteria for selecting a language</em>. Answers may however be use programming languages to illustrate particular points.</p>\n\n<hr>\n\n<p>This question was inspired by another question which was deemed off-topic: <a href="http://cs.stackexchange.com/questions/1946/criteria-for-choosing-a-first-programming-language">Criteria for choosing a first programming language</a>. </p>\n', 'ViewCount': '2033', 'Title': 'Criteria for selecting language for first programming course', 'LastActivityDate': '2012-08-11T23:05:07.440', 'AnswerCount': '12', 'CommentCount': '9', 'Score': '21', 'PostTypeId': '1', 'OwnerUserId': '31', 'Tags': '<programming-languages><education>', 'CreationDate': '2012-05-20T19:15:11.280', 'FavoriteCount': '8', 'Id': '1954'},92_11:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>What would be the standard topics covered in an \'Advanced Placement Computer Science A\' test? Is there any good study reference someone can share? </p>\n\n<p><strong>Edit: Answer</strong></p>\n\n<p>An adjustment for my search term returned a <a href="http://en.wikipedia.org/wiki/Advanced_Placement_Computer_Science" rel="nofollow">Wikipedia page</a> just for this type of exam and the AB version.</p>\n', 'ViewCount': '156', 'Title': 'Advanced placement CS A Exam', 'LastEditorUserId': '98', 'LastActivityDate': '2012-08-11T18:48:24.533', 'LastEditDate': '2012-06-06T22:15:10.363', 'AnswerCount': '2', 'CommentCount': '4', 'AcceptedAnswerId': '2210', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '1499', 'Tags': '<reference-request><education>', 'CreationDate': '2012-06-02T22:50:40.283', 'Id': '2206'},92_12:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '310', 'Title': 'Online Learning Resources for Discrete Mathematics', 'LastEditDate': '2012-06-18T12:18:35.623', 'AnswerCount': '2', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '1887', 'FavoriteCount': '1', 'Body': '<p>Are there any good Discrete mathematics learning web resources with problem sets?</p>\n', 'Tags': '<reference-request><education><discrete-mathematics>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-06-20T09:34:25.303', 'CommentCount': '1', 'AcceptedAnswerId': '2421', 'CreationDate': '2012-06-18T10:25:37.707', 'Id': '2404'},92_13:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '464', 'Title': 'Standard or Top Text on Applied Graph Theory', 'LastEditDate': '2012-07-23T07:12:08.633', 'AnswerCount': '5', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '1022', 'FavoriteCount': '3', 'Body': '<p>I am looking for a reference text on applied graph theory and graph algorithms.  Is there a standard text used in most computer science programs?  If not, what are the most respected texts in the field? I have Cormen et al.</p>\n', 'Tags': '<algorithms><graph-theory><reference-request><education><books>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-07-27T05:17:04.987', 'CommentCount': '6', 'AcceptedAnswerId': '2911', 'CreationDate': '2012-07-20T20:50:07.910', 'Id': '2845'},92_14:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '233', 'Title': 'Good text on algorithm complexity', 'LastEditDate': '2012-08-16T15:01:05.350', 'AnswerCount': '3', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '2530', 'FavoriteCount': '1', 'Body': '<p>Where should I look for a good introductory text in algorithm complexity? So far, I have had an Algorithms class, and several language classes, but nothing with a theoretical backbone. I get the whole complexity, but sometimes it\'s hard for me to differentiate between O(1) and O(n) plus there\'s the whole theta notation and all that, basic explanation of P=NP and simple algorithms, tractability. I want a text that covers all that, and that doesn\'t require a heavy mathematical background, or something that can be read through.</p>\n\n<p>LE: I\'m still in highschool, not in University, and by heavy mathematical background I mean something perhaps not very high above Calculus and Linear Algebra (it\'s not that I can\'t understand it, it\'s the fact that for example learning Taylor series without having done Calculus I is a bit of a stretch; that\'s what I meant by not mathematically heavy. Something in which the math, with a normal amount of effort can be understood). And, do pardon if I\'m wrong, but theoretically speaking, a class at which they teach algorithm design methods and actual algorithms should be called an "Algorithms" class, don\'t you think?\nIn terms of my current understanding, infinite series, limits and integrals I know (most of the complexity books I\'ve glanced at seemed to use those concepts), but you\'ve lost me at the Fast Fourier Transform.</p>\n', 'Tags': '<complexity-theory><reference-request><algorithm-analysis><education><books>', 'LastEditorUserId': '2205', 'LastActivityDate': '2012-08-16T15:37:01.093', 'CommentCount': '1', 'AcceptedAnswerId': '3222', 'CreationDate': '2012-08-15T18:15:23.667', 'Id': '3201'},92_15:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>hope it's possible for this question to be answered in an objective manner.</p>\n\n<p>I'm not studying in a liberal arts college so basically I only get to study one subject. Which would be the better preparation for future research (probably grad school) into theoretical CS? The standard undergraduate math course with analysis and algebra, or the standard undergraduate CS course with algos and concurrency and the like.</p>\n", 'ViewCount': '171', 'Title': 'Undergraduate studies: Math or CS?', 'LastActivityDate': '2012-08-16T03:18:19.613', 'AnswerCount': '1', 'CommentCount': '4', 'AcceptedAnswerId': '3207', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '2157', 'Tags': '<education>', 'CreationDate': '2012-08-15T18:15:50.263', 'Id': '3202'},92_16:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>Ok, I have been a computer nerd for many many years. I can program in quite a few languages, and I can even build them.  I sat down with a buddy the other day and asked how a computer actually takes electricity and does something with it, and we just couldnt figure it out, and Google wasn't much help either.</p>\n\n<p>I mean, how does a computer take a constant flow of electricity and turn it into 1's and 0's and then actually do something with those 1's and 0's like turn a light on for 15 seconds?</p>\n\n<p>I understand gates (and/or/nor/nand) and a little about diodes, resistors and transistors but i figured this would be the perfect place to have it explained in true laymens terms!</p>\n\n<p>Can anybody point me in the right direction or give me a brief explanation?</p>\n", 'ViewCount': '1212', 'Title': 'How does a computer work?', 'LastEditorUserId': '6716', 'LastActivityDate': '2013-06-18T21:11:34.387', 'LastEditDate': '2013-06-06T16:03:33.617', 'AnswerCount': '5', 'CommentCount': '4', 'Score': '17', 'PostTypeId': '1', 'OwnerUserId': '2703', 'Tags': '<computer-architecture><education><reference-question>', 'CreationDate': '2012-09-01T17:11:12.853', 'FavoriteCount': '14', 'Id': '3390'},92_17:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '174', 'Title': 'References on teaching introductory programming courses', 'LastEditDate': '2013-07-15T20:26:33.433', 'AnswerCount': '2', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '1829', 'FavoriteCount': '3', 'Body': '<p>As the new semester starts soon, I am interested in research regarding the teaching of introductory programming courses. I would like to improve my university course and I am looking for scientific papers on that topic.</p>\n\n<p>One trend I have seen is that some students (a smaller group) are interested in computers or they have already some programming background. They are fine and learn a lot. But the majority of students struggle at the first step of programming (hard to set up Eclipse, a lot of errors at the beginning, etc.). Is this just my view or is this documented in literature?</p>\n\n<p>I would like to make this \'first step\' into programming as easy as possible for students. As a first start I found <a href="http://csis.pace.edu/~bergin/KarelJava2ed/Karel++JavaEdition.html" rel="nofollow">"A Gentle Introduction to the Art of Object-Oriented Programming in Java"</a> </p>\n', 'Tags': '<reference-request><education>', 'LastEditorUserId': '472', 'LastActivityDate': '2013-07-15T20:26:33.433', 'CommentCount': '5', 'AcceptedAnswerId': '3460', 'CreationDate': '2012-09-07T01:05:40.213', 'Id': '3455'},92_18:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I'm looking for a major in Theoretical Computer Science; specifically, I'm interested on complexity theory and probabilistic automata theory. As I'm graduating in one year, what advanced courses in math (like Galois theory or Harmonic analysis, for example) do you think would be useful to take over the next two semesters? Why?</p>\n", 'ViewCount': '264', 'Title': 'Math for TCS major', 'LastEditorUserId': '69', 'LastActivityDate': '2012-10-04T19:33:12.617', 'LastEditDate': '2012-09-07T16:02:18.477', 'AnswerCount': '1', 'CommentCount': '9', 'Score': '9', 'PostTypeId': '1', 'OwnerUserId': '2753', 'Tags': '<complexity-theory><automata><education>', 'CreationDate': '2012-09-07T04:23:50.113', 'FavoriteCount': '2', 'Id': '3457'},92_19:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '466', 'Title': 'What are the mathematical prerequisites for adaptive machine learning algorithms?', 'LastEditDate': '2012-09-28T09:36:27.647', 'AnswerCount': '1', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '2798', 'FavoriteCount': '2', 'Body': '<p>I am a PhD student in Computer Science who switched his PhD a little bit towards ML algorithms combined with something else... I am an expert in that something else, say image processing, but not an expert in Machine Learning. What should I read/learn to get the ML mathematics right? Especially for adaptive learning algorithms.</p>\n', 'Tags': '<reference-request><machine-learning><education><learning-theory>', 'LastEditorUserId': '157', 'LastActivityDate': '2012-10-26T23:17:51.163', 'CommentCount': '2', 'AcceptedAnswerId': '6324', 'CreationDate': '2012-09-12T07:31:52.607', 'Id': '3510'},92_20:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>In algorithms and complexity we focus on the asymptotic complexity of algorithms, i.e. the amount of resources an algorithm uses as the size of the input goes to infinity. </p>\n\n<p>In practice, what is needed is an algorithm that would work fast on a finite (although possibly very large) number of instances.</p>\n\n<p>An algorithm which works well in practice on the finite number of instances that we are interested in doesn't need to have good asymptotic complexity (good performance on a finite number of instances doesn't imply anything regarding the asymptotic complexity). Similarly, an algorithm with good asymptotic complexity may not work well in practice on the finite number of instances that we are interested in (e.g. because of large constants).</p>\n\n<p>Why do we use asymptotic complexity? How do these asymptotic analysis related to design of algorithms in practice?</p>\n", 'ViewCount': '799', 'Title': 'Explaining the relevance of asymptotic complexity of algorithms to practice of designing algorithms', 'LastEditorUserId': '41', 'LastActivityDate': '2013-01-16T10:19:05.873', 'LastEditDate': '2012-09-13T01:08:53.377', 'AnswerCount': '4', 'CommentCount': '1', 'Score': '22', 'PostTypeId': '1', 'OwnerUserId': '41', 'Tags': '<algorithms><complexity-theory><education>', 'CreationDate': '2012-09-13T01:02:59.517', 'FavoriteCount': '8', 'Id': '3523'},92_21:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I am a 16 year old male who has recently been gifted a big encyclopedia on computer science by a friend of mine. I am usually not that interested in computers and technology, but computer science has started to fascinate me. I do however intend to study Physics and/or Mathematics and not CS, so my question is, would it be useful to conduct a self-study of computer science? I'm not of course going for the level of a BSc but just the basics of CS (it is an encyclopedia with ~600 pages).</p>\n", 'ViewCount': '450', 'Title': 'Self-Study of Computer Science', 'LastEditorUserId': '98', 'LastActivityDate': '2013-06-06T05:16:08.670', 'LastEditDate': '2012-09-15T14:13:53.847', 'AnswerCount': '4', 'CommentCount': '2', 'Score': '11', 'PostTypeId': '1', 'OwnerUserId': '2829', 'Tags': '<reference-request><education>', 'CreationDate': '2012-09-14T19:40:41.860', 'FavoriteCount': '2', 'Id': '3545'},92_22:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '775', 'Title': 'What is the significance of reverse polish notation?', 'LastEditDate': '2012-09-23T14:07:01.600', 'AnswerCount': '5', 'Score': '8', 'PostTypeId': '1', 'OwnerUserId': '2919', 'FavoriteCount': '1', 'Body': '<p>I teach computing to 18 year olds. After having reverse polish notation explained to them one asked why is it significant enough to be in the public exam. I explained the historical significance of 70s calculators but this failed to really address the issue. So are there and concurrent practical or theorhetical applications of RPN.</p>\n', 'Tags': '<terminology><education>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-12-02T14:22:16.470', 'CommentCount': '6', 'AcceptedAnswerId': '4668', 'CreationDate': '2012-09-22T16:39:49.267', 'Id': '4666'},92_23:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '145', 'Title': 'References on collective intelligence with respect to CS applications', 'LastEditDate': '2012-09-28T16:28:05.587', 'AnswerCount': '1', 'Score': '-4', 'PostTypeId': '1', 'OwnerUserId': '699', 'FavoriteCount': '1', 'Body': '<p>In recent years the field of "collective intelligence" sometimes known as <a href="http://en.wikipedia.org/wiki/Web_2.0" rel="nofollow">Web 2.0</a> has had a big impact on computer science, software engineering, and software development. Stackexchange software itself is a large scale evolving application or implementation and experiment along the lines of harnessing collective intelligence. </p>\n\n<blockquote>\n  <p>What are some references especially with a CS angle on this connection between collective intelligence/Web 2.0 and CS?</p>\n</blockquote>\n', 'Tags': '<reference-request><education><software-engineering><books>', 'LastEditorUserId': '472', 'LastActivityDate': '2012-09-28T16:28:05.587', 'CommentCount': '5', 'AcceptedAnswerId': '4769', 'CreationDate': '2012-09-27T18:26:13.057', 'Id': '4768'},92_24:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '1683', 'Title': 'Start learning about Theory of Distributed Systems?', 'LastEditDate': '2012-09-29T14:26:42.870', 'AnswerCount': '6', 'Score': '9', 'PostTypeId': '1', 'OwnerUserId': '687', 'FavoriteCount': '8', 'Body': "<p>What's the best way that anyone can do to have a good introduction to the theory of distributed system, any books or references, and topics should be covered first and requirements to start learning in this topic.</p>\n", 'Tags': '<reference-request><education><distributed-systems>', 'LastEditorUserId': '157', 'LastActivityDate': '2013-02-18T20:06:39.400', 'CommentCount': '0', 'AcceptedAnswerId': '4798', 'CreationDate': '2012-09-29T14:24:11.433', 'Id': '4793'},92_25:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I want to learn quantum computation and information. I am studying from Nielsen &amp; Chuang book for this.\nIs there any online vedio (lecture series) starts from\nbasics of quantum computation and information up to factorization, discrete log, search etc? </p>\n', 'ViewCount': '98', 'Title': 'Help need to learn Quantum Computation and Information', 'LastEditorUserId': '157', 'LastActivityDate': '2012-10-24T21:54:57.560', 'LastEditDate': '2012-10-24T17:01:17.093', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '6292', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '4343', 'Tags': '<reference-request><education><quantum-computing>', 'CreationDate': '2012-10-24T12:51:39.047', 'Id': '6290'},92_26:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>What's the use of studying trigonometry in computer science? I mean, is it essential? Does it have a specific application in computer science? Because I can't seem to muster enough motivation for learning it.</p>\n", 'ViewCount': '1264', 'Title': 'Trigonometry in computer science', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-09T11:23:02.030', 'LastEditDate': '2012-10-28T11:17:56.217', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '6332', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '2297', 'Tags': '<education><mathematical-analysis><applied-theory>', 'CreationDate': '2012-10-27T02:41:42.993', 'Id': '6327'},92_27:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I was offered by a professor to give some tutoring in his course of Algorithm Design, based on Kleinberg and Tardos' book. He suggested me to prepare two exercise on dynamic programming, one exercise for polynomial reduction, and another one for approximation algorithms.The exercise should be not too advanced, but not just routine (they should fill two hour of tutoring).\nThen my question is: what are fascinating problems one can propose in dynamic programming, polynomial reductions and approximation algorithms for four nice tutoring sessions.</p>\n", 'ViewCount': '193', 'Title': 'Best a-little-advanced examples of dynamic programming, polynomial reduction and approximation algorithm', 'LastEditorUserId': '98', 'LastActivityDate': '2012-11-19T18:16:35.777', 'LastEditDate': '2012-11-19T18:16:35.777', 'AnswerCount': '0', 'CommentCount': '3', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '1665', 'Tags': '<algorithms><education><dynamic-programming>', 'CreationDate': '2012-11-18T01:47:15.080', 'Id': '6733'},92_28:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '2786', 'Title': 'DIfferences between computer vision and image processing', 'LastEditDate': '2012-12-01T14:05:16.613', 'AnswerCount': '2', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '4813', 'FavoriteCount': '1', 'Body': '<p>I am basically an Electronics and Communication Engineering student. My relevant coursework include Probability Theory and Stochastic Processes, Engineering Mathematics, Signals and Systems, Digital Signal Processing (this semester).</p>\n\n<p>Now, this area Computer Vision - Image Processing - Object recognition - etc caught my eye and I am thinking to study this subject and write a nice research paper in one of the areas later on.</p>\n\n<p>So, could anyone tell me what the differences between Computer Vision and Image Processing are? Say, we consider Object recognition - what are the roles of vision and image processing?</p>\n', 'Tags': '<education><image-processing><computer-vision>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-12-05T14:59:59.047', 'CommentCount': '7', 'AcceptedAnswerId': '7087', 'CreationDate': '2012-11-30T15:25:15.030', 'Id': '7050'},92_29:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '293', 'Title': 'Looking for a dictionary of math/CS notation', 'LastEditDate': '2012-12-13T17:11:42.787', 'AnswerCount': '3', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '699', 'FavoriteCount': '2', 'Body': '<p>There is an at-times dizzying array of symbols used in math and CS papers. Yet many assume basic familiarity that seems rarely taught in one place. I am looking for a dictionary something like the following, especially from a CS perspective. </p>\n\n<ul>\n<li>It would list all the basic mathematical symbols and give their meanings and examples. It would talk about symbols that are sometimes used in equivalent ways. It would note common beginner mistakes.</li>\n<li>It would talk about the subtleties surrounding different meanings of a single symbol (much like multiple definitions of the same word in a dictionary). </li>\n<li>It would not merely be a very terse description of each symbol, such as one word descriptions like "subset".</li>\n<li>It would show how symbols are sometimes "overloaded". For example, $\\binom{x}{y}$ could have $z$ as an integer, but sometimes $z$ can be a set with this notation and it means to choose elements from this set. $[n]$ sometimes means a set of integers $1 \\ldots n$, or other times its a one-element array.</li>\n<li>It might talk about how to describe all kinds of different "objects" in terms of different symbols or equivalent ways of referring to them (but which are more clear) and the operations possible on those objects. In other words, kind of like an API for math objects.</li>\n</ul>\n\n<p>I.e. it would be also at times a "style manual" for different nuances in how to present mathematical writing. This would be a very helpful resource for anyone writing questions in mathematical stackexchanges, where many questions fail to make sense based on not fitting into tricky mathematical conventions.</p>\n\n<p>Some book introductions have many of these features. however ideally it would be a separate treatment. Also, ideally of course it would be online. There are tables of latex symbols, but they don\'t really fulfill many of the above criteria.</p>\n\n<blockquote>\n  <p>Has anyone seen a "dictionary of symbols" that matches these features?</p>\n</blockquote>\n\n<p>(Alternatively, it seems like an excellent wiki or FAQ project if good references like this don\'t exist.)</p>\n', 'Tags': '<terminology><reference-request><education>', 'LastEditorUserId': '472', 'LastActivityDate': '2013-07-11T19:49:51.730', 'CommentCount': '3', 'AcceptedAnswerId': '7370', 'CreationDate': '2012-12-13T04:19:04.670', 'Id': '7367'},92_30:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I would like to know if there are some topics that could be covered in an undergraduate first-term course about analytic geometry, but related to Computer Science.</p>\n\n<p>I know that, for example, the simple equation for the line can be used for explaining linear regression or other topics in elliptic cryptography (too advanced for an initial course).</p>\n\n<p>Any suggestion of topics?</p>\n', 'ViewCount': '82', 'Title': 'Overlap between computer science and analytic geometry?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-01-26T19:11:51.893', 'LastEditDate': '2013-01-26T18:00:29.470', 'AnswerCount': '2', 'CommentCount': '0', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '6430', 'Tags': '<education>', 'CreationDate': '2013-01-26T05:36:00.167', 'Id': '9164'},92_31:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I don't know much when it comes to computers,</p>\n\n<p>But If I wanted to learn how to programm algorithms that perform symbolic calculations and other techniques used to solve or aid mathematical problems, and to be able to classify the efficiency of different types of algorithms in terms \nof different factors, what sub field of computer science should I study, and how would I start studying it?</p>\n\n<p>So that I can gain these techniques. In addition, I would like to start studying some enumerative combinatorics, is there some way I could study them together or at the same time? \nIn terms of my educational background, I am familiar with parts of elementary number theory, and know about arithmetic functions, I also have about a thorough high school education in calculus, and all proceeding k-12 math courses, but other then that, I don't have any technical skills, and have no experience when it comes to using computers.</p>\n\n<p>I hope this is an appropriate question for this site, and I would greatly appreciate any advice.</p>\n", 'ViewCount': '144', 'Title': 'Studying advice', 'LastEditorUserId': '39', 'LastActivityDate': '2013-11-19T21:51:04.623', 'LastEditDate': '2013-11-19T21:51:04.623', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '1', 'OwnerDisplayName': 'User678856', 'PostTypeId': '1', 'Tags': '<education>', 'CreationDate': '2013-03-06T20:19:08.570', 'FavoriteCount': '2', 'Id': '10340'},92_32:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '169', 'Title': 'Top Turing machine simulators on the web?', 'LastEditDate': '2013-03-09T02:47:07.830', 'AnswerCount': '3', 'Score': '-1', 'PostTypeId': '1', 'OwnerUserId': '699', 'FavoriteCount': '1', 'Body': '<p>There are many Turing machine simulators on the web of varying degrees of sophistication and can be highly useful for pedagogical purposes for students of widely varying ages, and they also have advanced theoretical value. </p>\n\n<p>What is a useful TM simulator available and what are its particular discriminating features that differ from other TM simulators available such that one would choose it and not another?</p>\n', 'ClosedDate': '2013-03-10T17:39:58.637', 'Tags': '<reference-request><turing-machines><compilers><education>', 'LastEditorUserId': '6447', 'LastActivityDate': '2013-03-09T02:47:07.830', 'CommentCount': '7', 'AcceptedAnswerId': '10383', 'CreationDate': '2013-03-08T03:32:19.103', 'Id': '10379'},92_33:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>An intelligent 15-year-old I know is interested in both computer science and genetics.  I told her that these fields make an excellent combination.  I'd like to give her a book on bioinformatics or computational genomics.  I'm looking for a fun book, not a textbook.  Specifically, it should inspire people to want to study the field, not aim to provide in-depth knowledge itself.  I am not interested in books on genetic algorithms.  Any suggestions?</p>\n", 'ViewCount': '68', 'Title': 'Seeking popular science book on bioinformatics or computational genomics', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-07T12:59:33.960', 'LastEditDate': '2013-04-07T12:59:33.960', 'AnswerCount': '0', 'CommentCount': '2', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '40', 'Tags': '<education><books><bioinformatics>', 'CreationDate': '2013-04-07T05:16:02.867', 'Id': '11089'},92_34:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>How would you explain why the Fast Fourier Transform is faster than the Discrete Fourier Transform, if you had to give a presentation about it for the general (non-mathematical) public?</p>\n', 'ViewCount': '978', 'Title': 'Explaining why FFT is faster than DFT for the general public?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-18T11:54:12.870', 'LastEditDate': '2013-04-18T08:25:48.223', 'AnswerCount': '3', 'CommentCount': '0', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '7239', 'Tags': '<algorithms><efficiency><education><didactics><fourier-transform>', 'CreationDate': '2013-04-17T22:22:57.513', 'Id': '11371'},92_35:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I have usually been using the Cormen algorithm format to teach some introductory courses in Programming. I mean something like this:</p>\n\n<pre><code>TreeSearch(k,n)\n1. if x==NIL or k==x.key\n2.     return x\n3. if k&lt;x.key\n4.     return TreeSearch(k.left,n)\n5. else return TreeSearch(k.right,n)\n</code></pre>\n\n<p>Actually I have not agree with a couple of lecturers in my institution that they insist to put the type of the variable that they are using in the algorithm. I mean, to do that, will it not be to make a bias toward the programming language and not to focus on the algorithm? For example what would happen if the student grab other programming language, like R or Python, that really do not care about the type of variable.</p>\n\n<p>The other issue that I have is how to represent OOP algorithms in a nice algorithmic way. For example when I make a constructor should I put something like:</p>\n\n<pre><code>Class: car\nAttributes: wheels\nConstructor car()\n</code></pre>\n\n<p>or something like</p>\n\n<pre><code>Class: car\nFunction car()\n</code></pre>\n\n<p>also when I come to the part of inheritance, one of my colleages put the word super() to define inheritance in an algorithmic way, but again I think that is too Java-way to do this part. Usually they teach in that way because the practical part is made in Java, but again I think that the algorithm should be more freely, directly towards the logic, and not to an specific programming language.</p>\n\n<p>Does anybody knows some standard to represent algorithms for OOP?</p>\n', 'ViewCount': '213', 'Title': 'How to represent OOP concepts in algorithms in a standard way?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-29T18:27:24.440', 'LastEditDate': '2013-04-29T18:27:24.440', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '6430', 'Tags': '<algorithms><terminology><education><object-oriented><didactics>', 'CreationDate': '2013-04-29T13:30:18.693', 'Id': '11658'},92_36:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '47', 'LastEditorDisplayName': 'user742', 'Title': 'Study groups for theoretical computer science aspirants', 'LastEditDate': '2013-11-19T21:51:18.890', 'AnswerCount': '0', 'Score': '2', 'OwnerDisplayName': 'vivekpoddar', 'PostTypeId': '1', 'OwnerUserId': '7529', 'FavoriteCount': '2', 'Body': "<p>Recently I decided to go deeper on the subjects like automata, algorithms and graph theory etc. but while reading these either I feel bored or confused hence instead of passive learning I want something more interactive or sharing. Hence, I am curious are there study groups where I can discuss these subjects from peers as well as experts?</p>\n\n<p>I tried but couldn't find any.</p>\n\n<p>PS: I know there are video tutorials but nothing is better than try it yourself or brain storming sessions with someone else.</p>\n", 'ClosedDate': '2013-11-19T21:51:24.547', 'Tags': '<education>', 'LastEditorUserId': '39', 'LastActivityDate': '2013-11-19T21:51:18.890', 'CommentCount': '5', 'CreationDate': '2013-05-28T07:18:30.287', 'Id': '12532'},92_37:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I'm going to be involved with a sort of 'open day' at my university in a few weeks. As part of this time, I (along with a coworker) am being given a whole bunch of high-school level students for two hours, as well as a computer lab big enough to contain them all, and I have to do some kind of activity or set of activities with them to encourage them to do computer science (at my university, ideally, but in general also). I am at an absolute loss as to what to do here, and welcome any and all suggestions.</p>\n", 'ViewCount': '1489', 'Title': 'What should I do with a bunch of 16-17 year olds to get them interested in computer science?', 'LastActivityDate': '2013-12-06T10:34:08.123', 'AnswerCount': '13', 'CommentCount': '2', 'Score': '33', 'PostTypeId': '1', 'OwnerUserId': '8832', 'Tags': '<education>', 'CreationDate': '2013-06-24T08:45:19.877', 'FavoriteCount': '17', 'Id': '12857'},92_38:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>If I am right students learning computer science at universities learn very theoretical kind of knowledge. A knowledge most of which (e.g. algorithm theory) can't be used to create everyday software (e.g. MS Word, IE, etc.). </p>\n\n<p>What opportunities do computer science graduates have if they don't want to do research but rather work at some company where they can make use of what they have studied. (e.g. not writing MS Word)</p>\n\n<p>In case of still not being clear enough, generally speaking, what I would like to know is what can a computer science gradute work?</p>\n", 'ViewCount': '684', 'Title': 'What future working opportunities do computer science students have?', 'LastActivityDate': '2013-06-28T03:54:39.053', 'AnswerCount': '4', 'CommentCount': '4', 'AcceptedAnswerId': '12910', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '8870', 'Tags': '<education>', 'CreationDate': '2013-06-26T15:58:13.840', 'FavoriteCount': '3', 'Id': '12909'},92_39:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '436', 'Title': 'Despite it is so important, why don\'t computer science departments offer a class named "memory management"?', 'LastEditDate': '2013-07-16T10:09:37.950', 'AnswerCount': '1', 'Score': '4', 'OwnerDisplayName': 'Kutluhan Metin', 'PostTypeId': '1', 'OwnerUserId': '8744', 'Body': "<p>I don't understand why computer science departments don't offer a class named memory management? I see that most of the problems encountered in computer science are about memory management concepts. As being a computer science student, my department does not offer a class about that. I took a class named file organization which helped me understand harddisk management, I would like to learn memory management very well. If is there anybody who can explain this, it would be very useful.</p>\n", 'ClosedDate': '2014-02-02T11:25:24.150', 'Tags': '<computer-architecture><education><memory-management>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-30T17:48:20.853', 'CommentCount': '0', 'CreationDate': '2013-07-15T06:23:02.950', 'Id': '13278'},92_40:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>We mostly write programme in high level language. So while studying I came across assembly language. So an assembler converts assembly language to machine language and a compiler does the same with high level language. I found assembly language has instructions like move r1 r3 , move a 5 etc. And it is rather hard to study. So why was assembly language created?or was it the one that came first even before high level language? Why am I studying about assemblers in my computer engineering class?</p>\n', 'ViewCount': '2092', 'Title': 'Why do we need assembly language?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-05T22:35:01.817', 'LastEditDate': '2013-07-16T08:48:48.453', 'AnswerCount': '6', 'CommentCount': '2', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '9094', 'Tags': '<programming-languages><education><history>', 'CreationDate': '2013-07-15T15:05:46.733', 'FavoriteCount': '1', 'Id': '13287'},92_41:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>At my university, a degree is "Computer Science and Engineering" but at US universities I understand that the degrees are different so what is the fundamental difference? Is computer engineering lower level like hardware and operating systems while computer science is more like language technologies?</p>\n', 'ViewCount': '106', 'Title': 'Is CS more like software and CE more like hardware?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-09-05T16:33:56.457', 'LastEditDate': '2013-09-05T14:13:13.500', 'AnswerCount': '2', 'CommentCount': '1', 'AcceptedAnswerId': '14153', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '2529', 'Tags': '<terminology><education>', 'CreationDate': '2013-09-05T08:04:04.297', 'Id': '14142'},92_42:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>A family $H$ of hash functions $h: U \\rightarrow \\{0,\\ldots,M-1\\}$ is <em>universal</em> if \n$$\\forall x,y \\in U, x \\neq y \\Rightarrow \\Pr_{h \\in H}[h(x) = h(y)] \\leq \\frac{1}{M}$$\nYou can find more about universal hashing this wikipedia <a href="http://en.wikipedia.org/wiki/Universal_hashing">article</a>.</p>\n\n<p>The concept of universal hashing is now a standard part of undergraduate data structure courses. It would be nice to be able to motivate students about the importance of universal hashing in industrial applications. So my question is:</p>\n\n<blockquote>\n  <p>Are constructions of universal family of hash functions important in practice? If the answer is yes, would you please share some interesting industrial applications that you\'ve seen?</p>\n</blockquote>\n', 'ViewCount': '134', 'Title': 'Universal Hashing in Practice', 'LastEditorUserId': '204', 'LastActivityDate': '2013-10-27T22:57:49.313', 'LastEditDate': '2013-10-16T03:34:01.153', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '204', 'Tags': '<data-structures><education><hash><hash-tables>', 'CreationDate': '2013-10-16T00:21:41.770', 'Id': '16118'},92_43:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I was recently asked to explain <strong>eye tracking</strong> to 4th grade students and talk to them about its applications.</p>\n\n<blockquote>\n  <p><a href="http://www.tobii.com/en/about/tobii-in-brief/eye-tracking-by-tobii/the-basics-of-eye-tracking/" rel="nofollow">What is eye tracking?</a></p>\n  \n  <p>An eye tracker is a device that uses projection patterns and optical\n  sensors to gather data about gaze direction or eye movements with very\n  high accuracy. Most eye trackers are based on the fundamental\n  principle of corneal-reflection tracking:</p>\n  \n  <p><img src="http://i.stack.imgur.com/2blmy.jpg" alt="enter image description here"></p>\n</blockquote>\n\n<p>I did not have time to prepare an activity, and I showed them some videos and they asked me questions. They got it, but I don\'t believe this is the best introduction.</p>\n\n<p>I was thinking something along the lines of Christopher Bishop\'s <a href="http://research.microsoft.com/en-us/um/people/cmbishop/outreach.htm" rel="nofollow">Royal Institution Christmas Lectures</a> with volunteers and physical objects.</p>\n\n<p><strong>How would you explain it to 9-10 year olds?</strong></p>\n', 'ViewCount': '110', 'Title': 'Explaining eye tracking to 9-10 year olds', 'LastActivityDate': '2013-10-21T19:25:28.580', 'AnswerCount': '0', 'CommentCount': '4', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '8871', 'Tags': '<education>', 'CreationDate': '2013-10-21T19:25:28.580', 'FavoriteCount': '1', 'Id': '16314'},92_44:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I\'m interested in the question of how best to teach NP-completeness to computer science majors.  In particular, should we teach it using Karp reductions or using Turing reductions?</p>\n\n<p>I feel that the concepts of NP-completeness and reductions are something that every computer science major ought to learn.  However, when teaching NP-completeness, I\'ve noticed that the use of Karp reductions has some downsides.</p>\n\n<p>First of all, Karp reductions seem to be unnecessarily confusing for some students.  The intuitive notion of a reduction is "if I have an algorithm to solve problem X, then I can use it to solve problem Y, too".  That\'s very intuitive -- but it maps much better to Turing reductions than to Karp reductions.  As a result, I see students who are trying to prove NP-completeness get led astray by their intuition and form an incorrect proof.  Trying to teach both kinds of reductions and emphasizing this aspect of Karp reductions sometimes feels a little bit like needless formalism and takes up unnecessary class time and student attention on what feels like an inessential technical detail; it\'s not self-evident why we use this more restricted notion of reduction.</p>\n\n<p>I do understand the difference between Karp reductions and Turing (Cook) reductions, and how they lead to different notions of NP-completeness.  I realize that Karp reductions give us a finer granularity of distinctions between complexity classes.  So, for serious study of complexity theory, Karp reductions are obviously the right tool.  But for computer science students who are just learning this and are never going to go into complexity theory, I\'m uncertain whether this finer distinction is critical is critical for them to be exposed to.</p>\n\n<p>Finally, as a student, I remember feeling puzzled when I ran across a problem like "tautology" -- i.e., given a 3CNF formula, check whether it is a tautology.  What was confusing was that this problem is clearly hard: any polynomial-time algorithm for it would imply that $P=NP$; and solving this problem is obviously as hard as solving the tautology problem.  However, even though intuitively tautology is as hard as satisfiability, tautology is not NP-hard.  Yes, I understand today why this is the case, but at the time I remember being puzzled by this.  (What went through my head once I finally understood was: Why do we draw this distinction between NP-hard and co-NP-hard, anyway?  That seems artificial and not very well-motivated by practice.  Why do we focus on NP rather than co-NP?  They seem equally natural.  From a practical perspective, co-NP-hardness seems to have essentially the same practical consequences as NP-hardness, so why do we get all hung up on this distinction?  Yes, I know the answers, but as a student, I remember this just made the subject feel more arcane and poorly motivated.)</p>\n\n<p>So, my question is this.  When we teach NP-completeness to students, is it better to teach using Karp reductions or Turing reductions?  Has anyone tried teaching the concept of NP-completeness using Turing reductions?  If so, how did it go?  Would there be any non-obvious pitfalls or disadvantages if we taught the concepts using Turing reductions, and skipped the conceptual issues associated with Karp reductions?</p>\n\n<hr>\n\n<p>Related: see <a href="http://cs.stackexchange.com/a/11124/755">http://cs.stackexchange.com/a/11124/755</a> and <a href="http://cs.stackexchange.com/a/16376/755">http://cs.stackexchange.com/a/16376/755</a>, which mentions that the reason why we use Karp reductions in the literature is because it enables us to distinguish between NP-hardness and co-NP-hardness.  However, it does not seem to give any answer that\'s focused on a pedagogical perspective of whether this ability is critical for the learning objectives of an algorithms class that should be taken by every CS major.  See also <a href="http://cstheory.stackexchange.com/q/138/5038">http://cstheory.stackexchange.com/q/138/5038</a>, which has a similar discussion.</p>\n', 'ViewCount': '210', 'Title': 'Teaching NP-completeness - Turing reductions vs Karp reductions', 'LastEditorUserId': '755', 'LastActivityDate': '2013-10-24T05:18:25.377', 'LastEditDate': '2013-10-24T05:18:25.377', 'AnswerCount': '2', 'CommentCount': '1', 'Score': '9', 'PostTypeId': '1', 'OwnerUserId': '755', 'Tags': '<np-complete><reductions><education>', 'CreationDate': '2013-10-23T23:45:23.683', 'FavoriteCount': '1', 'Id': '16386'},92_45:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I am taking an undergraduate CS Theory course and the material on finite automata and regular languages is being taught in a non-traditional manner. Instead of using regular expressions, the closure properties of regular languages, the pumping lemma etc, to show that a language is or is not regular, all of our proofs and examples for identifying regular languages use the Myhill-Nerode theorem and boolean matrices as defined below.</p>\n\n<p>Let $L = \\{w_1, w_2, ...\\}$ be a set of words over some alphabet $\\Sigma$ and let $T_L$ be a matrix with entries $t_{ij}$ where</p>\n\n<p>$$ t_{ij} =\n\\left\\{\n \\begin{array}{ll}\n  1  &amp; \\mbox{if } w_iw_j \\in L \\\\\n  0  &amp; \\mbox{otherwise}\n \\end{array}\n\\right.\n$$</p>\n\n<p><strike>Then by Myhill-Nerode, L is non-regular iff all rows of $T_L$ are distinct.</strike></p>\n\n<p><strong>Correction:</strong> Then by Myhill-Nerode, $L$ is non-regular iff $T_L$ has an infinite number of distinct rows. </p>\n\n<p>My question is, are there any readily available books, papers, or lecture notes that lean heavily on this technique and are appropriate for undergrads?</p>\n', 'ViewCount': '90', 'Title': 'Undergrad resources for identifying regular languages with Myhill-Nerode matrices', 'LastEditorUserId': '10980', 'LastActivityDate': '2013-10-26T20:25:02.053', 'LastEditDate': '2013-10-26T20:25:02.053', 'AnswerCount': '1', 'CommentCount': '4', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '10980', 'Tags': '<regular-languages><finite-automata><education><matrices>', 'CreationDate': '2013-10-25T22:43:27.700', 'FavoriteCount': '1', 'Id': '16434'},92_46:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>recently there have been a few questions on teaching CS in both cs.se &amp; tcs.se and there are many high-rated related questions on the two sites on the topic. thinking over the latest one made me realize that a lot of students get exposed to some aspects of STEM through the media (sometimes inaccurately), and one of the most powerful media outlets is movies. </p>\n\n<p>it seems that maybe instead of rolling ones eyes or recoiling from their unrealism, these have some potential and can be used as a teaching tool (aka "teachable moment") by taking them as a student experience to build on, as case studies for students to learn about certain concepts and how the concepts actually work vs the screenwritten, "hollywood" version, ie address (possible widespread?) misconceptions about the field and its essential aspects.</p>\n\n<blockquote>\n  <p>what are key or compelling movies introducing CS-type concepts and what is accurate/inaccurate about the portrayal? [or is it roughly correct?]</p>\n</blockquote>\n\n<ul>\n<li><p><a href="http://cstheory.stackexchange.com/questions/19714/teaching-high-school-tcs-existing-programs">teaching high school TCS</a> tcs.se</p></li>\n<li><p><a href="http://cs.stackexchange.com/questions/12857/what-should-i-do-with-a-bunch-of-16-17-year-olds-to-get-them-interested-in-compu">what should I do with a bunch of 16/17yr olds to get them interested in CS</a> cs.se</p></li>\n</ul>\n', 'ViewCount': '75', 'Title': 'computer science in the movies as an educational angle', 'LastActivityDate': '2013-11-09T20:03:01.780', 'AnswerCount': '1', 'CommentCount': '3', 'AcceptedAnswerId': '17855', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '699', 'Tags': '<education>', 'CreationDate': '2013-11-09T17:02:52.550', 'FavoriteCount': '2', 'Id': '16853'},92_47:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I am a professor at a university of applied sciences and will teach computer science next semester.</p>\n\n<p>My question is if you know resources which use the <a href="http://www.r-project.org/" rel="nofollow">R project</a> as the basis, i.e. not using it primarily for statistics (I do this already in this semester) but for other topics in informatics, mentioned e.g. in this <a href="http://en.wikipedia.org/wiki/Computer_science" rel="nofollow">wikipedia article</a>.</p>\n\n<p>Yet I don\'t want to go through this list one-by-one but was hoping for a more consistent approach (books, slides, scripts...) covering important parts of the field.</p>\n', 'ViewCount': '65', 'Title': 'Resources for teaching computer science with R', 'LastEditorUserId': '98', 'LastActivityDate': '2013-11-12T16:54:55.957', 'LastEditDate': '2013-11-12T16:54:55.957', 'AnswerCount': '0', 'CommentCount': '5', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '11336', 'Tags': '<programming-languages><education>', 'CreationDate': '2013-11-12T10:07:45.693', 'FavoriteCount': '1', 'Id': '17951'},92_48:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '100', 'Title': 'Dijkstras "on the cruelty of really teaching computer science"', 'LastEditDate': '2013-12-03T08:47:38.057', 'AnswerCount': '0', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '699', 'FavoriteCount': '1', 'Body': u'<p>an old remarkable essay of Dijkstras (called a classic by some) entitled <a href="http://www.cs.utexas.edu/~EWD/ewd10xx/EWD1036.PDF" rel="nofollow">On the cruelty of really teaching computer science</a> (1988) has recently been recirculating in cyberspace. its opinionated and wideranging yet has some specific suggestions for rearranging/reorienting CS education in a more formal/mathematical way.</p>\n\n<blockquote>\n  <p>exactly \xbc-century later, with 2020 hindsight, are any of Dijkstra\'s ideas on CS educational strategies viable or playing out in academia? have they had some influence on CS education? what is the general philosophical approach/background in CS education, and why is it the dominant approach, how has it evolved to be that way?</p>\n</blockquote>\n', 'ClosedDate': '2013-12-24T00:57:43.453', 'Tags': '<education><history>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-12-03T08:47:38.057', 'CommentCount': '6', 'CreationDate': '2013-12-03T05:08:03.300', 'Id': '18558'},92_49:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I did see a lot of nice and informative questions, articles on inter-net and on StackOverflow itself, of-course. But I found all the questions or articles following a specific rule or a pattern to explain the topic. I mean, when a question was asked on NFA, DFA or Regular Expression, a solution was presented to the question abiding by the theorems / rules of these topics (Theory of Computation).</p>\n\n<p>But what I feel is that, as most of the questions on DFA/NFA are of the type \n"Design an NFA...." or "design a DFA..." , I feel that developing/Designing DFA/NFA must be an ART. </p>\n\n<p>And where there is ART I feel there is an intuition. If these problems involve "DESIGNING" something ,then everyone must have their own way (of-course not going out-of-the-way of theorems or rules as such) of solving or attacking these problems. One should have developed a thinking process (over the years of practise) to solve these problems.</p>\n\n<p>So I would like all the experts over this Site to share their knowledge (preferably in simple words) how they think over the problems (simple ones) of these topics.</p>\n\n<p>I would like to elaborate the question with a simple example.</p>\n\n<blockquote>\n  <p>Let F be the language of all strings over {0,1} that do not contain a pair of 1s that\n  are separated by an odd number of symbols. Give the state diagram of a DFA with\n  five states that recognizes F . </p>\n</blockquote>\n\n<p>Or maybe this:</p>\n\n<blockquote>\n  <p>Design an NFA to find a 4-state NFA for the complement of F.</p>\n</blockquote>\n\n<p>These questions are from the Sipser\'s book and I have also found the solutions for them myself. </p>\n\n<p>I just want to know , how one can develop an intuition for solving the problems?</p>\n', 'ViewCount': '215', 'ClosedDate': '2013-12-13T08:23:17.523', 'Title': 'How to approach NFA design questions intuitively?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-12-12T09:39:34.433', 'LastEditDate': '2013-12-12T09:39:34.433', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '11125', 'Tags': '<regular-languages><finite-automata><education>', 'CreationDate': '2013-12-12T07:26:32.340', 'Id': '18913'},92_50:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I am involved in a first year programming and algorithms course. In a recent lecture, I decided to present the material using <a href="http://en.wikipedia.org/wiki/Live_coding"><em>live coding</em></a>, which essentially meant that I sit behind the keyboard and write code and evaluate it, using <em>emacs</em> to facilitate the process.</p>\n\n<p>This was quite successful and students commented on how much they appreciated the more (inter)active format. As this was my first attempt using this teaching format, I know that it did not run perfectly. Some of the problems were related to being not as savvy with <em>emacs</em> as I should be, and others were to do with allowing student questions to take me too far from my script. I know I can do better.</p>\n\n<blockquote>\n  <p>What are some guidelines for giving lectures (and other demonstrations) using live coding lectures?<br>\n  What are the pitfalls to avoid?</p>\n</blockquote>\n', 'ViewCount': '109', 'Title': 'Tips for teaching using Live Coding', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-26T04:52:21.313', 'LastEditDate': '2014-01-26T04:52:21.313', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '31', 'Tags': '<education><didactics>', 'CreationDate': '2014-01-20T14:02:15.140', 'Id': '19850'},92_51:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '195', 'Title': 'The Absolute Minimum Every Software Developer Absolutely, Positively Must Know about Computer Science (No Excuses!)', 'LastEditDate': '2014-01-23T23:35:41.890', 'AnswerCount': '2', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '13075', 'FavoriteCount': '1', 'Body': '<p>Yes, I borrowed the title form a famous <a href="http://www.joelonsoftware.com/articles/Unicode.html" rel="nofollow">joelonsoftware post</a> for my question because I didn\'t exactly know how to ask this.</p>\n\n<p>I\'m a professional programmer for a few years now and although I followed informatics courses in school there was a lot of stuff missing from the curriculum, as I now know but wasn\'t aware then. For example I didn\'t do any compiler theory, algorithm analysis (the Big-O), have no idea what P-NP meant etc.</p>\n\n<p>So I want to catch up now! </p>\n\n<p>But the field of computer science is big. Really big! So from here my question: What\'s the absolute minimum every software developer absolutely, positively must know about computer science (no excuses!)?</p>\n', 'ClosedDate': '2014-01-24T16:09:48.247', 'Tags': '<education><applied-theory>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-24T13:07:09.930', 'CommentCount': '10', 'CreationDate': '2014-01-23T21:17:48.197', 'Id': '19923'},92_52:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I am an undergraduate computer science student at Cal Poly (SLO) and I have some flexibility in which math courses I can take, but I don't know which math courses would be most beneficial. I have already taken a statistics/probability course and Calculus 3. My options are pretty flexible for a Mathematics/Statistics elective. What type of math is most useful to know for the field of computer science? I still don't know what type of career I would like, so general answers are okay; or some specific classes for specific career paths would be great too. Thanks!</p>\n", 'ViewCount': '65', 'ClosedDate': '2014-02-12T08:56:11.490', 'Title': 'What type of math classes are good to take for computer science majors?', 'LastEditorUserId': '6447', 'LastActivityDate': '2014-02-12T02:16:25.060', 'LastEditDate': '2014-02-12T00:55:35.443', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '14590', 'Tags': '<education>', 'CreationDate': '2014-02-12T00:06:07.307', 'Id': '21546'},92_53:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I thought this would be the best place for a question like this. Anyway, I was wondering what minor would go well with a Computer Science degree. I was considering a minor in math but I am not entirely sure if that could help out or not. I am currently a second semester freshman and I suppose that this is the best/latest time to decide. Open to many suggestions.</p>\n', 'ViewCount': '44', 'ClosedDate': '2014-02-12T09:02:10.717', 'Title': 'Appropriate minor to go with CS major', 'LastActivityDate': '2014-02-12T04:08:52.400', 'AnswerCount': '2', 'CommentCount': '1', 'AcceptedAnswerId': '21555', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '14592', 'Tags': '<education>', 'CreationDate': '2014-02-12T02:24:04.970', 'Id': '21552'},92_54:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>What is a good metaphor or example to explain to an English major the difference between classical computer science and "being good with using MS-Windows"</p>\n\n<ul>\n<li>computer science  </li>\n<li>computer programming  </li>\n<li>using computers</li>\n</ul>\n\n<p>3 profoundly different things.   Most people have no idea what Computer Science even is.  They just see the word "computer". Hence, "he is a Computer Science major" can be interpreted as "He can hook up my printer".  Or that he\'s "good with computers". Even fewer people know the difference between computer programming and Computer Science.</p>\n\n<p>Computer Science is computing theory.  CS can be learned without actual computers.   CPU micro architecture.  How to sort numbers, how to traverse lists, etc.  State machines.  Algorithms, big(Oh), etc.  How to design a programming language or compiler.  </p>\n\n<p>Programming is writing code and creating applications in a language and compiler created by a computer scientist.</p>\n\n<p>Lastly, there is using a computer (using a GUI, mouse, and keyboard.  Internet, MS-Office, etc)</p>\n\n<p>Yet all three of these are used interchangeably by laymen.  </p>\n\n<p>What is a good metaphor or example to explain to an English major the difference between classical computer science and "being good with using MS-Windows"   Or simply, a pithy example of how real computer science has nothing to do with using MS-Windows.</p>\n', 'ViewCount': '1951', 'Title': 'Explaining the difference between computer science and computer literacy', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-26T17:18:05.997', 'LastEditDate': '2014-03-07T09:44:02.960', 'AnswerCount': '8', 'CommentCount': '3', 'Score': '23', 'PostTypeId': '1', 'OwnerUserId': '15352', 'Tags': '<terminology><education>', 'CreationDate': '2014-03-06T17:31:16.130', 'FavoriteCount': '8', 'Id': '22345'},92_55:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '140', 'Title': 'If $\\log xy=\\log x+\\log y$ then why multiplication is harder than addition?', 'LastEditDate': '2014-04-08T17:51:22.997', 'AnswerCount': '2', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '16535', 'FavoriteCount': '1', 'Body': "<p>Someone told me that the $\\log$ function was introduced to make the calculation easier. If we have to calculate $xy$, we can calculate instead $\\log x+\\log y$ since $\\log xy=\\log x+\\log y$. How this can make the calculation easier? Maybe from a mathematician point of view but what about a computer scientist's point of view?</p>\n\n<p>If it makes the calcualtion easier then why people do not use it to simplify the complexity of the multiplication algorithms?</p>\n\n<p>From my own thinking, this transformation makes the calculation more difficult. How can we calculate the $\\log x$ and $\\exp x$ functions in a computer?</p>\n\n<p>Am I right? Any suggestions please? Thank you for your time.</p>\n", 'Tags': '<algorithms><complexity-theory><reference-request><education>', 'LastEditorUserId': '16535', 'LastActivityDate': '2014-04-08T20:37:30.863', 'CommentCount': '2', 'AcceptedAnswerId': '23564', 'CreationDate': '2014-04-08T16:13:52.080', 'Id': '23554'},92_56:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I'm looking into different attendance taking options for a particularly large seminar class (600ish students) and I was thinking - what if a picture was taken of the seats, maybe with a visual cue on them such as reflective tape. Another picture was taken during a class with assigned seats and if the reflective tape is covered, it could be a good indication of whether the seat is occupied or not.</p>\n\n<p>What kind of software should I be looking at to achieve this effect. The main things are being able to detect an object (maybe some kind of material which is obvious to the computer) and detecting if its gone</p>\n\n<p>Thank you for your help - let me know if I should post this somewhere else</p>\n", 'ViewCount': '13', 'ClosedDate': '2014-04-17T10:59:58.220', 'Title': 'Using image processing to infer if a seat is occupied', 'LastActivityDate': '2014-04-17T10:59:38.567', 'AnswerCount': '0', 'CommentCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '16825', 'Tags': '<education><image-processing>', 'CreationDate': '2014-04-16T11:33:00.040', 'Id': '23852'},92_57:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Can anyone recommend an open source system for students to submit programming assignments. Ideally it would be something that would run on the web, do some level of testing on the server side, and provide feedback to the students based on testing.</p>\n', 'ViewCount': '18', 'ClosedDate': '2014-05-01T22:55:08.033', 'Title': 'Software for submitting assignments', 'LastActivityDate': '2014-05-01T19:38:22.460', 'AnswerCount': '0', 'CommentCount': '3', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '15000', 'Tags': '<education>', 'CreationDate': '2014-05-01T19:38:22.460', 'Id': '24302'},92_58:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>How can i get this book?</p>\n\n<p>LR parsing:theory and practice by Nigel p. Chapman</p>\n\n<p>I want to learn the theory in depth but the book is out of print. \nCould you guys suggest any other source or e-book version of the same book </p>\n', 'ViewCount': '11', 'ClosedDate': '2014-05-02T21:24:01.477', 'Title': 'LR parsing theory by chapman', 'LastActivityDate': '2014-05-02T13:27:47.830', 'AnswerCount': '0', 'CommentCount': '1', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '17277', 'Tags': '<education>', 'CreationDate': '2014-05-02T13:27:47.830', 'Id': '24315'}