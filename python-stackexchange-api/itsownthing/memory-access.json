{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '109', 'Title': 'categories of registers and and storage in them', 'LastEditDate': '2013-01-04T22:05:56.153', 'AnswerCount': '1', 'Score': '1', 'OwnerDisplayName': 'Registered User', 'PostTypeId': '1', 'OwnerUserId': '5309', 'FavoriteCount': '0', 'Body': '<p>The <a href="http://en.wikipedia.org/wiki/Processor_register" rel="nofollow">Wikipedia article on processor registers</a> mentions:</p>\n\n<blockquote>\n  <p>Address registers hold addresses and are used by instructions that indirectly access primary memory.</p>\n</blockquote>\n\n<p>Which addresses does this sentence refer to?</p>\n', 'Tags': '<computer-architecture><memory-access>', 'LastEditorUserId': '39', 'LastActivityDate': '2013-01-05T10:26:19.113', 'CommentCount': '0', 'AcceptedAnswerId': '7773', 'CreationDate': '2013-01-04T21:07:55.110', 'Id': '7772'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I am reading Computer Architecture &amp; Organization by William Stallings to understand I/O operations. Stallings pretty well explains why Programmed I/O (CPU keeps checking the I/O module register status) &amp; Interrupt I/O (CPU still has to over look data transfer between I/O module &amp; memory) are not efficient &amp; introduces to DMA, where DMA itself handles everything. </p>\n\n<p>But, however, he also mentions that during a DMA operation, CPU sits idle &amp; has no control over memory bus. If CPU has to sit idle, then how it is better than other two methods ? </p>\n\n<p>Page no. 415, Computer Architecture &amp; Orgazination by Morris Mano:</p>\n\n<blockquote>\n  <p>During the DMA transfer, the CPU is idle and has no control of the memory.</p>\n</blockquote>\n\n<p>Only way it make sense to me is that, CPU can perform any operation which does not involve memory bus during a DMA operation. So, CPU will not be idle. Or am I missing something ?</p>\n\n<p>I think author has formulated in a bad way. It can be phrased like: </p>\n\n<blockquote>\n  <p>During DMA transfer, the CPU has no control of memory buses and thus cannot perform any operations involving memory. However it can perform other operations like arithmetic, logical or can operate on data in cache. </p>\n</blockquote>\n\n<p>Am I right?</p>\n', 'ViewCount': '470', 'Title': 'How DMA improves I/O operation efficiency?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-31T20:13:03.183', 'LastEditDate': '2013-04-02T15:15:16.130', 'AnswerCount': '3', 'CommentCount': '3', 'AcceptedAnswerId': '10900', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '6665', 'Tags': '<computer-architecture><memory-hardware><memory-access>', 'CreationDate': '2013-03-29T15:48:19.407', 'Id': '10896'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Following question was asked in one of entrance exams for a graduation programme. Please help me try to solve it : </p>\n\n<blockquote>\n  <p>A computer system has an L1 cache, an L2 cache, and a main memory\n  unity connected as shown below. The block size in L1 cache is 4 words.\n  The block size in L2 cache is 16 words. The memory access times are 2\n  nanoseconds, 20 nanoseconds and 200 nanoseconds for L1 cache, L2 cache\n  and main memory unit respectively.</p>\n  \n  <p><img src="http://i.stack.imgur.com/7zo5X.gif" alt="cache-image"></p>\n  \n  <ol>\n  <li>When there is a miss in L1 cache and a hit in L2 cache, a block is\n  transferred from L2 cache to L1 cache. What is the time taken for this\n  transfer?</li>\n  </ol>\n  \n  <p>(A) 2 nanoseconds \n  (B) 20 nanoseconds\n  (C) 22 nanoseconds \n  (D) 88 nanoseconds</p>\n  \n  <ol>\n  <li>When there is a miss in both L1 cache and L2 cache, first a block\n  is transferred from main memory to L2 cache, and then a block is\n  transferred from L2 cache to L1 cache. What is the total time taken\n  for these transfers?</li>\n  </ol>\n  \n  <p>(A) 222 nanoseconds (B) 888 nanoseconds\n  (C) 902 nanoseconds (D) 968 nanoseconds</p>\n</blockquote>\n\n<p>First thing that came to my mind was, how to calculate the transfer time using the given access time. During a miss, a block of data is moved from main memory to cache. Then CPU will access it. So, wouldn\'t be access time > transfer time ?</p>\n\n<p>Then I thought, lets assume access time = transfer time &amp; do the calculation. </p>\n\n<p>Now first question. The question already states there is a miss in L1, so I will not consider L1 access time. Since there is a miss in L1 &amp; hit in L2, a entire block from L2 has to be moved to L1. L2 block size is 16 words, but data bus size is 4 words. </p>\n\n<p>So we have to move 4 words * 4 times. </p>\n\n<p>To transfer 4 word it takes 20 ns. To transfer 4 words, its 80ns. Isn\'t it the time transferred from L2 to L1 ? The question does not say anything about accessing L1 after moving the data. But 80ns is not in the option ! </p>\n\n<p>Similar case with second question also. </p>\n\n<p>Time to move main memory to L2 = 4 words * 4 times = 4 * 200 = 800ns </p>\n\n<p>Time to move L2 to L1 = 80ns [earlier calculation]</p>\n\n<p>So total time taken is 880ns. Which is again not in the option. </p>\n\n<p>Either I am doing a very big mistake or options are wrong or question isn\'t framed correctly. If I am doing anything wrong, please give me some hint &amp; I will try to work on this exercise again. </p>\n', 'ViewCount': '465', 'Title': 'Finding cache block transfer time in a 3 level memory system', 'LastEditorUserId': '98', 'LastActivityDate': '2014-02-06T18:04:13.117', 'LastEditDate': '2013-04-14T11:46:23.223', 'AnswerCount': '2', 'CommentCount': '3', 'AcceptedAnswerId': '11311', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '6665', 'Tags': '<computer-architecture><cpu-cache><memory-access>', 'CreationDate': '2013-04-14T09:56:15.187', 'Id': '11309'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>What is the difference between dynamic loading and dynamic linking?</p>\n\n<p>Both systems seem to allow shared libraries, but I am struggling to differentiate between them.</p>\n', 'ViewCount': '1362', 'Title': 'Dynamic loading vs. dynamic linking?', 'LastActivityDate': '2013-04-30T11:50:14.907', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '7421', 'Tags': '<memory-allocation><memory-access>', 'CreationDate': '2013-04-30T05:29:18.877', 'Id': '11668'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I know that for executing a program, it should be copied to RAM. But the problem is whole of it may not be copied always. </p>\n\n<p>Since the size of the RAM is limited, there is mechanism called virtual memory. If the addressed thing is not in memory, a page fault occurs and the data is copied to the RAM. My question is who keeps track of which data is in the RAM and not in the RAM?</p>\n', 'ViewCount': '81', 'Title': 'How a program is copied to RAM from harddisk', 'LastEditorUserId': '98', 'LastActivityDate': '2013-07-16T10:11:46.007', 'LastEditDate': '2013-07-16T10:11:46.007', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '13275', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '947', 'Tags': '<operating-systems><memory-management><virtual-memory><memory-access>', 'CreationDate': '2013-07-15T01:55:36.963', 'Id': '13274'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>What is the term for an algorithm that always requests the same sequence of pages?  I recall seeing this concept before buti haven't been able to find anything on Google without more specific vocabulary. </p>\n\n<p>One algorithm in this category is a linear scan to (say) find the minimum of a set of data. Each page is accessed in order, regardless of the value of previous accesses. </p>\n\n<p>Most algorithms do not fall into this category. For example, a binary search chooses what page to access based on the values in the page before it. </p>\n", 'ViewCount': '34', 'Title': 'static paging vocabulary request', 'LastEditorUserId': '98', 'LastActivityDate': '2013-08-26T07:24:37.880', 'LastEditDate': '2013-08-26T07:24:37.880', 'AnswerCount': '0', 'CommentCount': '3', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '2118', 'Tags': '<algorithms><terminology><memory-access>', 'CreationDate': '2013-08-23T16:04:56.540', 'Id': '13891'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I am trying to calculate the average memory access time of a 2-level cache with a split L1 cache. I am given the 3 formulas below:</p>\n\n<p><strong>Given</strong></p>\n\n<p>Basic Formula:</p>\n\n<pre><code>AMAT = HitTimeL1 + MissRateL1 x MissPenaltyL1\n</code></pre>\n\n<p>2-Level Cache:</p>\n\n<pre><code>*Substitution: MissPenaltyL1 = HitTimeL2 + MissRateL2 x MissPenaltyL2\n\nAMAT = HitTimeL1 + MissRateL1 x (HitTimeL2 + MissRateL2 x MissPenaltyL2)\n</code></pre>\n\n<p>Split-Level Cache:</p>\n\n<pre><code>AMAT_SplitL1 = AMAT_InstructionCache + AMAT_DataCache\n</code></pre>\n\n<p><strong>Assumptions</strong></p>\n\n<p>Based on the formulas above I have substituted the 2-Level cache formulas into each of the split L1 caches. I am not sure if this is correct. If anyone could verify this for me or provide me with some documentation that supports this type of calculation that would be awesome. Thanks.</p>\n\n<pre><code>AMAT = (HitTimeL1Inst + MissRateL1Inst x (HitTimeL2 + MissRateL2 x MissPenaltyL2))\n     + (HitTimeL1Data + MissRateL1Data x (HitTimeL2 + MissRateL2 x MissPenaltyL2))\n</code></pre>\n', 'ViewCount': '896', 'ClosedDate': '2014-05-03T23:50:27.440', 'Title': 'Average Memory Access Time for Split/2-Level Cache', 'LastEditorUserId': '10776', 'LastActivityDate': '2014-04-24T14:16:30.577', 'LastEditDate': '2013-10-17T01:27:34.370', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '10776', 'Tags': '<computer-architecture><cpu-cache><memory-access>', 'CreationDate': '2013-10-16T00:33:03.687', 'Id': '16121'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I'm writing a paper on the topic of applications affected more by memory performance than processor performance. I've got a lot written regarding the gap between the two, however I can't seem to find anything about the applications that might benefit more from memory performance.</p>\n\n<p>I suppose these are applications that make a large amount of memory references, but I have no idea what kind of applications would make such large number of references to make it stand out?</p>\n\n<p>Can you please give me any pointers on how to proceed, some links?</p>\n", 'ViewCount': '27', 'Title': 'Applications affected by memory performance', 'LastActivityDate': '2013-10-19T14:48:07.750', 'AnswerCount': '0', 'CommentCount': '2', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '10855', 'Tags': '<performance><memory-access>', 'CreationDate': '2013-10-19T14:48:07.750', 'Id': '16230'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I am using the Vlagrind lackey tool to examine the full memory reference string of a running computer program and wonder what the difference between a "store" and a "modify" might be - and do these differences reflect a real difference in category of memory manipulation, or are they merely a convenience for the user/programmer of Valgrind\'s lackey tool?</p>\n\n<p>The comments on the lk_main.c source code give these examples of (a) A store:</p>\n\n<pre><code>movl %eax, (%ebx)\n</code></pre>\n\n<p>And (b) a modify</p>\n\n<pre><code>incl (%ecx)\n</code></pre>\n\n<p>I appreciate this is a question about a specific piece of software, but what I really want to know is if it is valid to consider stores and modifies as, in effect "stores" - as much texts on memory seem to regard the two basic operations as load (read) and store (write).</p>\n', 'ViewCount': '65', 'ClosedDate': '2013-11-02T15:44:21.947', 'Title': 'Valgrind: what is the difference between a store and a modify?', 'LastEditorUserId': '6712', 'LastActivityDate': '2013-11-02T14:34:11.550', 'LastEditDate': '2013-11-01T12:50:52.730', 'AnswerCount': '2', 'CommentCount': '0', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '6712', 'Tags': '<memory-access>', 'CreationDate': '2013-11-01T12:15:44.537', 'Id': '16618'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': u'<p><strong>Valid-invalid</strong> bit is used to indicate whether a page in a process\u2019s page table is valid or not. Why is it needed?</p>\n\n<p>Does that mean that each page table has a certain minimum size, i.e. it can accommodate minimum of n references to pages and if the number of pages being referenced by the process is less than n, then this bit is required to tell that only few entries are valid in the page table?</p>\n\n<p>If the page table is built and populated dynamically, then the page table will only have as many entries as needed by process and there will no need for this bit, as all entries will be valid.</p>\n\n<p>Other tags are <strong>page-table</strong>, <strong>valid-invalid bit</strong></p>\n', 'ViewCount': '207', 'Title': 'Valid-invalid bit in a process page table', 'LastActivityDate': '2013-11-24T14:55:52.433', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '18300', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '10120', 'Tags': '<operating-systems><memory-access>', 'CreationDate': '2013-11-24T09:43:02.980', 'Id': '18293'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I was asked this question in examination. A square matrix $M$ of size $10 \\times 10$ is stored in memory with each element requiring 4 bytes of storage. If the base address at $M[0][0]$ is $1840$, determine the address at $M[4][8]$ when the matrix $M$ is stored row majorwise.\nI seriously don't understand this question at all. What kind of problem is this? How to solve these kind of problems?</p>\n", 'ViewCount': '36', 'ClosedDate': '2014-01-07T13:09:46.080', 'Title': 'How to determine the address of an element in a square matrix given the base address?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-07T13:05:30.903', 'LastEditDate': '2014-01-07T13:05:30.903', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '-1', 'PostTypeId': '1', 'OwnerUserId': '12644', 'Tags': '<data-structures><matrices><memory-access>', 'CreationDate': '2014-01-07T11:40:20.837', 'Id': '19557'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>Seemingly, a byte has established itself to be 8bit (is that correct?). RAM and NOR-flash can be normally accessed on a quite granular level, but it is up to the system architecture to determine if the smallest addressable unit is 8bit, 16bit or any other power of two bit number. Would the correct terminology be to call this word-addressable? Or asked differently, is a word the size of smallest addressable unit? Or is there some other term to describe this? </p>\n\n<p>Are mabye nibble, byte, word, double word all variable in bit-length and only defined by the architecture? And it is therefore only coincidence that a byte is always 8 bit? E.g. someone could design some new CPU and memory type and define her byte to be 16bit?</p>\n\n<p><strong>Main question:</strong> What is the precise term for the smallest addressable memory block?</p>\n\n<p><strong>Side question:</strong> What is the antonym to this word I'm looking for (e.g. used in NAND-flash)? Page-addressable, block-addressable? Are both correct or is one inprecise?</p>\n", 'ViewCount': '323', 'Title': 'Word- or byte-addressable? Correct terminology', 'LastEditorUserId': '10634', 'LastActivityDate': '2014-01-20T16:42:35.543', 'LastEditDate': '2014-01-20T16:42:35.543', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '10634', 'Tags': '<terminology><computer-architecture><memory-management><memory-access>', 'CreationDate': '2014-01-20T12:16:10.260', 'Id': '19848'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>When we declare a variable there will be a random part of memory will be allocated in RAM. Which component will allocate the memory? Is the processor or any other specific hardware doing the allocation?</p>\n', 'ViewCount': '59', 'Title': 'Which part of the computer allocates memory in RAM?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-02-08T01:01:08.070', 'LastEditDate': '2014-02-06T15:07:53.740', 'AnswerCount': '2', 'CommentCount': '0', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '14440', 'Tags': '<operating-systems><memory-management><memory-access><memory-hardware>', 'CreationDate': '2014-02-06T14:29:33.133', 'Id': '21378'}