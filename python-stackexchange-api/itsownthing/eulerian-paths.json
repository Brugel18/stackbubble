2650:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>How to improve the worst case scenario for a depth first search on an Euler graph, starting at some point and ending at that same point?</p>\n\n<p>I need to do the whole search but it is not fast enough for large amounts of data. I have tried <a href="https://en.wikipedia.org/wiki/Bidirectional_search" rel="nofollow">bidirectional search</a> but I can not keep the result numerically ordered. Therefore I wonder if there is any other good method to smooth the worst case scenario for the depth first search.</p>\n', 'ViewCount': '251', 'Title': 'Improve worst case time of depth first search on Euler graphs', 'LastEditorUserId': '6447', 'LastActivityDate': '2013-03-20T20:09:11.067', 'LastEditDate': '2013-03-20T20:09:11.067', 'AnswerCount': '1', 'CommentCount': '12', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '591', 'Tags': '<algorithms><graphs><graph-traversal><eulerian-paths>', 'CreationDate': '2012-03-21T16:04:53.030', 'Id': '615'},2651:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>If a graph has a Euler cycle, do the biconnected components have Euler cycles as well?</p>\n', 'ViewCount': '79', 'Title': 'Euler cycles in biconnected components', 'LastActivityDate': '2012-09-24T13:48:36.543', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '4706', 'Score': '5', 'OwnerDisplayName': 'el diablo', 'PostTypeId': '1', 'Tags': '<graph-theory><eulerian-paths>', 'CreationDate': '2008-11-25T14:59:38.553', 'Id': '4705'},2652:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I've got a grid consisting of squares that is 3 squares high and N squares long. \nSome of the squares are filled with numbers that are not greater than 3*N. You can move only to squares that are below, above, on right, or left from you. When you move on a square, you fill that square with a number of the amount of moves you have already taken + 1. If square is already filled with a number, you can move onto it, only if the sum steps you've have taken + 1 is equal to the number on the square.</p>\n\n<p>I need to find a continous path that leads through all the squares of the grid only once and output the same grid filled with numbers corresponding to the steps of your path. In other words, a path was previously laid out on the grid and then some numbers have been erased from squares. Now I have to retrace that path.</p>\n\n<p>I should be done in O(N^2), but I will be thankful for any solutions.</p>\n", 'ViewCount': '83', 'Title': 'Find a continuous path filling whole 3xN grid going through certain points in given order', 'LastActivityDate': '2013-11-03T23:11:59.523', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '16683', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '11149', 'Tags': '<algorithms><eulerian-paths><square-grid>', 'CreationDate': '2013-11-03T12:30:04.480', 'FavoriteCount': '1', 'Id': '16670'},2653:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '16', 'Title': 'Why generally to find a Euler cycle is easier than Hamilton cycle for the same set of nodes?', 'LastEditDate': '2013-12-09T19:57:24.237', 'AnswerCount': '0', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '11964', 'FavoriteCount': '1', 'Body': "<p>To find a Hamilton cycle is a NPC problem, but Euler is not. Considering one can always transform the vertex as edge or vice versa conceptually. Then the vertex can be used to describe the information which originally edge does.</p>\n\n<p>What properties make the Euler graph more easily to be resolved?</p>\n\n<p>For example, in genome assembly problem, one can either consider a Kmer as vertex or edge(de bruijn graph), it's just two perspectives to look at the same thing. I think their should be additional or missing information between two kind of explanation.</p>\n", 'ClosedDate': '2013-12-10T07:16:43.247', 'Tags': '<algorithms><graph-theory><eulerian-paths><hamiltonian-path>', 'LastEditorUserId': '11964', 'LastActivityDate': '2013-12-09T19:57:24.237', 'CommentCount': '2', 'CreationDate': '2013-12-09T19:48:17.363', 'Id': '18785'},2654:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>Let $A$ be a set of integers: $A=\\left \\{ x_1, x_2...x_n \\mid 10&lt;x_i&lt;100\\right \\}$</p>\n\n<p>A <em>valid permutation</em> $x_{i_1}x_{i_2}...x_{i_n}$ is a permutation that holds the following property:</p>\n\n<p>For every adjacent numbers $x_{i_j}x_{i_{j+1}}$, the unit's digit of $x_{i_j}$ is equal to the ten's digit of $x_{i_{j+1}}$.</p>\n\n<p>For example, if $A=\\left\\{ 24,87,48,12 \\right \\}$ then $92-24-48-87$ is a valid permutation, whereas if $A=\\left\\{ 46,83,58 \\right \\}$, there is no valid permutation of $A$.</p>\n\n<p>Now, given such a set $A$, I need to find an algorithm that prints a valid permutation if such exist, otherwise, it returns that there is no valid permutation of $A$.</p>\n\n<p>I need to solve it using a graph, with a reasonable complexity, and I've been instructed to use some of the Eulerian path's properties, so it might play some role in getting the solution to that problem.</p>\n\n<p>This is what I have in mind so far:</p>\n\n<p>Setting a directed graph $G=(V,E)$ with: $V=\\left\\{ x_1, x_2...x_n\\right \\}$, and $E$ will contain all the arcs $(x_{i_j}, x_{i_{j+1}})$ s.t. $x_{i_j} x_{i_{j+1}}$ is valid (i.e the unit's digit of $x_{i_j}$ is equal to the ten's digit of $x_{i_{j+1}}$).</p>\n\n<p>Now, if a valid permutation of $A$ exist, there is a path in $G$ that travel through every vertex only once.</p>\n\n<p>There are two things that troubles me with this thought. First of all, it has nothing to do with Eulerian path, or Eulerian graph, or Eulerian anything, which makes me believe I'm way off target here. Second, the complexity of such algorithm is a nightmare: creating $G$ alone is $O(|V|^2)$, but that's nothing compared to finding <strong>some</strong> path in $G$ that traverse through <strong>all</strong> vertices only once, considering that I can't determine at which vertex to start the search.</p>\n\n<p>Does anyone have an idea on how to approach this problem? Are there any observations I fail to see? Maybe searching the graph differently, or maybe even setting the graph in some other configuration?</p>\n", 'ViewCount': '85', 'Title': 'Finding valid permutation using a graph', 'LastEditorUserId': '472', 'LastActivityDate': '2013-12-20T10:48:55.790', 'LastEditDate': '2013-12-20T10:48:55.790', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '18886', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '11972', 'Tags': '<graphs><eulerian-paths>', 'CreationDate': '2013-12-11T16:55:36.880', 'Id': '18883'}