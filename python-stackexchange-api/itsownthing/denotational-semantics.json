2960:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Suppose we have an algebraic specification in the form: $\\{S,F,w\\}$ where $S$ are the sorts, $F$ are the functions and $w$ are the set of equations.\nFor example, the specification for natural numbers:</p>\n\n<ul>\n<li>$S = \\{\\mathrm{int}\\}$</li>\n<li>$F = \\{\n         0: \\mathrm{int}, \\;\n         \\mathrm{succ} : \\mathrm{int}\\rightarrow\\mathrm{int}, \\;\n         \\mathrm{pred}: \\mathrm{int}\\rightarrow\\mathrm{int}\n       \\}$</li>\n<li>$w = \\{\n         \\mathrm{succ}(\\mathrm{pred}(x)) = x, \\;\n         \\mathrm{pred}(\\mathrm{succ}(x)) = x\n       \\}$</li>\n</ul>\n\n<p>My question is, why and where do we need homomorphisms and isomorphisms in this case? How do homomorphisms and isomorphisms look like between algebras ?</p>\n', 'ViewCount': '84', 'Title': 'Homomorphisms and isomorphisms in an equational calculus', 'LastEditorUserId': '39', 'LastActivityDate': '2013-01-21T20:51:55.753', 'LastEditDate': '2013-01-21T20:51:55.753', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '1584', 'Tags': '<semantics><denotational-semantics>', 'CreationDate': '2013-01-17T22:21:50.770', 'Id': '9005'},2961:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Denotational semantics are abstract functions that give meaning to statements of a programming language. They accept an expression and return a value.</p>\n\n<p>But how do you define denotational semantics for languages that define, for example, functions (and later use these functions), or global variables, and change some global state of the program?</p>\n\n<p>I think the simplest way to do it would be to define the semantics function so that it returns a pair of values and a "global state" instead of just a value.</p>\n\n<p>But is there a place I can read about it some more? I am sure someone have done something like that. For example, is there denotational semantics for languages like Java or C?</p>\n\n<p>It would be nice to find a book that focuses on denotational semantics for programming languages which are not necessarily purely functional (though I think functional languages, like LISP, can also change a global state).</p>\n', 'ViewCount': '181', 'Title': 'how do you define functions with denotational semantics?', 'LastActivityDate': '2013-06-16T17:10:03.140', 'AnswerCount': '2', 'CommentCount': '2', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '8692', 'Tags': '<programming-languages><denotational-semantics>', 'CreationDate': '2013-06-16T15:10:41.253', 'Id': '12697'},2962:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Here is a simple transition system of beverage vending machine:\n<img src="http://i.stack.imgur.com/bgJM8.png" alt="beverage vending machine"> </p>\n\n<p>The exemplary execution fragments can look like this:</p>\n\n<p><img src="http://i.stack.imgur.com/F0kPo.png" alt="enter image description here"></p>\n\n<p>Now, imagine we have multi-process TS where processes are identical and communicate over channels. I don\'t understand the semantics of how to present an execution fragment that runs across multiple processes. Should I specify the whole execution in one line? If yes how do I denote that the state belongs to some certain process? Or maybe I present execution fragment on each process in the separate line? I\'d love to see a "meta-example" of how that could look like. </p>\n\n<p>I am referring to this specific <a href="http://www-i2.informatik.rwth-aachen.de/i2/fileadmin/user_upload/documents/MC11/sheet02.pdf" rel="nofollow">exercise sheet</a>, task 3.) b). The figures are from the book "Principles of Model Checking" by Christel Baier and Joost-Pieter Katoen p. 22 and p. 25.  </p>\n', 'ViewCount': '65', 'Title': 'Example of execution fragment of multi-process transition system', 'LastActivityDate': '2013-10-08T17:15:44.600', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '10582', 'Tags': '<formal-languages><automata><model-checking><denotational-semantics>', 'CreationDate': '2013-10-08T17:15:44.600', 'Id': '14915'},2963:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p><strong>My Problem is:</strong> to define a "repeat until"-construct in terms of Denotational semantics. I made an attempt and now i need to know if i made it right.</p>\n\n<p><strong>The Conditions are</strong>: i used the language "While" as specified in "Semantics with Applications" by Nielson &amp; Nielson (1992) (<a href="http://www.daimi.au.dk/~bra8130/Wiley_book/wiley.pdf" rel="nofollow">pdf</a>) (<a href="http://www.worldcat.org/oclc/24671378" rel="nofollow">WorldCat</a>). I do not want to use the help of the While-construct. </p>\n\n<p>In denotational semantics, we are interested in the effect of a program, rather than in "how" it is executed. Thats why semantic functions are defined compositionally. The corresponding definitions for the Denotational semantics (or "direct style semantics") can be found on page 86 in the Book from Nielson &amp; Nielson (they made it avaible over the Internet).</p>\n\n<p><strong>My Approach is</strong>:\n$$\\mathcal{S}_{\\text{ds}} \\lbrack\\lbrack\\text{repeat } S \\text{ until } b\\rbrack\\rbrack = \\text{FIX }F\\\\ \\text{where }F\\ g = \\mathcal{S}_{\\text{ds}}\\lbrack\\lbrack S\\rbrack\\rbrack\\circ\\text{cond}(\\mathcal{B}\\lbrack\\lbrack b\\rbrack\\rbrack , \\mathcal{S}_{\\text{ds}}\\lbrack\\lbrack S\\rbrack\\rbrack\\circ g, id)$$</p>\n\n<p>As you might see, my approach is quite similar to the definition of while, but i cannot see a mistake in it.</p>\n\n<p><strong>post scriptum</strong>: Bounty given, and second edit: yes, i meant $$\\mathcal{S}_{\\text{ds}} \\lbrack\\lbrack\\text{repeat } S \\text{ until } b\\rbrack\\rbrack$$ .. typo corrected. </p>\n', 'ViewCount': '190', 'Title': 'Defining a "repeat until"-construct in Denotational semantics', 'LastEditorUserId': '6828', 'LastActivityDate': '2013-11-22T20:36:29.933', 'LastEditDate': '2013-11-18T19:21:20.790', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '18119', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '6828', 'Tags': '<semantics><denotational-semantics>', 'CreationDate': '2013-11-15T19:03:40.283', 'Id': '18054'}