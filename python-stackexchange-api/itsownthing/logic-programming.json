2090:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '630', 'Title': 'Can constraint satisfaction problems be solved with Prolog?', 'LastEditDate': '2012-05-31T16:25:50.040', 'AnswerCount': '3', 'Score': '12', 'PostTypeId': '1', 'OwnerUserId': '1621', 'FavoriteCount': '2', 'Body': '<p>Is <a href="http://iggyfernandez.wordpress.com/2012/05/21/sql-vs-nosql-third-international-nocoug-sql-nosql-challenge-sponsored-by-pythian/">"party attendance"</a> type of problems solvable in Prolog? For example:</p>\n\n<blockquote>\n  <p>Burdock Muldoon and Carlotta Pinkstone both said they would come if Albus Dumbledore came. Albus Dumbledore and Daisy Dodderidge both said they would come if Carlotta Pinkstone came. Albus Dumbledore, Burdock Muldoon, and Carlotta Pinkstone all said they would come if Elfrida Clagg came. Carlotta Pinkstone and Daisy Dodderidge both said they would come if Falco Aesalon came. Burdock Muldoon, Elfrida Clagg, and Falco Aesalon all said they would come if Carlotta Pinkstone and Daisy Dodderidge both came. Daisy Dodderidge said she would come if Albus Dumbledore and Burdock Muldoon both came.\n  Whom is needs to be persuaded to attend the party in order to ensure that all her invitees attend?</p>\n</blockquote>\n\n<p>I have tried to express this in GNU Prolog:</p>\n\n<pre><code>attend(BM) :- attend(AD).\nattend(CP) :- attend(AD).\nattend(AD) :- attend(CP).\nattend(DD) :- attend(CP). \nattend(AD) :- attend(EC).\nattend(BM) :- attend(EC).\nattend(CP) :- attend(EC). \nattend(CP) :- attend(FA).\nattend(DD) :- attend(FA).\nattend(BM) :- attend(CP),attend(DD).\nattend(EC) :- attend(CP),attend(DD).\nattend(FA) :- attend(CP),attend(DD).\nattend(DD) :- attend(AD),attend(BM).\n\nattend(FA). /* try different seed invitees in order to see if all would attend*/\n\n/* input:\nwrite(\'invited:\'),nl,\n  attend(X),write(X),nl,\n  fail.*/\n</code></pre>\n\n<p>I\'m experiencing stack overflow (no pun), and have no knowledge of prolog evaluation, this is why I\'m asking.</p>\n\n<p>Generally speaking, this problem can be cast into Boolean CNF satisfaction formula (with 6 boolean variables). Therefore, does the prolog perspective have any merit?</p>\n', 'Tags': '<logic><constraint-programming><prolog><logic-programming>', 'LastEditorUserId': '1621', 'LastActivityDate': '2012-06-01T18:39:25.400', 'CommentCount': '3', 'AcceptedAnswerId': '2086', 'CreationDate': '2012-05-23T21:21:24.983', 'Id': '2031'},2091:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Is there a clear reference, with pseudo-code, on how to go about implementing a Prolog interpreter in a purely functional language? That which I have found so far seems to deal only with imperative languages, is merely a demonstration of Prolog implemented in itself, or offers no concrete algorithm to use for interpretation. I would be very appreciative of an answer.</p>\n', 'ViewCount': '973', 'Title': 'How to implement a prolog interpreter in a purely functional language?', 'LastActivityDate': '2012-11-12T14:52:51.913', 'AnswerCount': '2', 'CommentCount': '1', 'AcceptedAnswerId': '6622', 'Score': '9', 'PostTypeId': '1', 'OwnerUserId': '4555', 'Tags': '<functional-programming><prolog><logic-programming>', 'CreationDate': '2012-11-11T20:21:42.027', 'FavoriteCount': '3', 'Id': '6618'},2092:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': u'<p>I am particularly interested in solutions to the problem that encapsulated search can depend on the order of evaluation.</p>\n\n<p>According to [1], encapsulated search in PAKCS depends on the order of evaluation, while in MCC, it does not, but using it requires knowledge of the compiler implementation and it does not follow the Curry language specification. This was written in 2007, so it may of course be out of date now.</p>\n\n<p>KiCS2 returns results from encapsulated search in the IO monad, but I do not understand why.</p>\n\n<p>[1] Bra\xdfel and Huch, <em>On a Tighter Integration of\nFunctional and Logic Programming</em>, Proc. APLAS 2007</p>\n', 'ViewCount': '120', 'Title': 'What is the state of the art in encapsulated search in functional logic programming?', 'LastActivityDate': '2013-07-25T20:41:16.697', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '1617', 'Tags': '<nondeterminism><functional-programming><logic-programming>', 'CreationDate': '2012-12-23T15:47:11.007', 'Id': '7564'},2093:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I have a question concerning an universal program (goto program). Well, let $f(n)$ be the output of an universal goto program $U$ with input $(n,n)$, where the first $n$ describes the encoding and the second a string. </p>\n\n<p>1) Is $f$ recursive now?</p>\n\n<p>2) Is $g(n)=f(n)+1$ recursive?</p>\n', 'ViewCount': '68', 'Title': 'f(n) output of universal program', 'LastEditorUserId': '140', 'LastActivityDate': '2013-05-16T09:09:05.407', 'LastEditDate': '2013-05-16T09:09:05.407', 'AnswerCount': '0', 'CommentCount': '2', 'Score': '0', 'OwnerDisplayName': 'Voyage', 'PostTypeId': '1', 'Tags': '<logic-programming><logic>', 'CreationDate': '2013-05-16T00:28:39.590', 'Id': '12062'},2094:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I have a good understanding of how to program using logic languages, but I\'m currently writing up a paper describing some of my work, and I wanted to ensure that I wasn\'t abusing the proper terminology when describing logic languages. I have a few questions:</p>\n\n<ol>\n<li>What exactly is a predicate? How does a predicate relate to rules/facts? I.e. are rules predicates but not all predicates facts and rules?</li>\n<li>What is a clause, and how does it relate to a predicate?</li>\n<li>When describing how a rule is tested/proven, what is the equivalent term for "calling a function"? Do we say that the rule is called, or that a goal is called?</li>\n<li>What exactly is a goal? Is a goal equivalent to a query?</li>\n</ol>\n\n<p>Like I said, I have a very good understanding of how Prolog works, just not a good knowledge of the right terms to describe the right things.</p>\n', 'ViewCount': '319', 'Title': 'Proper terminology in Prolog/logical programming theory?', 'LastEditorUserId': '2253', 'LastActivityDate': '2013-09-16T14:19:14.387', 'LastEditDate': '2013-06-06T16:06:30.640', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '12601', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '2253', 'Tags': '<terminology><programming-languages><logic-programming><prolog>', 'CreationDate': '2013-06-06T15:58:32.000', 'Id': '12489'},2095:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '47', 'Title': 'Abduction in ASP', 'LastEditDate': '2013-09-26T05:24:52.123', 'AnswerCount': '1', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '10323', 'FavoriteCount': '1', 'Body': '<p>Well, forgive my ignorance about the matter as I have been playing with <a href="http://en.wikipedia.org/wiki/Answer_set_programming" rel="nofollow">ASP</a> for the last couple of days.</p>\n\n<p>Consider this simple example</p>\n\n<pre><code>p.\ns :- p.\n</code></pre>\n\n<p>And the corresponding output generated after running the program in clingo:</p>\n\n<pre><code>$ ./clingo.exe  ex.lp --number=0\nAnswer: 1\np s\nSATISFIABLE\n\nModels      : 1\n...\n</code></pre>\n\n<p>Where possible models are generated having <code>p true</code> and the formula <code>p -&gt; s</code>.</p>\n\n<p>But if I want to ask some query that requires abductive reasoning in order to generate some answers; in other words, I need to know the possible solutions to the fact <code>s true</code>. So the "supposed" example should be like the following:</p>\n\n<pre><code>s.\ns :- p.\n</code></pre>\n\n<p>But unfortunately the answer does not contain <code>p</code> as expected.</p>\n\n<pre><code>$ ./clingo.exe  ex.lp --number=0\n% warning: p/0 is never defined\nAnswer: 1\ns\nSATISFIABLE\n\nModels      : 1\n...\n</code></pre>\n\n<p>Could that be done in any way in ASP?</p>\n', 'Tags': '<logic><logic-programming><answer-set-programming>', 'LastEditorUserId': '39', 'LastActivityDate': '2013-10-01T11:55:08.060', 'CommentCount': '0', 'AcceptedAnswerId': '14732', 'CreationDate': '2013-09-25T12:08:03.420', 'Id': '14592'},2096:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '126', 'Title': 'What makes PROLOG Turing-complete?', 'LastEditDate': '2014-01-09T09:14:38.860', 'AnswerCount': '1', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '8415', 'FavoriteCount': '0', 'Body': u'<p>I know that it can be proven PROLOG is Turing-complete by constructing a program that simulates a Turing machine like this:</p>\n\n<pre><code>turing(Tape0, Tape) :-\n    perform(q0, [], Ls, Tape0, Rs),\n    reverse(Ls, Ls1),\n    append(Ls1, Rs, Tape).\n\nperform(qf, Ls, Ls, Rs, Rs) :- !.\nperform(Q0, Ls0, Ls, Rs0, Rs) :-\n    symbol(Rs0, Sym, RsRest),\n    once(rule(Q0, Sym, Q1, NewSym, Action)),\n    action(Action, Ls0, Ls1, [NewSym|RsRest], Rs1),\n    perform(Q1, Ls1, Ls, Rs1, Rs).\n\nsymbol([], b, []).\nsymbol([Sym|Rs], Sym, Rs).\n\naction(left, Ls0, Ls, Rs0, Rs) :- left(Ls0, Ls, Rs0, Rs).\naction(stay, Ls, Ls, Rs, Rs).\naction(right, Ls0, [Sym|Ls0], [Sym|Rs], Rs).\n\nleft([], [], Rs0, [b|Rs0]).\nleft([L|Ls], Ls, Rs, [L|Rs]).\n</code></pre>\n\n<p><a href="http://en.wikipedia.org/wiki/Prolog#Turing_completeness" rel="nofollow">Source</a></p>\n\n<p>However, I\u2019m wondering which parts of the PROLOG language one could strip away (esp. function symbols, clause overloading, recursion, unification) without losing Turing completeness. Are function symbols themselves Turing complete?</p>\n', 'Tags': '<programming-languages><turing-completeness><logic-programming><prolog>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-09T09:14:38.860', 'CommentCount': '3', 'AcceptedAnswerId': '19593', 'CreationDate': '2014-01-09T01:16:39.903', 'Id': '19591'},2097:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Let $C = m(P,X,Y) \\leftarrow m(Q,X,Z), m(R,Z,Y)$. </p>\n\n<p>Is it possible to do the following substitution? </p>\n\n<p>$D = C\\theta$ where $\\theta = \\{Q/R,R/Q\\}$ s.t. $D = m(P,X,Y) \\leftarrow m(R,X,Z),m(Q,Z,Y)$</p>\n', 'ViewCount': '51', 'Title': 'FOL substitution - is it possible to substitute two variables with each other? e.g. $\\theta=\\{x/y,y/x\\}$?', 'LastActivityDate': '2014-04-21T18:09:42.753', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '24000', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '12643', 'Tags': '<logic><first-order-logic><logic-programming>', 'CreationDate': '2014-04-21T17:11:54.750', 'Id': '23996'}