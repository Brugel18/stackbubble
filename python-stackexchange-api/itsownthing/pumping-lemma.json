{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I have the following language</p>\n\n<p>$\\qquad \\{0^i 1^j 2^k \\mid 0 \\leq i \\leq j \\leq k\\}$</p>\n\n<p>I am trying to determine which Chomsky language class it fits into. I can see how it could be made using a context-sensitive grammar so I know it is atleast context-sensitive. It seems like it wouldn't be possible to make with a context-free grammar, but I'm having a problem proving that.</p>\n\n<p>It seems to pass the fork-pumping lemma because if $uvwxy$ is all placed in the third part of any word (the section with all of the $2$s). It could pump the $v$ and $x$ as many times as you want and it would stay in the language. If I'm wrong could you tell me why, if I'm right, I still think this language is not context-free, so how could I prove that?</p>\n", 'ViewCount': '951', 'Title': 'How can I prove this language is not context-free?', 'LastEditorUserId': '6447', 'LastActivityDate': '2013-03-20T20:06:21.393', 'LastEditDate': '2013-03-20T20:06:21.393', 'AnswerCount': '2', 'CommentCount': '4', 'Score': '8', 'PostTypeId': '1', 'OwnerUserId': '596', 'Tags': '<formal-languages><context-free><formal-grammars><pumping-lemma>', 'CreationDate': '2012-03-21T18:21:10.833', 'Id': '619'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I'm trying to use pumping lemma to prove that $L = \\{(01)^m 2^m \\mid m \\ge0\\}$ is not regular.</p>\n\n<p>This is what I have so far: Assume $L$ is regular and let $p$ be the pumping length, so $w = (01)^p 2^p$. Consider any pumping decomposition $w = xyz$ such that  $|y| &gt;0$ and $|xy| \\le p$.</p>\n\n<p>I'm not sure what to do next.</p>\n\n<p>Am I on the right track? Or am I way off?</p>\n", 'ViewCount': '1479', 'Title': 'Using Pumping Lemma to prove language is not regular', 'LastEditorUserId': '31', 'LastActivityDate': '2012-04-04T15:06:30.917', 'LastEditDate': '2012-04-04T09:40:24.787', 'AnswerCount': '3', 'CommentCount': '3', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '934', 'Tags': '<formal-languages><regular-languages><pumping-lemma>', 'CreationDate': '2012-04-04T06:45:22.807', 'FavoriteCount': '1', 'Id': '1027'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>So I have a problem that I\'m looking over for an exam that is coming up in my Theory of Computation class.  I\'ve had a lot of problems with the <em>pumping lemma</em>, so I was wondering if I might be able to get a comment on what I believe is a valid proof to this problem.  From what I have seen online and in our review I don\'t think this is the customary answer to this problem so I want to know if I am applying the concepts behind the pumping lemma successfully.  The problem is <em>not</em> a homework problem and can be found on my professor\'s previous exams <a href="http://www.cs.ucf.edu/~dmarino/ucf/transparency/cot4210/exam/" rel="nofollow">here</a> under the fourth problem of his exam given in Fall of 2011, which is...</p>\n\n<blockquote>\n  <p>Let $L = \\{0^p \\mid \\text{\\(p\\) is a prime number}\\}$. Prove that $L$ is not context-free using the pumping lemma for context-free languages.</p>\n</blockquote>\n\n<p>So here is my proof:</p>\n\n<blockquote>\n  <p>Assume that the pumping length is $m$, where $m+1$ is a prime number.  I shall also assume that there is a string $uvxyz = 0^{(m/2)}00^{m/2} \\in L$.  There are two possible positions that do not violate conditions 2 and  3 of the pumping lemma for context languages, being $|vy| &gt; 0$ and $|vxy| \\leq m$.  These are:</p>\n  \n  <ol>\n  <li><p>$u = 0^{(m/2)}, v = 0, x = 0^{m/2}$, pumping by one results in $0^{m/2}000^{m/2}$.  Since m/2 + m/2 is m, which is one less than the prime number m+1, it is an even number.  m+2 is also an even number and since $|0^{m/2}000^{m/2}| = m + 2$, this number of zeroes is also even and thus cannot be prime, resulting in a contradiction.  </p></li>\n  <li><p>The other placement is to place the string on the symmetric opposite or $x = 0^{m/2}, y = 0, z = 0^{m/2}$.  This results in the same contraction as in case 1.</p></li>\n  </ol>\n</blockquote>\n\n<p>The string cannot be placed in the center such that $v = 0^{m/2}, x = 0, y = 0^{m/2}$ as this would violate condition three or $|vxy| \\leq m$, since $|vxy| = m + 1 &gt; m$.</p>\n\n<p>So my question is essentially, is this a valid proof and if not what is wrong with it?</p>\n', 'ViewCount': '744', 'Title': 'Prime number CFG and Pumping Lemma', 'LastEditorUserId': '98', 'LastActivityDate': '2012-04-22T21:46:05.933', 'LastEditDate': '2012-04-22T21:46:05.933', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '603', 'Tags': '<formal-languages><proof-techniques><context-free><pumping-lemma>', 'CreationDate': '2012-04-22T20:31:51.403', 'FavoriteCount': '2', 'Id': '1450'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>So I'm really struggling with the pumping lemma.  I think most of my problems come from not understanding how you can and can't split the string in a pumping lemma question.  Here is an example, take the problem prove that $L = \\{w | w$ contains more $0$'s than $1$'s over the language $\\{0,1\\} \\}$ is not regular via the pumping lemma.</p>\n\n<p>So I choose the string $01^{p}0^{p}$.  Since this is a regular language pumping lemma problem I know that: </p>\n\n<ol>\n<li>for each $i &gt; 0, xy^{i}z \\in A$,</li>\n<li>$|y^{i}| &gt; 0$, and</li>\n<li>$|xy| &lt; p$</li>\n</ol>\n\n<p>I am little uncertain about other possibilites though, such as if $x$, or $z$ can be null (obviously $y$ can't by condition 2).  I assume that this isn't possible since I don't think the preceding or trailing whitespace is considered part of the string, but I'm not sure.  <strong>Is it possible for $x$ or $z$ to be null?</strong></p>\n", 'ViewCount': '122', 'Title': 'Null Characters and Splitting the String in the Pumping Lemma', 'LastEditorUserId': '98', 'LastActivityDate': '2012-04-23T22:21:55.283', 'LastEditDate': '2012-04-23T22:21:55.283', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '1470', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '603', 'Tags': '<formal-languages><regular-languages><proof-techniques><pumping-lemma>', 'CreationDate': '2012-04-23T19:29:10.360', 'Id': '1469'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I read <a href="http://cs.stackexchange.com/questions/1027/using-pumping-lemma-to-prove-language-is-not-regular">on the site</a> on how to use the pumping lemma but still I don\'t what is wrong with way I\'m using it for proving that the following language is not a regular language:</p>\n\n<p>$L = \\{a^ib^jc^k \\mid \\text{if } i=1 \\text{ then } j=k \\}$</p>\n\n<p>for $i\\neq1$ the language is obviously regular but in the case which $i=1$ , we get that the language is $a^1b^nc^n$, now for every division $w=xyz$ such that $|y|&gt;0 , |xy|&lt; p$ where p is the pumping constant I get the word $a^1b^pc^p$ would be out of the language. since  $|xy|&lt; p$\n, $y$ may contains only $a&#39;s$ or $b&#39;s$ or both. if $x= \\epsilon$ and $y=a$, pump it once and you\'re out of the language, if it contains only $b&#39;s$, pump it once and your\'e out of the language, and if it contains both, pump it and you\'re out of the language again.</p>\n\n<p>so, why does this language considered as not regular and cannot be proved for its irregularity by the pumping lemma? please point out my mistake.  </p>\n', 'ViewCount': '1107', 'Title': 'Irregularity of $\\{a^ib^jc^k \\mid \\text{if } i=1 \\text{ then } j=k \\}$', 'LastEditorUserId': '98', 'LastActivityDate': '2012-05-09T13:23:03.370', 'LastEditDate': '2012-05-09T13:23:03.370', 'AnswerCount': '3', 'CommentCount': '1', 'AcceptedAnswerId': '1678', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '1183', 'Tags': '<formal-languages><regular-languages><pumping-lemma>', 'CreationDate': '2012-05-01T16:26:23.790', 'Id': '1616'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>There is a problem which I cannot solve. If you give a tip I will be very glad.</p>\n\n<p>Prove that following language is <em>not</em> context free:</p>\n\n<p>$L= \\{ a^nb^m | \\gcd(n,m) = 1 \\}$.</p>\n\n<p>It can be proven using the pumping lemma, but how?</p>\n\n<p>If I start with some prime numbers $m$ and $n$ where $m&gt;n&gt;2$ and pump it up from $uVxYz$, there are three possible outcomes: $a^{n + k} b^m$, $a^{n +k}b^{m +k}$, $a^n b^{m +k}$. Since I do not know whether $k$ is even or odd I cannot say something. It is certain that $a^n$ and $b^m$ will be odd. However after adding $k$ to some of them, how can I say something about whether their gcd is 1 or not?</p>\n', 'ViewCount': '433', 'Title': 'A context free grammar proof', 'LastEditorUserId': '98', 'LastActivityDate': '2012-05-15T08:50:48.623', 'LastEditDate': '2012-05-15T08:50:48.623', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '1494', 'Tags': '<formal-languages><context-free><pumping-lemma>', 'CreationDate': '2012-05-14T19:42:42.550', 'Id': '1842'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': u'<p><a href="http://en.wikipedia.org/wiki/Pumping_lemma_for_regular_languages">Wikipedia</a> has the following definition of the pumping lemma for regular langauges...</p>\n\n<blockquote>\n  <p>Let $L$ be a regular language. Then there exists an integer $p$ \u2265 1\n  depending only on $L$ such that every string $w$ in $L$ of length at\n  least $p$ ($p$ is called the "pumping length") can be written as $w$ =\n  $xyz$ (i.e., $w$ can be divided into three substrings), satisfying the\n  following conditions:</p>\n  \n  <ol>\n  <li>|$y$| \u2265 1</li>\n  <li>|$xy$| \u2264 $p$</li>\n  <li>for all $i$ \u2265 0, $xy^iz$ \u2208 $L$</li>\n  </ol>\n</blockquote>\n\n<p>I do not see how this is satisfied for a simple finite regular language. If I have an alphabet of {$a,b$} and regular expression $ab$ then $L$ consists of just the one word which is $a$ followed by $b$. I now want to see if my regular language satisfies the pumping lemma...</p>\n\n<p>As nothing repeats in my regular expression the value of $y$ must be empty so that condition 3 is satisifed for all $i$. But if so then it fails condition 1 which says $y$ must be at least 1 in length! </p>\n\n<p>If instead I let $y$ be either $a$, $b$ or $ab$ then it will satisfy condition 1 but fail condition 3 because it never actually repeats itself.</p>\n\n<p>I am obviously missing something mind blowingly obvious. Which is?</p>\n', 'ViewCount': '1218', 'Title': 'Pumping lemma for simple finite regular languages', 'LastActivityDate': '2012-05-15T05:09:27.543', 'AnswerCount': '2', 'CommentCount': '0', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '1434', 'Tags': '<regular-languages><pumping-lemma>', 'CreationDate': '2012-05-15T04:47:54.747', 'FavoriteCount': '1', 'Id': '1847'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href="http://cs.stackexchange.com/questions/1031/how-to-prove-that-a-language-is-not-regular">How to prove that a language is not regular?</a>  </p>\n</blockquote>\n\n\n\n<p>Given a language $L = \\{a^pb^{2p} \\mid p \\ge 1\\}$, how could I show, using the Pumping Lemma that $L$ is not regular?</p>\n', 'ViewCount': '42', 'ClosedDate': '2012-06-04T08:25:58.397', 'Title': 'Show that a language is not regular using the Pumping Lemma', 'LastEditorUserId': '41', 'LastActivityDate': '2012-06-04T23:28:19.053', 'LastEditDate': '2012-06-04T23:28:19.053', 'AnswerCount': '0', 'CommentCount': '4', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '1738', 'Tags': '<formal-languages><regular-languages><pumping-lemma>', 'CreationDate': '2012-06-04T02:01:08.937', 'Id': '2216'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>This standard definition of pumping lemma from Wikipedia.</p>\n\n<blockquote>\n  <p>Let $L$ be a regular language. Then there exists an integer $p\\ge  1$ (depending only on $L$) such that every string $w$ in $L$ of length at least $p$ ($p$ is called the "pumping length") can be written as $w = xyz$ (i.e., $w$ can be divided into three substrings), satisfying the following conditions: </p>\n  \n  <ol>\n  <li>$|y| \\ge 1$  </li>\n  <li>$|xy| \\le p$ and  </li>\n  <li>for all $i \\ge 0$, $xy^iz \\in L$.<br>\n  $y$ is the substring that can be pumped (removed or repeated any number of times, and the resulting string is always in $L$).  </li>\n  </ol>\n</blockquote>\n\n<p>What confuses me about the definition of pumping lemma are two requirements: $|y| \\ge 1$  and $i \\ge 0$, $xy^iz$. The way I read it, that we are required to have $y$ length be equal to one or great, and at the same time, we can completely skip it, since $i \\ge 0$, i.e. effectively  $|y| = 0 $.\nIntuitively, it makes sense that we should be able to skip $y$ and still have string be in $L$.  </p>\n', 'ViewCount': '143', 'Title': 'Length of mid part of the string in Pumping Lemma', 'LastEditorUserId': '98', 'LastActivityDate': '2012-06-19T23:21:13.503', 'LastEditDate': '2012-06-13T10:05:01.987', 'AnswerCount': '3', 'CommentCount': '2', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '1758', 'Tags': '<formal-languages><regular-languages><pumping-lemma>', 'CreationDate': '2012-06-13T07:56:54.557', 'FavoriteCount': '1', 'Id': '2357'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '475', 'Title': 'How to feel intuitively that a language is regular', 'LastEditDate': '2012-06-16T16:14:26.113', 'AnswerCount': '3', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '1877', 'FavoriteCount': '2', 'Body': '<p>Given a language $ L= \\{a^n b^n c^n\\}$, how can I say directly, without looking at production rules, that this language is not regular?</p>\n\n<p>I could use pumping lemma but some guys are saying just looking at the grammar that this is not regular one. How is it possible?</p>\n', 'Tags': '<formal-languages><regular-languages><pumping-lemma><intuition>', 'LastEditorUserId': '851', 'LastActivityDate': '2012-06-22T14:12:38.223', 'CommentCount': '5', 'AcceptedAnswerId': '2396', 'CreationDate': '2012-06-16T15:32:24.460', 'Id': '2393'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '232', 'Title': 'Is this language Context-Free?', 'LastEditDate': '2012-07-05T08:32:15.243', 'AnswerCount': '1', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '2076', 'FavoriteCount': '2', 'Body': "<p>Is the language</p>\n\n<p>$$L = \\{a,b\\}^* \\setminus \\{(a^nb^n)^n\\mid n \\geq1 \\}$$</p>\n\n<p>context-free? I believe that the answer is that it is not a CFL, but I can't prove it by Ogden's lemma or Pumping lemma.</p>\n", 'Tags': '<formal-languages><context-free><pumping-lemma>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-07-05T09:41:53.560', 'CommentCount': '2', 'AcceptedAnswerId': '2627', 'CreationDate': '2012-07-05T05:40:38.400', 'Id': '2623'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<blockquote>\n  <p>Show that $L=\\{a^{n^2} | n \\geq 0\\}$ is not regular</p>\n</blockquote>\n\n<p>Hey guys. I'm taking a CS class and this stuff is really new to me so bear with me. \nI tried to look if I get some contradiction by using the pumping lemma for regular languages and I worked it out like this:</p>\n\n<blockquote>\n  <p>Suppose $L$ is regular. Then there must be a natural number $m$ for all words $z$ in $L$ with length $|z| \\geq m$ and there exists a decomposition $z = uvw, |uv| \\leq m, |v| &gt; 0$, so that $u(v^i)w$ is in the language for any $i \\geq 0$.</p>\n  \n  <p>Consider the string $a^{m^2}$. </p>\n  \n  <p>Then $uv = a^{k^2} = a^{x+y}$, for some $k \\leq m$ and $x = (k-1)^2$.<br>\n  Then $v = a^y = a^{2k-1}$.</p>\n  \n  <p>Let $i = 2$. Then $u(v^2)w = a^{x+2y}$. But $\\sqrt{x+2y}$ is not necessarily a natural number -> Contradiction! Hence, $L$ can not be regular.</p>\n</blockquote>\n\n<p>Well, I know that this way is unnecessarily complicated and you can prove it differently (I already know the most simple solution). But my question here is: Is my proof valid as well or does it contain any flaw? Is it formally correct? </p>\n\n<p>I appreciate any feedback! Thanks!</p>\n", 'ViewCount': '1082', 'Title': 'Proof that $a^{n^2}$ is not regular', 'LastEditorUserId': '39', 'LastActivityDate': '2013-09-26T01:08:54.560', 'LastEditDate': '2012-08-07T18:43:38.207', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '6', 'OwnerDisplayName': 'Tobias Hoffmann', 'PostTypeId': '1', 'Tags': '<regular-languages><pumping-lemma>', 'CreationDate': '2012-08-06T23:27:36.000', 'Id': '3075'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I need to show that </p>\n\n<p>$\\qquad \\displaystyle S = \\{(10^p)^m \\mid p \\geq 0, m \\geq 0\\}$</p>\n\n<p>is not a regular language using pumping lemma.</p>\n\n<p>Can I multiply the product of the powers and express it to: $S = \\{ 1^m 0^{pm} \\mid \\dots \\}$ and apply the pumping lemma where I pump 1's then say that the language doesn't accept the new string? </p>\n", 'ViewCount': '162', 'Title': 'Pumping Lemma: is it valid to "multiply the product of powers" in this case?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-08-15T18:46:39.087', 'LastEditDate': '2012-08-14T23:41:26.947', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '3', 'OwnerDisplayName': 'thokthak', 'PostTypeId': '1', 'Tags': '<formal-languages><regular-languages><pumping-lemma>', 'CreationDate': '2012-03-20T03:46:48.117', 'Id': '3190'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>$$L=\\{a^n \\mid \\text{\\(n\\) is even}\\}$$</p>\n\n<p>This is regular but fails in the pumping Lemma.</p>\n\n<p>Assuming $m=4$, $w=aaaaaa$, $|w|=6$ (even).\nLet $w=xyz$,\n$x=a$,\n$y=aaa$.\nWe have $|y|&gt;0$ and $|xy| \\le m$.</p>\n\n<p>Let $w_i=xy^iz$.\nFor $i=2$,\n$w_2=xy^2z=aaaaaaaaa$.\n$|w_2|=9$ therefore it is not regular.</p>\n\n<p>Where am I going wrong?</p>\n', 'ViewCount': '668', 'Title': 'Pumping Lemma for regular language for $a^n$ where $n$ is even fails', 'LastEditorUserId': '41', 'LastActivityDate': '2013-01-18T12:56:53.010', 'LastEditDate': '2012-08-30T04:59:09.197', 'AnswerCount': '2', 'CommentCount': '6', 'Score': '2', 'OwnerDisplayName': 'Raj', 'PostTypeId': '1', 'Tags': '<regular-languages><automata><finite-automata><pumping-lemma>', 'CreationDate': '2012-08-24T05:02:20.050', 'Id': '3330'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href="http://cs.stackexchange.com/questions/1031/how-to-prove-that-a-language-is-not-regular">How to prove that a language is not regular?</a>  </p>\n</blockquote>\n\n\n\n<p>Show that $L_2=\\{a^nb^k|n\\not= k-1\\}$ is not regular by Pumping Lemma.</p>\n', 'ViewCount': '38', 'ClosedDate': '2012-10-31T06:35:19.720', 'Title': 'Show that a language is not regular by Pumping Lemma', 'LastActivityDate': '2012-10-31T05:13:17.603', 'AnswerCount': '0', 'CommentCount': '2', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '3146', 'Tags': '<formal-languages><automata><regular-languages><pumping-lemma>', 'CreationDate': '2012-10-31T05:13:17.603', 'Id': '6400'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '597', 'Title': 'Proofs using the regular pumping lemma', 'LastEditDate': '2012-12-07T18:53:34.130', 'AnswerCount': '3', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '4918', 'FavoriteCount': '0', 'Body': '<p>I have two questions:</p>\n\n<ol>\n<li><p>I consider the following language \n$$L_1= \\{ w\\in \\{0,1\\}^* \\mid \\not \\exists u\\in \\{0,1\\}^* \\colon w= uu^R\\}.$$\nIn other words $w$ is not palindrome with even length. I proved that this language is NOT regular by proving that its complement is not regular. My question is how to prove it using the pumping lemma without using going over the complement.</p></li>\n<li><p>Let\n$$L_2=\\{w\\in\\{0,1\\}^* \\mid \\text{$w$ has same number of 101 substrings and 010 substrings}\\}. $$  I proved that this language is not regular by using equivalence classes. How I can prove it using the pumping lemma?</p></li>\n</ol>\n\n<p>Thanks alot for edit:)</p>\n', 'Tags': '<formal-languages><regular-languages><pumping-lemma>', 'LastEditorUserId': '4918', 'LastActivityDate': '2012-12-08T11:56:42.303', 'CommentCount': '2', 'AcceptedAnswerId': '7252', 'CreationDate': '2012-12-07T18:16:08.453', 'Id': '7235'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '166', 'Title': 'Pumping lemma for Context-Free Languages', 'LastEditDate': '2013-01-03T22:12:16.170', 'AnswerCount': '1', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '4658', 'FavoriteCount': '2', 'Body': "<p>I have a question about a specific pumping lemma problem for Context-Free Languages.</p>\n\n<p>Suppose we have the following Language:</p>\n\n<blockquote>\n  <p>$L = \\{a^{i}b^{j}c^{k}d^{l} \\mid 0 &lt; i &lt; k \\wedge j &gt; l &gt; 0 \\}$</p>\n</blockquote>\n\n<p>Here is my attemp to prove that the language is not context-free:</p>\n\n<p>Assume $L$ is context-free. Let $n&gt;0$ be the pumping length given by the lemma.</p>\n\n<p>Let $z = a^{n}b^{n+1}c^{n+1}d^{n}$, then $z \\in L$. </p>\n\n<p>Than according to the lemma, $z$ can be written as $z = uvwxy$ where the following properties hold:</p>\n\n<ol>\n<li>$|vx| \\geq 1$</li>\n<li>$|vwx| \\leq n$</li>\n<li>for every $i \\geq 0$, $uv^{i}wx^{i}y \\in L$.</li>\n</ol>\n\n<p>We have 6 different possibilities for $vwx$:</p>\n\n<ol>\n<li>$vwx = a^{i}$ where $i \\leq n$</li>\n<li>$vwx = a^{i}{b^j}$ where $i+j \\leq n$</li>\n<li>$vwx = b^i$ and $i \\leq n$</li>\n<li>$vwx = b^{i}c^{j}$ and $i+j \\leq n$</li>\n<li>$vwx = c^{i}$ with $i \\leq n$</li>\n<li>$vwx = c^{i}d^{j}$ and $i+j \\leq n$ </li>\n</ol>\n\n<p>Is this right so far? The thing that I'm unsure of is if my different cases for $vwx$ are right. </p>\n\n<p>How do I choose the pumping length for case 2? If I choose $i$ = 2, what if $i$ is zero ? Then I don't have any contradiction.</p>\n\n<p>Thanks in advance</p>\n", 'Tags': '<formal-languages><formal-grammars><context-free><pumping-lemma>', 'LastEditorUserId': '1636', 'LastActivityDate': '2013-01-03T22:51:38.927', 'CommentCount': '2', 'AcceptedAnswerId': '7741', 'CreationDate': '2013-01-03T21:26:59.443', 'Id': '7740'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I have a problem finding the right string to pump for the following language:</p>\n\n<p>$$L_1 = \\{a^{p+q}b^rc^sd^{q+r}e^s \\mid p, q, r, s \\ge 0\\}$$</p>\n\n<p>Which string should I choose to pump? The problem is that I don't know how to handle the fact that I have $p+q$ and $q+r$?</p>\n\n<p>Can I choose:\n$$Z = a^{2n}b^nc^nd^{2n}e^s$$</p>\n\n<p>Thanks in advance.</p>\n", 'ViewCount': '126', 'Title': 'Pumping lemma problem - Choosing the right string to pump', 'LastEditorUserId': '3011', 'LastActivityDate': '2013-01-04T09:46:44.527', 'LastEditDate': '2013-01-04T09:28:43.907', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '7752', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '4658', 'Tags': '<formal-languages><automata><context-free><pumping-lemma>', 'CreationDate': '2013-01-04T09:22:51.140', 'Id': '7751'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I need some help with the following question:</p>\n\n<p>One of the languages</p>\n\n<p>$$L_1 = \\{a^pb^{q+r}c^sd^{q+t}e^{p+r} \\mid p, q, r, s \\ge 0\\ , s &gt; t\\}$$\n$$L_2 = \\{a^{p+q}b^rc^sd^{q+r}e^s \\mid p, q, r, s \\ge 0\\}$$</p>\n\n<p>is context-free and the other is not. Build a context-free grammar for the one that is. For the other one provide a proof that it is not regular, or that it is not context-free.</p>\n\n<p>How do I approach this problem ? I think that L2 is context-free because no comparisions are made. L1 is not context-free. </p>\n\n<p>Thanks in advance </p>\n', 'ViewCount': '100', 'Title': 'Pumping lemma problem', 'LastActivityDate': '2013-01-04T20:59:08.373', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '7770', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '4658', 'Tags': '<formal-languages><automata><context-free><pumping-lemma>', 'CreationDate': '2013-01-04T19:08:16.647', 'Id': '7767'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '90', 'Title': 'What are some good hints for proving non-regularity with the pumping lemma?', 'LastEditDate': '2013-01-16T08:36:49.623', 'AnswerCount': '1', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '6439', 'FavoriteCount': '2', 'Body': "<p>My CS Theory Professor said that when proving that a language is not regular by the Pumping Lemma, that there are some 'tricks' for solving languages more complicated that something like $L = \\{a^{n} b^{n}\\mid n \\in\\mathbb{N}\\}$. Although I know that these come with practice, I wondered if this community would have some input on the matter?</p>\n\n<p>If you don't quite know what I am asking, think to calculus, when your professor used something that HE knew would get you from point a to point b that if YOU don't know, you cannot solve the problem. </p>\n", 'Tags': '<formal-languages><proof-techniques><pumping-lemma>', 'LastEditorUserId': '2205', 'LastActivityDate': '2013-01-16T08:36:49.623', 'CommentCount': '2', 'AcceptedAnswerId': '8958', 'CreationDate': '2013-01-16T04:19:34.293', 'Id': '8957'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I am learning about context free languages. </p>\n\n<p>I understand how $\\{a^n b^n c^n | n \\ge 0\\}$ can be shown to be not context free using the pumping lemma for CFL's.</p>\n\n<p>Intuitively however it seems that a pushdown automata to recognize $\\{a^n b^n c^n | n \\ge 0\\}$ can be constructed. This PDA would initially push two $a$'s into its stack whenever it sees an $a$ in the input. It would change state when it first encounters a $b$ and pop a single $a$. It would continue to pop $a$'s for every b in the input until it encounters a $c$. It would again change state and pop single $a$'s for every c encountered. If the stack is empty at the end of the input the language is recognized as $\\{a^n b^n c^n | n \\ge 0\\}$.</p>\n\n<p>There must be something I am overlooking whilst constructing the PDA as a language is context free if its has a PDA recognizing it. Please point out my mistake.</p>\n", 'ViewCount': '693', 'Title': 'Push down automata for $\\{a^n b^n c^n | n \\ge 0\\}$', 'LastActivityDate': '2013-01-17T14:04:47.477', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '8990', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '2980', 'Tags': '<context-free><pushdown-automata><pumping-lemma>', 'CreationDate': '2013-01-17T13:57:17.883', 'Id': '8989'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>$L_1=\\{a^ku \\mid u \\in \\{a,b\\}^* $ and $u$ contains at least $k$ a\'s, for $k\\geq 1\\}$.</p>\n\n<p>If it is regular, I haven\'t found its regular expression or any closure property to prove it.</p>\n\n<p>If not, it seems pumping theorem holds for it...</p>\n\n<p>Also, what about the language where the above "at least" is changed to "at most"?</p>\n', 'ViewCount': '249', 'Title': 'Is this language regular or not?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-01-21T16:29:46.853', 'LastEditDate': '2013-01-17T16:57:42.763', 'AnswerCount': '2', 'CommentCount': '0', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '6455', 'Tags': '<formal-languages><regular-languages><regular-expressions><pumping-lemma>', 'CreationDate': '2013-01-17T15:40:17.740', 'FavoriteCount': '1', 'Id': '8991'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '504', 'Title': 'Prove that the language of unary not-prime numbers satisfies the Pumping Lemma', 'LastEditDate': '2013-01-24T06:32:08.353', 'AnswerCount': '2', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '6518', 'FavoriteCount': '1', 'Body': "<p>Here is a question from Daniel I. A. Cohen's book <em>Introduction to Computer Theory</em>:</p>\n\n<blockquote>\n  <p>Consider the language:  </p>\n  \n  <p>$\\quad \\mathrm{PRIME}' = \\{ a^n \\mid n \\text{ is not a prime} \\} = \\{ \\varepsilon, a, aaaa, aaaaaa, aaaaaaaa, \\ldots \\}$</p>\n  \n  <ol>\n  <li>Prove that $\\mathrm{PRIME}'$ is non-regular.  </li>\n  <li>Prove, however, that $\\mathrm{PRIME}'$ does satisfy the pumping lemma.  </li>\n  </ol>\n</blockquote>\n\n<p>Part 1. is really easy to prove. I start my proof of part 2. like this:</p>\n\n<ol>\n<li>We pick $m$ s.t. $m \\geq 4$.  </li>\n<li>The opponent picks $w = a^{n^2}$, where $n$ is any prime number greater than m.</li>\n</ol>\n\n<p>Now I don't know how to decompose $w$ into $xyz$. Any help would be appreciated.</p>\n\n<hr>\n\n<p><strong>Update</strong>: According to the answers below, $\\mathrm{PRIME}'$ doesn't satisfy the Pumping Lemma we commonly talk about (requiring $|xy| \\leq m$). I have checked the book at the library and found there are two versions of the Pumping Lemma in it. The weaker one, which clearly this question refers to, doesn't require a fixed pumping length.</p>\n", 'Tags': '<formal-languages><automata><pumping-lemma>', 'LastEditorUserId': '6518', 'LastActivityDate': '2013-01-25T16:18:09.903', 'CommentCount': '2', 'AcceptedAnswerId': '9108', 'CreationDate': '2013-01-23T08:42:08.650', 'Id': '9104'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '105', 'Title': "What's the reason for the second condition of the pumping lemma(s)?", 'LastEditDate': '2013-03-14T15:38:40.960', 'AnswerCount': '2', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '5291', 'FavoriteCount': '1', 'Body': '<p>For a language $L$ with pumping length $p$, and a string $s\\in L$, the pumping lemmas are as follows:</p>\n\n<p><strong>Regular version</strong>:\nIf $|s| \\geq p$, then $s$ can be written as $xyz$, satisfying the following conditions:</p>\n\n<ol>\n<li>$|y|\\geq 1$</li>\n<li>$|xy|\\leq p$</li>\n<li>$ \\forall i\\geq 0: xy^iz\\in L$</li>\n</ol>\n\n<p><strong>Context-free version</strong>:\nIf $|s| \\geq p$, then $s$ can be written as $uvxyz$, satisfying the following conditions:</p>\n\n<ol>\n<li>$|vy|\\geq 1$</li>\n<li>$|vxy|\\leq p$</li>\n<li>$ \\forall i\\geq 0: uv^ixy^iz\\in L$</li>\n</ol>\n\n<p>My question is this: <strong>Why do we have condition 2 in the lemma (for either case)?</strong> I understand that condition 1 essentially says that the "pumpable" (meaning nullable or arbitrarily repeatable) substring has to have some nonzero length, and condition 3 says that the pumpable substring can be repeated arbitrarily many times without deriving an invalid string (with respect to $L$). I\'m not sure what the second condition means or why it is important. Is there a simple but meaningful example to illustrate its importance?</p>\n', 'Tags': '<regular-languages><context-free><pumping-lemma>', 'LastEditorUserId': '2100', 'LastActivityDate': '2013-03-14T15:38:40.960', 'CommentCount': '0', 'AcceptedAnswerId': '9275', 'CreationDate': '2013-01-29T07:06:16.453', 'Id': '9269'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>For a language $L$ with pumping length $p$, and a string $s\\in L$, the pumping lemmas are as follows:</p>\n\n<p><strong>Regular version</strong>:\nIf $|s| \\geq p$, then $s$ can be written as $xyz$, satisfying the following conditions:</p>\n\n<ol>\n<li>$|y|\\geq 1$</li>\n<li>$|xy|\\leq p$</li>\n<li>$ \\forall i\\geq 0: xy^iz\\in L$</li>\n</ol>\n\n<p><strong>Context-free version</strong>:\nIf $|s| \\geq p$, then $s$ can be written as $uvxyz$, satisfying the following conditions:</p>\n\n<ol>\n<li>$|vy|\\geq 1$</li>\n<li>$|vxy|\\leq p$</li>\n<li>$ \\forall i\\geq 0: uv^ixy^iz\\in L$</li>\n</ol>\n\n<p>My question is this: <strong>Can someone give a concise and clear explanation of how regularity (context-freeness) imply the first and second conditions above?</strong> The pumping length is determined by (finite) properties (finite number of states or finite properties of production rules, respectively), the third properties guarantee that a state (production rule) can be skipped or repeated arbitrarily many times, but where do the first and second conditions originate? How are they justified?</p>\n', 'ViewCount': '127', 'Title': 'Where do the length restrictions of the pumping lemma come from?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-06-18T22:42:40.240', 'LastEditDate': '2013-01-30T20:26:09.033', 'AnswerCount': '4', 'CommentCount': '5', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '5291', 'Tags': '<formal-languages><regular-languages><context-free><pumping-lemma>', 'CreationDate': '2013-01-30T19:10:37.243', 'Id': '9323'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>This is a homework problem I have spent several hours on. A "hint" is given that we may use this fact: If $n,j,k \\in \\mathbb{N}$ satisfy $ n \\geq 2$ and $1 \\leq j+k \\leq n$, then $n^2+j$ does not evenly divide $n^3+k$.</p>\n\n<p>I cannot find any way to apply this fact. It leads me to believe I should use the string $0^{p^2}1^{p^3}$ or something like that, but I am really just not sure. The pumping lemma has given me trouble since the non regular language version.</p>\n\n<p>Even small hints greatly appreciated at this point.</p>\n', 'ViewCount': '115', 'Title': 'Prove that $\\{0^n 1^{n\\cdot m} : n,m \\in \\mathbb{N}\\}$ is not context-free', 'LastEditorUserId': '2205', 'LastActivityDate': '2013-02-15T17:25:06.790', 'LastEditDate': '2013-02-15T17:21:10.057', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '3', 'OwnerDisplayName': 'user13760', 'PostTypeId': '1', 'Tags': '<formal-languages><context-free><pumping-lemma>', 'CreationDate': '2013-02-15T14:56:39.073', 'Id': '9808'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>If I have an infinite language $L$ which fulfills the Pumping lemma for regular languages, does $L^*$ also fulfill the same conditions?</p>\n', 'ViewCount': '70', 'Title': 'Is pumping lemma for regular languages "closed" against Kleene star?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-02-16T15:04:08.253', 'LastEditDate': '2013-02-16T15:04:08.253', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '6885', 'Tags': '<formal-languages><regular-languages><pumping-lemma>', 'CreationDate': '2013-02-16T12:20:29.337', 'Id': '9834'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>We are going over the pumping lemma in class and we recently went over the following example:</p>\n\n<ol>\n<li>Let\n$$ L = \\{ w \\mid w \\text{ has a different number of 0s and 1s} \\} $$</li>\n<li>Consider\n$$\ns = 0^P1^\\left(P+P!\\right)\n$$</li>\n<li>$ s $ can be divided into $ s = xyz $</li>\n<li>Consider\n$$\ny = 0^m; 0 \\leq m \\leq P\n$$</li>\n<li>Let\n$ \ni = \\frac{P!}{m} + 1\n$</li>\n<li>\n$$\nxyz = 0^\\left(P + \\left(i - 1\\right)m\\right)1^\\left(P + P!\\right) \\notin L\n$$</li>\n</ol>\n\n<p>Forgive me if the example is not put together well. This example didn't quite get finished in class. Feel free to expand on this if need be.</p>\n\n<p>However, my question is how does one know to use a factorial in the first place when approaching this proof?</p>\n", 'ViewCount': '226', 'Title': 'Factorial usage within proof using the pumping lemma', 'LastActivityDate': '2013-02-20T16:52:42.000', 'AnswerCount': '1', 'CommentCount': '4', 'AcceptedAnswerId': '9972', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '6913', 'Tags': '<pumping-lemma>', 'CreationDate': '2013-02-20T07:17:33.250', 'FavoriteCount': '1', 'Id': '9958'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '392', 'Title': 'How to apply the pumping lemma to $\\{0^m 1^n \\mid 2n \\leq m \\leq 3n, m,n \\geq 0 \\}$?', 'LastEditDate': '2013-02-25T18:08:15.837', 'AnswerCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '6980', 'FavoriteCount': '1', 'Body': "<p>I'm not really sure the how you would go about proving this language isn't regular with the pumping lemma:</p>\n\n<p>$L= \\{0^m 1^n | 2n \\leq m \\leq 3n, m,n \\geq 0   \\}$</p>\n\n<p>Does this indicate that $S = 2$, so we start by by using a string $\\geq 2$?</p>\n", 'Tags': '<regular-languages><proof-techniques><pumping-lemma>', 'LastEditorUserId': '472', 'LastActivityDate': '2013-02-25T18:08:15.837', 'CommentCount': '10', 'AcceptedAnswerId': '10072', 'CreationDate': '2013-02-21T19:38:51.083', 'Id': '10019'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '90', 'Title': 'Proving that a specific language is a CFL, and that another language is not a CFL', 'LastEditDate': '2013-03-11T02:12:00.413', 'AnswerCount': '1', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '7220', 'FavoriteCount': '0', 'Body': "<p>I have two languages $C_1$ and $C_2. \\left(\\Sigma=\\{0,1\\}\\right)$:</p>\n\n<p>$C_1=\\left\\{xyz\\mid x,z \\in \\Sigma^*, y \\in \\Sigma^*1\\Sigma^*, \\text{ where } |x|=|z| \\geq |y|\\right\\}$, and $C_2=\\left\\{xyz\\mid x,z \\in \\Sigma^*, y \\in \\Sigma^*1\\Sigma^*1\\Sigma^*, \\text{ where } |x|=|z| \\geq |y|\\right\\}$</p>\n\n<p>I want to show that $C_1$ is a CFL, while $C_2$ is not a CFL.  I'm trying to create a grammar / pushdown automata that accepts $L(C_1)$, but the $|x|=|z| \\geq |y|$ part is throwing me off.  I plan on using the pumping lemma for $C_2$, but I'm not sure which string to pump.  </p>\n", 'Tags': '<formal-languages><context-free><pumping-lemma><pushdown-automata>', 'LastEditorUserId': '157', 'LastActivityDate': '2013-03-11T05:34:59.417', 'CommentCount': '4', 'AcceptedAnswerId': '10440', 'CreationDate': '2013-03-10T21:21:27.903', 'Id': '10437'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I'm having a little bit of an issue with a pumping lemma problem. I've successfully completely all my other problems but this is the last one and I'm a little confused I must say. If anyone can help me out, it'd be much appreciated.</p>\n\n<p>\\begin{equation} \nA = \\{a^n b^m c^l    \\mid      n\\leq m  \\vee  m\\leq l\\}\n\\end{equation}</p>\n", 'ViewCount': '63', 'Title': 'Proving a language is not regular with pumping lemma', 'LastEditorUserId': '1636', 'LastActivityDate': '2013-03-12T02:19:28.653', 'LastEditDate': '2013-03-12T02:17:29.153', 'AnswerCount': '1', 'CommentCount': '4', 'AcceptedAnswerId': '10462', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '7233', 'Tags': '<automata><pumping-lemma>', 'CreationDate': '2013-03-12T01:15:34.527', 'Id': '10461'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I was reading the proof of pumping lemma from Sipser\'s book. I couldn\'t understand certain things mentioned there.</p>\n\n<p><img src="http://i.stack.imgur.com/OEUAS.jpg" alt="pumping lemma proof"></p>\n\n<p>In the second paragraph he has written, "because $r_l$ occurs among first $p+1$ places, we have $l \\le p+1$". Here, does $l$ denotes the number of states visited?</p>\n\n<p>Also he wrote  "We know that $j \\neq l$, so $|y| &gt; 0$; and $l \\le p+1$; so $|xy| \\le p$"</p>\n\n<p>What I didn\'t understand is</p>\n\n<ol>\n<li><p>$j \\neq l$ </p></li>\n<li><p>$j \\neq l$, so $|y| &gt; 0$ </p></li>\n<li><p>$l \\le p+1$; so $|xy| \\le p$</p></li>\n</ol>\n', 'ViewCount': '135', 'Title': 'Pumping Lemma for regular languages proof doubt - Sipser Book', 'LastEditorUserId': '98', 'LastActivityDate': '2013-03-17T18:20:36.850', 'LastEditDate': '2013-03-17T18:20:36.850', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '10579', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '947', 'Tags': '<regular-languages><automata><pumping-lemma>', 'CreationDate': '2013-03-17T12:24:12.517', 'Id': '10577'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '135', 'Title': 'How do you apply Context-Free Pumping Lemma to these problems, and how do the approaches differ?', 'LastEditDate': '2013-03-22T14:22:56.263', 'AnswerCount': '1', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '6980', 'Body': '<p>How are these Context-Free Pumping Lemma Approaches differ?\nMaybe this might help understand pumping lemma better</p>\n\n<p>$(a^{i}b^{i}c^{j}d^{j} \\mid i, j \\geq 0$}</p>\n\n<p>$(a^{i}b^{j}c^{i}d^{j} \\mid i, j \\geq 0$}</p>\n\n<p>$(a^{i}b^{j}c^{j}d^{i} \\mid i, j \\geq 0$}</p>\n\n<p>I understand we use contradiction with these conditions</p>\n\n<ol>\n<li>$|vwx| \\leq p$</li>\n<li>$|vx| \\geq 1$</li>\n<li>for every $i \\geq 0$, $uv^{i}wx^{i}y \\in L$.</li>\n</ol>\n', 'ClosedDate': '2013-03-22T14:00:42.243', 'Tags': '<context-free><pumping-lemma>', 'LastEditorUserId': '6980', 'LastActivityDate': '2013-03-22T14:22:56.263', 'CommentCount': '3', 'AcceptedAnswerId': '10695', 'CreationDate': '2013-03-22T11:01:32.487', 'Id': '10694'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I was looking at the pumping lemma for CFG. I came across the first problem $a^nb^nc^n$ and understood the answer. Then I thought of the problem $a^nb^n$. I know that this is context free and thought of applying it. I came across a weired situation. Someone please tell me where I went wrong. </p>\n\n<p>So our language is $a^nb^n$. Let $m$ be the pumping length. Pumping lemma says that any sufficiently long string can be divided in $uvxyz$, where $v$ and $y$ can be pumped.</p>\n\n<p>we take our string to be $a^mb^m$ and we can split it into $uxvyz$. Also we know that $|vxy|\\le m$. Also $u$ can be $\\epsilon$. In that case $vxy$ consists only of $a$, since $|vxy|\\le m$ and there are $m$, $a$'s. So when we pump $v$ and $y$, the resulting string wont be in the language!</p>\n\n<p>So where I got wrong? Is it wrong to take $u$ is $\\epsilon$ and proceed from there? </p>\n", 'ViewCount': '398', 'Title': 'Pumping lemma for CFG doubt', 'LastActivityDate': '2013-03-31T06:57:10.293', 'AnswerCount': '2', 'CommentCount': '1', 'AcceptedAnswerId': '10926', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '947', 'Tags': '<context-free><automata><pumping-lemma>', 'CreationDate': '2013-03-28T13:51:46.030', 'FavoriteCount': '1', 'Id': '10873'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '419', 'Title': 'A pumping lemma for deterministic context-free languages?', 'LastEditDate': '2013-04-12T23:06:52.350', 'AnswerCount': '2', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '2131', 'FavoriteCount': '1', 'Body': "<p>The pumping lemma for regular languages can be used to prove that certain languages are not regular, and the pumping lemma for context-free languages (along with Ogden's lemma) can be used to prove that certain languages are not context-free.</p>\n\n<p>Is there a pumping lemma for <em>deterministic</em> context-free languages?  That is, is there a lemma akin to the pumping lemma that can be used to show that a language is not a DCFL?  I'm curious because almost all of the proof techniques I know to show that a language is not a DCFL are really complicated, and I was hoping that there was an easier technique.</p>\n", 'Tags': '<context-free><proof-techniques><pumping-lemma>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-12T23:06:52.350', 'CommentCount': '3', 'AcceptedAnswerId': '11274', 'CreationDate': '2013-04-02T15:24:14.170', 'Id': '10974'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>$L = \\{a^n b^m | m \\not= n^2 \\}$ \nI guess I need to use Pumping Lemma for CFL in order to prove this. But I'm stuck.</p>\n\n<p>Assuming that $ a^n b^m = uvxyz$, we know that $v$ or $y$ can not have both $a$ and $b$ symbols in them. Otherwise pumping would generate strings not of the form $a^i b^j$.</p>\n\n<p>Hence both $v$ and $y$ must consist only of one kind of symbol each.\nBeyond this I wonder what string in $L$ has to be chosen in order to pump and obtain something of the form $a^n b^{n^2}$.</p>\n\n<p><em><strong>Alternative idea :</em></strong> Assuming that $L$ is context-free, then I must have a PDA accepting it by final state. Can I say that this PDA can be adjusted* to accept $L'$ i.e., all $a^n b^{n^2}$ ? However I know that $L'$ is not a CFL. Hence, contradiction ?</p>\n\n<p>*Adjusted = Make the non-final state on reading $a^n b^{n^2}$ as final and the rest as all non-final.</p>\n", 'ViewCount': '223', 'Title': 'Why is the following language not context-free?', 'LastEditorUserId': '7620', 'LastActivityDate': '2013-04-10T11:05:56.600', 'LastEditDate': '2013-04-08T15:54:42.337', 'AnswerCount': '2', 'CommentCount': '2', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '7620', 'Tags': '<formal-languages><context-free><automata><finite-automata><pumping-lemma>', 'CreationDate': '2013-04-07T18:09:51.310', 'Id': '11106'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I have laid out the various cases that would make this not a context free language already and proved all but one for this  set:</p>\n\n<p>\\begin{equation} \nA = \\{a^f b^g    \\mid      f = g^2\\}\n\\end{equation}</p>\n\n<p>I am having trouble trying to explain how if v was a's and x was b's for this problem.  Exactly how would I prove that using this case is it not a context free language.  Steps and explanation would help. </p>\n\n<p>Thank you!</p>\n", 'ViewCount': '20', 'ClosedDate': '2013-04-11T09:30:30.890', 'Title': 'Pumping Lemma on CFL Problem', 'LastActivityDate': '2013-04-11T07:49:56.227', 'AnswerCount': '0', 'CommentCount': '2', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '7233', 'Tags': '<context-free><pumping-lemma>', 'CreationDate': '2013-04-11T07:49:56.227', 'Id': '11219'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>Is the language $ L = \\{0^n 1^m \\mid n \\text{ and } m \\text{ are co-prime}\\}$ context-free ?</p>\n\n<p>I guess that it's not context free because it seems too complicated for a PDA to decided whether 2 numbers are co-prime or not.</p>\n\n<p>I tried using the pumping lemma to no avail.</p>\n\n<p>Any help would be gladly appreciated.</p>\n\n<p>Edit:</p>\n\n<p>Here is one of my failed attempts with the pumping lemma:</p>\n\n<p>Let $N$ be a constant. Take a prime $p$ such that $p &gt; N!$ and then take the word $z = 0^p 1^{p+N!} \\in L$. Let $ z = uvwxy $ be a decomposition of $z$ satisfying the conditions in the pumping lemma.</p>\n\n<p>If $ vx $ contains only zeros then $ |vx| = k $ is an integer between $1$ and $N$. Define $m$ as $m = N!/k$. For $i = m+1$ the word $ uv^iwx^iy = 0^{p+N!}1^{p+N!} \\not\\in L $</p>\n\n<p>However, I've failed to find such an integer $i$ for the other decomposition cases.</p>\n", 'ViewCount': '283', 'Title': 'Is the language $\\{0^n 1^m \\mid n \\text{ and } m \\text{ are co-prime}\\}$ context-free?', 'LastEditorUserId': '7068', 'LastActivityDate': '2013-04-12T20:05:43.350', 'LastEditDate': '2013-04-12T10:49:52.740', 'AnswerCount': '1', 'CommentCount': '7', 'Score': '8', 'PostTypeId': '1', 'OwnerUserId': '7068', 'Tags': '<formal-languages><context-free><pumping-lemma><pushdown-automata>', 'CreationDate': '2013-04-11T18:04:33.373', 'FavoriteCount': '3', 'Id': '11237'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<blockquote>\n  <p>$L = \\{a^i b^j a^k \\ | \\ k &gt; i + j\\}$</p>\n  \n  <p>Use the pumping lemma to show that this language cannot be accepted by an FA.</p>\n</blockquote>\n\n<p><strong>Proof:</strong></p>\n\n<p>Suppose $L$ can be accepted by an FA.</p>\n\n<p>Suppose a string $s = xyz \\in L$, where</p>\n\n<p>$$\\begin{align} \n&amp;x=a^n \\\\\n&amp;y=b \\\\\n&amp;z=a^{n+2} \n\\end{align}\n$$.</p>\n\n<p>Then a string $t = a^n b^i a^{n+2}$ should also be in $L$ for $i \\ge 0$, $n+i&lt;n+2$ and should also be accepted by an FA. But if $i=3$,</p>\n\n<p>$$\\begin{align} n+i = n + 3 \\\\&gt;n + 2 \\end{align}$$</p>\n\n<p>and $t \\not \\in L$, which is a contradiction. Thus, $L$ cannot be accepted by an FA.</p>\n\n<hr>\n\n<p>Is this proof thorough? I am worried about the line $n+i&lt;n+2$, because it doesn't work for all values of $i$. Should I pick a string that works for all possible cases?</p>\n", 'ViewCount': '201', 'Title': 'Using pumping lemma to show $L = \\{a^i b^j a^k \\ | \\ k > i + j\\}$ cannot be accepted by an FA', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-15T11:33:14.773', 'LastEditDate': '2013-04-15T11:33:14.773', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '11318', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '4689', 'Tags': '<formal-languages><regular-languages><pumping-lemma><check-my-answer>', 'CreationDate': '2013-04-14T19:11:26.940', 'Id': '11317'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>In <a href="http://cs.stackexchange.com/a/7741/4689">the answer to this question</a>, I\'m not understanding how the string is derived for a given $l$.</p>\n\n<p>For example,</p>\n\n<blockquote>\n  <p>Case 1: $vx = a^i$ where $i &gt; 0$. Choose $l = 2$ to get $a^{n+i} b^{n+1} c^{n+1} d^n \\notin L$.</p>\n</blockquote>\n\n<p>Why is $l = 2$ chosen and how is $a^{n+i}b^{n+1}c^{n+1}d^n$ derived from $l = 2$?</p>\n\n<p>Also, how can $vx$ be chosen instead of $vwx$ as the OP chose? What do we do about $w$? Is it the empty string?</p>\n', 'ViewCount': '47', 'Title': 'Questions about an answer to a pumping lemma question for CFLs', 'LastActivityDate': '2013-04-16T17:32:15.463', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '11359', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '4689', 'Tags': '<context-free><pumping-lemma>', 'CreationDate': '2013-04-16T16:51:27.737', 'Id': '11358'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Is the language $L = \\{ a^ib^j \\mid i\\ \\nmid\\ j \\ \\} $ context free ?</p>\n\n<p>If we fix $n \\in N$ then we know that the language $L = \\{ a^ib^j \\mid \\ \\forall \\ 1 \\le k \\le n \\ , \\ \\  j\\neq ki \\} $ is context free (as it can be presented as a finite union of context free languages in a similar way to the example here: <a href="http://cs.stackexchange.com/questions/10635/is-l-aibj-mid-j-neq-i-and-j-neq2i-context-free?rq=1">Is $L= \\{ a^ib^j \\mid j\\neq i \\ and \\ j\\neq2i \\ \\} $ context free?</a>)</p>\n\n<p>I think that it\'s not context free but have failed to prove it.\nBy reading other questions on this site I noticed this interesting observation: CFL\'s in $a^*b^*$ are closed under complement as can be seen here: <a href="http://cs.stackexchange.com/questions/11110/are-context-free-languages-in-ab-closed-under-complement">Are context-free languages in $a^*b^*$ closed under complement?</a> </p>\n\n<p>So our language $L$ is context free if and only if $ \\bar L = \\{ a^ib^j \\mid \\ \\ i\\ \\mid\\ j \\ \\} $ is context free. I tried using the pumping lemma but  to no avail.</p>\n\n<p>Thanks in advance</p>\n', 'ViewCount': '241', 'Title': 'Is the language $L = \\{ a^ib^j \\mid i\\ \\nmid\\ j \\ \\} $ context free?', 'LastActivityDate': '2013-11-21T01:06:06.003', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '11634', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '7068', 'Tags': '<formal-languages><context-free><pumping-lemma><pushdown-automata>', 'CreationDate': '2013-04-19T10:08:37.820', 'FavoriteCount': '2', 'Id': '11405'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>Prove that context free languages aren't closed under this operation: $ A(L) = \\{ zyx \\mid x,y,z \\in \\{0,1 \\}^*, xyz \\in L \\} $</p>\n\n<p>Obviously, we need to find a context free language $L$ such that $A(L)$ isn't context free. Here are some of my failed attempts:</p>\n\n<p>Take the language $ L = \\{\\ 0^n1^n \\mid n \\in N \\} $ and then (since the intersection of a context free language with a regular language is context free) we get: $ A(L) \\cap 1^*0^*1^*0^*  = \\{\\ 1^{m}0^{n-k}1^{n-m}0^{k} \\mid n,k,m \\in N, m,k\\le n \\} $ which might look promising at first, but unfortunately this language is context free...</p>\n\n<p>I also tried my luck with the following languages:<br>\n$ L = \\{\\ 0^n1^m0^m1^n \\mid n,m \\in N \\} $<br>\n$ L = \\{\\ ww^R \\mid w \\in \\{0,1 \\}^* \\} $  </p>\n\n<p>but these languages didn't help me either...</p>\n", 'ViewCount': '160', 'Title': 'Prove that context free languages are not closed under swapping prefixes and suffixes', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-24T06:23:56.547', 'LastEditDate': '2013-04-24T06:23:56.547', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '11526', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '7068', 'Tags': '<formal-languages><context-free><closure-properties><pumping-lemma>', 'CreationDate': '2013-04-23T18:47:53.523', 'Id': '11525'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>Is the following language context free: $L = \\{ uxvy \\mid u,v,x,y \\in \\{ 0,1 \\}^+, |u| = |v|, u \\neq v, |x| = |y|, x \\neq y\\} $ ?</p>\n\n<p>I think that it's not context free but I'm having a hard time proving it. I tried intersecting this language with a regular language (like  $ \\ 0^*1^*0^*1^* $ for example) then use the pumping lemma and \\ or homomorphisms but I always get a language that is too complicated to characterize and write down. </p>\n", 'ViewCount': '797', 'Title': 'Is this strange language context free?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-06-20T18:37:10.130', 'LastEditDate': '2013-06-13T05:51:03.333', 'AnswerCount': '3', 'CommentCount': '16', 'Score': '20', 'PostTypeId': '1', 'OwnerUserId': '7068', 'Tags': '<formal-languages><context-free><pumping-lemma><pushdown-automata>', 'CreationDate': '2013-04-26T17:56:00.657', 'FavoriteCount': '10', 'Id': '11585'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>The regular expression $a^{3}b^{+}$ is indeed regular because we can define an automata $M$. But I see that $\\mathcal{L} = \\{a^{3}b^{n}, n \\geq 1\\}$ may generate the same strings, but using the pumping lemma with constant $N$ for a substring $\\alpha\\beta = a^{3}b^{t},|\\alpha\\beta| \\leq N$, let $\\alpha = a$ and $\\beta = a^{2}b^{t}$, therefore $\\gamma = b^{N-t}$, and when $k = 0$, $\\sigma = \\alpha \\beta^{0} \\gamma = \\alpha \\gamma = ab^{N-t}$, which doesn't belong to $\\mathcal{L}$ and the language isn't regular.</p>\n\n<p>So, is really the regex equal to $\\mathcal{L}$? or am I pumping wrong?</p>\n", 'ViewCount': '62', 'Title': 'Is the language $a^{3}b^{+}$ the same as $\\{a^{3}b^{n}, n \\geq 1\\}$ ? and what is the result of pumping this?', 'LastActivityDate': '2013-04-28T04:30:58.543', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '11621', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '7492', 'Tags': '<regular-languages><finite-automata><regular-expressions><pumping-lemma>', 'CreationDate': '2013-04-28T03:39:32.733', 'FavoriteCount': '1', 'Id': '11619'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<blockquote>\n  <p>Is $L=\\{ xyx \\mid x,y \\in \\{a,b\\}^* \\text {and } |x| \\ge 1 \\}$ context-free?</p>\n  \n  <p>If yes, please explain how we can write grammar or create a PDA for it. If not a CFL, then prove it through pumping lemma.</p>\n</blockquote>\n\n<p>I have tried to apply the pumping lemma with $w = a^nb^naba^nb^n$ as the word in $L$, but without success.</p>\n', 'ViewCount': '161', 'Title': u'Is {xyx | |x|\u22651} context-free?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-05-12T10:15:37.917', 'LastEditDate': '2013-05-12T10:15:37.917', 'AnswerCount': '2', 'CommentCount': '4', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '7943', 'Tags': '<formal-languages><context-free><pumping-lemma>', 'CreationDate': '2013-04-28T09:08:31.110', 'Id': '11629'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '712', 'Title': 'Example of a non-context free language that nonetheless CAN be pumped?', 'LastEditDate': '2013-05-17T06:43:11.733', 'AnswerCount': '3', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '8197', 'FavoriteCount': '2', 'Body': "<p>So basically L satisfies the conditions of the pumping lemma for CFL's but is not a CFL (that is possible according to the definition of the lemma).</p>\n", 'Tags': '<formal-languages><context-free><pumping-lemma>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-05-17T06:43:11.733', 'CommentCount': '3', 'AcceptedAnswerId': '12044', 'CreationDate': '2013-05-15T16:01:57.900', 'Id': '12041'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I was wondering when languages which contained the same number of instances of two substrings would be regular. I know that the language containing equal number of 1s and 0s is not regular, but is a language such as $L$, where $L$ = $\\{ w \\mid$ number of instances of the substring "001" equals the number of instances of the substring "100" $\\}$ regular? Note that the string "00100" would be accepted.</p>\n\n<p>My intuition tells me it isn\'t, but I am unable to prove that; I can\'t transform it into a form which could be pumped via the pumping lemma, so how can I prove that? On the other hand, I have tried building a DFA or an NFA or a regular expression and failed on those fronts also, so how should I proceed? I would like to understand this in general, not just for the proposed language.</p>\n', 'ViewCount': '249', 'Title': 'Is the language of words containing equal number of 001 and 100 regular?', 'LastEditorUserId': '472', 'LastActivityDate': '2013-06-01T15:26:45.267', 'LastEditDate': '2013-05-30T23:55:28.277', 'AnswerCount': '1', 'CommentCount': '7', 'Score': '9', 'PostTypeId': '1', 'OwnerUserId': '8257', 'Tags': '<formal-languages><regular-languages><pumping-lemma>', 'CreationDate': '2013-05-19T21:07:17.520', 'Id': '12139'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '163', 'Title': 'Is $L = \\{a^jb^ia^{j-i}\\mid i,j \\ge 0\\ , j > i\\}$ context-free?', 'LastEditDate': '2013-05-31T17:13:01.660', 'AnswerCount': '3', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '7917', 'FavoriteCount': '1', 'Body': "<p>I'm exercising for an upcoming exam and I find this exercise:</p>\n\n<blockquote>\n  <p>Say whether or not the language \n  $$L = \\{a^jb^ia^{j-i}\\mid i,j \\ge 0\\ , j &gt; i\\}$$\n  is a context-free language. Justify your answer.</p>\n</blockquote>\n\n<p>I have already tried (using the pumping lemma for CFL) with two different words:\n$$w1 = \\  a^pb^{p-1}a$$\n$$w2 = \\  a^{2p}b^pa^p$$</p>\n\n<p>but I'm stuck when the case is that $vwx$ (considering $uvwxy = w$) take letters from both the first group of $\\bf{a}$ and the group of $\\bf{b}$.<br>\nHave I chosen a wrong format for the word or am I simple missing some trivial condition?</p>\n", 'Tags': '<formal-languages><context-free><pumping-lemma>', 'LastEditorUserId': '6716', 'LastActivityDate': '2013-06-01T15:22:31.090', 'CommentCount': '2', 'AcceptedAnswerId': '12375', 'CreationDate': '2013-05-30T09:06:03.837', 'Id': '12370'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Could anyone help me please to find who was the first person who has proved that the language of all borderless words is not regular and when was that? Could you mention the reference, please?</p>\n\n<p>A word $w$ has a border $u$ if $u$ is both prefix and suffix of $w$ (and $u$ does not equal $\\lambda$ or $w$). </p>\n', 'ViewCount': '75', 'Title': 'The language of all borderless words', 'LastEditorUserId': '4287', 'LastActivityDate': '2013-07-04T08:10:49.713', 'LastEditDate': '2013-07-02T13:59:18.573', 'AnswerCount': '1', 'CommentCount': '4', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '8954', 'Tags': '<regular-languages><pumping-lemma><word-combinatorics>', 'CreationDate': '2013-07-02T10:05:46.077', 'Id': '13035'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>If the set of regular languages is closed under the concatenation operation and is also closed under the reverse operation ($x^R$ is the reverse of $x$) then is the language generated by $$\\{ww^R|w\\in\\Sigma^*\\}$$ for some input alphabet $\\Sigma$, also regular? If not, why not?</p>\n\n<p>I've been trying to find a proof for this using the pumping lemma, but it seems that selecting any substring towards the middle of the string being pumped could also be of the form $\\{ww^R|w\\in\\Sigma^*\\}$, causing the original string to remain in its original form.</p>\n\n<p>Here's a try:</p>\n\n<p>$\\textbf{Theorem:}$ The language, $A$, generated by $\\{ww^R|w\\in\\Sigma^*\\}$ is not regular.</p>\n\n<p>$\\textbf{Proof:}$ Assume $A$ is regular (We will use the Pumping Lemma for Regular Languages to show a contradiction). Let the input string $s$ be $ww^R$ and let $p = |w|$.</p>\n\n<p>When splitting $s$ into substrings $x, y, z$ such that $s=xyz$ we see that $xy$ must be a substring of $w$ by the third condition of the Pumping Lemma ($|xy|\\le p$).</p>\n\n<p>By the first condition of the Pumping Lemma, we see that all strings of the form $xy^iz$ must be in $A$ for all $i \\ge 0$. Taking $i$ to be zero, we obtain the string $xw^R$. $|x| &lt; |w^R|$ so $xy^0z \\notin A$.</p>\n\n<p>QED? What if $xw^R$ can still be split so that for some substring $k$, $kk^R = xw^R$?</p>\n\n<p>I think I may be overthinking this but it's really bugging me.</p>\n", 'ViewCount': '629', 'Title': 'Is the language that accepts strings concatenated with their reverse regular?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-09-18T20:59:40.083', 'LastEditDate': '2013-08-22T14:52:13.693', 'AnswerCount': '3', 'CommentCount': '4', 'AcceptedAnswerId': '13806', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '9727', 'Tags': '<formal-languages><regular-languages><context-free><pumping-lemma>', 'CreationDate': '2013-08-18T21:36:02.120', 'Id': '13804'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I am trying to figure out the result of the concatenation among different language types (regular, context free, ...). I think the result strongly depends on the nature of the languages which will be concatenated, but I have some doubts on determining the category the result belongs to. Maybe troughout an example it will be easier to solve all my doubts and let you understand better the nature of my question. For instance, let $L = \\left \\{ 0^{n}\\cdot 1^{n} \\mid n \\geq 0 \\right \\}$ and $L^{R} = \\left \\{ 1^{n}\\cdot 0^{n} \\mid n \\geq 0 \\right \\}$</p>\n\n<p>Those two languages are obviosly not regular (it's easy to apply the Pumping Lemma here)\nbut what happens if I define this result language $L{}' = L \\cdot \\left \\{ 0, 1 \\right \\}^{*} \\cdot L^{R}$</p>\n\n<p>I think it should be still not regular, since we can apply again the pumping lemma by letting be $p$ the length of the pumping and $w=0^{p}1^{2p}0^{p}$, w is in $L'$. The contination is easily.</p>\n\n<p>But is it good to consider that w of $L'$? </p>\n", 'ViewCount': '56', 'Title': 'Concatenation among different language types', 'LastEditorUserId': '98', 'LastActivityDate': '2013-10-06T09:50:31.623', 'LastEditDate': '2013-09-06T08:52:51.910', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '9989', 'Tags': '<formal-languages><regular-languages><context-free><pumping-lemma>', 'CreationDate': '2013-09-05T11:29:43.487', 'Id': '14145'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>Part (a): Let $L = \\{x \\in \\{0,1\\}^* \\mid  \\#0(x) \\neq 4\\times\\#1(x)\\}$, where $\\#0(x)$ means the number of 0 in string $x$ and $\\#1(x)$ means the number of 1 in string $x$.</p>\n\n<p>So I want to use the pumping lemma. But I'm having a hard time choosing a string so that I can show that it is not regular.</p>\n\n<p>I've been thinking about how I could use something like the string, s, = $0^{3p}1^p$. But I do not see how you use that fact (I would like to show that xyyz would equal $0^{4p}1^p$). This route seems unfruitful. So any help would be nice.</p>\n\n<p>Part (b): Let $L = \\{x \\in \\{0,1\\}^* \\mid \\exists k \\in \\mathbb{N}, \\#0(x) + \\#1(x) = 2k\\}$. </p>\n\n<p>Again stuck on this problem. My original approach was to leverage the fact that the parity is the same on the 0s and 1s (if one is even, then so does the other and vice versa. Same for odd parity.)</p>\n\n<p>Again, this does not seem to be working.</p>\n", 'ViewCount': '142', 'Title': 'Decide if L is regular or not and argue it. Trying to use Pumping Lemma', 'LastEditorUserId': '98', 'LastActivityDate': '2013-09-10T14:22:35.517', 'LastEditDate': '2013-09-09T10:25:55.990', 'AnswerCount': '3', 'CommentCount': '0', 'AcceptedAnswerId': '14182', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '9819', 'Tags': '<formal-languages><regular-languages><pumping-lemma>', 'CreationDate': '2013-09-07T01:03:54.217', 'Id': '14180'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I am trying to learn about applying the pumping lemma and I'm not really sure how to go about proving this language isn't regular with the pumping lemma:</p>\n\n<p>$L= \\{0^n 1^m \\space | \\space m \\equiv 0 \\space mod \\space n, \\space n \\geq 2 \\}$</p>\n\n<p>Now I realize that the condition $m \\equiv 0 \\space mod \\space n$, is essentially saying that $m$ is some multiple of $n$. Is it possible that could you go about proving that $L$ is not regular in the way that you can prove that $L = \\{0^n 1^n\\}$ is not regular since $m$ is a multiple of $n$, since $m = kn$ (where $k$ is some integer)?</p>\n\n<p><em><strong>Updated:</em></strong></p>\n\n<p>-- My attempt at the proof:</p>\n\n<p>If the language $L$ is regular, then by the pumping lemma $\\exists \\space p \\space | \\space \\forall s \\in L \\cap \\Sigma ^{\\geq p}  $.</p>\n\n<p>Next by the pumping lemma $\\exists x, y, z : s = xyz$, where $s$ is a string such that:</p>\n\n<p>(1) $|y|\\geq1$</p>\n\n<p>(2) $|xy|\\leq p$</p>\n\n<p>(3) $\\forall i\\geq0, xy^iz \\in L$</p>\n\n<p>Now suppose we let $m = kp$, where $k$ is some integer, let the string $s = 0^p 1^{kp}, s\\in L$ and $|s|\\geq p$. By the pumping lemma the decomposition of $s$ is defined by $s = xyz$. Now we show that $\\forall x, y, z$ that (1)-(3) do not hold.</p>\n\n<p>If (1) and (2) hold, then $s=0^p1^{kp} = xyz$, with $|xy|\\leq p$ and $|y|\\geq 1$.</p>\n\n<p>So $x = 0^u, y=0^v, z=0^w1^{kp}$</p>\n\n<p>$u+v \\leq p$, $v \\geq 1 $, $w \\geq 0$</p>\n\n<p>$u+v+w = kp$</p>\n\n<p>But (3) fails for $i=2$ since $xy^2z = 0^u0^v0^v0^w1^{kp} = 0^{u+2v+w}1^{kp} \\not\\in L$ since $u+2v+w \\neq kp $</p>\n\n<p>Hence $L$ is <em>not</em> a regular language.</p>\n\n<p>Is this the correct way to go about this proof?</p>\n", 'ViewCount': '347', 'Title': 'Proving the language $L= \\{0^n 1^m \\space | \\space m \\equiv 0 \\space mod \\space n, \\space n \\geq 2 \\}$ is not regular using the pumping lemma', 'LastEditorUserId': '9912', 'LastActivityDate': '2013-09-20T21:10:22.973', 'LastEditDate': '2013-09-20T21:10:22.973', 'AnswerCount': '1', 'CommentCount': '8', 'AcceptedAnswerId': '14454', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '9912', 'Tags': '<regular-languages><proof-techniques><pumping-lemma>', 'CreationDate': '2013-09-19T23:03:21.863', 'Id': '14453'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>$L = \\{0^i1^j0^i1^j|i,j \\geq 0\\}$</p>\n\n<p>I've tried letting $s = 0^p1^p0^p1^p$. But not sure where to go from here. Help would be appreciated.</p>\n", 'ViewCount': '216', 'Title': 'Prove L to not context free using pumping lemma on language L', 'LastEditorUserId': '9819', 'LastActivityDate': '2013-09-24T14:51:29.913', 'LastEditDate': '2013-09-23T20:42:43.907', 'AnswerCount': '2', 'CommentCount': '9', 'AcceptedAnswerId': '14581', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '9819', 'Tags': '<context-free><pumping-lemma>', 'CreationDate': '2013-09-23T17:11:30.067', 'Id': '14559'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I am currently studying the pumping lemma for regular languages and I am trying to come up with an example where even if the language can be pumped it is not regular. \nWhich condition of the lemma should be broken such that I can find a language like that?</p>\n', 'ViewCount': '37', 'ClosedDate': '2013-09-29T18:31:33.740', 'Title': 'Pumping a Language does not imply regular', 'LastEditorUserId': '39', 'LastActivityDate': '2013-09-28T12:01:23.383', 'LastEditDate': '2013-09-28T12:01:23.383', 'AnswerCount': '0', 'CommentCount': '5', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '10376', 'Tags': '<formal-languages><regular-languages><pumping-lemma>', 'CreationDate': '2013-09-28T11:20:58.553', 'Id': '14653'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': u"<p>I am writing somthing about Ppumping Lemma. I know that the language $L = \\{ a^nb^n| n \u2265 0 \\}$ is context-free. But I don't understand how this language satisfies the conditions of pumping lemma (for context-free languages) ?</p>\n\n<p>if we pick the string $s = a^pb^p, |s| &gt; p , |vxy| &lt; p \\land |vy| &gt; 0$.</p>\n\n<p>it seems it will be out of the language when we pump it (pump up or down) or there is something I'm missing.</p>\n\n<p>Any explanation would help.</p>\n\n<p>Edit: I am applying pumping lemma to a^nb^n and it fails to stay in the language for all cases. So, why is it Context free?</p>\n", 'ViewCount': '128', 'Title': 'why does ${a^nb^n}$ fit the pumping lemma for context-free languages?', 'LastEditorUserId': '78', 'LastActivityDate': '2013-10-10T21:30:03.117', 'LastEditDate': '2013-10-10T21:30:03.117', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '14995', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '10644', 'Tags': '<context-free><pumping-lemma>', 'CreationDate': '2013-10-10T19:56:47.913', 'Id': '14994'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>For my homework assignment, I have to come up with a non-cfl that is pumpable. I came up with the following: \n$$ C = \\{a^n b^n c^n d^m \\mid n \\ge 1 \\text{ and } m \\ge 1 \\} $$</p>\n\n<p>I'm not sure whether this works. For the pumping lemma, let $p$ being the pumping length. If I generate a string with $p$ $a$'s, $b$'s, and $c$'s, and only one $d$, my only choice for $vxy$ would be $d$. Pumping this down to $v^0xy^0$ gives $a^p b^p c^p$, thus escaping the language. However, if I let $m$ be greater than or equal to zero, if I choose a string with no $d$'s, then I am forced to put either $a$'s, $b$'s or $c$'s in my $vxy$ string. </p>\n", 'ViewCount': '191', 'ClosedDate': '2013-11-11T13:49:22.987', 'Title': 'Non context free language that is pumpable?', 'LastEditorUserId': '39', 'LastActivityDate': '2013-10-13T11:23:16.300', 'LastEditDate': '2013-10-12T22:34:56.997', 'AnswerCount': '1', 'CommentCount': '7', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '10686', 'Tags': '<context-free><pumping-lemma>', 'CreationDate': '2013-10-12T22:13:12.923', 'Id': '15026'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I'm not very comfortable with pumping lemma for context-free grammar. I understand the sufficient conditions that must hold but proving it gets me everytime. For example, I need to prove whether $L = \\{0^{n^3} \\mid n\\in\\mathbb{N}\\}$ is context-free or not. </p>\n\n<p>Based on my intuition, it won't be.  There is no pattern of $0$'s that can be recreated by a pushdown automata but alas I need to prove this. I know you start off assuming it is by being able to create a substring $uvxyz$ where $v$ and $y$ are raised to the $i$th power where $i \\ge 0$. I'm having trouble from there, any help in this and the understanding would be greatly appreciated.</p>\n", 'ViewCount': '169', 'Title': u'Prove that {0^{n^3} | n\u22650} is not context free', 'LastEditorUserId': '39', 'LastActivityDate': '2013-10-16T00:20:58.653', 'LastEditDate': '2013-10-15T23:41:01.340', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '10773', 'Tags': '<context-free><pumping-lemma><pushdown-automata>', 'CreationDate': '2013-10-15T22:45:46.927', 'Id': '16113'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>$$ L = \\{a^ib^jc^k \\mid i,j,k &gt; 0 \\text{ and } i+k&gt;j\\} $$</p>\n\n<p>I say it's not regular. Proof by pumping lemma:\nFind a string $xy^iz$ that is not in $L$ (respecting the constraints).\nLet $w=x^py^pz^p$.</p>\n\n<p>Let $i=2$.\n$x^p(y^py^p)z^p$ is not in $L$. </p>\n\n<p>Thus $L$ is not regular.</p>\n\n<p>Is this proof correct?</p>\n", 'ViewCount': '204', 'Title': 'Is this pumping lemma proof correct?', 'LastEditorUserId': '39', 'LastActivityDate': '2013-10-16T00:28:05.830', 'LastEditDate': '2013-10-15T23:39:20.643', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '16116', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '10713', 'Tags': '<regular-languages><pumping-lemma>', 'CreationDate': '2013-10-15T23:21:45.640', 'Id': '16114'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>How can I show that this language is not regular?</p>\n\n<p>$$\n    L = \\{a^n (ca)^m b^{n+1} \\mid m \\ge 0 , n \\ge 0 \\}\n$$</p>\n\n<p>This is my attempted solution:</p>\n\n<p>Assuming the pumping number to be <em>$p$</em> and making <em>$m=0$</em></p>\n\n<p>the language reduces to $a^p b^{p+1}$ so  $s=a^p b^{p+1}$</p>\n\n<p>let $s=xyz$ where $y$ is not $\\epsilon \\\\$</p>\n\n<p>$y=a^k$; $0 \\lt k&lt;=p$</p>\n\n<p>$x=a^q$; $0 \\lt= q \\lt p$</p>\n\n<p>$z=a^{p-k-q}b^{n+1}$</p>\n\n<p>so with this definitions, $xyyz$ cannot be part of the language since this would be written as</p>\n\n<p>$xyyz$=$a^qa^ka^ka^{p-k-q}b^{p+1}$ = $a^{k+p}b^{p+1}$ which means there is always an extra $a$ which is not in the original language.</p>\n\n<p>Is this approach correct ?</p>\n', 'ViewCount': '20', 'ClosedDate': '2013-10-23T14:19:51.047', 'Title': 'How to show that a languge is not regular', 'LastEditorUserId': '10569', 'LastActivityDate': '2013-10-23T15:17:53.777', 'LastEditDate': '2013-10-23T15:17:53.777', 'AnswerCount': '0', 'CommentCount': '2', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '10569', 'Tags': '<regular-languages><pumping-lemma>', 'CreationDate': '2013-10-23T14:08:05.800', 'Id': '16364'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I'm trying to show that $L=\\left\\{w^rww^r:w \\in \\{0,1\\}^*\\right\\}$ is not context free using the pumping lemma.</p>\n\n<p>I thought picking the string, $0^p0^p0^p$, would be a good candidate for this, but someone told me I might want to consider another string. Why is this? Any way in which I divide the string and then pump the string results in the balances between the $w^r$on either side of the string being thrown off, no?</p>\n", 'ViewCount': '58', 'Title': 'Can the String, $0^p 0^p 0^p$, be Used with the Pumping Lemma to Show that $w^r w w^r$ is Not Context Free?', 'LastEditorUserId': '9950', 'LastActivityDate': '2013-11-10T23:51:11.160', 'LastEditDate': '2013-11-10T23:16:31.673', 'AnswerCount': '2', 'CommentCount': '2', 'AcceptedAnswerId': '17894', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '7151', 'Tags': '<context-free><pumping-lemma>', 'CreationDate': '2013-11-10T22:03:17.933', 'Id': '17887'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I\'ve been struggling with this problem for quite a while now and every explanation I have managed to find doesn\'t seem to correctly solve it.</p>\n\n<p>We have the language L = {$ { a^{2^n} \\ | \\ n \\ge 0 } $} and we need to prove that it is not regular by use of the pumping lemma.</p>\n\n<p>(i.e. L is words whose length is a power of 2: a, aa, aaaa, aaaaaaaa etc.)</p>\n\n<p>I appreciate the concept of the proof so here we go:</p>\n\n<p>Assuming regularity of L and using the Pumping Lemma, we have $ {a^{2^p}} = {xyz}$ where:</p>\n\n<p>a) ${y &gt; 0}$</p>\n\n<p>b) ${|xy| \\le p}$</p>\n\n<p>c) $xy^iz \\in L \\ \\forall \\ i \\ge 0$</p>\n\n<p>(also $ |xyz|\\ = 2^p \\ge p$)</p>\n\n<p>(notice both x and z can be empty)</p>\n\n<p>I choose $ i = 2$ to get $xy^2z$ so (since $y&gt;0$) $|xy^2z| &gt; 2^p$</p>\n\n<p>I understand that the next step is trying to prove  that $|xy^2z| &lt; 2^{p+1}$ so that the final result is $2^p &lt; |xy^2z| &lt; 2^{p+1}$ and so $xy^2z$ cannot be an element of L.</p>\n\n<p>However if $|y| = p$ and so $|x| = 0,\\  |z| = 0$ then this is not possible as taking $y^2$ is just doubling the length of the word which makes another word that fits the language.</p>\n\n<p>Am I missing something important? I have found proofs on multiple web pages (see below) that just seem to assume y cannot be of length p but as far as I can see this isn\'t the case.</p>\n\n<p><a href="http://cs.geneseo.edu/~baldwin/csci342/fall2012/0928pump.html" rel="nofollow">http://cs.geneseo.edu/~baldwin/csci342/fall2012/0928pump.html</a>\n<a href="http://www.cse.buffalo.edu/courses/cse396/content/hwSol-5.pdf" rel="nofollow">http://www.cse.buffalo.edu/courses/cse396/content/hwSol-5.pdf</a></p>\n\n<p>Thanks very much in advance and please let me know if there is anything I should clarify.</p>\n', 'ViewCount': '170', 'Title': 'Proving L = {$ { a^{2^n} \\ | \\ n \\ge 0 } $} is not regular by use of Pumping Lemma', 'LastEditorUserId': '11408', 'LastActivityDate': '2013-11-15T23:51:29.120', 'LastEditDate': '2013-11-15T23:51:29.120', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '18059', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '11408', 'Tags': '<regular-languages><pumping-lemma>', 'CreationDate': '2013-11-15T22:36:06.700', 'Id': '18058'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>When using the pumping lemma for a context free language, if I write any w in L as uvxyz, is my goal to show that a string will not pump for ANY arrangement of uvxyz that I choose, or is my goal to show that THERE EXISTS some arrangement of uvxyz over w that will pump.</p>\n', 'ViewCount': '56', 'Title': 'Using pumping lemma to prove a language is not context free', 'LastActivityDate': '2013-11-21T20:07:47.857', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '11540', 'Tags': '<context-free><pumping-lemma><language>', 'CreationDate': '2013-11-21T18:30:02.600', 'Id': '18231'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<pre><code>Let L = { x in {a,b}* | the number of a are less or equal the number of b^2}\n</code></pre>\n\n<p>I know this is a NOT context free language. \nHow can i choose the correct z=uvwxy and try to apply the Pumping Lemma?</p>\n\n<p>I think that z=(a^n b)^n it's wrong, cause it's part of the language only if n=0,1 </p>\n\n<pre><code>z=(ab^n)^n \n</code></pre>\n\n<p>should be fine.</p>\n\n<p>Then the relatives substring vwx should be:</p>\n\n<pre><code>vwx=ab\nvwx=b^k\nvwx=ab^k\n</code></pre>\n\n<p>Where am I going wrong? How can I proceed?</p>\n", 'ViewCount': '50', 'Title': 'Context-free Language: deciding z string', 'LastEditorUserId': '7955', 'LastActivityDate': '2013-12-25T06:33:46.573', 'LastEditDate': '2013-11-25T05:35:25.843', 'AnswerCount': '1', 'CommentCount': '4', 'Score': '-1', 'PostTypeId': '1', 'OwnerUserId': '7955', 'Tags': '<context-free><pumping-lemma>', 'CreationDate': '2013-11-25T03:17:21.403', 'Id': '18315'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>Given the language $L_1 = \\{a^i b^j c^k \\mid i \\neq j \\vee i \\neq k\\}$, I need to determine whether it is context-free by using the pumping lemma. I must do the same for the complement of this language.</p>\n\n<p>I started off by breaking $L_1$ into two parts, $L_1 = L_2 \\cup L_3$, where $L_2 = \\{a^i b^j c^k \\mid i \\neq j\\}$ and $L_3 = \\{a^i b^j c^k \\mid i \\neq k\\}$, and I proved that both the languages are not context free, hence the union which is $L_1$ is also not context-free. Is this approach of mine correct? </p>\n\n<p>Also would the complement of $L_1$ be $L_1' = \\{a^i b^j c^k \\mid i = j \\wedge i = k\\}$ and break down $L_1'$ into two parts $L_2'$ and $L_3'$ and by the closed under intersection rule for context-free languages we know $L_1' = L_2' \\cap L_3'$ is not context free. </p>\n\n<p>This how I approached both the parts, and I would like to know if my approach is correct or wrong. Help would be really appreciated.</p>\n", 'ViewCount': '104', 'Title': 'Context free language and the complement of it', 'LastEditorUserId': '69', 'LastActivityDate': '2013-11-26T00:20:07.597', 'LastEditDate': '2013-11-25T22:49:06.590', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '18341', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '11110', 'Tags': '<formal-languages><context-free><pumping-lemma>', 'CreationDate': '2013-11-25T22:30:27.523', 'Id': '18337'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>So I've been given the following language on an assignment.  It is the only question I have left of 10, and I've been racking my brains out trying to solve it for hours.  </p>\n\n<p>$$L=\\{w:w\\in(a+b+c)^*, n_a(w) &gt; n_b(w)&gt;n_c(w)\\}$$</p>\n\n<p>where $n_x(w)$ represents the number of character $x$ found in $w$.  The problem statement is: <strong>prove or disprove that the language is context-free</strong>.  Context-free grammars or pushdown automata are acceptable proofs.  Use pumping lemma to disprove.</p>\n\n<p>I've extensively explored both possibilities and I'm fairly certain that it is context-free.  </p>\n\n<p>The approach I've taken in finding a context-free grammar for the language involves using rules which preserve the constraint $n_a(w) &gt; n_b(w) &gt; n_c(w)$ (ie. whenever a $b$ is added, add an $a$; whenever a $c$ is added, add a $b$).  Then, I've attempted to enforce that there are at least two $a$s and at least one $b$ (base case for the constraint).</p>\n\n<p>The grammar I've used is:</p>\n\n<p>$S\\implies XaXaXbX | XaXbXaX | XbXaXaX$</p>\n\n<p>$X \\implies XX| A | B | C | \\lambda$</p>\n\n<p>$A \\implies a$</p>\n\n<p>$B \\implies ab | ba$</p>\n\n<p>$C \\implies abc | acb | bac | bca | cab | cba$</p>\n\n<p>(where $\\lambda$ is the empty string)</p>\n\n<p>My grammar fails for strings like $cccaaaaabbbb$.</p>\n\n<p>I'm confused as to where to go from here.  </p>\n\n<p><strong>I would really like a push in the right direction, not an answer.</strong>\n Any help is greatly appreciated!</p>\n", 'ViewCount': '87', 'Title': 'Is $\\{w:w\\in(a+b+c)^*, n_a(w) > n_b(w)>n_c(w)\\}$ context-free?', 'LastEditorUserId': '9612', 'LastActivityDate': '2014-01-29T22:37:10.603', 'LastEditDate': '2013-12-30T11:42:33.360', 'AnswerCount': '2', 'CommentCount': '6', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '10400', 'Tags': '<context-free><formal-grammars><pumping-lemma><pushdown-automata>', 'CreationDate': '2013-11-29T17:48:42.330', 'FavoriteCount': '1', 'Id': '18470'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I have a question to find out that L = {a^(2k)|k>=1} is regular. I know that it is regular set but I was looking to find out if pumping lemma is satisfying or not. So I tried it as -</p>\n\n<pre><code>Let # of states in the FA be n &amp; I select the string w = a^2n\nNow let xyz = w\nxy = a^n\ny = a^m | m is odd number\nnow x(y^2)z = a^(n-m)(a^2m)(a^n) \n= a(2n+m) does not belong to L\n</code></pre>\n\n<p>which says this regular set doesn't satisfy pumping property. Please let me know if I am doing something wrongly.</p>\n\n<p>Thanks in advance.</p>\n", 'ViewCount': '38', 'ClosedDate': '2013-12-03T17:48:28.990', 'Title': 'Pumping Lemma for regular language', 'LastActivityDate': '2013-12-02T01:48:28.927', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '18518', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '11750', 'Tags': '<regular-languages><pumping-lemma>', 'CreationDate': '2013-12-02T01:36:59.560', 'Id': '18517'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I'm having trouble with this particular language $$\\{a^ib^jc^k\\,|\\,i+j\\le k\\}$$</p>\n\n<p>If it's not context-free I don't know how to correctly apply the Pumping Lemma for CFL; if it is context-free I don't know how to create a context-free grammar that generates this language.</p>\n\n<p>Which one applies? Can you help me out?</p>\n", 'ViewCount': '65', 'Title': 'Uncertainty whether $\\{a^ib^jc^k\\,|\\,i+j\\le k\\}$ is context-free or not', 'LastEditorUserId': '8623', 'LastActivityDate': '2013-12-11T17:18:28.190', 'LastEditDate': '2013-12-11T17:11:17.567', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '-1', 'PostTypeId': '1', 'OwnerUserId': '8623', 'Tags': '<pumping-lemma><cfl>', 'CreationDate': '2013-12-11T16:57:33.763', 'Id': '18884'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '145', 'Title': 'Pumping lemma for {w | w = ddd}', 'LastEditDate': '2013-12-27T11:10:35.367', 'AnswerCount': '1', 'Score': '-1', 'PostTypeId': '1', 'OwnerUserId': '11702', 'FavoriteCount': '1', 'Body': '<p>I want to use the pumping lemma to show that the following language is not context free:\n$$\n  L = \\{w \\in \\{a,b\\}^* \\mid \\exists d \\in \\{a,b\\}^*, w=ddd \\}\n$$</p>\n\n<p>We suppose that $L$ is context-free. Then from the pumping lemma there is a pumping length $p$. Which word $s$ do I have to use, that belongs to $L$ and such that dividing that in $uvxyz$, we can show that the pumping lemma is not satisfied? Could you give me a hint?</p>\n', 'Tags': '<context-free><pumping-lemma>', 'LastEditorUserId': '39', 'LastActivityDate': '2013-12-27T18:21:53.377', 'CommentCount': '10', 'AcceptedAnswerId': '19330', 'CreationDate': '2013-12-20T16:09:37.637', 'Id': '19159'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Let $L = \\{ww \\mid w \\in \\{a,b\\}^*\\}$.  In other words, each word of $L$ is some string repeated twice (some string concatenated with itself).</p>\n\n<p>Is the language $L$ context-free?</p>\n', 'ViewCount': '128', 'ClosedDate': '2014-03-19T08:21:47.193', 'Title': 'Is L= $\\{ww \\mid w \\in \\{a,b\\}^*\\}$ context-free?', 'LastEditorUserId': '12863', 'LastActivityDate': '2014-03-19T06:26:02.637', 'LastEditDate': '2014-03-19T06:26:02.637', 'AnswerCount': '1', 'CommentCount': '4', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '755', 'Tags': '<formal-languages><context-free><pumping-lemma>', 'CreationDate': '2013-12-23T19:38:09.190', 'Id': '19218'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Is $L=\\{a^nb^m|m\\geq2^n\\}$ a context-free language?</p>\n', 'ViewCount': '48', 'Title': 'Is the following language context-free? $L= \\{a^nb^m| m\\geq2^n\\}$', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-18T19:44:31.820', 'LastEditDate': '2014-01-18T19:44:31.820', 'AnswerCount': '1', 'CommentCount': '6', 'AcceptedAnswerId': '19809', 'Score': '1', 'OwnerDisplayName': 'user12941', 'PostTypeId': '1', 'Tags': '<formal-languages><context-free><pumping-lemma>', 'CreationDate': '2014-01-18T14:27:09.293', 'Id': '19807'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I know that the language $\\{a^m b^n | n\\neq m\\}$ satisfies the pumping lemma, but it's still not regular (I have to count the # of a's and b's). \nHow can I formally prove it?</p>\n", 'ViewCount': '99', 'ClosedDate': '2014-01-24T17:17:44.213', 'Title': 'Proof that {$a^m b^n$ | m!=n} is not regular', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-24T17:19:13.437', 'LastEditDate': '2014-01-24T17:19:13.437', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '13098', 'Tags': '<formal-languages><regular-languages><pumping-lemma>', 'CreationDate': '2014-01-24T14:09:48.383', 'Id': '19940'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I've been watching lectures from Coderisland on YouTube about finite state machines, DFAs and NFAs, and in one discussion he talks about how to use the pumping lemma to show how a language is not regular. I don't know quite how to apply the lemma and want to understand if I'm doing it right. If I had something like:</p>\n\n<p><strong>w</strong> = {a<sup>n</sup>b<sup>k</sup>, n =/= k}</p>\n\n<p>am I correct in that I can say that:</p>\n\n<p><strong>h</strong> = {a<sup>n</sup>b<sup>n + r</sup>, r > 0} is a subset of <strong>w</strong>, and thus if I show by the lemma that <strong>h</strong> is not regular, that <strong>w</strong> must not be regular since <strong>h</strong> is a subset of <strong>w</strong>.</p>\n\n<p>The way I would show this is as follows:</p>\n\n<ol>\n<li>h = xyz</li>\n<li>|xy| &lt;= n</li>\n<li>x = a<sup>n-r</sup></li>\n<li>y = a<sup>r</sup></li>\n<li>z = b<sup>n + r</sup></li>\n<li>xyz = a<sup>n-r</sup>a<sup>r</sup>b<sup>n + r</sup></li>\n<li>xy<sup>2</sup>z = a<sup>n-r</sup>a<sup>2r</sup>b<sup>n + r</sup> = a<sup>n + r</sup>b<sup>n + r</sup></li>\n</ol>\n\n<p>Thus <strong>h</strong> cannot be regular since a<sup>n + r</sup>b<sup>n + r</sup> is not of the form {a<sup>n</sup>b<sup>n + r</sup>, r > 0}, and since <strong>h</strong> is not regular <strong>w</strong> must not be regular, since <strong>h</strong> is an element of <strong>w</strong>.</p>\n\n<p>Have I applied it correctly? I understand how to apply it for an easy language like {a<sup>n</sup>b<sup>n</sup>}, because I can apply the lemma directly to this language, but the only way I could think of for my language was to create a subset that belongs to my language, and apply the lemma to that.</p>\n\n<p>If I haven't applied it correctly, is there a way to show that my language is not regular (or regular), using another lemma, or perhaps with closure properties?</p>\n\n<p>This is a really awesome topic, even if I don't understand the pumping lemma fully, I'm excited to explore it further!</p>\n", 'ViewCount': '71', 'Title': 'Is this the correct way to use the pumping lemma?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-26T11:38:01.893', 'LastEditDate': '2014-01-26T11:38:01.893', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '13139', 'Tags': '<formal-languages><regular-languages><pumping-lemma>', 'CreationDate': '2014-01-26T05:49:22.287', 'Id': '19985'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>There is something in the pumping lemma that I do not quite understand, namely if $s$ is at least of length $p$, then we could split it to $xyz$ such that the following conditions are met:</p>\n\n<ol>\n<li>For each $i \\geq 0$, $x(y^i)z \\in A$</li>\n<li>$|y| &gt; 0$</li>\n<li>$|xy| \\leq p$</li>\n</ol>\n\n<p>But if $i = 0$ then $|y|$ cannot be strictly greater than $0$. Isn't condition 1 contradicting condition 2? Isn't $y^0 = \\varepsilon$?</p>\n", 'ViewCount': '72', 'Title': u'How can both |y| = 0 and y\u2070 = \u03b5 hold in the Pumping lemma?', 'LastEditorUserId': '13175', 'LastActivityDate': '2014-02-05T12:45:29.647', 'LastEditDate': '2014-02-04T14:29:29.727', 'AnswerCount': '3', 'CommentCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '13175', 'Tags': '<formal-languages><regular-languages><pumping-lemma>', 'CreationDate': '2014-02-04T05:08:56.827', 'Id': '21277'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I have been trying to solve this question and am kinda stuck. Wondering on how to proceed and finish this proof. Prove that the language $ L = \\{a^{2^n} | n &gt;= 0\\} $ is not regular. I have been trying to use the pumping lemma but am stuck at:</p>\n\n<p>Suppose L were regular, let p be the pumping length given by the pumping lemma. $ w_p = 1^{2^n} $. Clearly, $ |w_p| &gt;= p $ and $w_p$ is in L. So, by the pumping lemma, there must be some choice of x, y, z satisfying the conditions of the pumping lemma; $ |xy| &lt;= n $ and $y &gt; 0$.</p>\n\n<p>I am stuck here, I do not how to proceed with solving the $(xy^iz)$ part.</p>\n\n<p>Thanks  </p>\n', 'ViewCount': '16', 'ClosedDate': '2014-02-04T23:47:45.403', 'Title': 'Pumping Lemma Question', 'LastActivityDate': '2014-02-04T22:21:37.983', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '13205', 'Tags': '<pumping-lemma>', 'CreationDate': '2014-02-04T22:21:37.983', 'Id': '21303'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>In general, how can we go about proving that union of two languages as non regular. In this case, the individual languages can be proved as non regular using pumping lemma. How can we apply pumping lemma to union of two languages ?</p>\n', 'ViewCount': '133', 'ClosedDate': '2014-02-06T10:25:42.827', 'Title': u'Prove that the language L = {a^(m+n) b^m a^n | m, n \u2265 0} \u222a {a^m b^n a^(m+n) | m, n \u2265 0} is not regular', 'LastEditorUserId': '55', 'LastActivityDate': '2014-02-06T03:30:57.917', 'LastEditDate': '2014-02-06T03:30:57.917', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '1', 'OwnerDisplayName': 'littlecegian', 'PostTypeId': '1', 'Tags': '<regular-languages><pumping-lemma>', 'CreationDate': '2014-02-05T09:09:29.763', 'Id': '21348'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<blockquote>\n  <p>Describe a regular language that cannot be accepted by any DFA that has only three states.</p>\n</blockquote>\n\n<p>I'm not really sure where to start on this and was wondering if someone could give me some tips or advice. I understand that the pumping lemma can be used to prove a language is not regular, but in this case, it should be a regular language. If anyone has any thoughts it would be appreciated.</p>\n", 'ViewCount': '512', 'Title': 'Regular language not accepted by DFA having at most three states', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-30T02:24:06.250', 'LastEditDate': '2014-03-29T11:53:14.010', 'AnswerCount': '4', 'CommentCount': '0', 'Score': '10', 'PostTypeId': '1', 'OwnerUserId': '14857', 'Tags': '<formal-languages><regular-languages><finite-automata><pumping-lemma>', 'CreationDate': '2014-02-19T22:05:01.387', 'FavoriteCount': '1', 'Id': '21826'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I'm struggling a bit to understand two of the problems we were given in class. Could someone look over my work and maybe give me a few hints?</p>\n\n<p>State whether the following languages are regular or not and prove your answer.\n$$\\{0^n1^m \\mid m \\geq 0 \\text{ and } n = 2m+1\\}$$\n$$\\{0^a1^b0^c \\mid 0 \\leq a \\leq b \\leq c \\leq 100\\}$$</p>\n\n<p>The first one appears to me as non-regular as $m$ is not finite. Then to prove that it is not regular, I used the pumping lemma method with $0^P1^\\frac{P-1}{2}$ as the string. </p>\n\n<p>For the second language, I'm not really sure if it is regular or not. I can't come up with a DFA/NFA/RegExp for it nor can I figure out how to apply the pumping lemma method to it. Is it safe to use $0^P1^P0^P$ as the string and say that if $Y$ where $Y = 0^k, 1 \\leq k \\leq P$ is appears more than once (i.e. $XYYZ$), the resulting string is not in the language and thus the language is not regular?</p>\n\n<p>Edit: I'm sorry if this question seems elementary. I've already read through most of the posts pertaining to this topic and some things were unclear to me. I was asking for someone to look over my work and make sure I followed the correct procedures. For instance, I'm still confused on the second question. The pumping lemma I used makes it seem like it is not regular but at the same time it is finite. Does that mean I used pumping lemma incorrectly? In what way did I use it incorrectly?</p>\n", 'ViewCount': '43', 'ClosedDate': '2014-02-23T10:20:00.590', 'Title': 'Proving a language is regular or non-regular', 'LastEditorUserId': '14950', 'LastActivityDate': '2014-02-23T22:41:04.843', 'LastEditDate': '2014-02-23T22:41:04.843', 'AnswerCount': '0', 'CommentCount': '10', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '14950', 'Tags': '<regular-languages><pumping-lemma>', 'CreationDate': '2014-02-23T01:36:29.023', 'Id': '21935'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': u"<p>I am working on a pumping lemma question and trying to prove that the following is not regular, but I can't finish the proof, if someone can help me it will be great.</p>\n\n<p>So I am given this language: \n$L = \\{ a^n | n = 3^k , k\u22650 \\}$ .\nOk. I choose $w = a^{3^m}$. I know for sure that $y = a^t$ ($y$ must be any number or $a$'s), where $t\u22651$. $x = a^{(3^m)-t}$ and $y = a^t$. I pump twice, so $i =2$ and  $xy = a^{(3^m)+t}$.</p>\n\n<p>Now, is this enough to finish the proof? What is my $xyz$? and how do I prove that my $w$ is not in the language?\nThank you so much for whoever decide to help me out!</p>\n", 'ViewCount': '65', 'ClosedDate': '2014-03-08T06:42:50.470', 'Title': u'Pumping lemma on {a^n | n=3^k} \u2014 help finishing the proof', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-06T18:51:30.940', 'LastEditDate': '2014-03-06T18:51:30.940', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '15347', 'Tags': '<formal-languages><regular-languages><pumping-lemma>', 'CreationDate': '2014-03-06T15:21:03.270', 'Id': '22341'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '51', 'Title': 'Using the pumping lemma for a proof by contradiction', 'LastEditDate': '2014-03-07T07:15:01.397', 'AnswerCount': '1', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '15365', 'FavoriteCount': '0', 'Body': u"<p>I'm trying to prove that the set of even-length strings with the two middle symbols being equal cannot be accepted by finite automata.  I can explain why it cannot be accepted intuitively, but I'm having trouble with the proof.  Our symbols are {a, b}.</p>\n\n<p>I allowed L = $\\{(ab)^{*{\\frac{n}{2} - 1}} aa (ab)^{*{\\frac{n}{2} - 1}}\\}$.  I know the format of the language is wonky, and will be talking to my professor about it tomorrow.  For the proof, I allowed $\\frac{n}{2} - 1$ to be the combination of symbols before and after the two elements.  So, using the Pumping Lemma's condition that |uv|\u2264 n, I allowed $u = \\frac{n}{2} -1$  and $v = n^2$ (for aa); this is obviously greater than n, but I'm having trouble understanding how to choose $u$ and $v$.  Is my assignment for these parameters correct?</p>\n", 'ClosedDate': '2014-04-01T22:08:50.070', 'Tags': '<formal-languages><regular-languages><pumping-lemma>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-07T07:15:01.397', 'CommentCount': '5', 'CreationDate': '2014-03-06T22:45:34.737', 'Id': '22356'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>How would about proving this is not regular with the pumping lemma. Please include all steps and explain all steps. I am really new with this. </p>\n\n<p>$1^{2x}0^y$ and $y&gt;= x$</p>\n\n<p>Does it matter which side you pump? How do you pick which side to pump? </p>\n\n<p>This is what I was thinking:</p>\n\n<p>$$u = 1^{2x}$$\n   $$v = 0^y$$\n   $$w = 1^{2x}0^y$$</p>\n\n<p>Am I on the right track? What else do I need to do? </p>\n', 'ViewCount': '52', 'ClosedDate': '2014-03-12T15:34:13.897', 'Title': 'Pumping lemma not regular', 'LastEditorUserId': '13354', 'LastActivityDate': '2014-03-12T13:05:00.323', 'LastEditDate': '2014-03-12T10:21:00.923', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '15591', 'Tags': '<pumping-lemma>', 'CreationDate': '2014-03-12T08:23:46.940', 'Id': '22533'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I want to show that for any language $L \\subseteq \\{ a \\}^* $, $L$ satisfies the pumping lemma for context free languages if and only if it satisfies the pumping lemma for regular languages.</p>\n\n<p>I know that every regular language is also a context free language so I tried to show that direction of the proof first but ran into some difficulties. </p>\n\n<p>Is there a more logical approach to this? Would I have to show that the conditions for both the pumping lemma for regular languages and the pumping lemma for context free grammars are equivalent for this language? </p>\n', 'ViewCount': '62', 'Title': 'Show that the pumping lemmas for context-free and regular languages are equivalent for unary languages', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-26T17:35:18.490', 'LastEditDate': '2014-03-26T08:47:34.693', 'AnswerCount': '1', 'CommentCount': '3', 'AcceptedAnswerId': '23091', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '15798', 'Tags': '<formal-languages><regular-languages><context-free><pumping-lemma>', 'CreationDate': '2014-03-26T06:50:32.380', 'Id': '23064'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I am trying to use the pumping lemma to show this language is not context free:\n$L = a^nb^{n+1}c^{2n} : n \\ge 0$</p>\n\n<p>So I took $z = a^mb^{m+1}c^{2m}$ where $|z| = 4m+1 &gt; m$. We can decompose $z = a^mb^{m+1}c^{2m}$ to $z = uvwxy$ for $|vwx| \\le m$ and $|vx| \\ge 1$.</p>\n\n<p>I am confused about what cases to consider to show this is not context free? </p>\n', 'ViewCount': '38', 'Title': 'Show L is not context free using the CFL pumping lemma', 'LastActivityDate': '2014-04-10T04:42:57.707', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '-1', 'PostTypeId': '1', 'OwnerUserId': '16610', 'Tags': '<context-free><formal-grammars><pumping-lemma>', 'CreationDate': '2014-04-10T01:51:42.690', 'Id': '23618'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>Is the language $L = \\{a^nb^m : n = 2^m\\}$ context-free?</p>\n\n<p>Assume L is a context-free language. Then $\\ \\exists p\\in \\mathbb{Z}^{+}:\\forall s\\in L\\left | s \\right |\\geq p. s = uvxyz,\\left | vy \\right |\\geq 1,\\left | vxy \\right |\\leq p. s_i = uv^{i}xy^{i}z\\in L\\forall i\\geq 0\\ $.</p>\n\n<p>Let s = $\\ a^{2^p}b^{p}\\ $</p>\n\n<p>Pumping i times will give a string of length $\\ 2^{p} + (i - 1)*j\\ $ a's and $\\ p + (i - 1)*k\\ $ b's where $\\ 1 \\leq j + k \\leq p\\ $</p>\n\n<p>Case 1: $\\ j \\neq 0\\ $ $\\ k \\neq 0\\ $</p>\n\n<p>??</p>\n\n<p>Case 2: $\\ j = 0\\ $ $\\ k \\neq 0\\ $</p>\n\n<p>??</p>\n\n<p>Case 3: $\\ j \\neq 0\\ $ $\\ k = 0\\ $</p>\n\n<p>??</p>\n\n<p>It can be concluded from this that L is not a context-free language.</p>\n", 'ViewCount': '39', 'Title': 'Is the language $L = \\{a^nb^m : n = 2^m\\}$ context-free?', 'LastEditorUserId': '16853', 'LastActivityDate': '2014-04-17T09:32:09.197', 'LastEditDate': '2014-04-17T09:12:55.693', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '23881', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '16853', 'Tags': '<pumping-lemma>', 'CreationDate': '2014-04-17T08:32:52.140', 'Id': '23880'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>How can we prove that:</p>\n\n<p>$$\nL = \\{ w_1\\#w_2 \\mid w_1 \\in w_2;\\; |w_2| &gt; |w_1|;\\; w_1 , w_2 \\in \\{0, 1\\}^*\\}\n$$</p>\n\n<p>is not context-free? </p>\n\n<p>The language defines $w_1$ as a sub-string of $w_2$, and they are separated by a $\\#$. This is easy with the CFG pumping-lemma for a slightly different language with $|w_2| \\ge |w_1|$ by using the special case of $|w_2| = |w_1|$ (i.e. $w_1 = w_2$). </p>\n\n<p>But here, $w_1$ is a proper sub-string of $w_2$ so I can't do the same. I fail to push the string out since we can always pump, for example the first symbol of $w_2$.</p>\n", 'ViewCount': '51', 'Title': 'Prove not context free', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-25T14:20:46.833', 'LastEditDate': '2014-04-25T12:55:52.150', 'AnswerCount': '1', 'CommentCount': '6', 'AcceptedAnswerId': '24104', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '8805', 'Tags': '<formal-languages><context-free><proof-techniques><pumping-lemma>', 'CreationDate': '2014-04-25T12:28:16.643', 'Id': '24100'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Is there a <code>Context-free grammar</code> for the following language:</p>\n\n<p>$L=\\{ x\\#1^m|x \\in \\{0,1\\}^* \\space and \\space the \\space m^{th} \\space char \\space in \\space x \\space is \\space 1 \\}$</p>\n\n<p>If so what is it? Because i couldn\'t find any. I also tried to prove there isn\'t (by the <a href="http://en.wikipedia.org/wiki/Pumping_lemma_for_context-free_languages" rel="nofollow">Pumping lemma for context-free languages</a>), but it\'s given that a <code>Context-free grammar</code> does exist and I found an error in my "proof".</p>\n\n<p>So what would be the grammar?</p>\n\n<hr>\n\n<p>Here\'s the big picture of my proof:</p>\n\n<p>Let\'s choose $m=n_0$ and take the word $w=0^{n_0}1\\#1^{n_0+1}$ (so that $x$ is what\'s on the left side of $\\#$) .</p>\n\n<p>According to the lemma, $w$ can be written as $uvxyz$ and some conditions hold...</p>\n\n<p>$|vxy| \\leq n_0$</p>\n\n<p>therefor, $vxy$ include only zeros ($0$\'s).</p>\n\n<p>Now let\'s choose <code>k=2</code> and pump it up:</p>\n\n<p>we get: $w_2=uv^2xy^2z$</p>\n\n<p>which means, the number of $0$\'s is now:</p>\n\n<p>$n_0 + |v| + |y| \\geq n_0 + 1$</p>\n\n<p>(since $|vy| \\geq 1$) .</p>\n\n<p>Hence, the $m$th number (the $n_0$th in our case) is not $1$. It\'s actually $0$.</p>\n\n<p>Hence, $w_2$ doesn\'t belong to $L$. Contradiction.</p>\n\n<p>Hence, $L$ isn\'t <code>Context-free</code>.</p>\n\n<hr>\n\n<p>I think i know where\'s my mistake in the proof:</p>\n\n<p>$vxy$ isn\'t necessarily only $0$\'s. It could have the last $n_0-1$ zero\'s and a $1$.</p>\n', 'ViewCount': '45', 'Title': 'Is there a Context-free grammar for this language?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-27T11:26:19.710', 'LastEditDate': '2014-04-27T11:26:19.710', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '24144', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '7931', 'Tags': '<formal-languages><context-free><pumping-lemma>', 'CreationDate': '2014-04-26T20:58:30.470', 'Id': '24140'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I am relatively new to the pumping lemma, and I have a problem here that I think I answered correctly, can anyone tell me if this works and if not why not </p>\n\n<p>The problem: $L=\\{www \\mid w \\in  \\{a,b\\}^*\\}$ </p>\n\n<p>My approach: </p>\n\n<p>take a string $www$ </p>\n\n<p>$u^* (v^k)^* w$ has to be a word in $L$ </p>\n\n<p>now let\'s split $www$ into $xyz$<br>\nso that $w_1=x, w_2=y,$ and $w_3=z$</p>\n\n<p>I then decide to say that x should be able to to "loop" twice\n$(x)^*(y^2)^*(z) = xyyz =wwww$ </p>\n\n<p>$wwww$ is not part of the language $www$ and therefore not regular</p>\n\n<p>Edit: Well my according to my understanding the pumping lemma by taking the "test string" we are looking at and splitting it into a portion that stays the same follow by a portion that is repeatable and then lastly another portion that remains the same. In my "approach" I took the test string "www" and split it into x,y, and z each respectively holding a single "w", with y being the repeatable section and the other two being the ones that remain the same. I double the y section and end up with a resulting xyyz which translates to wwww which appears as if it is not a part of the language www. I have a good feeling that I am wrong because of the condition "w is {a,b}<em>" which I think includes the empty string, and since the empty string is viable in the languages that accept wwww and www with the condition "w is {a,b}</em>" my pumping lemma is faulty. I would just like to know what I would have to do to tackle such a problem, its just a practice problem </p>\n', 'ViewCount': '48', 'ClosedDate': '2014-04-30T17:36:06.393', 'Title': 'Pumping Lemma Problem?', 'LastEditorUserId': '17221', 'LastActivityDate': '2014-05-01T17:17:44.297', 'LastEditDate': '2014-05-01T17:17:44.297', 'AnswerCount': '0', 'CommentCount': '8', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '17221', 'Tags': '<finite-automata><pumping-lemma>', 'CreationDate': '2014-04-30T15:38:50.900', 'Id': '24260'}