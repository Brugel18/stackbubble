830:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '877', 'Title': 'Are all system calls blocking?', 'LastEditDate': '2012-03-14T13:43:33.637', 'AnswerCount': '1', 'Score': '9', 'PostTypeId': '1', 'OwnerUserId': '59', 'FavoriteCount': '1', 'Body': '<p>I was reading <a href="http://www.eecg.toronto.edu/~livio/papers/flexsc-osdi10.pdf" rel="nofollow">an article</a> that describes the switch between user-space and kernel-space that happens upon a system call. The article says </p>\n\n<blockquote>\n  <p>An application expects the completion of the system call before resuming user-mode execution.</p>\n</blockquote>\n\n<p>Now, until now I was assuming that some system calls are <code>blocking</code>, whereas others are <code>non-blocking</code>. With the comment above, I am now confused. Does this mean that all system calls are blocking or did I misunderstand a concept?</p>\n', 'Tags': '<operating-systems><kernel>', 'LastEditorUserId': '59', 'LastActivityDate': '2012-03-14T13:43:33.637', 'CommentCount': '4', 'AcceptedAnswerId': '319', 'CreationDate': '2012-03-13T16:29:05.647', 'Id': '318'},831:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>After reading several sources I'm still confused about user- and kernel-level threads. </p>\n\n<p>In particular:</p>\n\n<blockquote>\n  <p>Threads can exist at both the user level and the kernel level</p>\n</blockquote>\n\n<p>What is the difference between the user level and kernel level? </p>\n", 'ViewCount': '13017', 'Title': 'What is the difference between user-level threads and kernel-level threads?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-04-22T16:11:48.700', 'LastEditDate': '2012-04-22T16:11:48.700', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '1066', 'Score': '12', 'PostTypeId': '1', 'OwnerUserId': '935', 'Tags': '<operating-systems><terminology><concurrency><kernel>', 'CreationDate': '2012-04-05T21:26:34.357', 'Id': '1065'},832:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>In other words, what advantages does <a href="http://en.wikipedia.org/wiki/Thread_%28computer_science%29#M%3aN_.28Hybrid_threading.29" rel="nofollow">Hybrid threading</a> have over 1:1 (kernel only) and N:1 (user only) threading?</p>\n\n<p><sub>This is a follow-up to <a href="http://cs.stackexchange.com/questions/1065/what-is-the-difference-between-user-level-threads-and-kernel-level-threads">What is the difference between user-level threads and kernel-level threads?</a></sub></p>\n', 'ViewCount': '343', 'Title': 'What is the purpose of M:N (Hybrid) threading?', 'LastEditorUserId': '39', 'LastActivityDate': '2012-04-06T13:46:58.783', 'LastEditDate': '2012-04-06T11:30:13.317', 'AnswerCount': '1', 'CommentCount': '3', 'AcceptedAnswerId': '1075', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '935', 'Tags': '<operating-systems><concurrency><kernel>', 'CreationDate': '2012-04-06T10:44:19.613', 'Id': '1074'},833:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': u'<p>I\xb4m not exactly sure what kind of impact these two things have on kernel design. Are servers more flexible because of running in user space, for instance, and does adding a module require a new build of a kernel?</p>\n', 'ViewCount': '147', 'Title': 'What is the difference between a module in a monolithic kernel and a server in a microkernel?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-10-05T19:33:09.897', 'LastEditDate': '2012-09-30T16:50:14.230', 'AnswerCount': '1', 'CommentCount': '5', 'AcceptedAnswerId': '4890', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '3014', 'Tags': '<operating-systems><kernel>', 'CreationDate': '2012-09-30T09:05:59.370', 'Id': '4812'},834:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>Let's say we have a fictional operating system in the user mode. Whenever an interrupt or a trap occurs, the os would switch to the Kernel mode jumping to the address determined from the interrupt vector. A malicious user could take advantage of the loophole by executing a malicious program in the kernel mode.</p>\n\n<p>Why is it dangerous ? What could have the user possibly done to achieve this and what kind of remedy would you suggest for the loop hole ?</p>\n", 'ViewCount': '121', 'Title': 'Dangerous interrupts', 'LastEditorUserId': '98', 'LastActivityDate': '2013-01-28T10:28:40.120', 'LastEditDate': '2013-01-28T10:28:40.120', 'AnswerCount': '2', 'CommentCount': '1', 'Score': '3', 'OwnerDisplayName': 'yhcowboy', 'PostTypeId': '1', 'Tags': '<operating-systems><security><kernel>', 'CreationDate': '2013-01-27T16:15:31.100', 'Id': '9240'},835:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I\'m talking about <a href="http://research.microsoft.com/en-us/projects/singularity/">this one research project</a>:</p>\n\n<p>but MS closed it in 2008. I\'ve read many articles about it, about high perfomance (30+% faster against tradinional monolithic kernels), much more secure etc. So it should be really a revolution in OS designing. Why they did it? I would be really happy if they didn\'t... So only one question i have: why? Was "effective managers" who destroyed it or some else? I\'m thinging about it for many strenuous months...</p>\n', 'ViewCount': '348', 'ClosedDate': '2013-11-10T17:27:04.057', 'Title': 'Microsoft Singularity : why closed', 'LastActivityDate': '2013-11-09T16:39:59.400', 'AnswerCount': '2', 'CommentCount': '0', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '11278', 'Tags': '<operating-systems><kernel>', 'CreationDate': '2013-11-09T12:13:20.790', 'FavoriteCount': '3', 'Id': '16844'},836:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>The question emerged while reading Ch. 3 of Rasmussen &amp; Williams <a href="http://www.gaussianprocess.org/gpml/" rel="nofollow">http://www.gaussianprocess.org/gpml/</a>. In the end of this chapter, the authors gave results for the problem of handwritten digits classification (16x16 greyscale pictures); features are 256 pixel intensities + bias. I was surprised that in such a high-dimensional problem, \'metric\' methods, like Gaussian processes with squared exponential kernel, or SVM with the same kernel, behave quite nice.</p>\n\n<p>Also, I heard sometimes that SVM is good for [essentially bag-of-word] text classification. Why aren\'t they suffering from the curse of dimensionality?</p>\n', 'ViewCount': '29', 'Title': 'Why are kernel methods with RBFs effective for handwritten digits (letters) classification?', 'LastActivityDate': '2013-11-24T12:00:02.520', 'AnswerCount': '0', 'CommentCount': '1', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '11591', 'Tags': '<machine-learning><kernel><ocr>', 'CreationDate': '2013-11-24T12:00:02.520', 'FavoriteCount': '1', 'Id': '18298'},837:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>This is more of a conceptual question.</p>\n\n<p>I have learned about Neural Nets, and I have some clue as to how Support Vector Machines work. I read somewhere however that given the appropriate kernel (is that right?), the SVM is identical to the Neural Net. Could someone who understands this please enlighten me as to how that's possible?</p>\n", 'ViewCount': '25', 'Title': 'Support Vector Machines as Neural Nets?', 'LastActivityDate': '2013-12-28T06:36:46.847', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '12414', 'Tags': '<machine-learning><neural-networks><kernel>', 'CreationDate': '2013-12-28T06:36:46.847', 'FavoriteCount': '1', 'Id': '19337'},838:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '57', 'Title': 'Is there a shell between the kernel and hardware', 'LastEditDate': '2014-01-10T18:28:49.413', 'AnswerCount': '2', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '12739', 'FavoriteCount': '1', 'Body': "<p>First and foremost, i know what a shell, kernel is. Now the dilemma.</p>\n\n<p>Today i had my systems viva in college. The examiner asked me is there a shell between the hardware and the kernel. Obviously, i said no, and the gave the usual explanation that the shell is an interpreter, it takes the user input, interprets the command and communicates with the kernel via system calls.</p>\n\n<p>He then says what if i say that there is a shell between the hardware and kernel. I said it can't because there is no point. The job of the kernel itself is to interface with the hardware why will the shell be involved.</p>\n\n<p>Then he started arguing that kernels are itself a set of programs, the how can they run another program. Now i got confused. </p>\n\n<p>So if anyone could clear my query that whether a shell exists or not. And the biggest one, how can a kernel run a program. Is it because the kernel is in memory and its starts the init process and all other programs are run by it</p>\n", 'Tags': '<operating-systems><kernel>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-13T13:40:50.870', 'CommentCount': '3', 'AcceptedAnswerId': '19647', 'CreationDate': '2014-01-10T17:35:43.623', 'Id': '19634'},839:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>System: Application</p>\n\n<p>OS: Scheduler, VMM, IPC, FS Drivers, dispatchers, VFS</p>\n\n<p>The above would be a monolithic kernel. In a monolithic kernel all core OS functions are separate from user spaaaaaace. Functions such as the FS are handled completely by the kernel. This leaves the end user/dev open to write applications that rely solely on the kernel to emulate and process the functions. The BSD tree, AIX, and HP-UX are good examples of monolithic kernels.</p>\n\n<p>System: Application</p>\n\n<p>User Mode: Application IPC, Unix Server, Drivers, File Server</p>\n\n<p>OS: Basic IPC, VMM, Scheduling</p>\n\n<p>This is a microkernel. A microkernel is responsible solely for physical emulation of the machine code. It provides a more secure functionality, but also allows for better hardware processing. User spaaaaaace is where drivers are handled, sometimes grating DMA. Also, it can improve computing processing time if the user spaaaaaace is streamlined for direct machine emulation. JXOS and various nanokernels are good examples.</p>\n\n<p>System: Application</p>\n\n<p>User Mode: Drivers, Unix Server, Application IPC</p>\n\n<p>OS: Microkernel, Kernel Drivers, IPC, HAL</p>\n\n<p>This is a hybrid kernel. A hybrid kernel is mix between a monolithic kernel and a microkernel. Software drivers are handled in user mode, but hardware drivers are handled by the kernel. This allows for a lot of flexibility in design, as some packages and application functions can run directly against the kernel. However, this leaves the kernel open to a lot of security vulnerabilities. The most well-known hybrid kernel is Windows NT.</p>\n\n<p>My architect was testing my knowledge of kernels, and this is what I sent him. He said that I wasn't wrong, I just have a very different approach to it. When interrogated about it, he just told me it was different. How is it different? Does it look different?</p>\n", 'ViewCount': '40', 'Title': 'Is my understanding of kernels correct?', 'LastActivityDate': '2014-04-03T17:25:58.583', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '16415', 'Tags': '<computer-architecture><kernel>', 'CreationDate': '2014-04-03T14:29:55.443', 'Id': '23396'},8310:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I have following structure\nstruct data{\nint count;\nchar *name;\n}</p>\n\n<p>kthread_run (threadfn,\n    data,\n    namefmt,\n    );</p>\n\n<p>Now from threadfn i am able to access data->count but i am not able to access data->name, it gives kernel cannot handle paging request.</p>\n\n<p>Any ideas how to fix this and access pointers declared in structure from a threadfn.</p>\n\n<p>Thanks</p>\n', 'ViewCount': '7', 'ClosedDate': '2014-04-28T20:57:21.077', 'Title': 'Passing Structure to Thread', 'LastActivityDate': '2014-04-28T16:53:56.677', 'AnswerCount': '0', 'CommentCount': '1', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '15406', 'Tags': '<programming-languages><functional-programming><threads><kernel>', 'CreationDate': '2014-04-28T16:53:56.677', 'Id': '24187'}