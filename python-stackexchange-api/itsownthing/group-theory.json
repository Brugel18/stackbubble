{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I cannot imagine how cohomology is related to graph theory, actually I read solid definition from <a href="http://en.wikipedia.org/wiki/Cohomology" rel="nofollow">wiki</a>, and to be honest, I cannot understand it. \ne.g I know what is homotopy (in simple term), group of functions such that I can continuously convert each of them to another one, and I think this is useful for understanding homology, but, is there similar visualization method for cohomology? (I\'m not looking for exact definition, I want to imagine it, actually this is in graph theoretic concept). for more information see introduction of <a href="http://homepages.cwi.nl/~lex/files/fkdp.pdf" rel="nofollow">this paper</a>. I want to understand it in this paper, how is useful? how to imagine it? </p>\n\n<p><sub>P.S1: my field is not related to group theory, and as in introduction author wrote, this paper doesn\'t need deep group theoretic definition! and I don\'t want to be deep in group theory. Just looking for simple way to understand them.</sub></p>\n\n<p><sub>P.S2: I think I can imagine what is free group (which is in introduction of paper), at least by Calay graph seems to be easy to imagine it. </sub></p>\n\n<p><sub>P.S3: I also asked this in math.stackexchange but I think this is something between two field and may I get some mathematical answer there and some others here (from CS point of view) to understand it well.</sub></p>\n', 'ViewCount': '144', 'LastEditorDisplayName': 'user742', 'Title': 'Visualized definition of cohomology', 'LastActivityDate': '2013-01-23T12:32:53.133', 'LastEditDate': '2013-01-23T12:32:53.133', 'AnswerCount': '1', 'CommentCount': '6', 'Score': '3', 'OwnerDisplayName': 'user742', 'PostTypeId': '1', 'Tags': '<graph-theory><group-theory>', 'CreationDate': '2013-01-22T10:51:45.317', 'FavoriteCount': '1', 'Id': '9088'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '2244', 'Title': 'What use are groups, monoids, and rings in database computations?', 'LastEditDate': '2013-02-11T19:38:25.807', 'AnswerCount': '6', 'Score': '22', 'PostTypeId': '1', 'OwnerUserId': '3131', 'FavoriteCount': '21', 'Body': '<p>Why would a company like Twitter be interest in algebraic concepts like groups, monoids and rings. <a href="https://github.com/twitter/algebird">https://github.com/twitter/algebird</a></p>\n\n<p>All I could find is:</p>\n\n<blockquote>\n  <p>Implementations of Monoids for interesting approximation algorithms,\n  such as <a href="http://stackoverflow.com/questions/14790588/what-is-twitters-interest-in-abstract-algebra">Bloom filter</a>, <a href="http://stackoverflow.com/questions/12327004/how-does-the-hyperloglog-algorithm-work">HyperLogLog</a> and <a href="http://dimacs.rutgers.edu/~graham/pubs/papers/cmencyc.pdf">CountMinSketch</a>. These allow you\n  to think of these sophisticated operations like you might numbers, and\n  add them up in hadoop or online to produce powerful statistics and\n  analytics.</p>\n</blockquote>\n\n<p>and in another part of the GitHub page:</p>\n\n<blockquote>\n  <p>It was originally developed as part of Scalding\'s Matrix API, where\n  Matrices had values which are elements of \n  <a href="http://en.wikipedia.org/wiki/Monoid#Relation_to_category_theory">Monoids</a>, <a href="http://en.wikipedia.org/wiki/Group_%28mathematics%29">Groups</a>, or <a href="http://www.math.ku.dk/~gelvin/Modules.pdf">Rings</a>. Subsequently, it was clear that the code had broader application\n  within Scalding and on other projects within Twitter.</p>\n</blockquote>\n\n<p>What could this broader application be? within Twitter and for general interest?</p>\n\n<hr>\n\n<p>It seems like composition aggregations of databases have a monoid-like structure.</p>\n\n<p>Same question on quora: \n<a href="http://www.quora.com/Twitter-1/What-is-Twitters-interest-in-abstract-algebra-with-algebird">http://www.quora.com/Twitter-1/What-is-Twitters-interest-in-abstract-algebra-with-algebird</a></p>\n\n<hr>\n\n<p>I have math background but I\'m not computer scientist. It would be great to have "real-world" uses of monoids and semi-groups.  These are normally considered useless theoretical constructs, and ignored in many abstract algebra courses (for lack of anything interesting to say).</p>\n', 'Tags': '<reference-request><discrete-mathematics><database-theory><applied-theory><group-theory>', 'LastEditorUserId': '3131', 'LastActivityDate': '2013-02-11T23:40:20.447', 'CommentCount': '5', 'AcceptedAnswerId': '9687', 'CreationDate': '2013-02-10T21:59:23.007', 'Id': '9648'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '197', 'Title': 'Bridge theorems for group theory and formal languages', 'LastEditDate': '2013-09-18T15:00:13.363', 'AnswerCount': '3', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '699', 'FavoriteCount': '3', 'Body': '<blockquote>\n  <p>Is there some natural or notable way to relate or link math <a href="http://en.wikipedia.org/wiki/Group_theory" rel="nofollow">groups</a> and CS <a href="http://en.wikipedia.org/wiki/Formal_language" rel="nofollow">formal languages</a> or some other core CS concept e.g. Turing machines?</p>\n</blockquote>\n\n<p>I am looking for references/applications. However note that I am aware of the link between semigroups and CS languages (namely via <a href="http://en.wikipedia.org/wiki/Semiautomaton" rel="nofollow">finite automata</a>). (Does this literature on semiautomata ever look at "group-automata"?)</p>\n\n<p>I have seen one paper many years ago that might come close, that converts TM transition tables into a binary operation, possibly sometimes a group in some cases, conceivably based on some kind of symmetry in the TM state table. It didn\'t explore that in particular, but also didn\'t rule it out.</p>\n\n<p>Also, in particular, regarding the large body of math research on <a href="http://en.wikipedia.org/wiki/Classification_of_finite_simple_groups" rel="nofollow">classification of finite groups</a>, does or could it have any meaning or interpretation in TCS? What is the "algorithmic lens" view of this massive edifice of mathematical research? What is it "saying" about a possible hidden structure in computation?</p>\n\n<p>This question is partly inspired by some other notes e.g.:</p>\n\n<ul>\n<li><p><a href="http://cstheory.stackexchange.com/questions/10916/uses-of-algebraic-structures-in-theoretical-computer-science?lq=1">Use of algebraic structures in TCS</a></p></li>\n<li><p><a href="http://rjlipton.wordpress.com/2013/06/20/three-theorems-about-growth/" rel="nofollow">RJ Lipton on Gromov\'s theorem</a></p></li>\n</ul>\n', 'Tags': '<formal-languages><reference-request><automata><discrete-mathematics><group-theory>', 'LastEditorUserId': '699', 'LastActivityDate': '2013-09-19T08:20:39.707', 'CommentCount': '4', 'AcceptedAnswerId': '14417', 'CreationDate': '2013-09-18T03:16:40.020', 'Id': '14398'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I\'m taking a class on graph theory that uses "Graph Theory (Graduate Texts in Mathematics)" by Bondy and Murty. One of the questions is about Cayley graphs and the n-cube, and I don\'t understand how to interpret it. It runs as follows:</p>\n\n<blockquote>\n  <p>Let $\\Gamma$ be a group and $S$ be a subset of $\\Gamma$ not including the\n  identity element. Suppose that the inverse of every element in $S$ also\n  belongs to $S$. The Cayley graph of $\\Gamma$ with respect to $S$ is the graph\n  $CG(\\Gamma, S)$ with vertex set $\\Gamma$ in which two vertices $x$ and $y$ are\n  adjacent iff $xy^{-1}\\in S$.</p>\n</blockquote>\n\n<p>Okay. I follow so far.</p>\n\n<blockquote>\n  <p>Recall that the n-cube is the graph whose vertex set is the set of all\n  n-tuples of 0s and 1s, where two n-tuples are adjacent if they differ\n  in precisely one coordinate.</p>\n</blockquote>\n\n<p>Makes sense.</p>\n\n<blockquote>\n  <p>Show that the n-cube is a Cayley graph.</p>\n</blockquote>\n\n<p>What does it mean to talk about "$xy$" when $x$ and $y$ are n-tuples? What is the inverse of an n-tuple?</p>\n\n<p>Someone I asked about the problem suggested that I treat $\\Gamma$ here as the additive group $({\\mathbb Z}/2{\\mathbb Z})^n$, and so take $xy^{-1}$ to mean elementwise subtraction of $y$ from $x$, mod 2. But then it seems like $(0, 0, ..., 0)\\in\\Gamma$ and, since it\'s the identity element, every vertex will have an edge connecting to it, and that isn\'t what the n-cube looks like. Googling, I also see that there is an <a href="http://en.wikipedia.org/wiki/Tuple#Tuples_as_nested_sets" rel="nofollow">interpretation of tuples as nested sets</a>, but then I don\'t see how the product of two nested sets would ever be in S, since it will have a different cardinality from either of the original tuples. Interpreting the tuples as vectors can\'t work either since then $xy^{-1}$ will have different dimensions than either of the original tuples.</p>\n\n<p>What is this question asking?</p>\n', 'ViewCount': '48', 'Title': 'n-Cube as a Cayley Graph', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-13T10:06:40.313', 'LastEditDate': '2014-04-13T10:03:00.093', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '23733', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '16612', 'Tags': '<graph-theory><terminology><group-theory>', 'CreationDate': '2014-04-13T03:07:11.680', 'Id': '23724'}