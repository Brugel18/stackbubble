3090:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '249', 'Title': 'What are some problems which are easily solved by human brain but which would take more time computers?', 'LastEditDate': '2013-02-18T22:59:58.213', 'AnswerCount': '5', 'Score': '2', 'OwnerDisplayName': 'avi', 'PostTypeId': '1', 'OwnerUserId': '6665', 'Body': '<p>Are there any problems which can be solved by human brain in a very less time but a computer may take a lot of time or a computer could never solve it ?</p>\n', 'Tags': '<algorithms><artificial-intelligence><computer-vs-human>', 'LastEditorUserId': '157', 'LastActivityDate': '2013-02-20T15:17:13.653', 'CommentCount': '2', 'AcceptedAnswerId': '9937', 'CreationDate': '2013-02-18T16:03:37.297', 'Id': '9911'},3091:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p><strong>Updated based on comments:</strong></p>\n\n<p>In what ways can we distinguish a human being doing certain activities online and a bot programmed to do similar activities, say checking email, downloading some music files, shopping on ebay, searching on Google etc., or maybe trying to deface/hack a website, brute force a log-in password etc. </p>\n\n<p>To limit the scope of the question and make it more clear, let us restrict our observations <em>only</em> to network-oriented behavior, some examples being- the amount of time spent doing XYZ thing online, the amount/type of data downloaded (say) from a file sharing website, the number of friends/followers on Social media websites, etc. </p>\n\n<p>I guess it should possible to obtain some 'patterns' which will distinguish human behavior and programmed behavior. </p>\n\n<p>The Turing test is not what I am looking for. </p>\n\n<p>What techniques can be useful here? Machine learning? Game theory? </p>\n\n<p>References to relevant academic/research articles will also be good. </p>\n", 'ViewCount': '171', 'Title': 'In what ways can we distinguish between a human and bot behavior?', 'LastEditorUserId': '4190', 'LastActivityDate': '2013-08-06T08:32:41.143', 'LastEditDate': '2013-08-06T08:32:41.143', 'AnswerCount': '0', 'CommentCount': '5', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '4190', 'Tags': '<machine-learning><artificial-intelligence><game-theory><computer-vs-human>', 'CreationDate': '2013-08-03T05:32:35.383', 'Id': '13580'},3092:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '156', 'Title': 'Which is the equivalent processing of human brain in terms of computer processing?', 'LastEditDate': '2014-01-28T08:23:06.760', 'AnswerCount': '2', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '12657', 'FavoriteCount': '1', 'Body': '<p>How many flops my brain can process, or how many GHz is a human brain capable of?\nIs it valid to think that each celular brain is like a small cpu? (like cuda architecture). Our brains works in parallel, right?</p>\n', 'Tags': '<terminology><human-computing><computer-vs-human>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-28T11:46:18.233', 'CommentCount': '1', 'AcceptedAnswerId': '20031', 'CreationDate': '2014-01-27T20:04:40.527', 'Id': '20016'},3093:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Let me clarify:</p>\n\n<p>Given a scatterplot of some given number of points n, if I want to find the closest point to any point in the plot mentally, I can immediately ignore most points in the graph, narrowing my choices down to some small, constant number of points nearby.</p>\n\n<p>Yet, in programming, given a set of points n, in order to find the closest point to any one, it requires checking every other point, which is ${\\cal O}(n)$ time.</p>\n\n<p>I am guessing that the visual sight of a graph is likely the equivalent of some data structure I am incapable of understanding; because with programming, by converting the points to a more structured method such as a quadtree, one can find the closest points to $k$ points in $n$ in $k\\cdot\\log(n)$ time, or ammortized ${\\cal O}(\\log n)$ time.</p>\n\n<p>But there is still no known ${\\cal O}(1)$ ammortized algorithms (that I can find) for point-finding after data restructuring.</p>\n\n<p>So why does this appear to be possible with mere visual inspection?</p>\n', 'ViewCount': '11181', 'Title': 'Why can I look at a graph and immediately find the closest point to another point, but it takes me O(n) time through programming?', 'LastEditorUserId': '13022', 'LastActivityDate': '2014-03-24T14:59:51.437', 'LastEditDate': '2014-03-17T11:56:21.750', 'AnswerCount': '13', 'CommentCount': '13', 'Score': '67', 'PostTypeId': '1', 'OwnerUserId': '15762', 'Tags': '<algorithms><computer-vs-human>', 'CreationDate': '2014-03-17T06:05:56.817', 'FavoriteCount': '23', 'Id': '22693'},3094:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>In a normal CAPTCHA scenario, a computer creates a challenge and a correct response to it.  (The challenge is an image of distorted text, for instance, and the response is the characters depicted.)  These are constructed so that hopefully a human can easily determine the response from the challenge, but a computer cannot.  Ordinarily only the originating computer, which already knows the correct response, can determine whether a given response was correct.</p>\n\n<p>My question: is it possible to create a CAPTCHA that computers can verify, but not solve?  In other words, is it possible to create a scenario that looks like this:</p>\n\n<p>Computer A generates a challenge, sends it to Human B and Computer C</p>\n\n<p>Computer C cannot feasibly determine the correct response, other than by brute-force search (which can hopefully be made impractical by the size of the response.)</p>\n\n<p>Human B can feasibly determine the correct response.  ("Feasibly" is not easy to define.  We need the response to be much bigger than normal CAPTCHAs in order to deter simple brute-force searching by computers, so "as easy as a normal CAPTCHA" is going to be impossible.  But it\'s not out of the realm of possibility to make a human type in a large response.  It\'d just be really annoying. A few hundred printable characters can get to 2048 bits, for instance.  So as a rough definition: it\'s allowed it to be annoying as hell, but it has to at least be feasible for a person.  Assume the person\'s physical and mental abilities are roughly average for a literate computer user.)</p>\n\n<p>If Human B sends Computer C the correct response, Computer C can feasibly verify that the response is correct, without contacting computer A or having any prior knowledge other than the challenge.</p>\n\n<p>Would it be possible, under today\'s technology and knowledge, to create such a protocol?</p>\n\n<p>Furthermore, would it be possible to design the protocol such that even Computer A can\'t determine the correct response to the challenge it just generated without human input--and Computer C can verify that Computer A could not have known the response without a human providing the solution?  If this all this can be achieved, then the result is analogous to the "proof of work" seen in bitcoin and other protocols.  Instead of a proof of computational work, we\'d have a proof of <em>human</em> work--the combination of the challenge and correct response would constitute proof that a human spent some marginal amount of effort.  This proof would then be verifiable by any computer.  Is such a thing even remotely plausible?</p>\n\n<p>Of course, at some point in the future computers will probably overtake humans altogether.  Once that happens, there will not be any problems that are feasible for a human but not a computer, and therefore no CAPTCHAs or CAPTCHA-like protocols will be possible.</p>\n\n<p>But what about under currently known human and computer abilities?</p>\n', 'ViewCount': '56', 'Title': 'Is there a way to create a "captcha"-like problem that computers can verify, but only humans can solve?', 'LastActivityDate': '2014-03-23T08:30:40.020', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '16017', 'Tags': '<computer-vs-human><human-computing>', 'CreationDate': '2014-03-23T07:43:13.560', 'FavoriteCount': '2', 'Id': '22966'},3095:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>In computer science it is often assumed that a human mind can be reduced to a Turing machine.  This is the assumption that underlies the field of artificial intelligence.</p>\n\n<p>However, it is an assumption, one that has neither been proven or disproven.</p>\n\n<p>Is there any kind of test within our current capabilities where we can prove/disprove this assumption?</p>\n\n<p>If not, is there any evidence that would suggest one way or another?</p>\n\n<p>Here is a similar question I asked awhile back on theoretical computer science:</p>\n\n<p><a href="http://cstheory.stackexchange.com/questions/3170/human-intelligence-and-algorithms">http://cstheory.stackexchange.com/questions/3170/human-intelligence-and-algorithms</a></p>\n', 'ViewCount': '91', 'Title': 'What would show a human mind is/is not reducible to a Turing machine?', 'LastEditorUserId': '17264', 'LastActivityDate': '2014-05-02T00:42:43.470', 'LastEditDate': '2014-05-02T00:12:58.680', 'AnswerCount': '1', 'CommentCount': '8', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '17264', 'Tags': '<turing-machines><artificial-intelligence><computer-vs-human>', 'CreationDate': '2014-05-01T23:52:31.677', 'FavoriteCount': '1', 'Id': '24312'}