{'Body': '<p>I\'m reading through <code>"Computers and Intractability: A guide to the Theory of NP-Completeness" by Michael R. Garey and David S. Johnson, p. 20</code> and I came across this concept of a function that is polynomially related to input lengths obtained using some encoding scheme. Let $$Len:D_{\\Pi}\\rightarrow \\mathbb Z^+$$ be a function that maps instances $\\in D_{\\Pi}$ (the set of instances of decision problem $\\Pi$) to positive integers (lengths). Let $x$ be the string obtained from $I\\in D_{\\Pi}$ under some encoding $e$. If there exist polynomials $p$ and $p\'$ such that $$Len(I) \\le p(|x|)$$ and $$|x| \\le p\'(Len(I)),$$ We say that $Len$ is polynomially related to the input lengths obtained by the encoding $e$. I cannot digest that; my understanding is that two encodings are polynomially related if converting from one another requires a polynomial amount of time. Can anybody clarify things a bit?</p>\n', 'ViewCount': '118', 'Title': 'Polynomially related lengths under two different encodings', 'LastEditorUserId': '19', 'LastActivityDate': '2012-09-09T01:38:36.957', 'LastEditDate': '2012-09-09T01:38:36.957', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '3472', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '2499', 'Tags': '<complexity-theory><polynomial-time><encoding-scheme>', 'CreationDate': '2012-09-07T20:30:18.560', 'Id': '3462''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I\'m looking at collision detection in communication protocols, in particular <a href="http://en.wikipedia.org/wiki/Carrier_sense_multiple_access_with_collision_detection" rel="nofollow">Carrier sense multiple access with collision detection (CSMA/CD)</a>. According to what I\'ve read on Wikipedia, a collision seems to cause the wave of the outgoing signal and the wave of the incoming signal to overlap. Thus, the signal has values with more amplitude than allowed for a "1-bit". This could be used as a working collision detection algorithm.</p>\n\n<p>However, what\'s the use of the "Jam signal", as explained in <a href="http://en.wikipedia.org/wiki/Carrier_sense_multiple_access_with_collision_detection" rel="nofollow">the same Wikipedia article</a>, then? It says that the CRC has to be faulted, but we already have a collision detection algorithm.</p>\n', 'ViewCount': '308', 'Title': 'Jamming signal useless in CSMA / CD?', 'LastEditorUserId': '39', 'LastActivityDate': '2013-01-15T20:44:57.460', 'LastEditDate': '2013-01-15T20:44:57.460', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '8949', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '3181', 'Tags': '<computer-networks><communication-protocols><encoding-scheme>', 'CreationDate': '2013-01-15T07:55:13.747', 'Id': '8943''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Popular view tells us that any kind of information is just a collection of bits, that is zeroes and ones placed in a particular order. I was thus having this thought.</p>\n\n<p>Suppose that I have some kind of file such as a text document, a PDF or anything else and that I also have a memory so perfect that I can remember the file exactly in its binary format, i.e. the number and place of zeroes and ones. But nothing else.</p>\n\n<p>My question would then be if, in practice, it would be possible to reconstruct my initial file (without imposing any assumptions on what format it takes) from just this binary format.</p>\n\n<p>Please be advised that I am not an expert in computer science and I do have only some very basic understanding. I do hope though this question fits here.</p>\n', 'ViewCount': '163', 'Title': 'Reconstructing files from binary', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-02T07:56:19.220', 'LastEditDate': '2013-04-02T07:56:19.220', 'AnswerCount': '3', 'CommentCount': '1', 'AcceptedAnswerId': '10951', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '7519', 'Tags': '<encoding-scheme>', 'CreationDate': '2013-03-31T18:51:25.970', 'Id': '10944''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Can someone explain in plain English what "two\'s complement integer" means? I read this: </p>\n\n<blockquote>\n  <p>in Java long is a 64-bit signed two\'s complement integer</p>\n</blockquote>\n', 'ViewCount': '766', 'Title': "What are two's complement integers?", 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-02T08:11:47.357', 'LastEditDate': '2013-04-02T08:11:47.357', 'AnswerCount': '3', 'CommentCount': '1', 'Score': '1', 'OwnerDisplayName': 'Gandalf', 'PostTypeId': '1', 'Tags': '<terminology><integers><encoding-scheme>', 'CreationDate': '2013-04-01T14:45:44.883', 'Id': '10958''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>In some books and on the internet I occasionally find "pure binary" and "binary" on its own, is there a difference between these two terms? If so, can someone describe briefly what they are?</p>\n', 'ViewCount': '114', 'Title': 'Is there a difference between pure binary and binary?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-21T16:51:11.620', 'LastEditDate': '2013-04-21T15:53:23.217', 'AnswerCount': '2', 'CommentCount': '2', 'AcceptedAnswerId': '11467', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '7824', 'Tags': '<terminology><encoding-scheme>', 'CreationDate': '2013-04-21T14:09:26.617', 'Id': '11462''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I have the following exam question for a multimedia exam in college and I have absolutely no idea where to start.</p>\n\n<p><img src="http://i.stack.imgur.com/1xQmy.png" alt="lzwquestion"></p>\n\n<p>I know how the decoder algorithm should work but I have no idea how to do it on paper, to a binary string.</p>\n\n<p>If anybody could point me in the right direction I would really appreciate it!!</p>\n\n<p><strong>Edit</strong>\nHere is a picture of my understanding of the algorithm so far just using symbols.</p>\n\n<p><img src="http://i.stack.imgur.com/j5s2Y.jpg" alt="Lzw Encode / Decode"></p>\n', 'ViewCount': '183', 'Title': 'Decoding a binary message with LZW dictionary', 'LastEditorUserId': '8082', 'LastActivityDate': '2013-11-08T07:40:14.573', 'LastEditDate': '2013-05-07T18:16:15.847', 'AnswerCount': '1', 'CommentCount': '5', 'Score': '-1', 'PostTypeId': '1', 'OwnerUserId': '8082', 'Tags': '<encoding-scheme><lempel-ziv>', 'CreationDate': '2013-05-07T17:05:53.507', 'Id': '11857''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>How to find the smallest difference between two numbers in a sorted list using divide-and-conquer approach? For example,</p>\n\n<pre><code>   (smallest-dif '(5 500 510 670 750 10000)) =&gt; 10\n</code></pre>\n", 'ViewCount': '135', 'Title': 'Finding the difference between two number in a sorted list using divide-and-conquer', 'LastActivityDate': '2013-07-03T07:59:38.970', 'AnswerCount': '2', 'CommentCount': '3', 'Score': '-2', 'PostTypeId': '1', 'OwnerUserId': '8983', 'Tags': '<encoding-scheme><divide-and-conquer>', 'CreationDate': '2013-07-03T05:53:57.913', 'Id': '13045''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I have a table in which some values are repeated often as shown in the figure below. I want to encode that table such that it makes use of less memory. I have heard about run length encoding (RLE) but I would like to know if there are any other such encoding techniques or algorithms which can perform better than RLE or their performance is almost equivalent to RLE.</p>\n\n<p><img src="http://i.stack.imgur.com/rGPpF.png" alt="enter image description here"></p>\n', 'ViewCount': '83', 'Title': 'Encoding algorithms better than or equivalent to Run Length Encoding', 'LastEditorUserId': '4624', 'LastActivityDate': '2013-10-26T04:32:08.603', 'LastEditDate': '2013-10-26T04:32:08.603', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '4624', 'Tags': '<algorithms><encoding-scheme>', 'CreationDate': '2013-10-25T20:55:20.093', 'Id': '16431''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '172', 'Title': 'How do I find the shortest representation for a subset of a powerset?', 'LastEditDate': '2013-11-12T12:05:50.837', 'AnswerCount': '1', 'Score': '10', 'PostTypeId': '1', 'OwnerUserId': '1575', 'FavoriteCount': '1', 'Body': "<p>I'm looking for an efficient algorithm for the following problem or a proof of NP-hardness.</p>\n\n<p>Let $\\Sigma$ be a set and $A\\subseteq\\mathcal{P}(\\Sigma)$ a set of subsets of $\\Sigma$. Find a sequence $w\\in \\Sigma^*$ of least length such that for each $L\\in A$, there is a $k\\in\\mathbb{N}$ such that $\\{ w_{k+i} \\mid 0\\leq i &lt; |L| \\} = L$.</p>\n\n<p>For example, for $A = \\{\\{a,b\\},\\{a,c\\}\\}$, the word $w = bac$ is a solution to the problem, since for $\\{a,b\\}$ there's $k=0$, for $\\{a,c\\}$ there's $k=1$.</p>\n\n<p>As for my motivation, I'm trying to represent the set of edges of a finite automaton, where each edge can be labeled by a set of letters from the input alphabet. I'd like to store a single string and then keep a pair of pointers to that string in each edge. My goal is to minimize the length of that string.</p>\n", 'Tags': '<algorithms><formal-languages><encoding-scheme>', 'LastEditorUserId': '1575', 'LastActivityDate': '2013-11-18T21:37:48.757', 'CommentCount': '11', 'AcceptedAnswerId': '18093', 'CreationDate': '2013-11-11T10:54:26.300', 'Id': '17914''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Does the term <em>schema</em>, in the context of describing a structure, refer to the actual structure of the data, or the <em>description</em> of this structure? I.e. can I talk about the schema of an entity without a <em>schema language</em>?</p>\n\n<p>For example, suppose I am writing documentation for some JSON API, that always returns a particular structure, say:</p>\n\n<pre><code>{ \n   "name" : "jeroen",\n   "age" :  28\n}\n</code></pre>\n\n<p>Can I say that the <em>schema</em> for the payload returned by this API includes required values for "name" and "age"? Or does the term exclusively refer to another document that formally describes this structure using a schema language of some sort? In that case, what is another appropriate term to refer to the recurring pattern in the structure?</p>\n\n<p>The Github API, has a section titled schema: <a href="http://developer.github.com/v3/#schema" rel="nofollow">http://developer.github.com/v3/#schema</a>. However, the word schema is not mentioned in the text itself, nor do they use any schema language. This would suggest that schema is just a general term for the structure/attributes of the output. Unless they consider english as a schema language, in which case the entire page is a schema. Hmmm.</p>\n', 'ViewCount': '77', 'Title': 'Precise definition of term: *schema*', 'LastEditorUserId': '11059', 'LastActivityDate': '2013-11-22T20:33:50.670', 'LastEditDate': '2013-11-22T19:56:19.423', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '18263', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '11059', 'Tags': '<terminology><encoding-scheme>', 'CreationDate': '2013-11-20T01:22:42.130', 'Id': '18181''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>The set of all Turing machines is said to be countable. The central idea of the proof of this fact is that every Turing machine can be written as a finite string of characters. I am having trouble seeing how this could be true.</p>\n\n<p>If we formally define a Turing machine as having a tape language $\\{0, 1, \\sqcup, x\\}$ and input language $\\{0, 1\\}$, then I can sort of see how any Turing machine could be encoded.</p>\n\n<p>However, many books allow other symbols, such as $a$ or $3$, etc., to be part of the input language. I've heard people say that this is okay because we could represent such characters as a string like $0101$ or $1011$ or whatever, much like how Unicode represents code points consisting of multiple code units, or just how any computer represents anything at all!</p>\n\n<p>But here is my problem with this. If we are trying to construct an actual function $f$ from the set of all Turing machines $\\mathscr{M}$ to $\\mathbb{N}$, then every Turing machine must be encoded in the same way. That is, we can't have encodings of different lengths, so that 01 represents $01$ for one Turing machine and represents $3$ for another. That is, unless we have some encoding at the beginning of each Turing machine which explains how the machine is to be decoded. But even then, this encoding itself must be universal.</p>\n\n<p>The problem is much like the charset problem for HTML pages. That is, that a web browser must know the encoding of the page before it can decipher a command in the HTML to encode the page a certain way. This was solved for web pages by having the encoding command characters (<code>meta charset=utf-8</code> for example) be the same in all encodings. But then the encoding itself is stored elsewhere. </p>\n\n<p>Anyway, my question is how we resolve this apparent conundrum. How does one encode a Turing machine with a finite input language of any length so that one can make <strong>one</strong> function from $\\mathscr{M}$ to $\\mathbb{N}$?</p>\n", 'ViewCount': '42', 'Title': 'A string representation of any Turing machine', 'LastActivityDate': '2014-03-01T23:29:09.370', 'AnswerCount': '1', 'CommentCount': '7', 'AcceptedAnswerId': '22175', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '12588', 'Tags': '<turing-machines><encoding-scheme>', 'CreationDate': '2014-03-01T22:28:33.390', 'Id': '22169''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>When using 2's complement with 4 bits, the largest positive int I can represent is 0111. The smallest negative one is 1000.</p>\n\n<p>The smallest int should intuitively be the negative of 0111 - 1 = 0110 since we can represent one more positive than negative int.</p>\n\n<p>If we invert the bits of 0110 and then add 1, however, we get 1010, which differs from 1000. What am I doing wrong?</p>\n", 'ViewCount': '20', 'Title': "Why do I not get the correct smallest possible value in 2's complement?", 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-15T11:30:43.303', 'LastEditDate': '2014-03-15T11:30:43.303', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '-1', 'PostTypeId': '1', 'OwnerUserId': '3003', 'Tags': '<encoding-scheme><number-formats>', 'CreationDate': '2014-03-15T08:47:24.770', 'Id': '22645''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}