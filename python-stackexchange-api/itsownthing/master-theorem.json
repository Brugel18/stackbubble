{'Body': '<p>This is the recursive formula for which I\'m trying to find an asymptotic closed form by the <a href="http://en.wikipedia.org/wiki/Master_theorem" rel="nofollow">master theorem</a>:\n$$T(n)=9T(n/27)+(n \\cdot \\lg(n))^{1/2}$$</p>\n\n<p>I started with $a=9,b=27$ and $f(n)=(n\\cdot \\lg n)^{1/2}$  for using the master theorem by $n^{\\log_b(a)}$, and if so $n^{\\log_{27}(9)}=n^{2/3}$ but I don\'t understand how to play with the $(n\\cdot \\lg n)^{1/2}$. </p>\n\n<p>I think that the $(n\\cdot \\lg n)^{1/2}$ is bigger than $n^{2/3}$ but I\'m sure I skip here on something. </p>\n\n<p>I think it fits to the third case of the master theorem.</p>\n', 'ViewCount': '545', 'Title': 'Solve a recurrence using the master theorem', 'LastEditorUserId': '98', 'LastActivityDate': '2013-02-02T13:23:52.493', 'LastEditDate': '2013-02-02T13:23:52.493', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '1297', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '747', 'Tags': '<algorithm-analysis><asymptotics><recurrence-relation><master-theorem>', 'CreationDate': '2012-04-16T01:19:14.927', 'Id': '1296''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I applied the Master theorem to a recurrence for a running time I encountered (this is a simplified version):</p>\n\n<p>$$T(n)=4T(n/2)+O(r)$$</p>\n\n<p>$r$ is independent of $n$. Case 1 of the Master theorem applies and tells us that $T(n)=O(n^2)$.</p>\n\n<p>However, this hides a constant dependent on $r$ in the big-oh notation: our recurrence has depth $O(\\log_2 n)$ so at the final level we have $O(4^{\\log_2 n})=O(n^2)$ subproblems, each of which takes $O(r)$ time to be handled. This means the actual running time is $O(n^2 r)$ (or worse: this analysis only talks about the lowest level).</p>\n\n<p>This is my actual recursion:</p>\n\n<p>$$T(n)=r^2T(n/r)+O(nr^2)$$</p>\n\n<p>Is there a method similar to the Master theorem for these kinds of recursions?</p>\n', 'ViewCount': '227', 'Title': 'Master theorem and constants independent of $n$', 'LastEditorUserId': '98', 'LastActivityDate': '2013-02-02T13:24:14.520', 'LastEditDate': '2013-02-02T13:24:14.520', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '92', 'Tags': '<algorithm-analysis><asymptotics><recurrence-relation><mathematical-analysis><master-theorem>', 'CreationDate': '2012-04-29T17:39:46.100', 'FavoriteCount': '2', 'Id': '1576''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I am trying to find a $\\Theta$ bound for the following recurrence equation:</p>\n\n<p>$$ T(n) = 2 T(n/2) + T(n/3) + 2n^2+ 5n + 42 $$ </p>\n\n<p>I figure Master Theorem is inappropriate due to differing amount of subproblems and divisions. Also recursion trees do not work since there is no $T(1)$ or rather $T(0)$. </p>\n', 'ViewCount': '536', 'Title': 'Solving Recurrence Equations containing two Recursion Calls', 'LastEditorUserId': '8246', 'LastActivityDate': '2013-09-28T12:36:36.840', 'LastEditDate': '2013-09-28T12:36:36.840', 'AnswerCount': '3', 'CommentCount': '1', 'Score': '11', 'PostTypeId': '1', 'OwnerUserId': '1382', 'Tags': '<asymptotics><recurrence-relation><master-theorem>', 'CreationDate': '2012-05-05T23:47:48.517', 'FavoriteCount': '1', 'Id': '1682''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '990', 'Title': 'Master theorem not applicable?', 'LastEditDate': '2013-02-02T13:24:28.657', 'AnswerCount': '2', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '1561', 'FavoriteCount': '1', 'Body': '<p>Given the following recursive equation</p>\n\n<p>$$ T(n) = 2T\\left(\\frac{n}{2}\\right)+n\\log n$$ we want to apply the Master theorem and note that</p>\n\n<p>$$ n^{\\log_2(2)} = n.$$</p>\n\n<p>Now we check the first two cases for $\\varepsilon &gt; 0$, that is whether</p>\n\n<ul>\n<li>$n\\log n \\in O(n^{1-\\varepsilon})$ or</li>\n<li>$n\\log n \\in \\Theta(n)$.</li>\n</ul>\n\n<p>The two cases are not satisfied. So we have to check the third case, that is whether</p>\n\n<ul>\n<li>$n\\log n \\in \\Omega(n^{1+\\varepsilon})$ .</li>\n</ul>\n\n<p>I think the third condition is not satisfied either. But why? And what would be a good explanation for why the Master theorem cannot be applied in this case?</p>\n', 'Tags': '<proof-techniques><asymptotics><recurrence-relation><master-theorem>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-02-24T09:34:21.943', 'CommentCount': '5', 'AcceptedAnswerId': '2388', 'CreationDate': '2012-05-20T20:45:35.817', 'Id': '1957''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '147', 'Title': 'Finding lambda of Master Theorem', 'LastEditDate': '2013-02-02T13:23:30.387', 'AnswerCount': '1', 'Score': '5', 'OwnerDisplayName': 'Luc Peetersen', 'PostTypeId': '1', 'OwnerUserId': '1722', 'FavoriteCount': '1', 'Body': '<p>Suppose I have a recurrence like $T(n)=2T(n/4)+\\log(n)$ with $a=2, b=4$ and $f(n)=\\log(n)$.</p>\n\n<p>That should be <a href="http://en.wikipedia.org/wiki/Master_theorem#Case_1" rel="nofollow">case 1 of the Master theorem</a> because $n^{1/2}&gt;\\log(n)$. There is also a lambda in case 1: $f(n)=O(n^{(1/2)-\\lambda})$. Is this correct? And how can I find this lambda?</p>\n', 'Tags': '<proof-techniques><asymptotics><recurrence-relation><master-theorem>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-02-02T13:23:30.387', 'CommentCount': '1', 'AcceptedAnswerId': '2195', 'CreationDate': '2012-06-01T21:00:09.973', 'Id': '2192''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '620', 'Title': 'Solving $T(n)= 3T(\\frac{n}{4}) + n\\cdot \\lg(n)$ using the master theorem', 'LastEditDate': '2013-09-28T12:36:33.403', 'AnswerCount': '1', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '1758', 'FavoriteCount': '1', 'Body': '<p><em>Introduction to Algorithms</em>, 3rd edition (p.95) has an example of how to solve the recurrence</p>\n\n<p>$$\\displaystyle T(n)= 3T\\left(\\frac{n}{4}\\right) + n\\cdot \\log(n)$$</p>\n\n<p>by applying the Master Theorem.</p>\n\n<p>I am very confused by how it is done. So, $a=3, b=4, f(n) = n\\cdot \\log(n)$<br>\nFirst step is to compare $n^{\\log_b a} = n^{\\log_4 3}= O(n^{0.793})$ with $f(n)$.</p>\n\n<p>I have no clue on how they compared this. The book explains: </p>\n\n<blockquote>\n  <p>$f(n) = \\Omega (n^{\\log_4 3+\\epsilon })$, where $\\epsilon \\approx 0.2$, case 3 applies if we can show that the regularity condition holds for $f(n).$ </p>\n</blockquote>\n\n<p>Followed by: </p>\n\n<blockquote>\n  <p>For sufficiently large n, we have that: $af\\left(\\frac{n}{b}\\right) = 3\\left(\\frac{n}{4}\\right)\\log\\left(\\frac{n}{5}\\right) \\le\\left(\\frac{3}{4}\\right)n \\log n = cf(n)~ for~ c=\\frac{3}{4}.$</p>\n</blockquote>\n\n<p>Where did $3\\left(\\frac{n}{4}\\right)$ come from?</p>\n', 'Tags': '<asymptotics><recurrence-relation><landau-notation><mathematical-analysis><master-theorem>', 'LastEditorUserId': '39', 'LastActivityDate': '2013-09-28T12:36:33.403', 'CommentCount': '0', 'AcceptedAnswerId': '3505', 'CreationDate': '2012-09-11T03:32:38.143', 'Id': '3504''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': u'<p>I have been reading <a href="http://en.wikipedia.org/wiki/Introduction_to_Algorithms" rel="nofollow"><em>Introduction to Algorithms</em> by Cormen et al.</a> and I\'m reading <a href="http://books.google.co.uk/books?id=NLngYyWFl_YC&amp;pg=PA73" rel="nofollow">the statement of the Master theorem starting on page 73</a>. In case 3 there is also a regularity condition that needs to be satisfied to use the theorem:</p>\n\n<blockquote>\n  <p>... 3. If </p>\n  \n  <p>$\\qquad \\displaystyle f(n) = \\Omega(n^{\\log_b a + \\varepsilon})$</p>\n  \n  <p>for some constant $\\varepsilon &gt; 0$ and if</p>\n  \n  <p>$\\qquad \\displaystyle af(n/b) \\leq cf(n)$ \xa0\xa0\xa0\xa0\xa0[<strong>this is the regularity condition</strong>]</p>\n  \n  <p>for some constant $c &lt; 1$ and for all sufficiently large $n$, then .. </p>\n</blockquote>\n\n<p>Can someone tell me why the regularity condition is needed? How does the theorem fail if the condition is not satisfied?</p>\n', 'ViewCount': '2056', 'Title': 'Why is there the regularity condition in the master theorem?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-10-04T09:41:58.807', 'LastEditDate': '2012-10-04T09:41:58.807', 'AnswerCount': '2', 'CommentCount': '4', 'Score': '7', 'OwnerDisplayName': 'GrowinMan', 'PostTypeId': '1', 'Tags': '<algorithms><asymptotics><mathematical-analysis><landau-notation><master-theorem>', 'CreationDate': '2012-10-02T03:54:52.210', 'FavoriteCount': '2', 'Id': '4854''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Prove or disprove the following statements:</p>\n\n<ol>\n<li><p>$T\\left( n \\right) = 2T\\left( {\\frac{n}{2}} \\right) + f\\left( n \\right),f\\left( n \\right) = \\theta \\left( {{n^2}} \\right) $ then $ {\\rm{ }}T\\left( n \\right) = \\theta \\left( {f\\left( n \\right)} \\right) $ for all $ {\\rm{ n = }}{{\\rm{2}}^k}$</p></li>\n<li><p>$T\\left( n \\right) = 2T\\left( {\\frac{n}{2}} \\right) + f\\left( n \\right),f\\left( n \\right) = \\Omega \\left( {{n^2}} \\right) $ then $ {\\rm{ }}T\\left( n \\right) = O\\left( {f\\left( n \\right)} \\right)$ for all $ {\\rm{ n = }}{{\\rm{2}}^k}$</p></li>\n</ol>\n\n<p>I think I should use the third case of the master theorem to check these equations.</p>\n\n<p>But I have not been able to check this constraint for these inequations:</p>\n\n<p>$\\qquad af\\left( {\\frac{n}{b}} \\right) \\le cf\\left( n \\right)$</p>\n\n<p>How do I do that?</p>\n', 'ViewCount': '236', 'Title': 'Problems showing the constraint of master theorem case three holds', 'LastEditorUserId': '98', 'LastActivityDate': '2013-03-06T10:31:29.743', 'LastEditDate': '2012-10-08T10:36:30.260', 'AnswerCount': '2', 'CommentCount': '5', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '240', 'Tags': '<asymptotics><recurrence-relation><master-theorem>', 'CreationDate': '2012-10-08T09:10:03.237', 'FavoriteCount': '2', 'Id': '4945''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '957', 'Title': 'Solving a recurrence relation with $\\sqrt{n}$ as parameter', 'LastEditDate': '2012-10-31T23:17:42.550', 'AnswerCount': '3', 'Score': '6', 'OwnerDisplayName': 'KodeSeeker', 'PostTypeId': '1', 'OwnerUserId': '1510', 'Body': "<p>Let $T(n) = \\sqrt{n} T(\\sqrt{n}) + c\\,n$ for $n \\gt 2$ and some positive constant $c$ and $T(2) = 1$.</p>\n\n<p>I know the Master theorem, but I'm not sure as to how we could solve this relation using it. Any insight would be helpful.</p>\n", 'Tags': '<asymptotics><recurrence-relation><master-theorem>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-23T12:49:26.543', 'CommentCount': '5', 'AcceptedAnswerId': '6425', 'CreationDate': '2012-10-30T22:28:19.830', 'Id': '6410''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>While studying master method at recurrences topic I'm stacked at a point. It is written in the book as:</p>\n\n<blockquote>\n  <p>$T(n) = 3T(n/4) + n \\log n$,</p>\n  \n  <p>we have $a = 3, b = 4$, </p>\n  \n  <p>$f(n) = n \\log n$, and </p>\n  \n  <p>$n^{\\log_b(a)} = n^{\\log_4 3} = O(n^{0.793})$.</p>\n  \n  <p>Since  $f(n) = \\Omega(n^{\\log_4( 3)+\\varepsilon} )$, where  $\\varepsilon \\approx0.2$ ....</p>\n</blockquote>\n\n<p>The authors means that the $n\\log n = \\Omega(n)$. How will we know this? Is $n \\log n = \\Omega(n)$ true? Or \nsomething is wrong?</p>\n", 'ViewCount': '199', 'Title': 'Big Omega of $n \\log n$', 'LastEditorUserId': '2205', 'LastActivityDate': '2012-11-09T08:28:06.703', 'LastEditDate': '2012-11-08T19:10:26.370', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '0', 'OwnerDisplayName': 'user1308990', 'PostTypeId': '1', 'Tags': '<asymptotics><landau-notation><master-theorem>', 'CreationDate': '2012-10-22T10:26:01.877', 'Id': '6564''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Concerning the Master Theorem. I have found the following equation as the base of analysis:  </p>\n\n<p>$\\quad T(n) = aT(n/b) + \\Theta(n^k)$  </p>\n\n<p>but I also found the following:  </p>\n\n<p>$\\quad T(n) = aT(n/b) + \\Theta(n^k\\cdot\\log_p n)$  </p>\n\n<p>where the base $p$ is a real number.  </p>\n\n<p>Can anyone explain the second equation? I understand the proof with the first equation but can not understand the second formula.</p>\n', 'ViewCount': '130', 'Title': 'Explanation of a specific recurrence with respect to Master Theorem', 'LastEditorUserId': '98', 'LastActivityDate': '2013-03-01T03:32:14.113', 'LastEditDate': '2013-01-20T15:26:39.403', 'AnswerCount': '1', 'CommentCount': '7', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '6487', 'Tags': '<algorithm-analysis><asymptotics><recurrence-relation><master-theorem>', 'CreationDate': '2013-01-20T10:42:04.463', 'Id': '9055''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>I'm reading Cormen's Introduction to Algorithms 3rd edition, and in examples of Master Method recursion solving Cormen gives two examples</p>\n\n<ol>\n<li>$3T( \\frac{n}{4} ) + n\\log(n)$</li>\n<li>$2T( \\frac{n}{2} ) + n\\log(n)$</li>\n</ol>\n\n<p>For the first example we have $a=3$ and $b=4$  so $n^{\\log_4\n(3)}=n^{0.793}$ and Cormen says that if we choose $\\epsilon = 0.207$ then $f(n) = n\\log(n) = \\Omega(n^{\\log_4(3)  + \\epsilon})$</p>\n\n<p>How? As I understand it if $\\epsilon = 0.207$ then $\\Omega(n^{\\log_4(3)  + \\epsilon})= \\Omega(n)$ so we have $n\\log(n) = \\Omega(n)$  but it's not true; But he proves that $n\\log(n) = \\Omega( n^{\\log_4(3)  + \\epsilon} )$</p>\n\n<p>And then he proves that for the second case $n\\log(n)$ does not apply to masters method 3-rd case the same way as I prove above.</p>\n\n<p>So could somebody explain me in detail how  the third case of the master's theorem applies to  $3T( \\frac{n}{4} ) + n \\log(n)$  but not to $2T( \\frac{n}{2} ) + n\\log(n)$.</p>\n", 'ViewCount': '464', 'Title': 'How to the examples for using the master theorem in Cormen work?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-02-02T17:20:19.517', 'LastEditDate': '2013-02-02T13:24:39.077', 'AnswerCount': '2', 'CommentCount': '2', 'AcceptedAnswerId': '9403', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '6664', 'Tags': '<asymptotics><recurrence-relation><master-theorem>', 'CreationDate': '2013-02-01T15:58:58.403', 'Id': '9390''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>The Master theorem is a beautiful tool for <a href="http://cs.stackexchange.com/a/2823/98">solving certain kinds of recurrences</a>. However, we often gloss over an integral part when applying it. For example, during the analysis of Mergesort we happily go from</p>\n\n<p>$\\qquad T(n) = T\\left(\\left\\lfloor \\frac{n}{2} \\right\\rfloor\\right) + T\\left(\\left\\lceil \\frac{n}{2} \\right\\rceil\\right) + f(n)$</p>\n\n<p>to </p>\n\n<p>$\\qquad T\'(n) = 2 T\'\\left(\\frac{n}{2}\\right) + f(n)$</p>\n\n<p>considering only $n=2^k$. We assure ourselved that this step is valid -- that is, $T \\in \\Theta(T\')$ -- because $T$ behaves "nicely". In general, we assume $n=b^k$ for $b$ the common denominator.</p>\n\n<p>It is easy to construct recurrences which do not allow this simplification by using vicious $f$. For example, above recurrence for $T\\,$/$\\,T\'$ with</p>\n\n<p>$\\qquad f(n) = \\begin{cases}\n                 1 &amp;, n=2^k \\\\\n                 n &amp;, \\text{else}\n               \\end{cases}$</p>\n\n<p>will yield $\\Theta(n)$ by using the Master theorem in the usual way, but there is clearly a subsequence that grows like $\\Theta(n \\log n)$. See <a href="http://cs.stackexchange.com/a/4980/98">here</a> for another, more contrived example.</p>\n\n<p>How can we make this "nicely" rigorous? I am quite certain that monotonicity is sufficient, but not even the simple Mergesort recurrence is monotone; <a href="http://cs.stackexchange.com/a/2390/98">there is a periodic component</a> (which is dominated asymptotically). Is it enough to investigate $f$, and what are necessary and sufficient conditions on $f$ that ensure the Master theorem works?</p>\n', 'ViewCount': '252', 'Title': 'Rigorous proof for validity of assumption $n=b^k$ when using the Master theorem', 'LastActivityDate': '2013-02-11T00:43:01.050', 'AnswerCount': '1', 'CommentCount': '5', 'AcceptedAnswerId': '9654', 'Score': '11', 'PostTypeId': '1', 'OwnerUserId': '98', 'Tags': '<asymptotics><proof-techniques><recurrence-relation><master-theorem>', 'CreationDate': '2013-02-07T07:35:33.753', 'FavoriteCount': '3', 'Id': '9569''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': u'<p>I know that master theorem is used for the recurrence relations of the form:</p>\n\n<p>T(n) = aT(n/b) + f(n)</p>\n\n<p>But in my question, i am supposed to solve the following recurrence relation by using master theorem:</p>\n\n<p>T(n) = 2T(n/7) + 5T(n/8) + n</p>\n\n<p>Can i take f(n)=n and since f(n)=\u0398(n<sup>log<sub>b</sub>a</sup>), i say T(n) is O(nlogn)? But if i do this, i neglect the fact that the relation must be of the form T(n) = aT(n/b) + f(n). What should i do? Thanks</p>\n', 'ViewCount': '142', 'Title': 'Usage of master theorem for solving recursions', 'LastActivityDate': '2013-03-03T18:12:02.917', 'AnswerCount': '2', 'CommentCount': '3', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '7122', 'Tags': '<recurrence-relation><master-theorem>', 'CreationDate': '2013-03-03T16:01:53.353', 'FavoriteCount': '3', 'Id': '10234''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': u'<p>I have a recurrence relation and trying to use master theorem to solve it. The recurrence relation is:</p>\n\n<p>$T(n) = 3T(n/5) + n^{0.5}$</p>\n\n<p>Can I use the master theorem in that relation? If so, can I say that $T(n)$ is $\u0398(n^{0.5})$?</p>\n', 'ViewCount': '24', 'ClosedDate': '2013-03-07T11:23:42.837', 'Title': 'The use of master theorem appriopriately', 'LastEditorUserId': '8246', 'LastActivityDate': '2013-09-28T12:35:50.493', 'LastEditDate': '2013-09-28T12:35:50.493', 'AnswerCount': '0', 'CommentCount': '2', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '7175', 'Tags': '<algorithms><time-complexity><recurrence-relation><recursion><master-theorem>', 'CreationDate': '2013-03-07T09:48:45.607', 'Id': '10356''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': u'<p>I have a recurrence relation, it is like the following:</p>\n\n<p>$T(e^n) = 2(T(e^{n-1})) + e^n$, where $e$ is the base of the natural logarithm.</p>\n\n<p>To solve this and find a $\\Theta$ bound, I tried the following: I put $k=e^n$, and the equation transforms into:</p>\n\n<p>$$T(k)=2T(k/e)+k$$</p>\n\n<p>Then, I try to use the Master Theorem. According to Master Theorem, $a=2$, $b=e\\gt 2$ and $f(k)=k$. So, we have the case where $f(k)=\\Omega(n^{\\log_b a+\u03b5})$ for some $\u03b5\\gt 0$, thus we have $T(k)=\\Theta(f(k))=\\Theta(k)$. Then put $k=n$, we have $T(n)=\\Theta(n)$. Does my solution have any mistakes?</p>\n', 'ViewCount': '81', 'Title': 'Not sure if my solution to following recurrence is correct', 'LastEditorUserId': '8246', 'LastActivityDate': '2013-09-28T12:36:02.527', 'LastEditDate': '2013-09-28T12:36:02.527', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '7175', 'Tags': '<algorithms><time-complexity><recurrence-relation><master-theorem><check-my-answer>', 'CreationDate': '2013-03-07T11:52:11.320', 'FavoriteCount': '1', 'Id': '10359''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Following method is explained by my senior. I want to know whether I can use it in all cases or not. When I solve it manually, I come to same answer. </p>\n\n<p>$T(n)= 4T(n/2) + \\frac{n^2}{\\lg n}$</p>\n\n<p>In above recurrence master theorem fails. But he gave me this solution, when </p>\n\n<p>for $T(n) = aT(n/b) + \\Theta(n^d \\lg^kn)$ </p>\n\n<p>if $d = \\log_b a$ </p>\n\n<p>if $k\\geq0$ then $T(n)=\\Theta(n^d \\lg^{k+1})$</p>\n\n<p>if $k=-1$ then $T(n)=\\Theta(n^d\\lg\\lg n)$</p>\n\n<p>if $k&lt;-1$ then $T(n)=\\Theta(n^{\\log_ba})$</p>\n\n<p>using above formulae, the recurrence is solved to $\\Theta(n^2\\lg\\lg n)$. When I solved manually, I come up with same answer. If it is some standard method, what it is called ?</p>\n', 'ViewCount': '278', 'Title': 'Finding recurrence when Master Theorem fails', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-02T21:44:26.690', 'LastEditDate': '2013-04-02T19:09:34.620', 'AnswerCount': '1', 'CommentCount': '3', 'AcceptedAnswerId': '10980', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '6665', 'Tags': '<asymptotics><recurrence-relation><master-theorem>', 'CreationDate': '2013-04-02T17:51:49.660', 'Id': '10977''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Problem taken from here (page 3): <a href="http://cse.unl.edu/~choueiry/S06-235/files/MasterTheorem-Handout.pdf" rel="nofollow">http://cse.unl.edu/~choueiry/S06-235/files/MasterTheorem-Handout.pdf</a></p>\n\n<p>$T(n) = 3T(\\frac{n}{2}) + \\frac{3}{4}n + 1$</p>\n\n<p>$f(n) = \\frac{3}{4}n + 1$</p>\n\n<p>It says we cannot use the traditional Master Theorem because $f(n)$ is not a polynomial. How is $\\frac{3}{4}n + 1$ not a polynomial? It\'s a polynomial of degree one with a fractional coefficient.</p>\n', 'ViewCount': '165', 'Title': 'Solving a recurrence with the Master Theorem', 'LastActivityDate': '2013-09-20T23:36:30.247', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '-1', 'PostTypeId': '1', 'OwnerUserId': '10092', 'Tags': '<asymptotics><master-theorem>', 'CreationDate': '2013-09-20T20:56:02.193', 'Id': '14482''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>For analyzing the running time of an algorithm , I'm stuck with this recursive equation :\n$$\nT(n) = \\log(n) \\cdot T(\\log n) + n\n$$\nObviously this can't be handled with the use of the Master Theorem, so I was wondering if anybody has any ideas for solving this recursive equation.</p>\n\n<p>I'm pretty sure that it should be solved with a change in the parameters, like considering $n$ to be $2^m$, but I couldn't manage to find any good fix.</p>\n", 'ViewCount': '371', 'Title': 'Recursive equation for complexity: T(n) = log(n) * T(log(n)) + n', 'LastEditorUserId': '2205', 'LastActivityDate': '2013-10-03T11:25:54.990', 'LastEditDate': '2013-10-03T11:25:54.990', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '14777', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '10478', 'Tags': '<asymptotics><runtime-analysis><recursion><master-theorem>', 'CreationDate': '2013-10-03T09:53:19.790', 'Id': '14775''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': u'<p>Following up on <a href="http://cs.stackexchange.com/a/10373/98">vonbrand\'s answer</a> I want to write a small document about stronger master theorems for our students, one of which is the Akra-Bazzi theorem. I have copied the theorem from their paper [1] and found -- besides a small notational confusion\xb2 -- the following problem.</p>\n\n<p>The authors require (emphasis mine):</p>\n\n<blockquote>\n  <p>$g(x)$ is defined for real values $x$, and is <strong>bounded</strong>, positive and nondecreasing function\n  $\\forall x \\geq 0$</p>\n</blockquote>\n\n<p>Here, $g$ is the toll function, that is the recurrence has the form</p>\n\n<p>$\\qquad\\displaystyle T(n) = g(n) + \\sum_{i=1}^k a_i T\\bigl(\\lfloor n b_i^{-1} \\rfloor\\bigr)$.</p>\n\n<p>Now, at the end of their paper (p209) they give multiple examples for applying their result and they use functions in $\\Omega(n)$ which are clearly <em>not</em> bounded.</p>\n\n<p>From skimming the proof they mainly seem to require that integrals of the form</p>\n\n<p>$\\qquad\\displaystyle \\int_a^b \\frac{g(x)}{x^{p+1}} dx$</p>\n\n<p>have finite values. So, requiring $g$ to be bounded <em>on every compact interval</em> might be sufficient; I did not work through the proof in detail. Is it possible they mean that?</p>\n\n<p>My question is: How should the Akra-Bazzi theorem be stated so that it is consistent with proof <em>and</em> examples?</p>\n\n<hr>\n\n<ol>\n<li><a href="http://dx.doi.org/10.1023/A%3A1018373005182">On the solution of linear recurrence equations</a> by M. Akra and L. Bazzi (1998)</li>\n<li>They require $a_i \\in R^{*+}$. Is this some notation I don\'t know, or a typo? I assume the intended meaning is $(0,\\infty) \\subseteq \\mathbb{R}$.</li>\n</ol>\n', 'ViewCount': '69', 'Title': 'Why does Akra-Bazzi need that toll-function g is bounded?', 'LastActivityDate': '2014-01-11T00:22:27.687', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '98', 'Tags': '<asymptotics><recurrence-relation><master-theorem>', 'CreationDate': '2013-11-11T14:29:28.533', 'Id': '17916''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>While thinking about <a href="http://cs.stackexchange.com/questions/14343/evaluating-recurrence-relation">this question</a> on a recurrence I checked out some stronger master theorems.\nUnfortunately, they do not seem to apply because terms</p>\n\n<p>$\\qquad\\displaystyle T(n) = \\dots + T(n-1) + \\dots$</p>\n\n<p>are not covered.</p>\n\n<ul>\n<li><p>Roura [1] investigates (in the discrete case) recurrences of the form</p>\n\n<p>$\\qquad\\displaystyle T(n) = t_n + \\sum_{1 \\leq d \\leq D} (w_d + r_{d,n}) \\cdot T(z_d n + s_{d,n})$</p>\n\n<p>where $\\sum |r_{d,n}|$ and $\\sum |s_{d,n}|/n$ have to vanish for $n \\to \\infty$ and, sadly, $0 &lt; z_d &lt; 1$. I did not go through the proof, but an application to <a href="http://cs.stackexchange.com/questions/14343/evaluating-recurrence-relation">the example at hand</a> yielded a quite clearly wrong result of $T \\in \\Theta(g)$, so this one does not carry over as is.</p></li>\n<li><p>Akra and Bazzi [2] consider only recurrences of the form</p>\n\n<p>$\\qquad\\displaystyle T(n) = g(n) + \\sum_{i=1}^k a_i T(\\lfloor n/b_i \\rfloor)$</p>\n\n<p>with $b_i \\geq 2$, so above parameter choice is clearly not covered.</p>\n\n<p>Leighton [3] introduces a more general form of Akra-Bazzi for recurrences of the form</p>\n\n<p>$\\qquad\\displaystyle T(x) = g(x) + \\sum_{i=1}^k a_iT(b_ix + h_i(x))$,</p>\n\n<p>but similarly requires that $b_i \\in (0,1)$. It seems to me that existence of $p$ as solution of</p>\n\n<p>$\\qquad\\displaystyle \\sum_{i=1}^k a_i b_i^p = 1$</p>\n\n<p>in Theorem 2 can no longer be guaranteed if there is one $b_i=1$ since all $a_i$ are positive.</p></li>\n<li><p>Drmota and Szpankowski [4] look at recurrences of the form</p>\n\n<p>$\\qquad\\displaystyle T(n) = a_n + \\sum_{j=1}^m b_jT(\\lfloor p_j n + \\delta_j \\rfloor)$</p>\n\n<p>with $0 &lt; p_j &lt; 1$. The proof does not explicitly use $p_j \\neq 1$. I am not too sure about the properties of several Dirichlet series (cf section 4.1) if some $p_j=1$, though.</p></li>\n</ul>\n\n<p>Does any of the theorems hold if there are recursive parameters of the form $T(n-c)$? Can one be adapted to cover such cases, or are there other, more general results that do so?</p>\n\n<hr>\n\n<ol>\n<li><a href="http://dx.doi.org/10.1007/3-540-63165-8_201" rel="nofollow">An improved master theorem for divide-and-conquer recurrences</a> by S. Roura (1997)</li>\n<li><a href="http://dx.doi.org/10.1023/A%3A1018373005182" rel="nofollow">On the solution of linear recurrence equations</a> by M. Akra and L. Bazzi (1998)</li>\n<li><a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.39.1636&amp;rep=rep1&amp;type=pdf" rel="nofollow">Notes on Better Master Theorems for Divide-and-Conquer Recurrences</a> by T. Leighton (1996)</li>\n<li><a href="http://dl.acm.org/citation.cfm?id=2133036.2133064" rel="nofollow">A master theorem for discrete divide and conquer recurrences</a> by  M. Drmota and W. Szpankowski. (2011)</li>\n</ol>\n', 'ViewCount': '49', 'Title': 'Are there master theorems that deal with parameters of the form $n-c$?', 'LastActivityDate': '2013-11-12T14:27:37.343', 'AnswerCount': '0', 'CommentCount': '1', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '98', 'Tags': '<asymptotics><recurrence-relation><master-theorem>', 'CreationDate': '2013-11-12T14:27:37.343', 'Id': '17960''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Would I use the third case of the <a href="http://en.wikipedia.org/wiki/Master_theorem" rel="nofollow">Master Theorem</a> for the recurrence equation $T(n) = 2T(n/2) + n^{2}\\log n$? </p>\n\n<p>The condition given for the third case by Wikipedia is $f(n) = \\Theta(n^c)$ when $c &gt; \\log_{b}a$.</p>\n', 'ViewCount': '71', 'Title': 'Master theorem for $T(n) = 2T(n/2) + n^{2}\\log n$', 'LastEditorUserId': '1636', 'LastActivityDate': '2013-12-18T01:01:04.520', 'LastEditDate': '2013-12-18T01:01:04.520', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '19079', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '12197', 'Tags': '<recurrence-relation><master-theorem>', 'CreationDate': '2013-12-18T00:03:19.577', 'Id': '19077''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I am getting confused with the solution to this recurrence - \n$T(n) = T(n/2) + n^2$</p>\n\n<p>Recursion tree - </p>\n\n<pre><code>T(n)                      Height lg n + 1\n |\nT(n/2)\n |\nT(n/4)\n</code></pre>\n\n<p>So it turns out to be -</p>\n\n<p>$T(n) = n^2(1 + 1/4 + (1/4)^2) + \\ldots (1/4)^{\\log_2 n - 1})$</p>\n\n<p>$T(n) = 4*n^2(1- (1/4)^{\\log_2 n})/3 + n^2 $</p>\n\n<p>$T(n) = 4*n^2(1 - 1^{\\log_2 n} + 4^{\\log_2 n})/3 + n^2 $</p>\n\n<p>$ T(n) = 4*n^2(1 - 1 + n^{\\log_2 4})/3 + n^2$</p>\n\n<p>$ T(n) = 4*n^2(n^2)/3 + n^2$</p>\n\n<p>$ T(n) = 4/3 * (n^4) + n^2 $</p>\n\n<p>$ T(n) = \\Theta(n^4) $</p>\n\n<p>But according to the Master theorem, $a = 1, b = 2, f(n) = n^2 $, then $n^{\\log_2 1} = 1 $ which is polynomial times less than $ n^2 $ so the solution should be $ \\Theta (n^2) $?</p>\n', 'ViewCount': '113', 'Title': 'Solution to recurrence $T(n) = T(n/2) + n^2$', 'LastEditorUserId': '472', 'LastActivityDate': '2013-12-29T04:07:39.913', 'LastEditDate': '2013-12-27T15:57:15.230', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '19319', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '11750', 'Tags': '<recurrence-relation><recursion><master-theorem>', 'CreationDate': '2013-12-27T01:22:05.733', 'Id': '19318''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I have two functions $S$ and $T$ which are interrelated and I want to find the asymptotic worst case runtime. The fact that they are interrelated is stumping me...</p>\n\n<p>How would I find the asymptotic runtime $S(n)$ and $T(n)$?</p>\n\n<p>$$\n\\begin{align*}\nS(n) &amp;= 2S(n/4) +  T(n/4) \\\\\nT(n) &amp;=  S(n/2) + 2T(n/2)\n\\end{align*}\n$$</p>\n', 'ViewCount': '55', 'Title': 'Asymptotic Runtime of Interrelated Functions', 'LastEditorUserId': '683', 'LastActivityDate': '2014-03-01T23:51:07.287', 'LastEditDate': '2014-03-01T23:51:07.287', 'AnswerCount': '4', 'CommentCount': '0', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '11204', 'Tags': '<algorithms><algorithm-analysis><asymptotics><search-algorithms><master-theorem>', 'CreationDate': '2014-03-01T02:34:54.417', 'Id': '22149''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>According to  <a href="http://en.wikipedia.org/wiki/Introduction_to_Algorithms" rel="nofollow">Introduction to algorithms by Cormen et al</a>,\n$$T(n)=2T(n/2)+n\\log n$$ is not case 3 of Master Theorem. Can someone explain me why?</p>\n\n<p>And which case of master theorem is it?</p>\n', 'ViewCount': '35', 'ClosedDate': '2014-04-13T13:12:06.137', 'Title': '$T(n)=2T(n/2)+n\\log n$ and the Master theorem', 'LastEditorUserId': '13022', 'LastActivityDate': '2014-04-13T13:49:05.647', 'LastEditDate': '2014-04-13T12:18:48.650', 'AnswerCount': '2', 'CommentCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '16715', 'Tags': '<algorithms><algorithm-analysis><master-theorem>', 'CreationDate': '2014-04-13T12:01:52.337', 'Id': '23735''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>The following recurrence relation,</p>\n\n<p>$$T(n)=16T(\\frac{n}{4}) + n^2$$</p>\n\n<p>has been given to me to be solved via the Master Theorem. I'm pretty sure this is a case 2 situation, since</p>\n\n<p>$$\\log_4{16} = 2$$ and </p>\n\n<p>$$\\log_n{n^2} = 2$$ </p>\n\n<p>Where $b = 4$, $a = 16$, and $c = 2$, such that $f(n) = n^c$ </p>\n\n<p>What I'm <em>not</em> sure about is the end runtime complexity. </p>\n\n<p>What I've come up with so far is</p>\n\n<p>$$T(n) = \\theta(n^2log_2{n})$$</p>\n\n<p>...since the Master Theorem states that, for case 2 situations, $f(n)$ must be within the set of $O(n^clog^kn)$, where $k$ is some constant in which $k \\ge 0$.</p>\n\n<p>My reasoning was to substitute 0 for $k$, which led to $\\log_2^1{n}$ in the result, as the result requires that $T(n) = \\theta(n^clog_2^{k+1}{n})$.</p>\n\n<p>In a nutshell, while I know the first portion of the analysis is correct, and that this <em>is</em> a case 2 situation, am I correct in the reasoning behind the logarithmic portion in the ending runtime analysis?</p>\n", 'ViewCount': '32', 'Title': 'Is my analysis of this recurrence relation correct?', 'LastActivityDate': '2014-04-24T06:24:28.710', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '-1', 'PostTypeId': '1', 'OwnerUserId': '17028', 'Tags': '<asymptotics><recurrence-relation><master-theorem>', 'CreationDate': '2014-04-23T23:29:21.213', 'Id': '24066''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}