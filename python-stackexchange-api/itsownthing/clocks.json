{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>Assume a computer has a precise clock which is not initialized. That is, the time on the computer\'s clock is the real time plus some constant offset. The computer has a network connection and we want to use that connection to determine the constant offset $B$.</p>\n\n<p>The simple method is that the computer sends a query to a time server, noting the local time $B + C_1$. The time server receives the query at a time $T$ and sends a reply containing $T$ back to the client, which receives it at a time $B + C_2$. Then $B + C_1 \\le T \\le B + C_2$, i.e. $T - C_2 \\le B \\le T - C_1$.</p>\n\n<p>If the network transmission time and the server processing time are symmetric, then $B = T - \\dfrac{C_1 + C_2}{2}$. As far as I know, <a href="http://en.wikipedia.org/wiki/Network_Time_Protocol">NTP</a>, the time synchronization protocol used in the wild, operates on this assumption.</p>\n\n<p>How can the precision be improved if the delays are not symmetric? Is there a way to measure this asymmetry in a typical Internet infrastructure?</p>\n', 'ViewCount': '1881', 'Title': 'Clock synchronization in a network with asymmetric delays', 'LastEditorUserId': '41', 'LastActivityDate': '2013-02-11T13:29:09.433', 'LastEditDate': '2012-03-07T20:25:33.727', 'AnswerCount': '5', 'CommentCount': '8', 'Score': '24', 'PostTypeId': '1', 'OwnerUserId': '39', 'Tags': '<clocks><distributed-systems><computer-networks>', 'CreationDate': '2012-03-07T16:59:53.447', 'FavoriteCount': '5', 'Id': '103'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'ViewCount': '411', 'Title': 'All soldiers should shoot at the same time', 'LastEditDate': '2012-05-02T22:20:43.843', 'AnswerCount': '1', 'Score': '11', 'PostTypeId': '1', 'OwnerUserId': '1342', 'FavoriteCount': '0', 'Body': '<p>When I was a student, I saw a problem in a digital systems/logic design textbook, about N soldiers standing in a row, and want to shoot at the same time. A more difficult version of the problem was that the soldiers stand in a general network instead of a row. I am sure this is a classical problem, but I cannot remember its name. Can you remind me?</p>\n', 'Tags': '<algorithms><distributed-systems><clocks>', 'LastEditorUserId': '39', 'LastActivityDate': '2012-05-02T22:20:43.843', 'CommentCount': '0', 'AcceptedAnswerId': '1633', 'CreationDate': '2012-05-02T10:03:40.080', 'Id': '1632'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': "<p>I was thinking about any method where we can use RAM I/O speed, to calculate time, let's say for example:\nRAM transfer rate is 1000 MB/s, so when it's half full (about 500 M Bytes written), by dividing 500 by 1000 we get the time which is epoch + 0.5 seconds\nso all in all we have three routines:</p>\n\n<ol>\n<li>one for writing data (zeros for example) into RAM</li>\n<li>another one for checking when a specific size is full</li>\n<li>and the third for calculating time</li>\n</ol>\n\n<blockquote>\n  <p>Note: Sorry if it sounds stupid, because this is not my study field, </p>\n</blockquote>\n", 'ViewCount': '57', 'Title': 'Is there a way to compute time without system clock', 'LastActivityDate': '2014-02-04T12:15:24.700', 'AnswerCount': '2', 'CommentCount': '4', 'AcceptedAnswerId': '21286', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '13072', 'Tags': '<operating-systems><clocks>', 'CreationDate': '2014-01-23T19:48:53.760', 'Id': '19917'}}