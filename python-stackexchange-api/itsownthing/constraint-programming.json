{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>Consider a CSP model where changing the value of a particular variable is expensive. Is there any work where the objective function also considers the number of changes in the value of the variable during the search process?</p>\n\n<p>Update: An example: The expensive-to-change variable may be in the control of some other agent and there is some overhead of involving that agent to change the variable. Another example: The variable participates in one of the constraints, and the satisfaction of this constraint involves calling an expensive function (such as, a simulator), e.g. z = f(x, y) is the constraint, and f is an expensive-to-compute function. x and y are therefore expensive-to-change variables.</p>\n', 'ViewCount': '104', 'Title': 'In Constraint Programming, are there any models that take into account the number of variable changes?', 'LastEditorUserId': '41', 'LastActivityDate': '2012-04-05T14:48:45.240', 'LastEditDate': '2012-04-03T02:05:51.637', 'AnswerCount': '1', 'CommentCount': '4', 'Score': '8', 'PostTypeId': '1', 'OwnerUserId': '893', 'Tags': '<algorithms><constraint-programming>', 'CreationDate': '2012-04-02T06:56:55.063', 'FavoriteCount': '0', 'Id': '987'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': u'<p>We are given a set $F=\\{f_1, f_2, f_3, \u2026, f_N\\}$ of $N$ Fruits. Each Fruit has price $P_i$ and vitamin content $V_i$; we associated fruit $f_i$ with the ordered pair $(P_i, V_i)$. Now we have to arrange these fruits in such a way that the sorted list contains prices in ascending order and vitamin contents in descending order.</p>\n\n<p><strong>Example 1</strong>: $N = 4$ and $F = \\{(2, 8), (5, 11), (7, 9), (10, 2)\\}$.</p>\n\n<p>If we arrange the list such that all price are in ascending order and vitamin contents in descending order, then the valid lists are the following:</p>\n\n<ul>\n<li>$[(2, 8)]$</li>\n<li>$[(5, 11)]$</li>\n<li>$[(7, 9)]$</li>\n<li>$[(10, 2)]$</li>\n<li>$[(2, 8), (10, 2)]$</li>\n<li>$[(5, 11), (7, 9)]$</li>\n<li>$[(5, 11), (10, 2)]$</li>\n<li>$[(7, 9), (10, 2)]$</li>\n<li>$[(5, 11), (7, 9), (10, 2)]$</li>\n</ul>\n\n<p>From the above lists, I want to choose the list of maximal size. If more than one list has maximal size, we should choose the list of maximal size whose sum of prices is least. The list which should be chosen in the above example is $\\{(5, 11), (7, 9), (10, 2)\\}$.</p>\n\n<p><strong>Example 2</strong>: $N = 10$ and $$F = \\{(99,10),(12,23),(34,4),(10,5),(87,11),(19,10), \\\\(90,18), (43,90),(13,100),(78,65)\\}$$</p>\n\n<p>The answer to this example instance is $[(13,100),(43,90),(78,65),(87,11),(99,10)]$.</p>\n\n<p>Until now, this is what I have been doing:</p>\n\n<ol>\n<li>Sort the original list in ascending order of price;</li>\n<li>Find all subsequences of the sorted list;</li>\n<li>Check whether the subsequence is valid, and compare all valid subsequences.</li>\n</ol>\n\n<p>However, this takes exponential time; how can I solve this problem more efficiently?</p>\n', 'ViewCount': '139', 'Title': 'Find subsequence of maximal length simultaneously satisfying two ordering constraints', 'LastEditorUserId': '39', 'LastActivityDate': '2012-10-11T21:21:42.877', 'LastEditDate': '2012-10-11T21:21:42.877', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '1289', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '1001', 'Tags': '<algorithms><arrays><constraint-programming><subsequences>', 'CreationDate': '2012-04-15T11:03:26.633', 'Id': '1287'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'ViewCount': '630', 'Title': 'Can constraint satisfaction problems be solved with Prolog?', 'LastEditDate': '2012-05-31T16:25:50.040', 'AnswerCount': '3', 'Score': '12', 'PostTypeId': '1', 'OwnerUserId': '1621', 'FavoriteCount': '2', 'Body': '<p>Is <a href="http://iggyfernandez.wordpress.com/2012/05/21/sql-vs-nosql-third-international-nocoug-sql-nosql-challenge-sponsored-by-pythian/">"party attendance"</a> type of problems solvable in Prolog? For example:</p>\n\n<blockquote>\n  <p>Burdock Muldoon and Carlotta Pinkstone both said they would come if Albus Dumbledore came. Albus Dumbledore and Daisy Dodderidge both said they would come if Carlotta Pinkstone came. Albus Dumbledore, Burdock Muldoon, and Carlotta Pinkstone all said they would come if Elfrida Clagg came. Carlotta Pinkstone and Daisy Dodderidge both said they would come if Falco Aesalon came. Burdock Muldoon, Elfrida Clagg, and Falco Aesalon all said they would come if Carlotta Pinkstone and Daisy Dodderidge both came. Daisy Dodderidge said she would come if Albus Dumbledore and Burdock Muldoon both came.\n  Whom is needs to be persuaded to attend the party in order to ensure that all her invitees attend?</p>\n</blockquote>\n\n<p>I have tried to express this in GNU Prolog:</p>\n\n<pre><code>attend(BM) :- attend(AD).\nattend(CP) :- attend(AD).\nattend(AD) :- attend(CP).\nattend(DD) :- attend(CP). \nattend(AD) :- attend(EC).\nattend(BM) :- attend(EC).\nattend(CP) :- attend(EC). \nattend(CP) :- attend(FA).\nattend(DD) :- attend(FA).\nattend(BM) :- attend(CP),attend(DD).\nattend(EC) :- attend(CP),attend(DD).\nattend(FA) :- attend(CP),attend(DD).\nattend(DD) :- attend(AD),attend(BM).\n\nattend(FA). /* try different seed invitees in order to see if all would attend*/\n\n/* input:\nwrite(\'invited:\'),nl,\n  attend(X),write(X),nl,\n  fail.*/\n</code></pre>\n\n<p>I\'m experiencing stack overflow (no pun), and have no knowledge of prolog evaluation, this is why I\'m asking.</p>\n\n<p>Generally speaking, this problem can be cast into Boolean CNF satisfaction formula (with 6 boolean variables). Therefore, does the prolog perspective have any merit?</p>\n', 'Tags': '<logic><constraint-programming><prolog><logic-programming>', 'LastEditorUserId': '1621', 'LastActivityDate': '2012-06-01T18:39:25.400', 'CommentCount': '3', 'AcceptedAnswerId': '2086', 'CreationDate': '2012-05-23T21:21:24.983', 'Id': '2031'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': u'<p>General satisfiability (with a few exceptions such as Horn Clauses) is not believed to have an algorithmic solution. However, the following algorithm appears to be a solution for general satisfiability. What exactly is the flaw with the following algorithm?      </p>\n\n<ol>\n<li>Let $W$ be an empty set which will contain all variables that necessarily have to be true or false.</li>\n<li>Let $L$ be the set of clauses.</li>\n<li>Loop through $L$.</li>\n<li>Every time a non-conditional variable<sup>\u2020</sup> is found, remove it from $L$ and insert it into $W$.</li>\n<li>If this leaves an empty AND implication<sup>\u2021</sup>, remove all variables in that empty implication from $L$ and insert into $W$.</li>\n<li>If this leaves an empty OR implication<sup>\u2021</sup>, create new instances of the algorithm, where each instance deals with one variable in the implication (i.e. if the implication is: $x V \\implies y$, create one instance where $x$ is inserted into $W$, one where $y$ is inserted into $W$ and one where $x$ and $y$ are inserted into $W$).</li>\n<li>Set all variables in $W$ to the value they necessarily have to be.</li>\n<li>Reinsert the variables in $W$ in $L$ with their changed values and check if all clauses  are satisfied.</li>\n<li>If satisfiability is met, then return $L$, else return "Not Satisfiable".</li>\n</ol>\n\n<p><sup>\u2020</sup> A non conditional variable is defined as a variable that is necessary true or false, e.g. $\\implies x$ or $\\implies \\neg y$.</p>\n\n<p><sup>\u2021</sup> An empty implication is defined as an implication where one side is empty (e.g. $\\implies x \\wedge y$) or the other side is necessarily true (e.g. $\\mathrm{true} \\vee a \\implies b$.</p>\n\n<p>To get a more intuitive understanding of the algorithm consider the following set of clauses $L$:</p>\n\n<p>$$\\begin{align}\n  a \\wedge b &amp;\\implies c &amp; \\text{(i)} \\\\\n  &amp;\\implies f \\wedge g &amp; \\text{(ii)} \\\\\n  f &amp;\\implies \\neg a &amp; \\text{(iii)} \\\\\n  f \\vee a &amp;\\implies b &amp; \\text{(iv)} \\\\\n  &amp;\\implies c &amp; \\text{(v)} \\\\\n\\end{align}$$</p>\n\n<p>The algorithm will do the following:</p>\n\n<p>1) Since $c$, $f$, $g$ are non-conditional variables, the algorithm will insert them into $W$. $W = \\{c, f, g\\}$.</p>\n\n<p>2) Removing $c$, $f$ and $g$ will leave the empty clauses: $\\implies \\neg a, a \\wedge b, b$. These will be added to $W$. $W = \\{c, f, g, b, \\neg a\\}$.</p>\n\n<p>3) Reinserting the variables into $L$ will result in the first clauses being violated: $a \\wedge b \\implies c$. Since $a$ is false, $c$ is false, meaning clause (v) is violated. The algorithm will return "Not Satisfiable"</p>\n\n<p>I am aware that the algorithm appears confusing. Please feel free to ask for clarification.</p>\n\n<hr>\n\n<p>From comments I now realize that there is no known <em>efficient</em> general satisfiability algorithm. I\'m still interested in feedback about my algorithm. Does it work? How does it compare with common algorithms?</p>\n', 'ViewCount': '238', 'Title': 'A tentative satisfiability algorithm', 'LastEditorUserId': '39', 'LastActivityDate': '2012-09-19T00:28:48.400', 'LastEditDate': '2012-09-12T19:31:09.140', 'AnswerCount': '2', 'CommentCount': '7', 'Score': '7', 'OwnerDisplayName': 'user1422', 'PostTypeId': '1', 'Tags': '<algorithms><logic><satisfiability><constraint-programming>', 'CreationDate': '2012-08-15T02:42:26.293', 'FavoriteCount': '1', 'Id': '3516'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': "<p>I'm looking for an algorithm which would find a minimal spanning tree given certain constraints (CSP) about importance of some nodes, e.g. consider a graph with next distance matrix:\n$$\n\\left[ \\begin{array}{c}\n- &amp; A &amp; B &amp; C &amp; D &amp; E &amp; F \\\\\nA &amp; 0 &amp; 120 &amp; 100 &amp; inf &amp; inf &amp; 30 \\\\\nB &amp; 120 &amp; 0 &amp; 70 &amp; inf &amp; 150 &amp; inf \\\\\nC &amp; 100 &amp; 70 &amp; 0 &amp; 60 &amp; 60 &amp; inf \\\\\nD &amp; inf &amp; inf &amp; 60 &amp; 0 &amp; inf &amp; 50 \\\\\nE &amp; inf &amp; 150 &amp; 60 &amp; inf &amp; 0 &amp; inf \\\\\nF &amp; 30 &amp; inf &amp; inf &amp; 50 &amp; inf &amp; 0 \\\\\n\\end{array} \\right]\n$$\nPrim's algorithm will result in something like this:\n$$\n\\left[ \\begin{array}{c}\n- &amp; A &amp; B &amp; C &amp; D &amp; E &amp; F \\\\\nA &amp; 0 &amp; inf &amp; inf &amp; inf &amp; inf &amp; 30 \\\\\nB &amp; inf &amp; 0 &amp; 70 &amp; inf &amp; inf &amp; inf \\\\\nC &amp; inf &amp; 70 &amp; 0 &amp; 60 &amp; 60 &amp; inf \\\\\nD &amp; inf &amp; inf &amp; 60 &amp; 0 &amp; inf &amp; 50 \\\\\nE &amp; inf &amp; inf &amp; 60 &amp; inf &amp; 0 &amp; inf \\\\\nF &amp; 30 &amp; inf &amp; inf &amp; 50 &amp; inf &amp; 0 \\\\\n\\end{array} \\right]\n$$</p>\n\n<p>However, node A is now zoned and it will take at least 3 transitions from $A$ to get to $C$ and for my specific CSP I need at most 2 transitions. It is fairly easy to incorporate such CSP into Prim's algorithm. <strong>The question is: are there any generic algorithms which deal with finding a minimal spanning tree given a set of constraints ?</strong></p>\n", 'ViewCount': '62', 'Title': "Node-weighted CSP in Prim's algorithm?", 'LastEditorUserId': '6793', 'LastActivityDate': '2013-04-07T14:44:13.350', 'LastEditDate': '2013-04-07T14:44:13.350', 'AnswerCount': '0', 'CommentCount': '5', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '6793', 'Tags': '<algorithms><graphs><graph-traversal><constraint-programming>', 'CreationDate': '2013-04-07T13:37:16.603', 'Id': '11100'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>When talking about Constraint Satisfaction Problems (CSP), what does the term <code>extensional constraint</code> mean?</p>\n', 'ViewCount': '57', 'Title': 'In a CSP, what is an extensional constraint?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-10T08:40:51.137', 'LastEditDate': '2013-04-10T08:40:51.137', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '7652', 'Tags': '<terminology><constraint-programming>', 'CreationDate': '2013-04-09T01:53:43.180', 'Id': '11150'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': "<p>If I have a hard problem, one standard approach is to express it as a SAT instance and try running a SAT solver on it.  Another standard approach is to express it as a constraint satisfaction problem, and try using a CSP solver.  The two feel somehow vaguely similar in what sorts of problems can be naturally expressed in their input format.</p>\n\n<p>Are there any guidelines or rules of thumb for how to recognize, for a given problem, which approach is more likely to yield good results?  Is there any guidance anyone can offer about which sorts of problems can be handled better by SAT solvers than by CSP solvers, or vice versa?</p>\n\n<p>(Obviously, there are some easy problems that can be solved by both approaches.  There are also some hard problems that can't be usefully solved by either approach.  Let's set those aside.  The case where guidance is most helpful are problems where either SAT solvers perform better than CSP solvers, or where CSP solvers perform better than SAT solvers.  How do I recognize when a SAT solver is likely to be a better fit than a CSP solver, or when a CSP solver is likely to be a better fit than a SAT solver -- i.e., which approach to try first?)</p>\n", 'ViewCount': '140', 'Title': 'When to use SAT vs Constraint Satisfaction?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-05-28T15:06:43.883', 'LastEditDate': '2013-05-28T07:15:02.563', 'AnswerCount': '1', 'CommentCount': '4', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '755', 'Tags': '<heuristics><sat-solvers><constraint-programming>', 'CreationDate': '2013-05-28T04:15:12.777', 'FavoriteCount': '1', 'Id': '12325'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>How to minimize the sum of difference of element in sub-sequence of array of length k from given sequence of length n ?</p>\n\n<p>for example : for n=10\n1\n2\n3\n4\n10\n20\n30\n40\n100\n200</p>\n\n<p>the sub-sequence of length will with minimized sum of difference will be\n1 2 3 4\nas  |1-2| + |1-3| + |1-4| + |2-3| + |2-4| + |3-4| = 10 i.e minimum in any sequence.</p>\n', 'ViewCount': '181', 'Title': 'How to minimize the sum of difference of element in sub-sequence of array of length k from given sequence of length n', 'LastActivityDate': '2013-10-20T19:17:17.783', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '-1', 'PostTypeId': '1', 'OwnerUserId': '10851', 'Tags': '<algorithms><dynamic-programming><linear-programming><greedy-algorithms><constraint-programming>', 'CreationDate': '2013-10-19T08:38:14.163', 'Id': '16224'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': "<p>Let $\\Sigma$ be a small, finite alphabet.  Suppose we are given ${n\\choose 2}$ sets $S_{i,j}$, where $S_{i,j} \\subseteq \\Sigma \\times\\Sigma$.  I'd like to determine whether there exists a sequence $x_1,x_2,\\dots,x_n \\in \\Sigma$ such that $(x_i,x_j) \\in S_{i,j}$ for all $i,j$, and if so, find an example of such a sequence.</p>\n\n<p>Are there any good algorithms for this problem?</p>\n\n<p>Also: Suppose I model each set $S_{i,j}$ as a randomly chosen subset of $\\Sigma \\times \\Sigma$ where each of the possible elements is included in $S_{i,j}$ with probability $p$ (independently of everything else).  Thus, the expected size of each $S_{i,j}$ is $p \\cdot |\\Sigma|^2$.  Is there any characterization of the range of values of $p$ for which this problem should be efficiently solvable?</p>\n\n<p>(In my application, $|\\Sigma|=10$, if that helps.)</p>\n\n<p>This looks like some sort of 2-CSP (constraint satisfaction problem, where each constraint is on exactly 2 variables), but I don't know what more we might be able to say.</p>\n", 'ViewCount': '60', 'Title': 'Find sequence, given partial information about all pairs', 'LastActivityDate': '2013-10-28T14:06:30.490', 'AnswerCount': '0', 'CommentCount': '7', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '755', 'Tags': '<algorithms><constraint-programming>', 'CreationDate': '2013-10-28T14:06:30.490', 'Id': '16498'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>All of the solutions for <a href="http://en.wikipedia.org/wiki/Zebra_Puzzle" rel="nofollow">the zebra puzzle</a> have a variable for each of the properties and a domain with the possible values. For instance A for Nationalities, B for pets, ...</p>\n\n<p>Ai with i = 1..5 and the domain for example {Dutch, Spanish, Italian, French, English}</p>\n\n<p>As I\'ve seen in the n-queens puzzle, there can always be multiple representations for a constraint problem. What could be alternative representations for the zebra puzzle?</p>\n\n<p>For example, I was thinking about following representation:</p>\n\n<ul>\n<li>HouseOne indices 1..4 with domain {1,2,3,4,5}</li>\n<li>HouseTwo indices 1..4 with domain {1,2,3,4,5}</li>\n<li>HouseThree indices 1..4 with domain {1,2,3,4,5}</li>\n<li>HouseFour indices 1..4 with domain {1,2,3,4,5}</li>\n<li>HouseFive indices 1..4 with domain {1,2,3,4,5}</li>\n</ul>\n\n<p>Could this work?</p>\n', 'ViewCount': '65', 'Title': 'Alternative representations for the zebra puzzle?', 'LastEditorUserId': '755', 'LastActivityDate': '2013-12-04T00:14:06.723', 'LastEditDate': '2013-12-04T00:14:06.723', 'AnswerCount': '1', 'CommentCount': '6', 'Score': '-2', 'PostTypeId': '1', 'OwnerUserId': '10575', 'Tags': '<logic><satisfiability><constraint-programming>', 'CreationDate': '2013-12-03T16:09:56.193', 'Id': '18574'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>Given integers $n,m$, I want to find a $m \\times n$ binary matrix $X$ such that there does not exist any non-zero vector $y \\in \\{-1,0,1\\}^n$ with $Xy=0$ (all operations performed over $\\mathbb{Z}$).  What algorithm could I use for this?</p>\n\n<hr>\n\n<p>In more detail: We are given parameters $n$ and $m$.  The problem is to determine if there exists $x$ such that $x_{i,j} \\in \\{0,1\\}$, and there does not exist $y\\ne (0,0,\\dots,0)$ where $y_j \\in \\{-1,0,1\\}$ for all $j$ and for all $1 \\leq i \\leq m$,</p>\n\n<p>$$\\sum_{1 \\leq j \\leq n} x_{i,j} y_j = 0.$$</p>\n\n<p>(Notice that we require that at least one of the  $y_j \\ne 0$ to avoid the trivial solution.)</p>\n\n<p>For example, consider $m=3,n=4$.  Then, expressing $x_{i,j}$ as a matrix $X$,</p>\n\n<p>$$\nX=\\begin{pmatrix}\n0 &amp; 1 &amp; 1 &amp; 0 \\\\\n1 &amp; 0 &amp; 1 &amp; 1 \\\\\n0 &amp; 1 &amp; 0 &amp; 1 \\\\\n\\end{pmatrix}\n$$</p>\n\n<p>is a valid solution for $m=3$ and $n=4$.</p>\n\n<p>What algorithm can I use to solve this problem?  Can I formulate this as an integer linear programming problem or maybe as a constraint programming problem?</p>\n', 'ViewCount': '205', 'Title': 'Find a binary matrix so that no vector from {-1,0,1}^n is in its kernel', 'LastEditorUserId': '8942', 'LastActivityDate': '2014-01-03T13:18:40.517', 'LastEditDate': '2014-01-03T13:13:21.270', 'AnswerCount': '2', 'CommentCount': '7', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '8942', 'Tags': '<complexity-theory><linear-programming><linear-algebra><constraint-programming><integer-programming>', 'CreationDate': '2013-12-27T20:07:50.993', 'FavoriteCount': '1', 'Id': '19333'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>Taking <a href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/" rel="nofollow">this</a> as an example:</p>\n\n<pre><code>bool SolveSudoku(int grid[N][N])\n{\n    int row, col;\n\n    // If there is no unassigned location, we are done\n    if (!FindUnassignedLocation(grid, row, col))\n       return true; // success!\n\n    // consider digits 1 to 9\n    for (int num = 1; num &lt;= 9; num++)\n    {\n        // if looks promising\n        if (isSafe(grid, row, col, num))\n        {\n            // make tentative assignment\n            grid[row][col] = num;\n\n            //RUN ARC CONSISTENCY HERE ......?\n\n            // return, if success, yay!\n            if (SolveSudoku(grid))\n                return true;\n\n            // failure, unmake &amp; try again\n            grid[row][col] = UNASSIGNED;\n\n            ////REMOVE ARC CONSISTENCY HERE ......?\n        }\n    }\n    return false; // this triggers backtracking\n}\n</code></pre>\n\n<p>Given the backtracking algorithm with CSP\'s, I would like to add ARC consistency to make it smarter.</p>\n\n<p><a href="http://www.codeproject.com/Articles/34403/Sudoku-as-a-CSP" rel="nofollow">For example</a>:</p>\n\n<blockquote>\n  <p>"When we want to assign the digit \'d\' to cell s1, we use assign(cells,\n  s, d).  ...but I also want to eliminate this possibility from its\n  peers  (like Forward Checking does, tell me something new!). If the\n  elimination causes one (or some) of the peers going down to only one \n  possibility, which we call d2, we want to assign d2 to it, and by\n  doing that,  eliminate d2 from all of its peer\'s peers, and that could\n  make another chain  reaction. This chain reaction is simply called\n  constraint propagation:  placing a constraint on one cell can cause\n  further constraints to be placed on  other cells."</p>\n</blockquote>\n\n<ul>\n<li>Can the process of arc propagation end up leading to a solution by\nitself or even a false solution? What is done in those cases?</li>\n<li>In the likely event the next recursive call on the next variable returns false (no values worked out for that variable), <strong>how do I\nundo all the changes the arc consistency did?</strong></li>\n</ul>\n', 'ViewCount': '21', 'Title': 'How is ARC consistency un-done after a recursive failure condition?', 'LastActivityDate': '2014-02-28T02:44:32.343', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '22119', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '15116', 'Tags': '<algorithms><artificial-intelligence><recursion><constraint-programming><backtracking>', 'CreationDate': '2014-02-28T00:42:17.027', 'FavoriteCount': '3', 'Id': '22116'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>How can any Constraint satisfaction problem be converted to an instance of Satisfiability? I have a CSP and i know its NP hard to solve it, but i would like to convert to an instance of k-SAT, but im not sure of any algorithm for transformation</p>\n', 'ViewCount': '39', 'Title': 'transformation of constraint satisfaction to SAT', 'LastActivityDate': '2014-03-28T03:26:26.230', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '16220', 'Tags': '<satisfiability><constraint-programming>', 'CreationDate': '2014-03-28T02:09:37.007', 'Id': '23157'}},