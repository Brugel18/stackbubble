{'ViewCount': '105', 'Title': 'Using a proof-of-work system to discourage piracy or encourage donations', 'LastEditDate': '2013-10-21T04:12:46.827', 'AnswerCount': '3', 'Score': '4', 'OwnerDisplayName': 'LateralFractal', 'PostTypeId': '1', 'OwnerUserId': '10539', 'FavoriteCount': '2', 'Body': '<p><strong>Background</strong></p>\n\n<p>A <a href="http://en.wikipedia.org/wiki/Proof-of-work_system" rel="nofollow">proof-of-work system</a> allows one peer to prove to another peer that a certain amount of computational effort was performed.\nIn a network setting this can be used to throttle peer requests without needing to keep a precise track on the identity of the peers or prior events. \nThe most well known use of proof-of-work is to throttle spam throughput in an email network*.</p>\n\n<p>Some proof-of-work systems allow certain roles on the network (say, a mailing list) to calculate the proof of work much faster by using a secret <em>"short-cut"</em> - typically a pre-calculated trapdoor or a private key depending on the proof-of-work system.</p>\n\n<p><strong>Hypothesis</strong></p>\n\n<ol>\n<li>Any algorithm or a certain class of algorithms can be converted into a proof-of-work version of that algorithm. That is: A deliberately inefficient and incompressible algorithm.</li>\n<li>Such converted proof-of-work algorithms can support proof-of-work shortcuts.</li>\n<li>Such converted proof-of-work algorithms can not be converted back to the original algorithm without considerable computational power; if at all.</li>\n</ol>\n\n<p><strong>Extrapolation</strong></p>\n\n<p>If the hypothesis holds, then selected business logic of an application - specifically that which is unique or value-added by that application vs existing applications - could be converted to proof-of-work equivalents.</p>\n\n<p>End-users could then be provided such an application; which will run slowly either generally or for certain premium features. The development team however, possesses a secret PoW shortcut and set up a subscription, donation or advertising(<a href="http://www.aef.com/on_campus/classroom/book_excerpts/data/1504" rel="nofollow">!</a>)-based service - an <a href="http://en.wikipedia.org/wiki/Software_as_a_service" rel="nofollow">SaaS</a> - for solving the proof-of-work bottleneck for the end-user. The end-user can now choose to run the application slower without the SaaS or faster with the SaaS. </p>\n\n<p>This SaaS needs to process considerably less client-side business logic than a general cloud solution (e.g. Diablo 3 style SaaS); as the goal is the speed of execution rather than no execution - and the SaaS proof-of-work speed ratio is tailored accordingly. </p>\n\n<p>This is especially relevant for software projects supported by charity as the developers <em>do</em> want the software available to anyone but can encourage donations without needing a separate fairly easy to pirate <a href="http://en.wikipedia.org/wiki/Freemium" rel="nofollow">Freemium</a> edition. The Tragedy of the Commons (freeloading) could be discouraged to a fair extent without guilt-tripping or <a href="http://www.theregister.co.uk/2003/01/17/i_poisoned_p2p_networks/" rel="nofollow">rat poisoning</a>, by adjusting the proof-of-work cost relative the value of the application or service.</p>\n\n<blockquote>\n  <p><em>Example 1:</em> A commercial stock market estimation tool licensed per\n  month. If the user forgoes paying for a subscription, the estimation\n  occurs at 1% the normal rate.</p>\n  \n  <p><em>Example 2:</em> A free <a href="http://gamedevtycoon.wikia.com/wiki/AAA" rel="nofollow">Triple A</a> co-op video game runs twice fast if the\n  user donates some money once a year.</p>\n</blockquote>\n\n<p>In either example the user must decide between accepting the default speed; spending money on a faster computer/cloud services; or contributing to the upkeep of the product.</p>\n\n<p><strong>Question</strong></p>\n\n<p><em>Does the hypothesis hold and has anyone attempted to explore or implement this hypothesis?</em></p>\n\n<p>Any example of an open source library or application that attempts to implement the hypothesis qualifies as a sufficient answer (from my perspective); as I could dissect the code.</p>\n\n<p><sub> * Which has a variety of issues for the Digital Divide, but that\'s another story</sub></p>\n', 'Tags': '<time-complexity><one-way-functions><proof-of-work>', 'LastEditorUserId': '2755', 'LastActivityDate': '2013-10-21T13:56:59.407', 'CommentCount': '3', 'CreationDate': '2013-10-03T03:52:24.797', 'Id': '16188''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}