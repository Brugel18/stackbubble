{'Body': '<p>Assume a computer has a precise clock which is not initialized. That is, the time on the computer\'s clock is the real time plus some constant offset. The computer has a network connection and we want to use that connection to determine the constant offset $B$.</p>\n\n<p>The simple method is that the computer sends a query to a time server, noting the local time $B + C_1$. The time server receives the query at a time $T$ and sends a reply containing $T$ back to the client, which receives it at a time $B + C_2$. Then $B + C_1 \\le T \\le B + C_2$, i.e. $T - C_2 \\le B \\le T - C_1$.</p>\n\n<p>If the network transmission time and the server processing time are symmetric, then $B = T - \\dfrac{C_1 + C_2}{2}$. As far as I know, <a href="http://en.wikipedia.org/wiki/Network_Time_Protocol">NTP</a>, the time synchronization protocol used in the wild, operates on this assumption.</p>\n\n<p>How can the precision be improved if the delays are not symmetric? Is there a way to measure this asymmetry in a typical Internet infrastructure?</p>\n', 'ViewCount': '1881', 'Title': 'Clock synchronization in a network with asymmetric delays', 'LastEditorUserId': '41', 'LastActivityDate': '2013-02-11T13:29:09.433', 'LastEditDate': '2012-03-07T20:25:33.727', 'AnswerCount': '5', 'CommentCount': '8', 'Score': '24', 'PostTypeId': '1', 'OwnerUserId': '39', 'Tags': '<clocks><distributed-systems><computer-networks>', 'CreationDate': '2012-03-07T16:59:53.447', 'FavoriteCount': '5', 'Id': '103''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>In computer networking and high-performance cluster computer design, network topology refers to the design of the way in which nodes are connected by links to form a communication network. Common network topologies include the mesh, torus, ring, star, tree, etc. These topologies can be studied analytically to determine properties related to their expected performance; such characteristics include diameter (maximal distance between a pair of nodes, in terms of the number of links which must be crossed if such nodes communicate), the average distance between nodes (over all pairs of nodes in the network), and the bisection bandwidth (the worst-case bandwidth between two halves of the network). Naturally, other topologies and metrics exist.</p>\n\n<p>Consider a network topology based on the Koch snowflake. The simplest incarnation of such a topology consists of three nodes and three links in a fully-connected setup. The diameter is 1, average distance is 1 (or 2/3, if you include communications inside a node), etc.</p>\n\n<p>The next incarnation of the topology consists of 12 nodes and 15 links. There are three clusters of three nodes fully, each cluster being fully connected by three links. Additionally, there are the three original nodes, connecting the three clusters using six additional links.</p>\n\n<p>In fact, the number of nodes and links in incarnation $k$ are described by the following recurrence relations:\n$$N(1) = 3$$\n$$L(1) = 3$$\n$$N(k+1) = N(k) + 3L(k)$$\n$$L(k+1) = 5L(k)$$\nHopefully, the shape of this topology is clear; incarnation $k$ looks like the $k^{th}$ incarnation of the Koch snowflake. (A key difference is that for what I have in mind, I am actually keeping the link between the 1/3 and 2/3 nodes on successive iterations, so that each "triangle" is fully connected and the above recurrence relations hold).</p>\n\n<p>Now for the question:</p>\n\n<blockquote>\n  <p>Has this network topology been studied, and if so, what is it called? If it has been studied extensively, are there any references? If not, what are the diameter, average distance and bisection bandwidth of this topology? How do these compare to other kinds of topologies, in terms of cost (links) &amp; benefit?</p>\n</blockquote>\n\n<p>I have heard of a "star of stars" topology, which I think is similar, but not identical, to this. If anything, this seems to be more of a "ring of rings", or something along those lines. Naturally, tweaks could be made to the definition of this topology, and more advanced questions could be asked (for instance, we could assign different bandwidths to links introduced at earlier stages, or discuss scheduling or data placement for such a topology). More generally, I am also interested in any good references for exotic or little-studied network topologies (regardless of practicality). </p>\n\n<p>Again, apologies if this demonstrates ignorance of relevant research results, and any insights are appreciated.</p>\n', 'ViewCount': '148', 'Title': 'Analysis of and references for Koch-snowflake-like (and other exotic) network topologies', 'LastEditorUserId': '69', 'LastActivityDate': '2012-05-09T16:27:06.473', 'LastEditDate': '2012-03-09T16:24:00.603', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '8', 'PostTypeId': '1', 'OwnerUserId': '69', 'Tags': '<computer-networks><network-topology>', 'CreationDate': '2012-03-09T05:30:42.347', 'FavoriteCount': '1', 'Id': '149''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '1098', 'Title': 'How to determine likely connections in a social network?', 'LastEditDate': '2012-04-22T16:33:09.770', 'AnswerCount': '4', 'Score': '20', 'PostTypeId': '1', 'OwnerUserId': '151', 'FavoriteCount': '2', 'Body': '<p>I am curious in determining an approach to tackling a "suggested friends" algorithm.</p>\n\n<p><a href="http://facebook.com">Facebook</a> has a feature in which it will recommended individuals to you which it thinks you may be acquainted with. These users normally (excluding the edge cases in <a href="http://www.facebook.com/help/?faq=154758887925123#How-do-I-suggest-a-friend-to-someone?">which a user specifically recommends a friend</a>) have a highly similar network to oneself. That is, the number of friends in common are high. I assume Twitter follows a similar path for their "Who To Follow" mechanism.</p>\n\n<p><a href="http://stackoverflow.com/a/6851193/321505">Stephen Doyle (Igy)</a>, a Facebook employee suggested that the related newsfeed that uses <a href="http://www.quora.com/How-does-Facebook-calculate-weight-for-edges-in-the-EdgeRank-formula">EdgeRank formula</a> which seems to indicate that more is to valued than friends such as appearance is similar posts. Another user suggested the Google Rank system. </p>\n\n<p>Facebook states their News Feed Optimization as $\\sum u_{e}w_{e}d_{e}$ where</p>\n\n<p>$u_{e}$ = affinity score between viewing user and edge creator<br>\n$w_{e}$ = weight for this edge (create, comment, like, tag, etc)<br>\n$d_{e}$ = time decay factor based on how long ago the edge was created   </p>\n\n<p>Summing these items is supposed to give an object\'s rank which I assume as Igy hinted, means something in a similar format is used for suggested friends.</p>\n\n<p>So I\'m guessing that this is the way in which connections for all types are done in general via a rank system?</p>\n', 'Tags': '<algorithms><machine-learning><modelling><social-networks>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-04-22T16:33:09.770', 'CommentCount': '2', 'AcceptedAnswerId': '314', 'CreationDate': '2012-03-12T23:24:54.360', 'Id': '261''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>Fully connected (at least layer to layer with more than 2 hidden layers) backprop networks are universal learners. Unfortunately, they are often slow to learn and tend to over-fit or have awkward generalizations. </p>\n\n<p>From fooling around with these networks, I have observed that pruning some of the edges (so that their weight is zero and impossible to change) tends to make the networks learn faster and generalize better. Is there a reason for this? Is it only because of a decrease in the dimensionality of the weights search space, or is there a more subtle reason?</p>\n\n<p>Also, is the better generalization an artifact of the 'natural' problems I am looking at?</p>\n", 'ViewCount': '302', 'Title': 'Why do neural networks seem to perform better with restrictions placed on their topology?', 'LastEditorUserId': '31', 'LastActivityDate': '2012-03-18T04:38:07.220', 'LastEditDate': '2012-03-17T08:36:17.587', 'AnswerCount': '2', 'CommentCount': '0', 'Score': '22', 'PostTypeId': '1', 'OwnerUserId': '55', 'Tags': '<machine-learning><network-topology><neural-networks>', 'CreationDate': '2012-03-17T07:00:56.503', 'FavoriteCount': '3', 'Id': '455''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>This is a puzzle about measuring network latency that I created. I believe the solution is that it\'s impossible, but friends disagree. I\'m looking for convincing explanations either way. (Though it is posed as a puzzle I think it fits on this web site because of its applicability to the design and experience of communication protocols such as in online games, not to mention NTP.)</p>\n\n<p>Suppose two robots are in two rooms, connected by a network with differing one-way latencies as shown in the graphic below. When robot A sends a message to robot B it takes 3 seconds for it to arrive, but when robot B sends a message to robot A it takes 1 second to arrive. The latencies never vary.</p>\n\n<p>The robots are identical and do not have a shared clock, though they can measure the passage of time (e.g. they have stop watches). They do not know which of them is robot A (whose messages are delayed 3s) and which is robot B (whose messages are delayed by 1s).</p>\n\n<p>A protocol to discover the round trip time is \'when receiving TICK send TOCK, start watch, send TICK, await TOCK, stop watch, record time difference (4s)\'.</p>\n\n<p>Is there a protocol to determine the one way trip delays? Can the robots discover which of them has the longer message sending delay?</p>\n\n<p><img src="http://i.stack.imgur.com/uYIGW.png" alt="Two robots one asymmetric network"></p>\n', 'ViewCount': '668', 'Title': 'Measuring one way network latency', 'LastEditorUserId': '41', 'LastActivityDate': '2013-07-10T20:57:00.673', 'LastEditDate': '2012-03-25T17:06:14.083', 'AnswerCount': '2', 'CommentCount': '5', 'Score': '11', 'PostTypeId': '1', 'OwnerUserId': '535', 'Tags': '<computer-networks><protocols><distributed-systems>', 'CreationDate': '2012-03-21T12:54:47.823', 'FavoriteCount': '5', 'Id': '602''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>How does the password that we enter (to connect to a wireless network) encrypt the data on the wireless network?</p>\n\n<p>Through my reading I am not sure if the password that we enter is the same as the passphrase. If that is right then how can the passphrase generate the four WEP keys?</p>\n\n<p>I understand how the four keys work in WEP and how they encrypt the data. Also, I know how WPA's keys encrypt the data but the only thing I have to know is: </p>\n\n<blockquote>\n  <p>what is the benefit of the password that we enter to get access to the network, and how does this password help in encrypting the data?</p>\n</blockquote>\n", 'ViewCount': '1009', 'Title': 'How does a wifi password encrypt data using WEP and WPA?', 'LastEditorUserId': '41', 'LastActivityDate': '2012-03-25T14:54:04.653', 'LastEditDate': '2012-03-25T14:54:04.653', 'AnswerCount': '2', 'CommentCount': '4', 'Score': '9', 'PostTypeId': '1', 'OwnerUserId': '701', 'Tags': '<cryptography><computer-networks><encryption><security>', 'CreationDate': '2012-03-23T19:41:23.180', 'FavoriteCount': '1', 'Id': '704''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>I'm trying to figure out a way I could represent a Facebook user as a vector. I decided to go with stacking the different attributes/parameters of the user into one big vector (i.e. age is a vector of size 100, where 100 is the maximum age you can have, if you are lets say 50, the first 50 values of the vector would be 1 just like a thermometer).</p>\n\n<p>Now I want to represent the Facebook interests as a vector too, and I just can't figure out a way. They are a collection of words and the space that represents all the words is huge, I can't go for a model like a bag of words or something similar. How should I proceed? I'm still new to this, any reference would be highly appreciated.</p>\n", 'ViewCount': '101', 'Title': 'How to represent the interests of a Facebook user', 'LastEditorUserId': '41', 'LastActivityDate': '2012-04-22T16:01:26.117', 'LastEditDate': '2012-04-22T16:01:26.117', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '1395', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '1173', 'Tags': '<machine-learning><modelling><social-networks><knowledge-representation>', 'CreationDate': '2012-04-20T16:24:33.100', 'Id': '1394''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>My goal is to solve the following problem, which I have described by its input and output:</p>\n\n<p><strong>Input:</strong></p>\n\n<p>A directed acyclic graph $G$ with $m$ nodes, $n$ sources, and $1$ sink ($m > n \\geq 1$).</p>\n\n<p><strong>Output:</strong></p>\n\n<p>The <a href="https://en.wikipedia.org/wiki/Vc_dimension">VC-dimension</a> (or an approximation of it) for the neural network with topology $G$.</p>\n\n<p><strong>More specifics</strong>: </p>\n\n<ul>\n<li>Each node in $G$ is a sigmoid neuron. The topology is fixed, but the weights on the edges can be varied by the learning algorithm.</li>\n<li>The learning algorithm is fixed (say backward-propagation).</li>\n<li>The $n$ source nodes are the input neurons and can only take strings from $\\{-1,1\\}^n$ as input.</li>\n<li>The sink node is the output unit. It outputs a real value from $[-1,1]$ that we round up to $1$ or down to $-1$ if it is more than a certain fixed threshold $\\delta$ away from $0$. </li>\n</ul>\n\n<p>The naive approach is simply to try to break more and more points, by attempting to train the network on them. However, this sort of simulation approach is not efficient.</p>\n\n<hr>\n\n<h3>Question</h3>\n\n<p>Is there an efficient way (i.e. in $\\mathsf{P}$ when changed to the decision-problem: is VC-dimension less than input parameter $k$?) to compute this function? If not, are there hardness results?</p>\n\n<p>Is there a works-well-in-practice way to compute or approximate this function? If it is an approximation, are there any guarantees on its accuracy?</p>\n\n<h3>Notes</h3>\n\n<p>I asked a <a href="http://stats.stackexchange.com/q/25952/4872">similar question</a> on stats.SE but it generated no interest.</p>\n', 'ViewCount': '204', 'Title': 'Efficiently computing or approximating the VC-dimension of a neural network', 'LastEditorUserId': '98', 'LastActivityDate': '2012-05-10T02:12:14.187', 'LastEditDate': '2012-04-25T16:58:07.127', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '11', 'PostTypeId': '1', 'OwnerUserId': '55', 'Tags': '<algorithms><complexity-theory><machine-learning><neural-networks><vc-dimension>', 'CreationDate': '2012-04-25T15:21:46.690', 'FavoriteCount': '1', 'Id': '1504''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I am trying to search for an algorithm that can tell me which node has the highest download (or upload) capacity given a weighted directed graph, where weights correspond to individual link bandwidths. I have looked at the maximal flow problem and at the Edmond-Karp algorithm. My questions are the following: </p>\n\n<ol>\n<li>Edmond-Karp just tells us how much throughput we can get (at the sink) from source to sink if any of the paths were used. Correct?</li>\n<li>Edmond-Karp does not tell us which path can give us the maximum flow. Correct?</li>\n</ol>\n', 'ViewCount': '473', 'Title': 'Finding the maximum bandwidth along a single path in a network', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-19T15:52:42.887', 'LastEditDate': '2012-06-10T11:42:16.480', 'AnswerCount': '2', 'CommentCount': '8', 'AcceptedAnswerId': '1639', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '1289', 'Tags': '<algorithms><graphs><network-flow>', 'CreationDate': '2012-04-30T14:17:06.293', 'Id': '1591''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>I wanted to confirm something and will appreciate your help. Suppose we have three nodes called A,B and C. All are connected to a switch whose port supports 1 Gbps. Now suppose, Node's A network card is 100 Mbps while the the remaining have a 1 Gbps. Following are the constraints;</p>\n\n<ol>\n<li>A can send B only with a maximum of 100 Mbps.</li>\n<li>A can send C only with a maximum of 80 Mbps.</li>\n</ol>\n\n<p>Now if I were to broadcast a 2 GB file;</p>\n\n<ol>\n<li>It would reach B after approx 2.73 minutes.</li>\n<li>It would reach C after approx 3.41 minutes.</li>\n</ol>\n\n<p>Now even if I replace node A's network card with 1 Gbps with the same constraints, I would still get the same results. Have I got it right? </p>\n", 'ViewCount': '46', 'Title': 'How will broadcast behave with a certain capacity?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-05-10T15:14:42.180', 'LastEditDate': '2012-05-10T15:14:42.180', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '1289', 'Tags': '<computer-networks>', 'CreationDate': '2012-05-08T07:46:37.443', 'Id': '1727''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I am currently reviewing the potentials of cloud computing regarding energy efficiency and green IT. In connection with this review I am having a look on techniques for increasing energy-efficiency in data centers (computing), hardware, networking and storage devices.</p>\n\n<p>Specificially for computing/servers I have found already a few:</p>\n\n<ul>\n<li>energy-aware scheduling techniques utilizing frequency and voltage scaling </li>\n<li>virtualization to consolidate server resources</li>\n<li>energy-saving hardware, e.g. ACPI, several processor techniques, especially for mobile devices etc.</li>\n</ul>\n\n<p>However, for networking devices it is rather hard to get information about energy-saving technologies. I have read that people are thinking about new protocols and alternative routing methods to be able to switch off hardware if the network is under low load. Does anyone know of such examples? </p>\n\n<p>Which other points should be added, either for networking or computing</p>\n', 'ViewCount': '146', 'Title': 'What techniques exist for energy-efficient computing and networking?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-07-24T15:04:08.463', 'LastEditDate': '2012-05-10T15:17:18.700', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '1413', 'Tags': '<reference-request><computer-architecture><operating-systems><computer-networks><power-consumption>', 'CreationDate': '2012-05-08T10:05:00.307', 'Id': '1729''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Is there any way to estimate how much data is added to the world wide web each second? Are there any studies about this? </p>\n', 'ViewCount': '230', 'Title': 'What is the growth rate of the world wide web?', 'LastEditorUserId': '568', 'LastActivityDate': '2012-10-05T22:08:54.367', 'LastEditDate': '2012-05-18T23:36:08.857', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '1538', 'Tags': '<computer-networks>', 'CreationDate': '2012-05-18T04:46:49.363', 'FavoriteCount': '1', 'Id': '1903''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>Are there any advantages of having more than 2 hidden layers in a Neural Network?</p>\n\n<p>I've seen some places that recommend it, others prove that there is no advantage.</p>\n\n<p>Which one is right?</p>\n", 'ViewCount': '209', 'Title': 'How many layers should a neural network have?', 'LastEditorUserId': '41', 'LastActivityDate': '2012-05-24T22:06:52.650', 'LastEditDate': '2012-05-24T22:06:52.650', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '2051', 'Score': '8', 'OwnerDisplayName': 'user1631', 'PostTypeId': '1', 'Tags': '<artificial-intelligence><neural-networks><neural-computing>', 'CreationDate': '2012-05-24T19:50:20.057', 'Id': '2049''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '1918', 'Title': 'Reducing minimum vertex cover in a bipartite graph to maximum flow', 'LastEditDate': '2012-11-09T11:07:26.610', 'AnswerCount': '2', 'Score': '7', 'OwnerDisplayName': 'Summer_More_More_Tea', 'PostTypeId': '1', 'OwnerUserId': '1727', 'FavoriteCount': '1', 'Body': '<p>Is it possible to show that the minimum vertex cover in a bipartite graph can be reduced to a maximum flow problem? Or to the minimum cut problem (then follow max-flow min-cut theorem, the claim holds).</p>\n\n<p>Intuitively: for each flow, pick one endpoint, then it is a minimum vertex cover in bipartite graph. But can it be shown rigorously?</p>\n', 'Tags': '<complexity-theory><graph-theory><reductions><network-flow>', 'LastEditorUserId': '2205', 'LastActivityDate': '2012-11-09T11:07:26.610', 'CommentCount': '0', 'CreationDate': '2012-06-03T02:37:49.540', 'Id': '2208''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '222', 'Title': 'Why is it seemingly easier to resume torrent downloads than browser downloads?', 'LastEditDate': '2012-06-07T22:37:41.390', 'AnswerCount': '3', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '1414', 'FavoriteCount': '0', 'Body': '<p>I really wonder how torrent downloads can be resumed at later point of time.\nIf such a technology exists, then why is it not possible in browsers?</p>\n\n<p>It is often not possible to pause a browser download so that it can be resumed at a later point of time. Often, the download will start again from the beginning. But in the case of a torrent download, you can resume anytime.</p>\n\n<p>One reason I could think of is that a browser makes an HTTP connection to the server which contains the file, and when this connection breaks, there is no data regarding how much file was saved so no resume is possible.</p>\n\n<p>Is there a fundamental reason why torrent downloads are easier to resume than web downloads?</p>\n', 'Tags': '<computer-networks><communication-protocols>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-06-08T00:40:40.473', 'CommentCount': '2', 'AcceptedAnswerId': '2268', 'CreationDate': '2012-06-07T11:05:30.010', 'Id': '2251''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': u'<p>We want to solve a minimal-cost-flow problem with a generic negative-cycle cancelling algorithm. That is, we start with a random valid flow, and then we do not pick any "good" negative cycles such as minimal average cost cycles, but use Bellman-Ford to discover a minimal cycle and augment along the discovered cycle. Let $V$ be the number of nodes in the graph, $A$ the number of edges, $U$ the maximal capacity of an edge in the graph, and $W$ the maximal costs of an edge in the graph. Then, my learning materials claim: </p>\n\n<ul>\n<li>The maximal costs at the beginning can be no more than $AUW$ </li>\n<li>The augmentation along one negative cycle reduces the costs by at least one unit </li>\n<li>The lower bound for the minimal costs is 0, because we don\'t allow negative costs </li>\n<li>Each negative cycle can be found in $O(VA)$ </li>\n</ul>\n\n<p>And they follow from it that the algorithm\'s complexity is $O(V\xb2AUW)$. I understand the logic behind each of the claims, but think that the complexity is different. Specifically, the maximal number of augmentations is given by one unit of flow per augmentation, taking the costs from $AUW$ to zero, giving us a maximum of $AUW$ augmentations. We need to discover a negative cycle for each, so we multiply the maximal number of augmentations by the time needed to discover a cycle ($VA$) and arrive at $O(A\xb2VUW)$ for the algorithm. </p>\n\n<p>Could this be an error in the learning materials (this is a text provided by the professor, not a student\'s notes from the course), or is my logic wrong? </p>\n', 'ViewCount': '258', 'Title': u'Why is the complexity of negative-cycle-cancelling $O(V\xb2AUW)$?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-06T00:47:27.197', 'LastEditDate': '2012-06-10T11:42:45.650', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '1717', 'Tags': '<algorithms><graph-theory><algorithm-analysis><runtime-analysis><network-flow>', 'CreationDate': '2012-06-08T13:26:38.437', 'FavoriteCount': '1', 'Id': '2283''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>It is proven that neural networks with rational weights has the computational power of the Universal Turing Machine <a href="http://www.math.rutgers.edu/~sontag/FTP_DIR/aml-turing.pdf" rel="nofollow">Turing computability with Neural Nets</a>. From what I get, it seems that using real-valued weights yields even more computational power, though I\'m not certain of this one.</p>\n\n<p>However, is there any correlation between the computational power of a neural net and its activation function? For example, if the activation function compares the input against a limit of a Specker sequence (something you can\'t do with a regular Turing machine, right?), does this make the neural net computationally "stronger"? Could someone point me to a reference in this direction?</p>\n', 'ViewCount': '204', 'Title': 'Is computational power of Neural networks related to the activation function', 'LastEditorUserId': '98', 'LastActivityDate': '2012-06-14T21:29:14.587', 'LastEditDate': '2012-06-14T21:29:14.587', 'AnswerCount': '2', 'CommentCount': '2', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '1789', 'Tags': '<computability><neural-networks>', 'CreationDate': '2012-06-12T23:23:51.467', 'FavoriteCount': '1', 'Id': '2353''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '911', 'Title': 'Must Neural Networks always converge?', 'LastEditDate': '2012-06-20T19:04:21.237', 'AnswerCount': '2', 'Score': '9', 'OwnerDisplayName': 'user1631', 'PostTypeId': '1', 'FavoriteCount': '1', 'Body': '<h2>Introduction</h2>\n\n<p><strong>Step One</strong></p>\n\n<p>I wrote a standard backpropegating neural network, and to test it, I decided to have it map XOR.</p>\n\n<p>It is a 2-2-1 network (with tanh activation function)</p>\n\n<pre><code>X1  M1\n        O1\nX2  M2\n\nB1  B2\n</code></pre>\n\n<p>For testing purposes, I manually set up the top middle neuron (M1) to be an AND gate and the lower neuron (M2) to be an OR gate (both output 1 if true and -1 if false).</p>\n\n<p>Now, I also manually set up the connection M1-O1 to be -.5, M2-O1 to be 1, and \nB2 to be -.75</p>\n\n<p>So if M1 = 1 and M2 = 1, the sum is (-0.5 +1 -0.75 = -.25) tanh(0.25) = -0.24</p>\n\n<p>if M1 = -1 and M2 = 1, the sum is ((-0.5)*(-1) +1 -0.75 = .75) tanh(0.75) = 0.63</p>\n\n<p>if M1 = -1 and M2 = -1, the sum is ((-0.5)*(-1) -1 -0.75 = -1.25) tanh(1.25) = -0.8</p>\n\n<p>This is a relatively good result for a "first iteration".</p>\n\n<p><strong>Step Two</strong></p>\n\n<p>I then proceeded to modify these weights a bit, and then train them using error propagation algorithm (based on gradient descent). In this stage, I leave the weights between the input and middle neurons intact, and just modify the weights between the middle (and bias) and output. </p>\n\n<p>For testing, I set the weights to be and .5 .4 .3 (respectively for M1, M2 and bias)</p>\n\n<p>Here, however, I start having issues.</p>\n\n<hr>\n\n<h2>My Question</h2>\n\n<p>I set my learning rate to .2 and let the program iterate through training data (A B A^B) for 10000 iterations or more.</p>\n\n<p><em>Most</em> of the time, the weights converge to a good result. However, at times, those weights converge to (say) 1.5, 5.7, and .9 which results in a +1 output (even) to an input of {1, 1} (when the result should be a -1).</p>\n\n<p>Is it possible for a relatively simple ANN which has a solution to not converge at all or is there a bug in my implementation?</p>\n', 'Tags': '<machine-learning><neural-networks>', 'LastEditorUserId': '1590', 'LastActivityDate': '2012-06-21T00:03:44.897', 'CommentCount': '0', 'AcceptedAnswerId': '2413', 'CreationDate': '2012-06-19T02:17:19.860', 'Id': '2406''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>In Cormen et. al., <em>Introduction to Algorithms</em> (3rd ed.), I don't get a line in the proof of Lemma 26.1  which states that the augmented flow $f\\uparrow f'$ is a flow in $G$ and is s.t. $|f\\uparrow f'| =|f|+|f'|$ (this is pp. 717-718).</p>\n\n<p>My confusion: When arguing <em>flow-conservation</em> they use the definition of $f\\uparrow f'$ in the first line to say that for each $u\\in V\\setminus\\{s,t\\}$</p>\n\n<p>$$ \\sum_{v\\in V} (f\\uparrow f')(u,v) = \\sum_{v\\in V} (f(u,v)+f'(u,v) - f'(v,u)), $$</p>\n\n<p>where the augmented path is defined as</p>\n\n<p>$$ (f\\uparrow f')(u,v) = \\begin{cases} f(u,v)+f'(u,v) - f'(v,u) &amp; \\text{if $(u,v)\\in E$}, \\\\\n0 &amp; \\text{otherwise}. \\end{cases} $$</p>\n\n<p>Why can they ignore the 'otherwise' clause in the summation? I don't think the first clause evaluates to zero in all such cases. Do they use flow-conservation of $f$ and $f'$ in some way?</p>\n", 'ViewCount': '273', 'Title': "CLRS - Maxflow Augmented Flow Lemma 26.1 - don't understand use of def. in proof", 'LastEditorUserId': '1964', 'LastActivityDate': '2012-06-25T23:11:59.127', 'LastEditDate': '2012-06-25T23:11:59.127', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '2494', 'Score': '8', 'PostTypeId': '1', 'OwnerUserId': '1964', 'Tags': '<algorithms><network-flow>', 'CreationDate': '2012-06-25T17:14:37.713', 'Id': '2492''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '526', 'Title': 'Could an artificial neural network algorithm be expressed in terms of map-reduce operations?', 'LastEditDate': '2012-06-27T12:56:50.677', 'AnswerCount': '1', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '1983', 'FavoriteCount': '0', 'Body': '<p>Could an artificial neural network algorithm be expressed in terms of map-reduce operations? I am also interested more generally in methods of parallelization as applied to ANNs and their application to cloud computing. </p>\n\n<p>I would think one approach would involve running a full ANN on each node and somehow integrating the results in order to treat the grid like a single entity (in terms of input/output and machine learning characteristics.) I would be curious even in this case what such an integrating strategy might look like.</p>\n', 'Tags': '<parallel-computing><artificial-intelligence><neural-networks>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-06-27T13:12:05.760', 'CommentCount': '0', 'AcceptedAnswerId': '2514', 'CreationDate': '2012-06-26T23:53:38.440', 'Id': '2508''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '118', 'Title': 'How would a neural network deal with an arbitrary length output?', 'LastEditDate': '2012-07-17T19:44:49.720', 'AnswerCount': '1', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '2150', 'FavoriteCount': '1', 'Body': "<p>I've been looking into Recurrent Neural Networks, but I don't understand what the architecture of a neural network would look like when the output length is not necessarily fixed. </p>\n\n<p>It seems like most networks I've read descriptions of require the output length to be equal to the input length or at least a fixed size. But how would you do something like convert a word to the string of corresponding phonemes? </p>\n\n<p>The string of phonemes might be longer or shorter than the original word. I know you could sequence in the input characters using 8 input nodes (bitcode of the character) in a recurrent network, provided there's a loop in the network, but is this a common pattern for the output stream as well? Can you let the network provide provide something like a 'stop codon'?</p>\n\n<p>I suppose a lot of practical networks, like those that do speech synthesis should have an output that is not fixed in length. How do people deal with that?</p>\n", 'Tags': '<neural-networks>', 'LastEditorUserId': '2150', 'LastActivityDate': '2012-07-17T19:44:49.720', 'CommentCount': '0', 'AcceptedAnswerId': '2724', 'CreationDate': '2012-07-13T09:19:58.747', 'Id': '2722''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>Consider one specific useful function of our human brain: abstraction of object. Take the example of two pictures: if we are told the pictures are similar, we actually make conclusion about the aspects in which they are close to each other.</p>\n\n<p>I'm considering whether machine can have the ability described. More accurately, is it possible to find and select a set of feature representations of two samples (e.g. image, sound) such that under those representations, the samples are similar with respect to a metric, say weighted euclidean norm?</p>\n", 'ViewCount': '99', 'Title': 'Finding Feature Representation Such That Two Samples Are Similar in Feature Space', 'LastActivityDate': '2012-07-16T17:17:41.727', 'AnswerCount': '2', 'CommentCount': '1', 'AcceptedAnswerId': '2768', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '848', 'Tags': '<machine-learning><artificial-intelligence><neural-networks>', 'CreationDate': '2012-07-15T12:01:45.340', 'FavoriteCount': '2', 'Id': '2749''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': u'<p>IPv6 addresses in the form of <code>862A:7373:3386:BF1F:8D77:D3D2:220F:D7E0</code> are much harder to memorize or even transcribe than the 4 octets of IPv4.  </p>\n\n<p>There <a href="http://blog.jgc.org/2011/07/pronounceable-ipv6-addresses-wpa2-psk.html?m=1" rel="nofollow">have</a> <a href="http://www.halfbakery.com/idea/IPv6_20Worded_20Addresses#1260513928" rel="nofollow">been</a> attempts to mitigate this, making IPv6 addresses somehow more memorable.</p>\n\n<p>Is there an intentionally-weak hashing function which could be reversed to find that the phrase, say, <a href="http://en.wikipedia.org/wiki/Dissociated_press" rel="nofollow">"This is relatively benign and easy to spot if the phrase is bent so as to be not worth paying"</a> would hash to a target IPv6 address?  The hash would, of course, have many colliding inputs to choose from, and a potentially more memorable sentence, such as this example phrase, could be automatically offered.</p>\n\n<p>I guess there are two parts: First a weak hash with good distribution in both directions.  Second is an algorithm for selecting memorable phrases from among the many collisions (short, consisting of words from a specified language, perhaps even following a simplified grammar).</p>\n\n<p>Although the hash function would need to be weak, I don\'t doubt that the effort is still significant - however, once the phrase is known, the computation of the hash to the target address is very quick.</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>I found this related idea, <a href="https://en.wikipedia.org/wiki/Piphilology" rel="nofollow">Piphilology</a>, for memorizing some digits of \u03c0:</p>\n\n<blockquote>\n  <p>How I wish a drink, alcoholic of course, after the heavy lectures involving quantum mechanics!</p>\n</blockquote>\n', 'ViewCount': '301', 'Title': 'Weak hashing function for memorable IPv6 addresses', 'LastEditorUserId': '41', 'LastActivityDate': '2013-12-18T02:30:58.523', 'LastEditDate': '2013-07-20T09:19:35.660', 'AnswerCount': '1', 'CommentCount': '4', 'Score': '9', 'PostTypeId': '1', 'OwnerUserId': '762', 'Tags': '<cryptography><computer-networks><hash><user-interface>', 'CreationDate': '2012-07-15T17:57:04.403', 'FavoriteCount': '3', 'Id': '2752''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>At my current project I had a network problem come up for which I could not find a solution. In a peer-to-peer network I needed to send an action to all peers, and each peer was to act on it only if it could verify that all other peers would also act on it.</p>\n\n<p>That is, given a network of peers $P = { P_1, ..., P_n }$. We wish to send, from some source peer $P_s$ a message to all other peers. This message contains an action which must be performed. The peer should perform this action if and only if every other peer will perform the action. That is, it performs the action if it can verify that all other peers will also have receipt of the action and can perform the same verification.</p>\n\n<p>The problem is subject to these conditions:</p>\n\n<ol>\n<li>There is no implicit message delivery guarantee: if $P_x$ sends a message to $P_y$ there is no way for $P_x$ to know if $P_y$ gets the message. (Of course $P_y$ can send a receipt, but that receipt is subject to the same constraint)</li>\n<li>Additional messages with any payload may be created.</li>\n<li>There is no total ordering on the messages received by peers. Messages can arrive in a different time-order than which they were sent. This time-order may be unique per peer. <em>Two messages sent in order from $P_x$ to $P_y$ are very unlikely to arrive out of order.</em></li>\n<li>Messages can arrive at any point in the future (so not only are they not ordered, they can be indefintely delayed). A message cannot inherently be detected as lost. <em>Most messages will be delivered quickly, or truly lost.</em></li>\n<li>Each peer has a synchronized clock. It is accurate enough in the domain of scheduling an action and to approximately measure transmission delays. It is however not accurate enough to establish a total ordering on messages using timestamps.</li>\n</ol>\n\n<p>I was not able to find a solution. I'm interested in a <em>guarantee</em> and not simply a high probability of being correct (which can be done simply be repeatedly sending confirmations from peer to peer and rejections upon any likely loss.) My stumbling block is the inability to verify that any particular message actually arrived. So even if $P_x$ determines there is an erorr, there is no guaranteed way to tell the other peers about it.</p>\n\n<p>A negative confirmation is also acceptable. I have a suspicion that a guarantee cannot actually be achieved, only an arbitrarily high probability.</p>\n", 'ViewCount': '71', 'Title': 'Message receipt verification in a cluster', 'LastEditorUserId': '39', 'LastActivityDate': '2012-08-03T09:56:09.247', 'LastEditDate': '2012-08-03T09:56:09.247', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '2802', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '1642', 'Tags': '<algorithms><distributed-systems><computer-networks><fault-tolerance>', 'CreationDate': '2012-07-17T07:56:19.143', 'Id': '2784''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I know why and how the <a href="https://en.wikipedia.org/wiki/Push-relabel_algorithm" rel="nofollow">push relabel algorithm</a> works for solving the max-flow problem. But why is a global update step required? </p>\n', 'ViewCount': '224', 'Title': 'Reason for global update steps in the push-relabel algorithm', 'LastEditorUserId': '98', 'LastActivityDate': '2012-07-20T15:50:51.657', 'LastEditDate': '2012-07-20T15:50:51.657', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '2', 'OwnerDisplayName': 'user997704', 'PostTypeId': '1', 'OwnerUserId': '2212', 'Tags': '<algorithms><graph-theory><network-flow>', 'CreationDate': '2012-07-18T09:27:04.577', 'Id': '2819''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I\'m currently looking at network clustering algorithms (we\'re currently looking at both directed and undirected, unweighted networks).  The algorithms we\'ve tried produce visually nice clusters.  However, we would like to evaluate them against some "gold standard" -- a collection of networks in which the clusters have already been identified (and are more-or-less regarded as <em>the</em> clusters by the complex network\'s research community).</p>\n\n<blockquote>\n  <p><strong>Question</strong>: What are the gold standards for network clustering algorithms?  Where can I access them?</p>\n</blockquote>\n', 'ViewCount': '91', 'Title': 'Seeking "gold standard" to evaluate accuracy of network clustering algorithm', 'LastActivityDate': '2012-08-05T13:36:02.027', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '2254', 'Tags': '<algorithms><data-sets><network-topology>', 'CreationDate': '2012-08-03T03:24:45.980', 'Id': '3013''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I\'m trying to find the Maximum Independent Set of a Biparite Graph.</p>\n\n<p>I found this in some notes <strong>"May 13, 1998 - University of Washington - CSE 521 - Applications of network flow"</strong>:</p>\n\n<blockquote>\n  <p><strong>Problem:</strong></p>\n  \n  <p>Given a bipartite graph $G = (U,V,E)$, find an independent set $U\' \\cup V\'$ which is as large as possible, where $U\' \\subseteq U$ and $V\'\n&gt; \\subseteq V$. A set is independent if there are no edges of $E$ between\n  elements of the set.</p>\n  \n  <p><strong>Solution:</strong></p>\n  \n  <p>Construct a flow graph on the vertices $U \\cup B \\cup \\{s,t\\}$. For\n  each edge $(u,v) \\in E$ there is an infinite capacity edge from $u$ to\n  $v$. For each $u \\in U$, there is a unit capacity edge from $s$ to $u$,\n  and for each $v \\in V$, there is a unit capacity edge from $v$ to\n  $t$.</p>\n  \n  <p>Find a finite capacity cut $(S,T)$, with $s \\in S$ and $t \\in T$. Let\n  $U\' = U \\cap S$ and $V\' = V \\cap T$. The set $U\' \\cup V\'$ is\n  independent since there are no infinite capacity edges crossing the\n  cut.  The size of the cut is $|U - U\'| + |V - V\'| = |U| + |V| - |U\' \\cup V\'|$. This, in order to make the independent set as large as\n  possible, we make the cut as small as possible.</p>\n</blockquote>\n\n<p>So lets take this as the graph:</p>\n\n<pre><code>A - B - C\n    |\nD - E - F\n</code></pre>\n\n<p>We can split this into a bipartite graph as follows $(U,V)=(\\{A,C,E\\},\\{B,D,F\\})$</p>\n\n<p>We can see by brute force search that the sole Maximum Independent Set is $A,C,D,F$. Lets try and work through the solution above:</p>\n\n<p>So the constructed flow network adjacency matrix would be:</p>\n\n<p>$$\\begin{matrix}\n      &amp; s &amp; t &amp; A &amp; B &amp; C &amp; D &amp; E &amp; F \\\\\n    s &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 1 &amp; 0 &amp; 1 &amp; 0 \\\\\n    t &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 1 &amp; 0 &amp; 1 \\\\\n    A &amp; 1 &amp; 0 &amp; 0 &amp; \\infty &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\\\n    B &amp; 0 &amp; 1 &amp; \\infty &amp; 0 &amp; \\infty &amp; 0 &amp; \\infty &amp; 0 \\\\\n    C &amp; 1 &amp; 0 &amp; 0 &amp; \\infty &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\\\n    D &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; \\infty &amp; 0 \\\\\n    E &amp; 1 &amp; 0 &amp; 0 &amp; \\infty &amp; 0 &amp; \\infty &amp; 0 &amp; \\infty \\\\\n    F &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; \\infty &amp; 0 \\\\\n\\end{matrix}$$</p>\n\n<p>Here is where I am stuck, the smallest finite capacity cut I see is a trivial one: $(S,T) =(\\{s\\},\\{t,A,B,C,D,E,F\\})$ with a capacity of 3.</p>\n\n<p>Using this cut leads to an incorrect solution of:</p>\n\n<p>$$ U\' = U \\cap S = \\{\\}$$\n$$ V\' = V \\cap T = \\{B,D,F\\}$$\n$$ U\' \\cup V\' = \\{B,D,F\\}$$</p>\n\n<p>Whereas we expected $U\' \\cup V\' = \\{A,C,D,F\\}$?  Can anyone spot where I have gone wrong in my reasoning/working?</p>\n', 'ViewCount': '2163', 'Title': 'Maximum Independent Set of a Bipartite Graph', 'LastActivityDate': '2013-08-27T14:52:52.030', 'AnswerCount': '2', 'CommentCount': '4', 'AcceptedAnswerId': '3033', 'Score': '10', 'PostTypeId': '1', 'OwnerUserId': '1577', 'Tags': '<algorithms><graph-theory><network-flow>', 'CreationDate': '2012-08-03T19:21:39.403', 'FavoriteCount': '1', 'Id': '3027''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>I'm not even sure if this is the right StackExchange to post this, but it seems like sentiment analysis would go here.</p>\n\n<p>What would be the best approach to determine if two people on Twitter are actually friends?</p>\n\n<p>I think that the first criteria would be that they are following each other. This would eliminate all of the celebrities, companies, etc. that a person follows.</p>\n\n<p>The second criteria could be physical proximity to one another. If two people tweet from the same general areas, then there's probably a higher chance that they actually know each other.</p>\n\n<p>After that, I'm not sure what criteria I should look for. Would sentiment analysis of their tweets to each other be a viable option? With that friendly sentiment could indicate that they actually know each other.</p>\n", 'ViewCount': '133', 'Title': 'Analyzing Twitter Relationships', 'LastEditorUserId': '41', 'LastActivityDate': '2012-10-25T01:49:05.057', 'LastEditDate': '2012-08-06T03:48:54.740', 'AnswerCount': '2', 'CommentCount': '4', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '2214', 'Tags': '<algorithms><machine-learning><computer-networks><social-networks>', 'CreationDate': '2012-08-05T17:56:11.877', 'Id': '3050''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I am studying for an AI exam and I\'m looking for a better way of solving the following problem:</p>\n\n<blockquote>\n  <p>Graph shows a classification problem in the unit square $[0,1]^2$, where Class A\n  is denoted by the grey area in the figure (not including the points on the dotted lines),\n  and Class B occurs otherwise.</p>\n</blockquote>\n\n<p><img src="http://i.stack.imgur.com/u87ly.jpg" alt="Graph shows a classification problem in the unit square [0,1]^2"></p>\n\n<p>To solve this problem, there is a need of constructing 2 perceptrons: both perceptrons output 1 if the input lies in the grey area, and at least one of the perceptrons outputs 0 otherwise.</p>\n\n<p>There are 3 ways of finding appropriate weights for inputs and biases that I know of:</p>\n\n<ol>\n<li>Trial and error</li>\n<li>Perceptron learning algorithm (involving random weights, learning rate, multiple epochs)</li>\n<li>Geometrical way of finding the vectors of weights (involving finding an orthogonal line to boundary function)</li>\n</ol>\n\n<p>All of them are quite time consuming when you do it with just pen and paper.</p>\n\n<p>Is there a simple way of calculating/finding perceptron weights based on a classification graph?</p>\n', 'ViewCount': '523', 'Title': 'Is there a simple way of calculating perceptron weights based on a classification graph?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-09-21T18:12:17.233', 'LastEditDate': '2012-08-13T22:24:29.180', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '8', 'PostTypeId': '1', 'OwnerUserId': '2497', 'Tags': '<artificial-intelligence><neural-networks>', 'CreationDate': '2012-08-13T20:37:14.513', 'FavoriteCount': '2', 'Id': '3153''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I have been studying <a href="http://en.wikipedia.org/wiki/Spiking_neural_network" rel="nofollow">Spiking Neural Networks</a> online from various papers, mainly <a href="http://mathsci.kaist.ac.kr/~nipl/am621/lecturenotes/spiking_neurons_2.pdf" rel="nofollow">Maass (1997)</a>. I am not entirely sure I understand what makes SNN\'s pulse-code in contrast to earlier <a href="https://en.wikipedia.org/wiki/Artificial_neural_network" rel="nofollow">ANN</a>s which are considered rate-code. \nI have background in neuroscience so I understand the terms and ratio, I\'m asking regarding the actual implementation. </p>\n\n<p>Is the practical difference in the fact that when each neuron updates its current state in an SNN it deals with the entire history of every pre-synaptic neuron and not only the last step? Is that what gives it temporal characteristics which previous generation ANN\'s lack?</p>\n', 'ViewCount': '128', 'Title': "The essential difference between spiking neural networks and earlier generation ANN's", 'LastEditorUserId': '55', 'LastActivityDate': '2012-08-15T19:06:21.157', 'LastEditDate': '2012-08-15T19:06:21.157', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '7', 'OwnerDisplayName': 'Amir', 'PostTypeId': '1', 'Tags': '<terminology><artificial-intelligence><neural-networks>', 'CreationDate': '2012-03-10T16:47:52.833', 'FavoriteCount': '2', 'Id': '3195''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>I am coding a neural network implementation, but a I have problems in the design. I was wondering about how to compare the <em>output</em> with the <em>target</em>, my neural networks has three outputs</p>\n\n<p><code> groups = {'Iris-virginica':[0,0,1], 'Iris-setosa':[0,1,0], 'Iris-versicolor':[1,0,0]}</code></p>\n\n<p>I know I must translate each output to 0 and 1. </p>\n\n<p>I meant if my result is <code>Iris-virginica</code> and my output is more or less: <code>[0.999979082561091, 0.9999918549147135, 0.9998408912106317]</code>, the subtraction would yield the following result: </p>\n\n<p><code>[-0.999979082561091, -0.9999918549147135, 0.000159]</code></p>\n\n<p>Is that correct, or I need to follow a different approach. Is possible train my net with 0, 1 and 2 values. Do I need to know any more?</p>\n", 'ViewCount': '79', 'Title': 'How to compare the output of a neural network with his target?', 'LastActivityDate': '2012-08-23T19:30:48.420', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '2615', 'Tags': '<algorithms><neural-networks>', 'CreationDate': '2012-08-23T17:29:31.833', 'Id': '3303''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<blockquote>\n  <p>Suppose that we redefine the residual network to disallow edges into $s$. Argue that the procedure FORD-FULKERSON still correctly computes a maximum flow.  </p>\n</blockquote>\n\n<p>I was thinking that when we augment a path the residual capacity of reverse edge increases and can be used to decrease the flow in that edge (but overall increase the network flow) if needed. So if we disallow the edges into $s$ that means we are not allowing decrease in flow in edges $s\\to x$ ($x$ is the adjacent node to $s$). So in the case when we allow edges into $s$ we can have a cycle like </p>\n\n<p>$\\qquad \\displaystyle s \\to x_1 \\leadsto y \\leadsto x_2 \\to s \\to x_3 \\leadsto t$.  </p>\n\n<p>But if we disallow edges into $s$ again we can find the same path with out the cycle. All the above are intuitive ideas but I want a formal proof.  </p>\n\n<p>The question is from <em>Introduction to Algorithms</em> by Cormen et al.</p>\n', 'ViewCount': '356', 'Title': 'A variation in Ford-Fulkerson algorithm', 'LastEditorUserId': '98', 'LastActivityDate': '2012-09-02T13:17:51.197', 'LastEditDate': '2012-09-02T13:17:51.197', 'AnswerCount': '0', 'CommentCount': '7', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '2589', 'Tags': '<algorithms><graph-theory><network-flow><correctness-proof>', 'CreationDate': '2012-09-02T12:01:27.050', 'Id': '3400''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Let Alice and Bob be two users chosen uniformly at random from a social network (e.g. Facebook). What is the probability that they are friends assuming that they share $k$ mutual friends?</p>\n\n<p>I am interested both in the experimental values (or estimates) from currently existing social networks (e.g. Facebook) and values predicted by random graph models for these social networks.</p>\n', 'ViewCount': '193', 'Title': 'What is the probability of friendship conditioned on the number of mutual friends', 'LastActivityDate': '2012-09-17T07:17:51.607', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '41', 'Tags': '<graph-theory><combinatorics><social-networks><random-graphs>', 'CreationDate': '2012-09-16T00:29:01.343', 'Id': '4571''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '527', 'Title': 'What piece am I missing to turn this idea into a programming language?', 'LastEditDate': '2013-07-20T09:50:34.237', 'AnswerCount': '3', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '2161', 'FavoriteCount': '2', 'Body': '<p>I\'ve been doing some reading (I\'ll name drop along the way) and have selected a few scattered ideas that I think could be cobbled together into a nifty esoteric programming language. But I\'m having some difficulty assembling the parts.</p>\n\n<p>Kleene\'s Theorem states: Any Regular Set can be recognized by some Finite-State Machine (Minsky 4.3).</p>\n\n<p>Minsky\'s Theorem 3.5: Every Finite-State machine is equivalent to, and can be "simulated by", some neural net.</p>\n\n<p>"There is a natural way to represent any forest as a binary tree." (Knuth, v1, 333).</p>\n\n<p>And according to Bentley (Programming Pearls, p.126) a binary tree can be encoded as a flat array.</p>\n\n<p>So I\'m imagining an array of bit-fields (say 4 bits so it can easily be worked with in hexadecimal). Each field indicates a type of automaton, and the positions of the array encode (via an intermediary binary tree representation) a forest which approximates (? missing piece ?) the power of a graph.</p>\n\n<p>I\'m somewhat bewildered by the possibilities of automaton sets to try, and of course the fun Universal Automata require three inputs (I worked up an algorithm inspired by Bentley to encode a ternary tree implicitly in a flat array, but it feels like the wrong direction). So I\'d appreciate any side-bar guidance on that. Current best idea: the normal set: and or xor not nand nor, with remaining bits used for threshold weights on the inputs.</p>\n\n<p>So the big piece I\'m missing is a formalism for applying one of these nibble-strings to a datum. Any ideas or related research I should look into?</p>\n\n<hr>\n\n<p><em>Edit:</em> My theoretical support suggests that the type of computations will probably be limited to RL acceptors (and maybe generators, but I haven\'t thought that through).</p>\n\n<p>So, I tried to find an example to flesh this out. The C <code>int isdigit(int c)</code> function performs a logical computation on (in effect) a bit-string. Assuming ASCII, where the valid digits are <code>0x30 0x31 0x32 0x33 0x34 0x35 0x36 0x37 0x38 0x39</code>, so bit 7 must be off, bit 6 must be off, bit 5 must be on, and bit 4 must be on: these giving us the 0x30 prefix; then bit 3 must be off (0-7) or if bit 3 is on, bit 2 must be off and bit 1 must be off (suppressing A-F), and don\'t care about bit 0 (allowing 8 and 9). If you represent the input <em>c</em> as a bit-array (<code>c[0]</code>..<code>c[7]</code>), this becomes</p>\n\n<pre><code>~c[7] &amp; (~c[6] &amp; (c[5] &amp; (c[4] &amp; (~c[3] | (~c[2] &amp; ~c[1])))))\n</code></pre>\n\n<p>Arranging the operators into a tree (colon (:) represents a wire since pipe (|) is logical or),</p>\n\n<pre><code>c[7]  6   5   4   3   2   1   0\n ~    ~   :   :   ~   ~   ~   :\n    &amp;     :   :   :     &amp;\n       &amp;      :      |\n           &amp;        :  \n                &amp;\n</code></pre>\n\n<p>My thought based on this is to insert "input lead" tokens into the tree which receive the values of the input bit assigned in a left-to-right manner. And I also need a <em>ground</em> or <em>sink</em> to explicitly ignore certain inputs (like c[0] above).</p>\n\n<p>This leads me to make NOT (~) a binary operator which negates the left input and simply absorbs right input. And in the course of trying this, I also realized the necessity for a ZERO token to build masks (and to provide dummy input for NOTs).</p>\n\n<p>So the new set is: &amp;(and) |(or) ^(xor) ~(not x, sink y) 0(zero) I(input)</p>\n\n<p>So the tree becomes (flipping up for down)</p>\n\n<pre><code>                 ^\n           &amp;           &amp;\n       &amp;       |      I 0\n     &amp;   I  ~     &amp;\n   &amp;   I   I 0  ~   ~\n ~   ~         I 0 I 0\nI 0 I 0\n=   =  = = =   =   =  =\n7   6  5 4 3   2   1  0 \n</code></pre>\n\n<p>Which encodes into the array (skipping the "forest&lt;=>tree" part, "_" represents a blank)</p>\n\n<pre><code>_ ^ &amp; &amp; &amp; | I 0 &amp; I ~ &amp; _ _ _ _ &amp; I _ _ I 0 ~ ~ _\n  _ _ _ _ _ _ _ ~ ~ _ _ _ _ _ _ _ _ _ _ I 0 I 0 _\n  _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ I 0 I 0 \n</code></pre>\n\n<p>The tree->array encoding always put the root in array(1) so with zero-indexed array, there\'s a convenient blank at the beginning that could be used for linkage, I think.</p>\n\n<p>With only 6 operators, I suppose it could be encoded in octal.</p>\n\n<p>By packing a forest of trees, we could represent a chain of acceptors each applied on the next input depending on the result of the previous.</p>\n', 'Tags': '<programming-languages><finite-automata><arrays><neural-networks><machine-models>', 'LastEditorUserId': '2161', 'LastActivityDate': '2013-11-29T03:20:30.750', 'CommentCount': '6', 'AcceptedAnswerId': '4623', 'CreationDate': '2012-09-19T19:58:45.397', 'Id': '4618''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>I'm currently doing some reading into AI and up to this point couldn't find a satisfying answer to this question: what's the difference between a rule based system and an artificial neural network?</p>\n\n<p>From my understanding both are trying to do inference based on a variety of different inputs.</p>\n", 'ViewCount': '240', 'Title': "What's the difference between a rule based system and an artificial neural network?", 'LastActivityDate': '2012-10-09T16:40:02.740', 'AnswerCount': '2', 'CommentCount': '1', 'AcceptedAnswerId': '4976', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '3121', 'Tags': '<artificial-intelligence><neural-networks>', 'CreationDate': '2012-10-09T09:20:22.983', 'Id': '4972''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>For directed graph $(G=(V, E),s,t,{Ce})$ in which we want to maximize max flow. All edge capacities are at least one. Define the capacity of an $s \\to t$ path to be the smallest capacities of constituent edges. The fastest path from $s$ to $t$ is the path with the most capcity.</p>\n\n<p>b) Show that the fastest path from $s$ to $t$ in a graph can be computed by Dijkstra's algorithm.</p>\n\n<p>c) Show that the maximum flow in $G$ is the sum of individual flows along at most $|E|$ paths from $s$ to $t$.</p>\n\n<p>It's one of the questions from my algorithms assignment, and I figured out (a), but can't get these two above.</p>\n", 'ViewCount': '418', 'Title': "Dijskstra's algorithm, maximum flow", 'LastEditorUserId': '39', 'LastActivityDate': '2012-11-11T17:50:53.390', 'LastEditDate': '2012-11-09T22:10:28.233', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '-2', 'PostTypeId': '1', 'OwnerUserId': '4523', 'Tags': '<algorithms><graphs><optimization><shortest-path><network-flow>', 'CreationDate': '2012-11-09T19:31:05.533', 'Id': '6586''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '569', 'Title': 'Graph Theory and computer networks', 'LastEditDate': '2012-11-17T09:25:32.120', 'AnswerCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '4624', 'Body': '<p>What are the various graph theory  techniques which are used in modelling of computer networks? Secondly, Will routing algorithms like bellmanford etc also be considered to be part of modelling networks? In short , I want to know the algorithm names which are used in modelling computer networks.</p>\n', 'ClosedDate': '2012-11-19T22:16:00.363', 'Tags': '<graph-theory><computer-networks>', 'LastEditorUserId': '4624', 'LastActivityDate': '2012-11-17T15:24:18.903', 'CommentCount': '2', 'AcceptedAnswerId': '6716', 'CreationDate': '2012-11-17T07:20:05.667', 'Id': '6707''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '1322', 'Title': 'Finding negative cycles for cycle-canceling algorithm', 'LastEditDate': '2012-11-20T09:31:55.460', 'AnswerCount': '2', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '4298', 'FavoriteCount': '4', 'Body': '<p>I am implementing the cycle-canceling algorithm to find an optimal solution for the min-cost flow problem. By finding and removing negative cost cycles in the residual network, the total cost is lowered in each round. To find a negative cycle I am using the bellman-ford algorithm.</p>\n\n<p>My Problem is:\nBellman-ford only finds cycles that are reachable from the source, but I also need to find cycles that are not reachable.</p>\n\n<p>Example: In the following network, we already applied a maximum flow. The edge $(A, B)$ makes it very expensive. In the residual network, we have a negative cost cycle with capacity $1$. Removing it, would give us a cheaper solution using edges $(A, C)$ and $(C, T)$, but we cannot reach it from the source $S$.</p>\n\n<p>Labels: Flow/Capacity, Cost</p>\n\n<p><img src="http://i.stack.imgur.com/jKtUd.png" alt="enter image description here"></p>\n\n<p>Of course, I could run Bellman-ford repeatedly with each node as source, but that does not sound like a good solution. I\'m a little confused because all the papers I read seem to skip this step.</p>\n\n<p>Can you tell me, how to use bellman-ford to find every negative cycle (reachable or not)?\nAnd if not possible, which other algorithm do you propose?</p>\n', 'Tags': '<algorithms><graph-theory><shortest-path><network-flow>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-11-20T17:17:58.753', 'CommentCount': '3', 'AcceptedAnswerId': '6789', 'CreationDate': '2012-11-19T20:56:27.043', 'Id': '6773''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>I'm reading a book about computer network theory, and one topic is discusses is routing algorithms.  It only mentions (probably not intentionally) how routers participate in forming the understood network topology stored in each routers memory - the routing tables. </p>\n\n<p>So this brings me to my question, do Host acts like dedicated routers in this case and participate in and become part of that understood topology of the network in nearby routers?</p>\n\n<p>For example, it says that routers communicate with each other to form their routing tables to find the best path. Do <strong>hosts as end user machines</strong> find themselves in this routing table (<strong>as an entry in dedicated router, routing tables</strong>) or routing topology?  Do they participate in forming it?</p>\n\n<p>Likewise do Computer Hosts, have entries for nearby dedicate routers in their routing tables? I'm trying to find the relation ship between a router and a host in the this process.</p>\n\n<p>The issue I'm having, is if they don't participate in this process, how do the routers not where the end user machines are in the topology?</p>\n\n<p>Thanks :-)</p>\n", 'ViewCount': '66', 'Title': 'Routing Algorithms and Hosts', 'LastEditorUserId': '4772', 'LastActivityDate': '2012-11-28T04:30:26.203', 'LastEditDate': '2012-11-28T03:09:35.070', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '6979', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '4772', 'Tags': '<computer-networks>', 'CreationDate': '2012-11-28T02:46:32.140', 'Id': '6977''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>In the multiway cut problem, the input is an undirected graph $G= (V, E)$ and set of terminal nodes $s_1, s_2,\\ldots s_k$ are in $V$. The goal is to find a minimum\nset of edges in $E$ whose removal leaves all terminals in different components.</p>\n\n<ol>\n<li><p>How do we show that this problem can be solved exactly in polynomial time when\n$k= 2$?</p></li>\n<li><p>How do we get an approximation algorithm with ratio at most 2 for the case when $k \\geq 3$?</p></li>\n</ol>\n', 'ViewCount': '353', 'Title': '2OPT Approximation Algorithm for Multiway Cut Problem', 'LastEditorUserId': '19', 'LastActivityDate': '2013-04-02T15:47:46.743', 'LastEditDate': '2013-04-02T14:17:26.360', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '2', 'OwnerDisplayName': 'lam lae', 'PostTypeId': '1', 'Tags': '<algorithms><graphs><approximation><network-flow>', 'CreationDate': '2012-12-02T22:34:14.450', 'Id': '7205''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>Consider an undirected graph with a source and a sink vertex. We would like to remove minimum number of vertices in that graph to disconnect any path between source and sink.</p>\n\n<p>My intuition tells me that we can use max-flow, min-cut algorithm to solve this problem. I don't know whether my solution is correct or not. Please help me check it:</p>\n\n<ol>\n<li>Replace each of the undirected edges with a pair of directed edges.</li>\n<li>Replace each vertex $v$ with two vertices $v_\\text{in}$ and $v_\\text{out}$ connected by an edge. all the incoming edges of $v$ will be connected with $v_\\text{in}$, all the outgoing edges of $v$ will be connected with $v_\\text{out}$.</li>\n<li>Try to find a minimum cut $M$. The edges of $M$ refer to the vertices that we need to remove.</li>\n</ol>\n", 'ViewCount': '767', 'Title': 'Remove minimum number of vertices to disconnect the graph', 'LastEditorUserId': '2205', 'LastActivityDate': '2012-12-17T09:25:17.337', 'LastEditDate': '2012-12-17T09:25:17.337', 'AnswerCount': '0', 'CommentCount': '3', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '5093', 'Tags': '<algorithms><graph-theory><network-flow>', 'CreationDate': '2012-12-17T07:12:38.157', 'Id': '7457''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '213', 'Title': 'XOR-like behavior in flow networks', 'LastEditDate': '2013-03-03T11:44:38.840', 'AnswerCount': '4', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '4298', 'FavoriteCount': '2', 'Body': '<p><em>XOR is not the correct name, but I am looking for some kind of exclusive behavior.</em></p>\n\n<p>I am currently solving a set of different (assignment) problems by modeling flow networks and running a min-cost-max-flow algorithm. Flow networks are quite handy because a lot of problems can be reduced to them in an easy and understandable way. In my case these are matchings with some additional constraints. As these constraints are getting more complex I\'ve been wondering if there are some existing constructions to model specific behaviors.</p>\n\n<p>In this case I want to restrict the outgoing flow of a node to a single edge.</p>\n\n<p>Given a graph $G=(V, E)$, integral capacities $c(u,v)$ and costs $k(u,v)$. An arbitrary node is called $A$. It\'s direct neighbors are called $B_1, ..B_n$. Can we replace the edges $AB_1,...AB_n$ (red) with some construction so that <strong>only one edge can receive flow</strong>? Which means that if $AB_1$ gets some flow (e.g. $5/10$) no other (red) edge can receive flow.</p>\n\n<p><img src="http://i.stack.imgur.com/1Cli7.png" alt=""></p>\n\n<p>We could add intermediate nodes/edges and play with costs and capacities. The total capacity of our new construction has to stay the same and the cost of the different alternatives have to stay somehow proportional.</p>\n\n<p>So my questions are:</p>\n\n<ol>\n<li>Are there constructions like this in general? (Any keywords, links, papers)</li>\n<li>Can you suggest a solution to my specific problem?</li>\n</ol>\n', 'Tags': '<algorithms><graph-theory><graphs><network-flow><assignment-problem>', 'LastEditorUserId': '4298', 'LastActivityDate': '2013-10-29T15:14:57.683', 'CommentCount': '9', 'AcceptedAnswerId': '7623', 'CreationDate': '2012-12-26T22:37:50.973', 'Id': '7610''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': u'<blockquote>\n  <p>Computer Networking:\n  A Top Down Approach\n  Featuring the Internet,\n  Jim Kurose, Keith Ross\n  Addison-Wesley 4nd edition , page -223.</p>\n</blockquote>\n\n<p>Also <a href="https://sites.google.com/site/amirherzberg/introductiontocommunicationnetworks89-35/89-350-introduction-to-communication-neteworks---lectures/s2transport.pdf?attredirects=0&amp;d=1" rel="nofollow">here</a> slide 60 .</p>\n\n<p>RDT2.1 (Reliable data transfer) -</p>\n\n<pre><code>Sender(s):\nstate=ready; i=0;\nOn rdt_send(d,m):\n    if state=ready\n    then\n    { p=&lt;s,d,m,i,\n    EDC(s||d||m||i)&gt;;\n    udt_send(p);\n    state=busy; }\nOn udt_deliver(a)\n    \uf071 If a=&lt;\u201cack\u201d,EDC(\u201cack\u201d)&gt;\n    then\n    { i++;\n    state=ready; }\n    else udt_send(p);\n</code></pre>\n\n<p>When the <code>Sender</code> side is in <code>state=ready</code> , does he still listener to "ack" recived from the <code>Reciver</code> ? </p>\n\n<p>I need to know this , cause if so it seems that the <code>Sender</code> can get duplicate "ack"\'s from the <code>reciver</code> and inc the <code>i</code> without sending any packet mainwhile . </p>\n', 'ViewCount': '62', 'Title': 'RDT2.1 - does the Sender listener to "ack" even though state=ready?', 'LastEditorUserId': '4409', 'LastActivityDate': '2012-12-30T08:00:46.263', 'LastEditDate': '2012-12-30T08:00:46.263', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '7648', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '4409', 'Tags': '<computer-networks>', 'CreationDate': '2012-12-30T02:51:41.407', 'Id': '7647''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Which tools or softwares are mostly used for the purpose of modeling a computer network?</p>\n', 'ViewCount': '78', 'Title': 'Names of Softwares used for modeling', 'LastActivityDate': '2013-01-01T19:24:26.887', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '7680', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '4624', 'Tags': '<computer-networks>', 'CreationDate': '2013-01-01T17:37:15.933', 'Id': '7679''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Suppose we have a classification problem and we wish to solve the problem by Neural Network. What factors must one consider choosing an NN structure? e.g Feed Forward, Recurrent and other available structures. </p>\n', 'ViewCount': '35', 'Title': 'What factors must one consider choosing an NN structure?', 'LastActivityDate': '2013-01-03T06:58:07.757', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '7715', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '51', 'Tags': '<artificial-intelligence><neural-networks><neural-computing>', 'CreationDate': '2013-01-03T06:21:59.343', 'Id': '7714''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '226', 'Title': 'Neural Network weight selection using Genetic Algorithm', 'LastEditDate': '2013-01-13T05:13:50.257', 'AnswerCount': '1', 'Score': '1', 'OwnerDisplayName': 'NAYOSO', 'PostTypeId': '1', 'OwnerUserId': '4573', 'Body': "<p>Hi I want to ask about weight selection in neural network using genetic algorithm. </p>\n\n<p>Right now what I understand is </p>\n\n<ol>\n<li>Initialize population</li>\n<li>Encode the weight of the neural network to the chromosome</li>\n<li>Calculating the error and fitness</li>\n<li>crossover and mutation</li>\n<li>looping until satisfy the condition</li>\n</ol>\n\n<p>Is it the right thing?</p>\n\n<p>if yes what I'm still not sure are :</p>\n\n<ol>\n<li>If I have 50 chromosome in one population that means I must create 50 neural network?</li>\n<li>Let's say I have 100 different input and I want the network to learn it by using weight selection only (not using backpropagation) and how I calculate the error? Testing and calculating the error of every input(using MSE) and divide it by 100?</li>\n</ol>\n\n<p>I think that's all for now</p>\n\n<p>Thank you</p>\n", 'Tags': '<neural-networks>', 'LastEditorUserId': '157', 'LastActivityDate': '2013-01-13T05:13:50.257', 'CommentCount': '0', 'AcceptedAnswerId': '7818', 'CreationDate': '2013-01-04T11:28:57.970', 'Id': '7817''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>In peer-to-peer (P2P) networks nodes are interconnected with each other. In client/server (C/S) networks clients talks to the server. If in a C/S network clients also want to talk with each other (such as in a multiplayer online game), then clients would have to communicate through the server.</p>\n\n<p>Given these, is it possible determine which architecture is more bandwidth consuming?</p>\n', 'ViewCount': '51', 'Title': 'P2P and C/S, is it possible to determine which one is more bandwidth consuming?', 'LastActivityDate': '2013-01-27T04:14:08.647', 'AnswerCount': '2', 'CommentCount': '0', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '5387', 'Tags': '<computer-networks><network-topology>', 'CreationDate': '2013-01-12T03:53:39.057', 'Id': '7895''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I\'m looking at collision detection in communication protocols, in particular <a href="http://en.wikipedia.org/wiki/Carrier_sense_multiple_access_with_collision_detection" rel="nofollow">Carrier sense multiple access with collision detection (CSMA/CD)</a>. According to what I\'ve read on Wikipedia, a collision seems to cause the wave of the outgoing signal and the wave of the incoming signal to overlap. Thus, the signal has values with more amplitude than allowed for a "1-bit". This could be used as a working collision detection algorithm.</p>\n\n<p>However, what\'s the use of the "Jam signal", as explained in <a href="http://en.wikipedia.org/wiki/Carrier_sense_multiple_access_with_collision_detection" rel="nofollow">the same Wikipedia article</a>, then? It says that the CRC has to be faulted, but we already have a collision detection algorithm.</p>\n', 'ViewCount': '308', 'Title': 'Jamming signal useless in CSMA / CD?', 'LastEditorUserId': '39', 'LastActivityDate': '2013-01-15T20:44:57.460', 'LastEditDate': '2013-01-15T20:44:57.460', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '8949', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '3181', 'Tags': '<computer-networks><communication-protocols><encoding-scheme>', 'CreationDate': '2013-01-15T07:55:13.747', 'Id': '8943''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': u'<p>I\'m having difficulties understanding the solution to the following question:</p>\n\n<blockquote>\n  <p>Consider the following description of a LAN:</p>\n  \n  <p>The main Internet connection is connected to our gateway router. This\n  in turn is part of the backbone network on the 65.21.1.0/24 subnet.\n  The backbone also supports two further routers SALES and RESEARCH.\n  There is one Sales subnetwork 65.21.6.0/23, and two research\n  subnetworks 65.21.100.0/24 and 65.21.200.0/26.</p>\n\n<pre><code>If the Interface addresses are:   \n\n\u2022 i1\u201365.21.1.1\n\u2022 i2\u201365.21.1.2\n\u2022 i3\u201365.21.6.1\n\u2022 i4\u201365.21.1.3\n\u2022 i5\u201365.21.100.1\n\u2022 i6\u201365.21.200.1\n</code></pre>\n  \n  <p>What are the routing tables for the SALES and RESEARCH routers?</p>\n  \n  <p><img src="http://i.stack.imgur.com/XS2Vu.gif" alt="enter image description here"></p>\n</blockquote>\n\n<p>How is the <strong>via</strong> and <strong>interface</strong> column derived in the solution?</p>\n\n<p><img src="http://i.stack.imgur.com/PBm8D.png" alt="enter image description here"></p>\n\n<p>Thanks in advance.</p>\n', 'ViewCount': '159', 'Title': 'Simple routing table question', 'LastEditorUserId': '98', 'LastActivityDate': '2013-01-19T12:20:38.017', 'LastEditDate': '2013-01-17T13:35:13.390', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '9039', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '1165', 'Tags': '<algorithms><computer-networks><routing>', 'CreationDate': '2013-01-17T09:43:21.247', 'Id': '8984''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>I have a multilayer perceptron. It has an input layer with two neurons, a hidden layer with an arbitrary number of neurons, and an output layer with two neurons.</p>\n\n<p>Given that <code>randomboolean</code> and <code>targetboolean</code> are random boolean values, and the network operates as such:</p>\n\n<pre><code>input(randomboolean); //Set the input neurons to reflect the random boolean\npropagateforwards(); //Perform standard forward propagation\noutputboolean = output(); //To get the networks output\nideal(targetboolean); //Performs connection updating via back-prop\n</code></pre>\n\n<p>Is it possible to get the network to map the <code>randomboolean</code> value to the <code>targetboolean</code> value in such a way as the the <code>outputboolean</code> value will correctly match the <code>targetboolean</code> while running in an 'on-line' (where prediction occurs along with continued learning) mode after some arbitrary number of training cycles. </p>\n\n<p>I hear that the network needs to be recurrent to process this as it may be temporal behaviour, however the MLP is a universal computing platform and I assume it should be able to approximate the temporal behaviour needed for this task.</p>\n", 'ViewCount': '144', 'Title': 'About the behaviour of multi-layer perceptrons', 'LastEditorUserId': '98', 'LastActivityDate': '2013-01-30T16:06:02.490', 'LastEditDate': '2013-01-25T11:18:32.820', 'AnswerCount': '2', 'CommentCount': '4', 'AcceptedAnswerId': '9152', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '814', 'Tags': '<machine-learning><artificial-intelligence><neural-networks>', 'CreationDate': '2013-01-24T19:14:58.373', 'Id': '9137''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>In the CLRS book (<a href="http://en.wikipedia.org/wiki/Introduction_to_Algorithms" rel="nofollow">http://en.wikipedia.org/wiki/Introduction_to_Algorithms</a>) Chapter 26 (Maximum Flow) page 744 (third edition), there is the following equation -</p>\n\n<p>$$\n\\sum_{u \\in U}e(u) \\;=\\;\n\\sum_{u \\in U}\\;\\sum_{v \\in U}f(v, u) \\;+\\;\n\\sum_{u \\in U}\\;\\sum_{v \\in \\bar{U}}f(v, u) \\;-\\;\n\\sum_{u \\in U}\\;\\sum_{v \\in U}f(u, v) \\;-\\;\n\\sum_{u \\in U}\\;\\sum_{v \\in \\bar{U}}f(u, v)\n$$</p>\n\n<p>where $f(u, v)$ is the flow between vertices $u$ and $v$, $e(u)$ is the excess flow at a particular vertex, $U$ is the set of vertices which are reachable from the source, and $\\bar{U}$ is the set of remaining vertices.</p>\n\n<p>In the next line, the first and third terms disappear. I don\'t understand why that holds. I do realize that those are flow values from vertex $u$ to vertex $v$ where both of them are in the same set $U$, but I don\'t understand why they cancel out to zero.</p>\n', 'ViewCount': '102', 'Title': 'Push relabel algorithms in flow networks', 'LastEditorUserId': '2152', 'LastActivityDate': '2013-04-03T16:18:22.383', 'LastEditDate': '2013-04-03T16:18:22.383', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '10993', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '6558', 'Tags': '<algorithms><graph-theory><graphs><network-flow>', 'CreationDate': '2013-01-25T16:14:49.193', 'Id': '9153''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>How do I calculate RTT, do I start to measure the time from the beginning of the segment transmition or from the moment all the segment had been transmitted? </p>\n\n<p>The end time is the moment the sender gets the "ACK".   </p>\n', 'ViewCount': '2165', 'Title': 'RTT (Round Trip Time) calculation', 'LastEditorUserId': '683', 'LastActivityDate': '2013-01-29T16:41:48.983', 'LastEditDate': '2013-01-28T14:39:43.307', 'AnswerCount': '3', 'CommentCount': '3', 'AcceptedAnswerId': '9256', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '4409', 'Tags': '<computer-networks>', 'CreationDate': '2013-01-28T14:07:58.950', 'Id': '9249''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I read a question from my recitation about optimal buffer size. As solution there is a furmula for calculating the optimal buffer size; I\'m not sure about one of its parameters. The formula is</p>\n\n<p>$\\quad \\operatorname{Buffer}_{\\text{optimal}} =  \\frac{\\operatorname{Buffer}_{\\text{current}}}{1-\\frac{R_{\\text{app}}}{R_{\\min}}}$ </p>\n\n<p>Where </p>\n\n<ul>\n<li>$\\operatorname{Buffer}_{\\text{optimal}}$ is the optimal buffer size we want to calculate.</li>\n<li>$\\operatorname{Buffer}_{\\text{current}}$ is the current buffer size.</li>\n<li>$R_{\\text{app}}$ is the rate the application reads data from the buffer at. </li>\n<li>$R_{\\min}$ -- this is the one I\'m not sure about.</li>\n</ul>\n\n<p>The example problem is this: </p>\n\n<blockquote>\n  <p>Alice connects to web server and downloads a file of 12KB size from\n  the server. There is a router between them. The transmission rate \n  between Alice and router is 400,000B/s and the transmission rate between \n  router and server is 1MB/s. Buffer size in the router is 4KB, and buffer \n  size in Alice is 3KB. The rate the application reads from Alice buffer with\n  is 100KBps.\n  <img src="http://i.stack.imgur.com/UFdgt.png" alt="enter image description here"> \n  Calculate the optimal buffer size for Alice as a fuction of router buffer\n  size and free space at the buffer.</p>\n</blockquote>\n\n<p>So as described in the solution, according to the above formula the solution is</p>\n\n<p>$\\qquad \\operatorname{Buffer}_{\\text{optimal}} = \\frac{3*10^3}{1-\\frac{10^5}{4*10^5}}$ </p>\n\n<p>So what $ R_{\\min} $ could be  ?</p>\n', 'ViewCount': '42', 'Title': 'What is $R_\\min$ in this formulat for optimal buffer size?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-02-02T21:15:17.650', 'LastEditDate': '2013-01-31T14:14:21.507', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '9359', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '4409', 'Tags': '<computer-networks>', 'CreationDate': '2013-01-31T08:11:55.363', 'Id': '9344''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '269', 'Title': 'Are link-cut trees ever used in practice, for max flow computation or other applications?', 'LastEditDate': '2013-02-05T10:22:43.413', 'AnswerCount': '2', 'Score': '13', 'PostTypeId': '1', 'OwnerUserId': '6701', 'FavoriteCount': '2', 'Body': '<p>Many max flow algorithms that I commonly see implemented, Dinic\'s algorithm, push relabel, and others, can have their asymptotic time cost improved through the use of <a href="http://en.wikipedia.org/wiki/Link/cut_tree">dynamic trees</a> (also known as link-cut trees).</p>\n\n<ul>\n<li>Push relabel runs in $O(V^2E)$ or $O(V^3)$ or $O(V^2\\sqrt{E})$ normally, but with dynamic trees $O(VE \\log(V^2/E))$</li>\n<li>Dinic\'s algorithm runs in $O(V^2E)$, but with dynamic trees $O(VE\\log(V))$</li>\n</ul>\n\n<p>However, practical implementations of max-flow algorithms in most libraries don\'t seem to make use of this data structure.  Are dynamic trees ever used in practice for max flow computation? Or do they carry too much overhead to be useful for real world problem sizes?</p>\n\n<p>Are there any other problem domains where link cut trees are used?</p>\n\n<p>This question is related to a question that I asked on cstheory: <a href="http://cstheory.stackexchange.com/questions/16347/are-any-of-the-state-of-the-art-maximum-flow-algorithms-practical">Are any of the state of the art Maximum Flow algorithms practical?</a></p>\n', 'Tags': '<reference-request><graphs><data-structures><network-flow>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-02-05T21:59:44.773', 'CommentCount': '2', 'AcceptedAnswerId': '9521', 'CreationDate': '2013-02-05T04:36:34.087', 'Id': '9501''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '494', 'Title': 'Are semantic networks ontologies?', 'LastEditDate': '2013-06-03T22:00:31.077', 'AnswerCount': '1', 'Score': '2', 'OwnerDisplayName': 'Zonata', 'PostTypeId': '1', 'OwnerUserId': '6939', 'Body': '<p>I struggle with few definitions in knowledge representation and seek credible help to distinguish between them. I have been searching on wikipedia and many websites for the difference between ontologies and semantic networks (not to be confused with semantic web). While the <a href="http://en.wikipedia.org/wiki/Semantic_networks" rel="nofollow">wikipedia</a> page on semantic network never refer to ontologies, they seem extremely similar and have similar application in CS.</p>\n\n<p>My guess is that semantic network are a type of ontology adapted for research on AI. However, I don\'t know the difference between both. So my question is simply:</p>\n\n<p><strong>Are semantic networks ontologies?</strong> If so, are they synonym? or what are the distinctions?</p>\n', 'Tags': '<terminology><knowledge-representation><ontologies><semantic-networks>', 'LastEditorUserId': '39', 'LastActivityDate': '2013-06-03T22:00:31.077', 'CommentCount': '1', 'AcceptedAnswerId': '9824', 'CreationDate': '2013-02-15T02:03:45.813', 'Id': '9800''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I\'m very new to neural networks, and have been trying to figure some things out.  So, let\'s say you come across a neural network which has 100 inputs, a hidden layer with 200 nodes, and 32 outputs. Let\'s also say that you, the "discoverer" of this particular instance of a neural network, are able to read the weights of the individual neurons. What could you figure out about it\'s function?</p>\n\n<p>1) Are you able to determine what the algorithm or logic is contained within the neural network?  Other than feeding in all possible inputs and studying the outputs it produces.</p>\n\n<p>2) If you were given information about the connection of the neural network (maybe the network isn\'t fully connected), would solving question one above be easier?</p>\n', 'ViewCount': '181', 'Title': 'What can be learned from the weights in a neural network?', 'LastActivityDate': '2013-03-19T00:03:49.407', 'AnswerCount': '2', 'CommentCount': '1', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '7157', 'Tags': '<machine-learning><neural-networks>', 'CreationDate': '2013-03-05T16:44:38.130', 'FavoriteCount': '1', 'Id': '10295''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I have on a few occasions trained neural networks (back propagation networks) with some rather complicated data sets (backgammon positions and OCR). When doing this, it seems that a lot of the work involves trying out different configurations of the networks, in order to find the optimal configuration for learning. Often there is a compromise between small nets that are faster to use/learn, and bigger nets, that are able to represent more knowledge.</p>\n\n<p>Then I wonder if it could be possible to make some networks that are both fast and big. I\'m thinking that at network where every neuron ain\'t fully connected ought to be faster to calculate than nets with full connection on all layers. It could be the training that detected that certain inputs are not needed by certain neurons, and therefore remove those connections. In the same way the training could also involve adding new neurons if some neurons seems to be "overloaded".</p>\n\n<p>Is this something that have been tried out with any success ? Does any classes of networks exists with this kind of behavior ?</p>\n', 'ViewCount': '110', 'Title': 'Adapting neural network', 'LastActivityDate': '2013-04-04T00:39:42.330', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '10986', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '7516', 'Tags': '<machine-learning><neural-networks><learning-theory>', 'CreationDate': '2013-03-31T15:39:51.687', 'FavoriteCount': '2', 'Id': '10937''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>Let's say we a have flow network with $m$ edges and integer capacities. </p>\n\n<p>Prove that there exists a sequence of at most $m$ augmenting paths that yield the maximum flow.</p>\n\n<p>A good way to start thinking about this is to imagine that we know the maximum flow already.  How can we figure the sequence of $m$ paths?</p>\n", 'ViewCount': '310', 'Title': 'Maximum number of augmenting paths in a network flow', 'LastEditorUserId': '4249', 'LastActivityDate': '2013-04-16T02:07:47.667', 'LastEditDate': '2013-04-15T08:17:49.407', 'AnswerCount': '1', 'CommentCount': '8', 'AcceptedAnswerId': '11351', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '7336', 'Tags': '<graph-theory><combinatorics><network-flow>', 'CreationDate': '2013-04-13T16:06:42.840', 'Id': '11288''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>Across my studies I have noticed the following statement in my Subject Guide; namely, that two-layer feed-forward neural networks using the sigmoidal activation function are universal. My question is how are the networks 'universal' and what does 'universal' actually mean in this instance?</p>\n\n<p>Thanks in advance.</p>\n", 'ViewCount': '58', 'Title': 'How are two layer feed-forward neural networks universal?', 'LastActivityDate': '2013-04-26T20:49:19.350', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '11587', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '7919', 'Tags': '<neural-networks>', 'CreationDate': '2013-04-26T20:20:40.117', 'FavoriteCount': '1', 'Id': '11586''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>This is what I know:</p>\n\n<ul>\n<li>GBN weakness is the fact that when the window size is too large, the number of packets in the pipeline grows and one packet error causes the retransmition of many packets unnecessarily. </li>\n<li>Selective Repeat solves this by acknowleding just the suspicious packets, which sightly makes performance better, but if a wrong window size is chosen, then the reciever doesn't know if a packet is being retransmitted or another packet is being sent by first time.</li>\n</ul>\n\n<p>So, back to the question, what other important performance differences exists between these protocols?</p>\n", 'ViewCount': '3018', 'Title': 'Performance differences between Go-Back-N and Selective Repeat ARQ protocols?', 'LastEditorUserId': '7492', 'LastActivityDate': '2013-05-12T07:31:21.147', 'LastEditDate': '2013-05-05T15:45:27.530', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '11960', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '7492', 'Tags': '<computer-networks><communication-protocols>', 'CreationDate': '2013-05-02T02:20:04.770', 'Id': '11715''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I am learning artificial neural networks and i am very new to artificial neural networks. How to create artificial neural network programs and test them?, how to make my artificial neural networks learn?. I mean i there any software trough which we create artificial neural network simulations and test them? Can java be used in these simulations to control these networks? Can these simulations only be used for actual problem solving? Please tell in detail with addition links if required about how to begin developing artificial neural networks?</p>\n', 'ViewCount': '25', 'Title': 'How to test and create ANN models?', 'LastActivityDate': '2013-06-05T19:32:13.090', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '-1', 'PostTypeId': '1', 'OwnerUserId': '8052', 'Tags': '<artificial-intelligence><neural-networks><software-testing>', 'CreationDate': '2013-05-06T15:46:36.523', 'Id': '11833''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>I was wondering. May the source and sink have in-out going edges in a flow-network, and if so - does Ford-Fulkerson and the max-flow min-cut theorem apply ?</p>\n\n<p>Flow-networks are always pictures with no edges entering source, and no edges leaving sink.</p>\n\n<p>I've tried to search the web for an answer, but did not come across an answer i fully understand. Also, I've yet to see a flow network pictured with these edges from source/sink.</p>\n\n<p>Could I transform an undirected graph into a flow-network ? This network will have edges going into source and edges leaving sink ?? This hypothesis is the reason for my question.</p>\n", 'ViewCount': '206', 'Title': 'In flow networks, may source/sink have incoming/outgoing edges?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-26T18:57:23.833', 'LastEditDate': '2013-05-19T15:03:37.647', 'AnswerCount': '3', 'CommentCount': '3', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '8254', 'Tags': '<algorithms><graphs><network-flow>', 'CreationDate': '2013-05-19T14:20:17.700', 'Id': '12134''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>How can I compute the search space complexity of a directional semantic network (i.e. a network where each semantics consist of two nodes and a directional link stands for their semantic relation)?</p>\n\n<p>Edit: For example, each semantics would be something like <code>lion ~&gt; IsA ~&gt; animal</code>, <code>animal ~&gt; IsInstanceOf ~&gt; living</code> etc...</p>\n', 'ViewCount': '39', 'Title': 'Search space complexity of directional semantic network', 'LastEditorUserId': '6899', 'LastActivityDate': '2013-06-04T18:56:16.000', 'LastEditDate': '2013-06-04T18:56:16.000', 'AnswerCount': '0', 'CommentCount': '3', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '6899', 'Tags': '<complexity-theory><knowledge-representation><searching><semantic-networks>', 'CreationDate': '2013-06-03T08:12:17.507', 'Id': '12440''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': u'<p>I need your help with an exercise on <a href="http://en.wikipedia.org/wiki/Ford%E2%80%93Fulkerson_algorithm" rel="nofollow">Ford-Fulkerson</a>.</p>\n\n<blockquote>\n  <p>Suppose you are given a flow network with capacities $(G,s,t)$ and you are also given the max flow $|f|$ in advance.</p>\n  \n  <p>Now suppose you are given an arc $e$ in $G$ and suppose this arc\'s capacity is increased by one.</p>\n  \n  <p>Give an efficent algorithm which returns true iff the increase of the capacity of the arc $e$ will allow an increase in the max flow.</p>\n</blockquote>\n\n<p>I suppose we shouldn\'t run Ford-Fulkerson again but somehow use the given $|f|$\u2026 Any ideas how?</p>\n', 'ViewCount': '237', 'LastEditorDisplayName': 'user742', 'Title': 'Effect of increasing the capacity of an edge in a flow network with known max flow', 'LastActivityDate': '2013-06-17T23:03:08.163', 'LastEditDate': '2013-06-17T23:03:08.163', 'AnswerCount': '0', 'CommentCount': '2', 'Score': '2', 'OwnerDisplayName': 'SyndicatorBBB', 'PostTypeId': '1', 'OwnerUserId': '4514', 'Tags': '<algorithms><graph-theory><network-flow><weighted-graphs>', 'CreationDate': '2013-06-16T16:41:05.080', 'Id': '12703''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I am a CS undergraduate (but I don\'t know much about AI though, did not take any courses on it, and definitely nothing about NN until recently) who is about to do a school project in AI, so I pick a topics regarding grammar induction (of context-free language and perhaps some subset of context-sensitive language) using reinforcement learning on a neural network. I started to study previous successful approach first to see if they can be tweaked, and now I am trying to understand the approach using supervised learning with Long Short Term Memory.\nI am reading <a href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.35.4170" rel="nofollow">"Learning to Forget: Continual Prediction with LSTM"</a>. I am also reading the paper on peephole too, but it seems even more complicated and I\'m just trying something simpler first. I think I get correctly how the memory cell and the network topology work. What I do not get right now is the training algorithm. So I have some questions to ask:</p>\n\n<ul>\n<li><p>How exactly does different input get distinguished? Apparently the network is not reset after each input, and there is no special symbol to delimit different input. Does the network just receive a continuous stream of strings without any clues on where the input end and the next one begin?</p></li>\n<li><p>What is the time lag between the input and the corresponding target output? Certainly some amount of time lag are required, and thus the network can never be trained to get a target output from an input that it have not have enough time to process. If it was not Reber grammar that was used, but something more complicated that could potentially required a lot more information to be stored and retrieved, the amount of time need to access the information might varied depending on the input, something that probably cannot be predicted while we decide on the time lag to do training.</p></li>\n<li><p>Is there a more intuitive explanation of the training algorithm? I find it difficult to figure out what is going on behind all the complicated formulas, and I would need to understand it because I need to tweak it into a reinforced learning algorithm later.</p></li>\n<li><p>Also, the paper did not mention anything regarding noisy <strong>training</strong> data. I have read somewhere else that the network can handle very well noisy testing data. Do you know if LSTM can handle situation where the training data have some chances of being corrupted/ridden with superfluous information?</p></li>\n</ul>\n', 'ViewCount': '184', 'Title': 'Intuitive description for training of LSTM (with forget gate/peephole)?', 'LastEditorUserId': '39', 'LastActivityDate': '2013-06-26T10:53:14.773', 'LastEditDate': '2013-06-26T10:53:14.773', 'AnswerCount': '0', 'CommentCount': '1', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '8835', 'Tags': '<formal-languages><machine-learning><artificial-intelligence><neural-networks>', 'CreationDate': '2013-06-24T17:04:54.560', 'Id': '12871''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>On the <a href="http://en.wikipedia.org/wiki/Circulation_problem" rel="nofollow">circulation problem page on wikipedia</a>, the multicommodity circulation problem formulation seems to be insufficient, since we can just set all but one flow to $0$, and reduce it to a circulation problem.</p>\n\n<p>I can\'t find any concrete description of multicommodity circulation problem to verify the correctness. There is only <a href="http://transci.journal.informs.org/content/8/4/355.full.pdf" rel="nofollow">one paper</a> I can find and it\'s behind a pay wall.</p>\n\n<p>Here is a formulation I thought to make more sense:</p>\n\n<p>Let $G=(V,E)$. $l_i,u,c_i:E\\to \\mathbb{R}$ for $1 \\leq i\\leq n$. We want to find a sequence of flow function $f_i$, such that:</p>\n\n<p>$$\n\\begin{align}\n\\text{min} &amp; \\sum_{(v,w) \\in E} c_i(v,w)f_i(v,w) \\\\\n\\text{s.t.} &amp; \\sum_{(v,w) \\in E} f_i(v,w) = 0 \\text{ for } 1 \\le i \\le n, v \\in V, \\\\\n&amp; l_i(v,w) \\leq f_i(v,w) \\text{ for } 1 \\le i \\le n, (v,w)\\in E\\\\\n&amp; \\sum_{i=1}^n f_i(v,w) \\leq u(v,w) \\text{ for } (v,w)\\in E\\\\\n\\end{align}\n$$</p>\n\n<p>Is this a formulation of multicommodity circulation problem?</p>\n', 'ViewCount': '71', 'Title': 'Multicommodity circulation formulation', 'LastEditorUserId': '220', 'LastActivityDate': '2013-07-06T13:07:35.350', 'LastEditDate': '2013-07-05T18:43:56.970', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '12965', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '220', 'Tags': '<reference-request><optimization><network-flow>', 'CreationDate': '2013-06-29T09:56:58.443', 'Id': '12963''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>I'm looking for empirical papers which investigate if a user can benefit from Q&amp;A sites like Stack Overflow. I welcome any papers related to this topic, e.g: </p>\n\n<ul>\n<li>an experiment, investigating if a specific task can be executed faster,</li>\n<li>an analysis, investigating if a user understands the solutions on Q&amp;A sites or if he just does copy&amp;paste without thinking about it,</li>\n<li>a comparative analysis of the code quality of users with access to Q&amp;A sites in contrast to users without internet access (but just offline documentation of APIs).</li>\n</ul>\n", 'ViewCount': '112', 'Title': 'Empirical studies about benefits of Q&A sites for programming', 'LastEditorUserId': '1636', 'LastActivityDate': '2014-01-24T14:29:31.617', 'LastEditDate': '2013-07-04T01:32:24.893', 'AnswerCount': '2', 'CommentCount': '2', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '8988', 'Tags': '<reference-request><software-engineering><empirical-research><social-networks>', 'CreationDate': '2013-07-03T11:36:45.447', 'Id': '13056''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I just recently learnt about the existence of this Hierarchical Temporal Memory. I already read the <a href="https://www.groksolutions.com/htm-overview/education/HTM_CorticalLearningAlgorithms.pdf" rel="nofollow">main document</a> (which seems rather easy to understand), but one red flag is that the document is neither peer-reviewed nor attempting to explain why it should work in details. I tried to look around for some independent sources, and found a few papers that compare its performance against others, but none explain why it perform well or not well. I noticed some comments claiming that it was looked down by mainstream expert, but I was unable to find any actual criticisms.</p>\n\n<p>So I would like to ask, what are the criticism regarding the performance of HTM? Assuming the following:</p>\n\n<p>-There are huge amount of training data to use, enough for even months long training session. Basically, any criticisms regarding size or length of training is not relevant.</p>\n\n<p>-Since HTM is meant to be generic, any domain-specific criticism should be related to a more fundamental problem.</p>\n\n<p>Thank you for your help.</p>\n', 'ViewCount': '530', 'Title': 'Some criticisms of Hierarchical Temporal Memory?', 'LastEditorUserId': '8835', 'LastActivityDate': '2013-09-11T23:01:53.720', 'LastEditDate': '2013-07-05T23:24:16.697', 'AnswerCount': '1', 'CommentCount': '6', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '8835', 'Tags': '<neural-networks>', 'CreationDate': '2013-07-04T21:49:23.513', 'FavoriteCount': '2', 'Id': '13089''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Can someone please point me towards a rigorous derivation of the energy function of a discrete Hopfield network. What I want, is the derivation must start out with the structure of the network and prove that the critical points of the dynamical system can be obtained by minimization of some function (possibly by constructing the Lyapunov function of the dynamical system). I cannot seem to find such a rigorous proof. Thankyou! </p>\n', 'ViewCount': '135', 'Title': 'Derivation of the energy function of a hopfield network', 'LastActivityDate': '2013-07-09T15:40:53.530', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '8912', 'Tags': '<reference-request><machine-learning><neural-networks>', 'CreationDate': '2013-07-07T14:17:15.630', 'Id': '13132''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>If a school has an IP that's like 10.0.x.x, and a department in that school has it's own site that's an extension of the school's site, does that department's IP just change the last two numbers in the IP?\nDoes the school have to purchase extra domain space? \nCould I have additional addresses established at my IP address, just by changing the last numbers?\nAm I completely wrong with my idea of IP numbers?</p>\n", 'ViewCount': '50', 'Title': 'IP addresses and Subdomains?', 'LastActivityDate': '2013-07-18T08:45:44.210', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '13330', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '8722', 'Tags': '<computer-networks>', 'CreationDate': '2013-07-18T05:40:57.253', 'Id': '13326''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I\'m attepting to model a process flow where the transition to the next state is occasionally based on not only the input to the current state, but a prior state as well.</p>\n\n<p>Below is an example graph descibring the process. The essence is: If both State Q1 and State Q3 recieve an input of one, after State 3, transition to State Q4, otherwise transition to State Q5.</p>\n\n<p><img src="http://i.stack.imgur.com/DcBTc.png" alt="Non-state dependent machine"></p>\n\n<p>I understand that it would be possible to model this using a finite-state machine where we duplicate any states between those that we are interested in. The example below demonstrates this with States Q2a and Q2b corresponding to the differences in input at state Q1</p>\n\n<p><img src="http://i.stack.imgur.com/r9cMs.png" alt="State-dependent"></p>\n\n<p>However, as the number of conditions and the gaps between them grows (both of which are possible in the process I\'m looking at), the number of states grows exponentially.</p>\n\n<p>The question is, what other computational models could be used to describe a process where an arbitrary number of inputs could be used to control transition between states?</p>\n', 'ViewCount': '96', 'Title': 'State machine with knowledge of prior states?', 'LastActivityDate': '2013-07-22T11:24:27.433', 'AnswerCount': '2', 'CommentCount': '2', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '8632', 'Tags': '<graphs><automata><network-flow>', 'CreationDate': '2013-07-22T00:27:48.457', 'Id': '13379''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Suppose that I have run maxflow algorithm on a graph G and, as a result, I have a set of edges with flow on them.\nI would like to enumerate all possible sets of paths that comprise the maxflow.\nThat is, each set of paths will make the max flow.\nBut I suspect there could be multiple set of such paths.</p>\n', 'ViewCount': '102', 'ClosedDate': '2013-11-28T21:50:32.407', 'Title': 'Finding paths from the result of max flow', 'LastEditorUserId': '98', 'LastActivityDate': '2013-11-24T09:17:42.807', 'LastEditDate': '2013-08-26T08:28:54.027', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '9311', 'Tags': '<algorithms><graphs><network-flow>', 'CreationDate': '2013-07-23T22:13:52.240', 'Id': '13403''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Consider 2 stations that share the same bus. Both stations are perfect synchronized each other and when they have packets to transmit, they are starting the transmission in the beginning of a same slot. Transmission is as follows: when base $i$ has a packet to transmit attempts with probability $p_i, i=1,2$. Different stations make the random selection independently and corresponding probabilities are $p_1=0.5, p_2=0.25$. Initially the station 1 has 2 packets for station 2, while the other has no package. </p>\n\n<p>What is the average number of slots in order all packets reach their destinations? Then if station 1 has 1 packet for station 2 and station 2 has 1 packet for station 1, what is the average number of slots? We are using slotted-Aloha.</p>\n', 'ViewCount': '328', 'Title': 'Average number of slots needed in slotted-Aloha', 'LastEditorUserId': '472', 'LastActivityDate': '2013-07-31T18:55:28.610', 'LastEditDate': '2013-07-31T18:55:28.610', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '13517', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '9412', 'Tags': '<probability-theory><computer-networks>', 'CreationDate': '2013-07-29T19:23:59.420', 'Id': '13498''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>The <a href="http://rads.stackoverflow.com/amzn/click/0136079679" rel="nofollow">Kurose &amp; Ross book</a> uses "store-and-forward delay" as a synonym for the transmission delay of a packet over a network link. </p>\n\n<p>As a newcomer to computer networks, it isn\'t immediately obvious to me how these two terms are synonymous. My current understanding is that if not for the store-and-forward behavior of packet switches, the transmission delay of a link would be negligible as it would be pipelined with the propagation delay of the previous link; i.e. as the bits propagate across Link A, they are transmitted and stream into Link B. However, due to store-and-forward, no bits are transmitted onto Link B before all the bits have crossed Link A, and hence, we need to add the transmission delay of Link B.</p>\n\n<p>Is this correct?</p>\n', 'ViewCount': '830', 'Title': 'Transmission (Store and Forward) Delay', 'LastActivityDate': '2013-07-30T21:16:31.517', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '13525', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '1025', 'Tags': '<computer-networks>', 'CreationDate': '2013-07-29T21:27:23.473', 'Id': '13501''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>There are a number of collections of network (or graph) data sets freely available on the web, e.g.</p>\n\n<ul>\n<li><a href="http://snap.stanford.edu/data/index.html" rel="nofollow">http://snap.stanford.edu/data/index.html</a></li>\n<li><a href="http://www.cc.gatech.edu/dimacs10/downloads.shtml" rel="nofollow">http://www.cc.gatech.edu/dimacs10/downloads.shtml</a></li>\n</ul>\n\n<p>I am looking for dynamic network data sets, i.e. networks whose structure varies over time. They seem to be quite rare: The SNAP collection contains only a few "temporal" graphs.</p>\n\n<p>Do you known any other possible sources?</p>\n', 'ViewCount': '56', 'Title': 'Looking for dynamic network data sets', 'LastActivityDate': '2013-07-31T15:18:51.787', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '9450', 'Tags': '<graphs><data-sets><social-networks><big-data>', 'CreationDate': '2013-07-31T15:18:51.787', 'Id': '13542''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>I have implemented a neural network (using CUDA) with 2 layers. (2 Neurons per layer). I'm trying to make it learn 2 simple quadratic polynomial functions using <strong>backpropagation</strong>.</p>\n\n<p>But instead of converging, it is diverging (the output is becoming infinity)</p>\n\n<p>Here are some more details about what I've tried:</p>\n\n<ul>\n<li>I had set the initial weights to 0, but since it was diverging I have\nrandomized the initial weights (Range: -0.5 to 0.5)</li>\n<li>I read that a neural network might diverge if the learning rate is\ntoo high so I reduced the learning rate to 0.000001</li>\n<li>The two functions I am trying to get it to add are: 3 * i + 7 * j+9\nand j*j + i*i + 24 (I am giving the layer i and j as input)</li>\n<li>I had implemented it as a single layer previously and that could\napproximate the polynomial functions better than it is doing now</li>\n<li>I am thinking of implementing momentum in this network but I'm not\nsure it would help it learn</li>\n<li>I am using a linear (as in no) activation function</li>\n<li>There is oscillation in the beginning but the output starts diverging\nthe moment any of weights become greater than 1</li>\n</ul>\n\n<p>I have checked and rechecked my code but there doesn't seem to be any kind of issue with it.</p>\n\n<p>So here's my question: what is going wrong here?</p>\n\n<p>Any pointer will be appreciated.</p>\n", 'ViewCount': '140', 'Title': 'Neural network diverging instead of converging', 'LastActivityDate': '2013-08-03T18:49:20.880', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '9479', 'Tags': '<machine-learning><artificial-intelligence><neural-networks>', 'CreationDate': '2013-08-03T13:20:13.500', 'Id': '13587''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>I've had a bit of experience programming Neural networks but I am fairly new with genetic algorithms (I'm only 17). I have a major issue that I can't understand. If a child get's one chromatid from one parent and another from another parent, then the genes are crossed over, how do you determine which alleles are active in the child? How do other people go about mating with genetic algorithms. No need to go deep into it because I also want to work somethings out for myself but a general idea would be good enough. Thanks in advance.</p>\n", 'ViewCount': '106', 'Title': "Something I don't understand about Genetic Algorithms", 'LastActivityDate': '2013-08-04T12:46:31.363', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '13595', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '9506', 'Tags': '<artificial-intelligence><neural-networks><genetic-algorithms>', 'CreationDate': '2013-08-04T12:05:08.643', 'Id': '13594''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '163', 'Title': "Little's law and average time on a system with a switch", 'LastEditDate': '2013-08-14T20:56:35.160', 'AnswerCount': '1', 'Score': '-1', 'PostTypeId': '1', 'OwnerUserId': '9412', 'FavoriteCount': '0', 'Body': '<p>We have a switch with $2$ lines of input and $2$ output. Each line is $10 Mbps$. The size of packets is fixed and is $1KB$. The $1^{st}$ line of input is active (transferring packets) $40\\%$ of the time, while the $2{nd}$ line is active $70\\%$ of the time. $\\frac{1}{4}$ of <strong>packets of input $1$</strong> (with arrival) directed to buffer of output line $1$, while the $\\frac{3}{4}$ directed to buffer of output line $2$. Respectively $\\frac{1}{2}$ of <strong>packets of input $2$</strong> go to buffer 1 and $\\frac{1}{2}$ to buffer $2$. Buffers $1$ and $2$ are monitored and we know that tha average number of packets in buffer $1$ is $3$ packets and in buffer $2$ is $4.5$ packets.There is also an external measurement system that measures the total time of packet input $1$ to the switch.Based on these measurements calculated the average time of packets of input $1$ in the system for those that are directed to output $1$ is $5mse$c and to output $2$ is $7msec$ . Find the average residence time of packets of input line $2$ that are directed to buffer $1$ and the average time in the system (for the same packets)</p>\n\n<p>note: the residence time of one packet on switch, is the time spent on buffer plus the transmission time from the output line</p>\n\n<p>Consider these cases:\n1) consider packets sit in the buffer until they are done being transmitted\n2) assume the transmitter works on one packet at a time and removes the packet from the buffer while it is working on it</p>\n', 'Tags': '<probability-theory><computer-networks>', 'LastEditorUserId': '9412', 'LastActivityDate': '2013-08-14T20:56:35.160', 'CommentCount': '2', 'AcceptedAnswerId': '13714', 'CreationDate': '2013-08-11T12:35:58.580', 'Id': '13705''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I have here a directed graph that I used to perform <a href="http://en.wikipedia.org/wiki/Dinic%27s_algorithm" rel="nofollow">Dinic\'s algorithm</a> to find maximum flow. I need to adjust this graph and this algorithm to work with dynamic trees (i.e. the Sleator-Tarjan algorithm).</p>\n\n<p>I just wish I could find an image source or video that can help me visualize the steps. Something <a href="http://www.arl.wustl.edu/~jst//cse/542/text/sec19.pdf" rel="nofollow">like this</a> is really close. But I just really want to find thing to lead me step by step in a visual way or a way that doesn\'t involve pseudocode.</p>\n', 'ViewCount': '106', 'Title': "Understanding Dinic's algorithm using dynamic trees", 'LastEditorUserId': '98', 'LastActivityDate': '2013-08-13T08:09:51.823', 'LastEditDate': '2013-08-13T08:09:51.823', 'AnswerCount': '0', 'CommentCount': '1', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '9626', 'Tags': '<algorithms><reference-request><network-flow>', 'CreationDate': '2013-08-12T20:48:37.890', 'Id': '13720''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>What is the difference between encoding and modulation?</p>\n\n<p>I have seen these terms used sometimes inter-changeably and sometimes differently (the ratio is 50:50).</p>\n\n<p>Can somebody clearly explain this with some non-technical and technical examples both? I have searched this a lot on net and in the end I end up scratching my head.</p>\n', 'ViewCount': '135', 'Title': 'Difference between encoding and modulation in transmission', 'LastEditorUserId': '98', 'LastActivityDate': '2014-02-07T08:02:58.030', 'LastEditDate': '2014-02-07T08:02:58.030', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '8484', 'Tags': '<terminology><computer-networks>', 'CreationDate': '2013-08-22T08:26:57.430', 'Id': '13862''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Why are neural networks initial weights initialized as random numbers?\nI had read somewhere that this is done to "break the symmetry" and this makes the neural network learn faster.\nHow does breaking the symmetry make it learn faster?</p>\n\n<p>Would\'nt initializing the weights to 0 be a better idea? That way the weights would be able to find their values (whether positive or negative)  faster?</p>\n\n<p>Is there some other underlying philosophy behind randomizing the weights apart from hoping that they would be near their optimum values when initialized?</p>\n', 'ViewCount': '119', 'Title': 'Why are weights of Neural Networks initialized with random numbers?', 'LastActivityDate': '2013-08-23T04:01:53.217', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '13883', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '9479', 'Tags': '<machine-learning><artificial-intelligence><neural-networks>', 'CreationDate': '2013-08-23T02:49:56.567', 'Id': '13882''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>The energy function in a Hopfield network to determine whether it has converged seems to be the major sink of computational time and makes the Hopfield network run very slowly. Is there a fast substitute for it? </p>\n', 'ViewCount': '20', 'Title': 'Fast energy function substitute for Hopfield network?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-09-16T08:35:57.190', 'LastEditDate': '2013-09-16T08:35:57.190', 'AnswerCount': '0', 'CommentCount': '1', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '10158', 'Tags': '<algorithms><artificial-intelligence><efficiency><neural-networks><heuristics>', 'CreationDate': '2013-09-15T18:54:05.840', 'Id': '14335''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>Suppose I type in the website <code> www.youtube.com.</code> The computer first asks a local domain name server (DNS) what the IP address of this website is. If it can't find it, it then asks the root server, etc. This is recursive querying. </p>\n\n<p>How does DNS work if there is no recursive querying? Is the root server the only one that is used to find the IP address of the website?</p>\n", 'ViewCount': '208', 'Title': 'How does DNS work if there is no recursive querying?', 'LastEditorUserId': '472', 'LastActivityDate': '2013-09-20T18:27:37.903', 'LastEditDate': '2013-09-19T13:35:42.077', 'AnswerCount': '2', 'CommentCount': '0', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '10224', 'Tags': '<computer-networks><communication-protocols>', 'CreationDate': '2013-09-19T13:07:06.660', 'Id': '14440''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>The TCP(Transmission Control Protocol) delayed duplicate problem is discussed in Tannenbaum\'s "Computer Networks." The discussion references Tomlinson (1975) improved by Sunshine and Dayal (1978). Basically, from what I could make out it uses a ToD (Time of the day) clock to uniquely number packets and ensure that, if packet lifetime is $T$ secs, then no new packets have the same sequence number within $T$ secs. To elucidate the above fact a graph between sequence numbers and time is drawn which shows the linear relation and marks a Forbidden region, entering which produces duplicate packets. </p>\n\n<p>So here are my questions: </p>\n\n<ol>\n<li>How exactly does entering the forbidden region produces the delayed duplicates?</li>\n<li><p>If I wanted to quantify the discussion with the following parameters:</p>\n\n<p>a) ToD clock size - 32 bits(keeps running even when the host is down) </p>\n\n<p>b) clock increases once per milliseconds </p>\n\n<p>c) maximum packet lifetime - 64 s </p></li>\n</ol>\n\n<p>How would I find the minimum and maximum permissible sequence number generation rate?</p>\n', 'ViewCount': '120', 'Title': 'TCP delayed duplicate problem', 'LastEditorUserId': '2253', 'LastActivityDate': '2013-09-26T03:20:37.030', 'LastEditDate': '2013-09-26T03:20:37.030', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '10329', 'Tags': '<computer-networks>', 'CreationDate': '2013-09-25T15:22:16.693', 'Id': '14595''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I am using neural networks to predict a time series.\nThe question I\'m facing now is how do I encode date/time/serial no. of each input set as an input to the neural network?</p>\n\n<p>Should I use 1 of C encoding (used for encoding categories) as described <a href="ftp://ftp.sas.com/pub/neural/FAQ2.html#A_cat" rel="nofollow">here</a>?</p>\n\n<p>Or Should I just feed it the time (in milliseconds since 1-1-1970)?</p>\n\n<p>Or is feeding it the time unnecessary as long as I feed it the rest of the data chronologically?</p>\n', 'ViewCount': '201', 'Title': 'How to encode date as input in neural network?', 'LastActivityDate': '2013-09-30T15:01:48.540', 'AnswerCount': '2', 'CommentCount': '3', 'AcceptedAnswerId': '14702', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '9479', 'Tags': '<machine-learning><artificial-intelligence><neural-networks>', 'CreationDate': '2013-09-27T03:58:02.437', 'FavoriteCount': '1', 'Id': '14634''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I am doing bachelors in Electronics &amp; Communication Engg.. But most of my work happened to be in Web development.. I am thinking to do my bachelor thesis which very closely overlaps with my recent work.</p>\n\n<p>Are there any specific areas in CS, EE (may be Computer Networking in broad terms) that I can take up? </p>\n', 'ViewCount': '47', 'Title': 'What areas in EE overlap closely with CS', 'LastEditorUserId': '8079', 'LastActivityDate': '2013-10-02T17:03:51.437', 'LastEditDate': '2013-10-02T15:19:10.950', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '8079', 'Tags': '<computer-networks><research>', 'CreationDate': '2013-10-02T14:36:18.053', 'Id': '14753''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I am reading "Neural Networks and Learning Machines" and in Chapter 11 the book covers Boltzman machines and it is stated "the network [Boltzmann machine] can perform pattern completion", but does not show how this would be done in practice, or how a Boltzmann machine could be used at all.</p>\n\n<p>As I am more the "hands-on" person, and the book is more on the theoretical side of science. I am currently looking for an practical example/paper/article on an Boltzmann machine, maybe even a simple (therefore small) educational implementation. </p>\n\n<p>I\'d appreciate any link/paper/article covering the (<strong>non-restricted</strong>) Boltzmann machine in an understandable ("hands-on") way.</p>\n', 'ViewCount': '43', 'Title': 'practical use of a Boltzmann machine', 'LastActivityDate': '2013-10-09T16:49:03.440', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '78', 'Tags': '<reference-request><neural-networks><boltzmann-machine>', 'CreationDate': '2013-10-09T16:49:03.440', 'Id': '14958''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>To find the maximum flow in a graph, why doesn't it suffice to only saturate all augmenting paths with the minimum edge capacity in that path without considering the back-edges? I mean, what is the point calling it a back-edge if we assume flow from it?</p>\n", 'ViewCount': '52', 'Title': 'Saturating all augmenting paths with the minimum edge capacity in max flow', 'LastEditorUserId': '472', 'LastActivityDate': '2013-10-18T21:07:48.467', 'LastEditDate': '2013-10-18T21:07:48.467', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '10525', 'Tags': '<algorithms><graph-theory><algorithm-analysis><graphs><network-flow>', 'CreationDate': '2013-10-18T17:15:17.717', 'Id': '16202''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I want to know why error control is used in transport layer although it is used in data link layer?While data link layer has all data came from upper layers in its frames so its error control should be sufficient.</p>\n', 'ViewCount': '193', 'Title': 'need of error control in transport layer', 'LastActivityDate': '2013-10-19T00:16:27.373', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '10380', 'Tags': '<computer-networks>', 'CreationDate': '2013-10-18T17:58:04.127', 'Id': '16205''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>I've been learning about neural networks and SVMs.  The tutorials I've read have emphasized how important kernelization is, for SVMs.  Without a kernel function, SVMs are just a linear classifier.  With kernelization, SVMs can also incorporate non-linear features, which makes them a more powerful classifier.</p>\n\n<p>It looks to me like one could also apply kernelization to neural networks, but none of the tutorials on neural networks I've seen have mentioned this.  Do people commonly use the kernel trick with neural networks?  I presume someone must have experimented with it to see if it makes a big difference.  Does kernelization help neural networks as much as it helps SVMs?  Why or why not?</p>\n\n<p>(I can imagine several ways to incorporate the kernel trick into neural networks.  One way would be to use a suitable kernel function to preprocess the input, a vector in $\\mathbb{R}^n$, into a higher-dimensional input, a vector in $\\mathbb{R}^{m}$ for $m\\ge n$.  For multiple-layer neural nets, another alternative would be to apply a kernel function at each level of the neural network.)</p>\n", 'ViewCount': '123', 'Title': 'Kernelization trick, for neural networks', 'LastActivityDate': '2013-11-02T04:10:50.153', 'AnswerCount': '2', 'CommentCount': '1', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '755', 'Tags': '<machine-learning><artificial-intelligence><neural-networks>', 'CreationDate': '2013-10-19T07:01:58.443', 'FavoriteCount': '1', 'Id': '16220''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I want to know difference between propagation speed and bandwidth in digital communication.I know bandwidth is no of bits in one second and propagation speed of signal is distance traveled by signal is one second.Is there any relation between them or they are totally different.Can anyone tell me exact definition to differentiate these twos.</p>\n', 'ViewCount': '74', 'Title': 'difference between propagation speed and bandwidth in digital communication', 'LastActivityDate': '2013-10-25T12:27:30.913', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '16424', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '10380', 'Tags': '<computer-networks>', 'CreationDate': '2013-10-24T15:41:48.750', 'Id': '16402''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>What is the difference between a Neural Network, a Deep Learning System and a Deep Belief System?</p>\n\n<p>As I recall your basic neural network is a 3 layers kinda thing,\nand I have had Deep Belief Systems described as being neural networks stacked on top of each other.</p>\n\n<p>I've not personally heard of a Deep Learning Systems, but i strongly suspect it is a synonym for Deep Belief System. In fact I believe that Deep Belief System is the less common term. Can anyone confirm this?</p>\n", 'ViewCount': '414', 'Title': 'What is the difference between a Neural Network, a Deep Learning System and a Deep Belief System?', 'LastEditorUserId': '11043', 'LastActivityDate': '2013-10-31T03:35:06.613', 'LastEditDate': '2013-10-31T02:47:39.893', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '8', 'PostTypeId': '1', 'OwnerUserId': '11043', 'Tags': '<machine-learning><neural-networks><boltzmann-machine>', 'CreationDate': '2013-10-29T14:04:58.587', 'FavoriteCount': '1', 'Id': '16545''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I\'m trying to generate a random but realistic network topology so I can test the performance of some routing algorithms. I came across Waxman\'s model described in <a href="http://www.huaxiaspace.net/academic/classes/fa00/cse202/project/08Waxman.pdf" rel="nofollow">Routing of Multipoint Connections</a>, which seems pretty simple:</p>\n\n<ol>\n<li>Distribute $N$ nodes randomly across a plane (uniform in x and y).</li>\n<li>For each pair of nodes, generate an edge between them with the probability $ P = \\beta \\exp \\frac{-d}{L\\alpha}$, where $d$ is the euclidean distance between the nodes, $L$ is the maximum distance between two nodes, and $\\alpha$ and $\\beta$ are parameters in the range $(0, 1]$.</li>\n</ol>\n\n<p>I\'ve implemented my current understanding of Waxman\'s algorithm as <a href="http://codepen.io/blendmaster/full/uqibt" rel="nofollow">a simple web-based demo</a>, which visualizes a generated topology from chosen parameters $\\alpha$, $\\beta$, and $N$.</p>\n\n<p>However, I want to be able to generate a <em>connected</em> network topology for \na specific number of nodes. Since Waxman\'s algorithm generates edges probabilistically, I usually end up with disconnected nodes. How do I connect the rest of the nodes to the topology in a way consistent with Waxman\'s algorithm, i.e. simulates a real network topology?</p>\n\n<p>There are plenty of ways to "finish" the topology by connecting the disconnected nodes, but I don\'t know which one is the most compatible with the already-generated edges. Waxman\'s paper doesn\'t seem to mention how disconnected nodes are treated.</p>\n', 'ViewCount': '140', 'Title': 'How to generate a connected random network topology for a specific number of nodes?', 'LastActivityDate': '2013-12-20T19:31:08.647', 'AnswerCount': '2', 'CommentCount': '1', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '11143', 'Tags': '<graphs><computer-networks>', 'CreationDate': '2013-11-03T04:13:49.333', 'FavoriteCount': '1', 'Id': '16664''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>So say we have a bipartite graph G=(X,Y,E). Let\'s make a game out of it.</p>\n\n<p>I go first. I pick a node in X. You go next. You pick a node in Y that is connected by an edge to the node I picked. Next it\'s my turn. I pick another node in X (must be a new one that hasn\'t been used before) that is also connected to the node in Y you just picked. We continue playing in this manner, until someone cannot pick a node (i.e. all edges out of the current node have already been used). When that happens, the person who cannot pick a next node loses.</p>\n\n<p>I\'m supposed to find a polynomial time algorithm to decide which of the two players (you or me) can force a "win" for a given bipartite graph.</p>\n\n<p>I\'m stumped. I\'ve approached this in many different ways, including the following two:</p>\n\n<p>1) 1) each node in the xy "path" played will use two edges, except for the first and last nodes which will only use one edge. Idea: add one new node on each side of the bipartite graph, and connect to all opposite nodes. Then check for a perfect (or maximal) matching twice, removing the edges used in the first perfect (maximal) matching when finding the second one. I don\'t think this really helps us with the problem, though, as there are many different nodes you could visit next given a current node.</p>\n\n<p>2) A second idea was to work with alternating/augmenting paths (as we "zig-zag" between the two sides). I again got stuck since at any given node there are many possible nodes to visit next.</p>\n\n<p>Does anyone have any suggestions for this problem? I\'m thinking it has to do with matching, but I could be wrong.</p>\n\n<p>Thanks in advance!</p>\n', 'ViewCount': '120', 'Title': 'Bipartite Graph Game', 'LastActivityDate': '2013-11-13T08:27:30.500', 'AnswerCount': '2', 'CommentCount': '1', 'AcceptedAnswerId': '17976', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '10680', 'Tags': '<graph-theory><graphs><combinatorics><computer-networks><bipartite-matching>', 'CreationDate': '2013-11-12T22:58:47.500', 'Id': '17974''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>My aim is to classify types of cars (Sedans,SUV,Hatchbacks) and earlier I was using corner features for classification but it didn\'t work out very well so now I am trying Gabor features.<br/></p>\n\n<p><a href="http://www.mathworks.in/matlabcentral/fileexchange/38844-gabor-image-features" rel="nofollow">code from here</a><br/></p>\n\n<p>Now the features are extracted and suppose when I give an image as input then for 5 scales and 8 orientations I get 2 [1x40] matrices.</p>\n\n<p><strong>1. 40 columns of squared Energy.</strong></p>\n\n<p><strong>2. 40 colums of mean Amplitude.</strong></p>\n\n<p>Problem is I want to use these two matrices for classification and I have about 230 images of 3 classes (SUV,sedan,hatchback).</p>\n\n<p>I do not know how to create a [N x 230] matrix which can be taken as vInputs by the neural netowrk in matlab.(where N be the total features of one image).</p>\n\n<p>My question:</p>\n\n<ol>\n<li><p>How to create a one dimensional image vector from the 2 [1x40] matrices for one image.(should I append the mean Amplitude to square energy matrix to get a [1x80] matrix or something else?)</p></li>\n<li><p>Should I be using these gabor features for my purpose of classification in first place? if not then what?</p></li>\n</ol>\n\n<p>Thanks in advance</p>\n', 'ViewCount': '53', 'Title': 'Making feature vector from Gabor filters for classification', 'LastActivityDate': '2013-11-16T13:58:45.183', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '18073', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '11370', 'Tags': '<machine-learning><neural-networks><image-processing><classification>', 'CreationDate': '2013-11-14T06:23:16.160', 'Id': '18009''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>This question is on a test review and I'm not really sure of the answer.</p>\n\n<p>TCP packets are being sent from a client to a server. The MMS is equal to 1460 bytes, and each TCP packet is sent with the maximum capacity. How many TCP packets can be sent before the sequence number field in the TCP header will wrap around?</p>\n\n<p>How much time in seconds will this take on a 1 Mbit/s link?</p>\n\n<p>How much time in seconds will this take on a 1Gbit/s link?</p>\n\n<p>Is there some sort of formula used to figure this out?</p>\n\n<p>Thanks!</p>\n", 'ViewCount': '140', 'Title': 'TCP sequence numbers', 'LastActivityDate': '2013-11-24T19:50:23.583', 'AnswerCount': '0', 'CommentCount': '1', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '10625', 'Tags': '<computer-networks>', 'CreationDate': '2013-11-24T19:50:23.583', 'Id': '18308''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Some guy on the internet <a href="http://networkengineering.stackexchange.com/a/5133/296">recommends</a> using the same ntp server when it is required to troubleshoot asymmetric routes through ICMP, and it\'s somewhat important to have synchronised time between the two machines doing ICMP.</p>\n\n<p>Granularity of timestamps in ICMP is 1ms (unique per 24h period), assume packet roundtrip between the source and destination of at least 100ms, each way of at least 50ms, plus jitter.</p>\n\n<p>I find the recommendation of using the same ntp server unreasonable; for one, because it would seem that the likelihood of any given reliable ntp server, anywhere in the world, carrying correct time is much higher than the likelihood of transmitting said time through the internet over longer distances (plus with potential jitter and packet loss), e.g. a good collection of local servers is already the best you could do for the task at stake.</p>\n\n<p>Basically, my conjecture is that, should a single ntp server be shared, it won\'t necessarily be a good server for both hosts doing ICMP, and would not contribute to the clock between the two (and only two) machines being the most synchronised, compared to a good collection of local servers instead.</p>\n\n<p>What\'s the mathematical take on this?</p>\n', 'ViewCount': '45', 'Title': 'NTP: synchronisation of time between two machines for ICMP timestamping', 'LastActivityDate': '2013-11-24T20:59:38.447', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '11551', 'Tags': '<algorithm-analysis><reference-request><optimization><computer-networks><synchronization>', 'CreationDate': '2013-11-24T20:59:38.447', 'Id': '18310''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': u'<p>The <a href="https://en.wikipedia.org/wiki/Internet_Control_Message_Protocol#Timestamp" rel="nofollow">ICMP timestamp</a> protocol is useful for determining which path \u2014 forward or reverse \u2014 is contributing to the jitter on the line.</p>\n\n<p>In an ideal world, all computers would have an excellent ntpd, and time accuracy of about 1ms (the granularity of ICMP timestamp) should not be a problem:</p>\n\n<pre><code>0       145.5   146 = 75 + 71\n1       142.7   142 = 72 + 70\n2       140.7   140 = 70 + 70\n3       146.7   146 = 76 + 70\n4       148.3   148 = 77 + 71\n5       157.5   157 = 87 + 70\n6       167.1   167 = 96 + 71\n7       166.3   166 = 95 + 71\n8       167.7   167 = 97 + 70\n9       159.0   159 = 88 + 71\n</code></pre>\n\n<p>However, in reality, as per <a href="http://stackoverflow.com/questions/20172028/awk-hping-print-difference-between-icmp-originate-receive/20186781#20186781">http://stackoverflow.com/questions/20172028/awk-hping-print-difference-between-icmp-originate-receive/20186781#20186781</a>, the data could be like this:</p>\n\n<pre><code>0       165.9   166 = -142113 + 142279\n1       160.2   160 = -142118 + 142278\n2       155.2   155 = -142122 + 142277\n3       156.5   156 = -142121 + 142277\n4       164.7   165 = -142112 + 142277\n5       164.4   164 = -142111 + 142275\n6       160.9   161 = -142114 + 142275\n7       158.1   158 = -142117 + 142275\n8       155.6   156 = -142119 + 142275\n9       143.0   143 = -142131 + 142274\n10      153.2   153 = -142120 + 142273\n11      157.1   157 = -142115 + 142272\n12      158.3   158 = -142114 + 142272\n13      148.6   149 = -142123 + 142272\n14      144.3   144 = -142127 + 142271\n15      145.3   145 = -142125 + 142270\n</code></pre>\n\n<p>Which still shows that only one path is responsible for the jitter, since only one value jumps up and down randomly, whereas the other one is decreasing monotonically (probably due to an actively-running ntpd, which is correcting the time as we ping).</p>\n\n<p>Another example could be less wrong-looking of the time not being synchronised, say:</p>\n\n<pre><code>0       165.9   166 = -113 + 279\n</code></pre>\n\n<p>Or, better yet:</p>\n\n<pre><code>0       165.9   166 = 7 + 159\n</code></pre>\n\n<p>Or, say, still wrong by some 10ms to 40ms, on a landline link from Alberta to Vogtland, but much less obvious:</p>\n\n<pre><code>0       165.9   166 = 59 + 107\n</code></pre>\n\n<p>How to make scientific sense of this data, for it to be easily presentable, and not blatantly wrong?</p>\n\n<p>Feel free to assume to have between 10 to 1000 measurement points, measured over a couple of seconds or minutes.</p>\n', 'ViewCount': '50', 'Title': 'How to present ping data from ICMP timestamp', 'LastActivityDate': '2013-11-28T06:12:49.997', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '11551', 'Tags': '<algorithms><reference-request><computer-networks><synchronization>', 'CreationDate': '2013-11-25T20:05:35.750', 'Id': '18332''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>How does one construct the residual network in such a case?</p>\n\n<p>The formula is for edge $(u, v)$  is </p>\n\n<p>$$rf(u,v) = (c_{\\mathrm{upper}}(u,v) - f(u,v)) + (f(v,u) - c_{\\mathrm{lower}}(v, u))\\,,$$</p>\n\n<p>where $rf(u, v)$ is the residual flow on the edge $(u, v)$, $c_{\\mathrm{upper}}$ and $c_{\\mathrm{lower}}$ are capacities on the edge and $f$ is the flow.</p>\n\n<p>If, say, my edge $(u, v)$ has capacities $[3, 25]$ and a flow $f(u,v)=1$, then what are $rf(u, v)$ and $rf(v, u)$?</p>\n\n<p>what is $c_{\\mathrm{lower}}(v, u)$?</p>\n\n<p>Thank you.</p>\n', 'ViewCount': '28', 'Title': 'residual network for a network with lower and upper bounds?', 'LastEditorUserId': '9550', 'LastActivityDate': '2013-12-02T23:13:19.397', 'LastEditDate': '2013-12-02T23:13:19.397', 'AnswerCount': '0', 'CommentCount': '2', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '11771', 'Tags': '<network-flow>', 'CreationDate': '2013-12-02T23:05:33.947', 'Id': '18548''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>Neural networks can have multiple inputs.\nBut some times two or more of these inputs can often be related to a single entity.</p>\n\n<p>E.g : Height and weight of a person to predict the probability of disease or price and Volume of a stock to predict it's value.</p>\n\n<p>How can we make a neural network understand that two inputs are related to the same entity?\nIs there any efficient (or inefficient) way of '<em>tagging</em>' them together?</p>\n", 'ViewCount': '82', 'Title': 'How to make a Neural network understand that multiple inputs are related to the same entity?', 'LastEditorUserId': '9479', 'LastActivityDate': '2013-12-19T07:01:09.173', 'LastEditDate': '2013-12-19T03:40:55.333', 'AnswerCount': '1', 'CommentCount': '4', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '9479', 'Tags': '<machine-learning><artificial-intelligence><neural-networks>', 'CreationDate': '2013-12-18T08:25:48.263', 'Id': '19090''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': u'<p>I want to use <a href="http://www.sciencedirect.com/science/article/pii/S0952197609001626" rel="nofollow">\u201cFingerprint matching using multi-dimensional ANN\u201d\nby Rajesh Kumar and B.R. Deva Vikram</a> [<a href="https://www.dropbox.com/s/6uxx9874bvc4hqo/neural_network_fingerprint.pdf" rel="nofollow">content link</a>] for fingerprint identification. But I have a serious problem understanding what is a Multidimensional Artificial Neural Network.</p>\n\n<p>I searched for keywords MDANN and Multidimensional ANN but I can\'t find anything. I also can\'t be sure what Kumar meant about a MDANN in his article. So far, the closest thing I can relate with Kumar\'s MDANN is Convolution Nets but I don\'t believe this is what he meant. Can anybody help me about understanding this type of ANN?</p>\n', 'ViewCount': '36', 'Title': 'Multi-dimensional Neural Network for fingerprint matching', 'LastEditorUserId': '39', 'LastActivityDate': '2013-12-18T22:55:00.277', 'LastEditDate': '2013-12-18T22:55:00.277', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '19104', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '11579', 'Tags': '<artificial-intelligence><neural-networks>', 'CreationDate': '2013-12-18T21:40:31.647', 'Id': '19103''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': u'<p>Consider an instance of TCP\u2019s Additive Increase Multiplicative Decrease(AIMD) algorithm where the window size at the start of the slow start phase is 2 MSS and the threshold at the start of the first transmission is 8 MSS. Assume that a time out occurs during the fifth transmission. Find the congestion window size at the end of the tenth transmission.</p>\n\n<p>I am bit confuse in this concept.<br>\nWhat I know :  </p>\n\n<p>Slow start and congestion avoidance are different.<br>\nSlow start is used in conjunction with congestion avoidance.   </p>\n\n<p>Window size for 1st transmission = 2 MSS<br>\nWindow size for 2nd transmission = 4 MSS<br>\nWindow size for 3rd transmission = 8 MSS \nthreshold reached, increase linearly (according to AIMD)<br>\nWindow size for 4th transmission = ?? MSS \nWindow size for 5th transmission = ?? MSS<br>\ntime out occurs, resend 5th with window size reduced to half (according to AIMD)<br>\nWindow size for 5th transmission =  ??? MSS  </p>\n\n<p>What will be the Window size for 4th transmission ? 9 MSS or 10 MSS<br>\nIt means i want to ask you after threshold window size should increase linearly means it  should increase by 1 MSS or 2 MSS  ( 2 MSS is given in example ) ?  </p>\n\n<p>What will be window size for 5th transmission ? Will it be 1 MSS or 2 MSS ?   </p>\n\n<p>Please clear my concept. I am so confused. </p>\n', 'ViewCount': '143', 'Title': 'TCP congestion problem', 'LastActivityDate': '2013-12-31T21:28:37.747', 'AnswerCount': '2', 'CommentCount': '0', 'Score': '-1', 'PostTypeId': '1', 'OwnerUserId': '9343', 'Tags': '<computer-networks>', 'CreationDate': '2013-12-25T11:49:45.653', 'Id': '19274''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>This is more of a conceptual question.</p>\n\n<p>I have learned about Neural Nets, and I have some clue as to how Support Vector Machines work. I read somewhere however that given the appropriate kernel (is that right?), the SVM is identical to the Neural Net. Could someone who understands this please enlighten me as to how that's possible?</p>\n", 'ViewCount': '25', 'Title': 'Support Vector Machines as Neural Nets?', 'LastActivityDate': '2013-12-28T06:36:46.847', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '12414', 'Tags': '<machine-learning><neural-networks><kernel>', 'CreationDate': '2013-12-28T06:36:46.847', 'FavoriteCount': '1', 'Id': '19337''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I am developing a simple backprop neural network with n inputs and 1 output. I am using a sigmoid activation function. [Aforge.Net]</p>\n\n<p>I have read that it is good to normalise the input and output data prior to training, which I have done using a simple linear relation (max/min mapping) to normalise between [0, 1]. </p>\n\n<p>My question is, what happens when upon using the NN after training, I get inputs that are larger/smaller than the max/min of the training sets (used for normalisation)? Should I be storing new max/mins and using these to re-normalise my new inputs? or do I just normalise the data with the parameters used in the training set and simply give the network inputs that may be greater than 1 or less than 0?</p>\n', 'ViewCount': '51', 'Title': 'Neural Network Normalization and de-Normalisation of data', 'LastEditorUserId': '12442', 'LastActivityDate': '2013-12-29T21:11:35.707', 'LastEditDate': '2013-12-29T20:22:38.927', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '12442', 'Tags': '<neural-networks>', 'CreationDate': '2013-12-29T11:58:34.200', 'Id': '19364''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>Hi I'm trying to prove the following proposition:</p>\n\n<hr>\n\n<p>Given a network $G,s,t,\\omega$ where $\\omega$ is the capacity, create a minimal cut cut  ${S=\\left\\{ (s,v)\\in E_{G_{r\\_max}}\\right\\} }$ where $G_{r\\_max}$  is graph representing the the residual network(meaning we take the group of all vertices that are reachable from s in $G_{r\\_max}$). So that the cut is $\\left(S,V\\backslash S\\right)$.</p>\n\n<p>Given two maximal flows $f_1\\neq f_2$ prove that $\\left(S_1,V\\backslash S_1\\right)=\\left(S_2,V\\backslash S_2\\right)$ (which are defined in the above mentioned form for each maximal flow).</p>\n\n<hr>\n\n<p>I've tried proving by assuming the contrary and saying that $S_1 $ is not subset of $S_2$.\nTried to say that this leads to $\\exists \\ v\\in S_1 \\ \\ \\mbox{s.t} \\ \\ v\\notin S_2$.\nTried looking at the intersection and union of these groups but to no avail.</p>\n\n<p>I'd appreciate some guidance\\explanation as to how best prove this claim.</p>\n", 'ViewCount': '77', 'Title': 'Prove that every maximal flow yields the same minimal cut', 'LastEditorUserId': '8709', 'LastActivityDate': '2014-01-01T20:19:13.333', 'LastEditDate': '2014-01-01T20:19:13.333', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '8709', 'Tags': '<graphs><network-flow>', 'CreationDate': '2014-01-01T18:34:05.833', 'Id': '19436''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I have a simple directed graph $G(V,E)$ that has a source $s$ and sink $t$. Each edge $e$ of $G$ has positive integer capacity $c(e)$ and positive integer cost $a(e)$. I am trying to find the minimum cost maximum flow from $s$ to $t$ using the <a href="http://wwwhome.math.utwente.nl/~uetzm/do/DO_Lecture4.pdf" rel="nofollow">well-known Dijkstra potential method for finding augmenting paths</a>. It goes something like this:</p>\n\n<pre><code>Initialize all edge flows to 0.\nInitialize all potentials pi[v] to 0.\nWhile there exists an augmenting path in G_f (the residual network):\n    Set the costs of all edges e = uv to be:\n        b(e) = a(e) + pi[u] - pi[v], if e exists in G or\n        b(e) = -a(e_reverse) + pi[u] - pi[v], where e_reverse = vu otherwise\n    # We are now assured all edges have nonnegative costs\n    Using Dijkstra method with costs b(e) in G_f:\n        Find the cheapest augmenting path from s to t\n        Calculate dist(v), the cost of cheapest path from s to v\n    Augment the cheapest path to t to current flow\n    Set pi[v] = pi[v] + dist(v) for all vertices v\nThe current flow gives the minimum cost maximum flow.\n</code></pre>\n\n<p>Obviously, if all costs $a(e) \\le a_{max}$ and all capacities $c(e) \\le c_{max}$, then there is a loose bound $|E|c_{max}a_{max}$ for cost of minimum cost maximum flow. However, the bound on the potentials $\\pi(v)$ and Dijkstra distances $dist(v)$ is not so obvious. In fact, judging by how it adds $dist(v)$ to $\\pi(v)$ each iteration, $\\pi(v)$ can possibly be multiplied by $|V|$ each iteration!</p>\n\n<p><strong>My question is</strong>, is there a way to calculate a non-exponential bound for $\\pi(v)$? If not, say all capacities and costs are at most $10^4$, $|V| = 200$, $|E| = 5000$. The minimum cost of the maximum flow is at most $5000 \\times 10^4 \\times 10^4 = 5 \\times 10^{11}$. But is it possible that $\\pi(v)$ and $dist(v)$ exceeds 64-bit integers? How do so many implementations not use Big Integers?</p>\n', 'ViewCount': '104', 'Title': 'Potential values of minimum cost maximum flow algorithm', 'LastEditorUserId': '7137', 'LastActivityDate': '2014-01-15T14:37:32.410', 'LastEditDate': '2014-01-15T14:37:32.410', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '7137', 'Tags': '<algorithms><graph-theory><algorithm-analysis><asymptotics><network-flow>', 'CreationDate': '2014-01-11T04:25:09.883', 'Id': '19645''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>In a directed graph i want to call bfs on some of the vertices so that all of the vertices will be met.</p>\n\n<p>(in other words all of the other vertices are reachable from these chosen vertices.)</p>\n\n<p>I want to find the minimum number of such vertices.</p>\n\n<p>Actually this problem arises in social networks when we want to find the minimum number of people to which if we send a message then all of the network members will get that.(suppose that we know when someone gets the message he/she will send that to all of his/her followers.)</p>\n\n<p>Can anyone help?</p>\n', 'ViewCount': '158', 'Title': 'find the minimum number of vertices in a directed graph from which the other vertices are reachable', 'LastEditorUserId': '12820', 'LastActivityDate': '2014-04-05T15:47:19.383', 'LastEditDate': '2014-01-14T00:00:43.170', 'AnswerCount': '1', 'CommentCount': '5', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '12820', 'Tags': '<algorithms><graph-theory><social-networks>', 'CreationDate': '2014-01-13T23:54:48.383', 'Id': '19707''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I am searching the content of this topic but I am not sure what should be the content for this topic. This is relate to Computer Network.\nMy topic is <code>Physical layer services &amp; hardware protocols.</code></p>\n\n<p>What should be content for this topic.</p>\n', 'ViewCount': '50', 'ClosedDate': '2014-01-18T12:17:17.253', 'Title': 'Physical layer services & hardware protocols', 'LastActivityDate': '2014-01-18T10:37:11.477', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '12933', 'Tags': '<computer-networks>', 'CreationDate': '2014-01-18T04:46:19.773', 'Id': '19803''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>I have a social network in the form of an undirected graph $G = (V,E)$ with distinct non-negative integer keys. For each node $u \\in V$, let the set $\\Gamma(u) = \\{ v \\in V : (u,v) \\in E \\}$ be the <strong><em>neighbourhood</em></strong> of $u$. Clearly, I got that $d(u) = \\left | \\Gamma(u) \\right |$, where $d(u)$ is the <strong><em>degree</em></strong> of $u$.</p>\n\n<p>I now want to split $\\Gamma(u)$ into two sets of nodes</p>\n\n<p>$$\\Gamma_{\\text{low}}(u)  = \\{ v \\in V : v \\in \\Gamma(u) \\text{ and } v &lt; u \\}$$\n$$\\Gamma_{\\text{high}}(u) = \\{ v \\in V : v \\in \\Gamma(u) \\text{ and } v &gt; u \\}$$</p>\n\n<p>i.e. $\\Gamma_{\\text{low}}(u)$ and $\\Gamma_{\\text{high}}(u)$ contain neighbours of $u$ whose key is less than or greater than $u$'s, respectively.</p>\n\n<p>Assuming that the graph has got $m$ edges, is there a way to obtain an upper bound for $d_{\\text{low}}(u) = \\left | \\Gamma_{\\text{low}}(u) \\right |$ and $d_{\\text{high}}(u) = \\left | \\Gamma_{\\text{high}}(u) \\right |$ for varying $m$? I just can obtain the following relationship</p>\n\n<p>$$\\sum_{u \\in V} d_{\\text{low}}(u) + \\sum_{u \\in V} d_{\\text{high}}(u) = 2m,$$</p>\n\n<p>because the graph is undirected. I read somewhere that $d(u) = O\\left ( \\sqrt{m} \\right )$ is a good bound for social networks, but how do I prove it?</p>\n", 'ViewCount': '45', 'Title': 'Need an upper bound for node degree', 'LastActivityDate': '2014-01-30T14:19:42.420', 'AnswerCount': '0', 'CommentCount': '6', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '13243', 'Tags': '<algorithms><graph-theory><space-complexity><social-networks>', 'CreationDate': '2014-01-30T14:19:42.420', 'Id': '20108''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<blockquote>\n  <p>The OSI model can be used for LAN and WAN networks, allowing the interconnection of [vendor] closed systems and it only informs what each layer have to do.</p>\n</blockquote>\n\n<p>Someone said that this phrase is false, because OSI (Open Systems Interconnection) model, "as the name says", only allows the connection of "open systems".</p>\n\n<p>So I\'m wondering if there is any vendor closed network that, nonetheless, can communicate with another network using as the middle man an OSI based network. As I see it, in the broad sense of the phrase, two closed systems don\'t need to be directly connected to be interconnected, they can use a middle man.</p>\n\n<p>Searching I only found about closed systems in the sense that they can\'t be freely joined.</p>\n\n<p>Is that phrase true or false?</p>\n', 'ViewCount': '27', 'Title': 'Closed network system that use OSI model to connect to another network?', 'LastEditorUserId': '13305', 'LastActivityDate': '2014-02-01T17:58:39.580', 'LastEditDate': '2014-02-01T17:58:39.580', 'AnswerCount': '0', 'CommentCount': '2', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '13305', 'Tags': '<computer-networks>', 'CreationDate': '2014-02-01T14:22:30.510', 'Id': '20187''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I am preparing for my exams and was solving problems regarding <code>Sliding Window Protocol</code> and I came across these questions..</p>\n\n<blockquote>\n  <p>A 1000km long cable operates a 1MBPS. Propagation delay is 10 microsec/km. If frame size is 1kB, then how many bits are required for sequence number?<BR><BR>\n  A) 3 B) 4 C) 5 D) 6</p>\n</blockquote>\n\n<p>I got the ans as C option as follows,</p>\n\n<pre><code>propagation time is 10 microsec/km\nso, for 1000 km it is 10*1000 microsec, ie 10 milisec\nthen RTT will be 20 milisec \n\nin 10^3 milisec 8*10^6 bits\nso, in 20 milisec X bits;\n\nX = 20*(8*10^6)/10^3 = 160*10^3 bits\n\nnow, 1 frame is of size 1kB ie 8000 bits\nso total number of frames will be 20. this will be a window size.\n\nhence, to represent 20 frames uniquely we need 5 bits.\n</code></pre>\n\n<p>the ans was correct as per the answer key.. and then I came across this one.. </p>\n\n<blockquote>\n  <p>Frames of 1000 bits are sent over a 10^6 bps duplex link between two hosts. The propagation time is \n  25ms. Frames are to be transmitted into this link to maximally pack them in transit (within the link).</p>\n  \n  <p>What is the minimum number of bits (l) that will be required to represent the sequence numbers distinctly? \n  Assume that no time gap needs to be given between transmission of two frames. </p>\n  \n  <p>(A) l=2 (B) l=3 (C) l=4 (D) l=5 </p>\n</blockquote>\n\n<p>as per the earlier one I solved this one like follows,</p>\n\n<pre><code>propagation time is 25 ms\nthen RTT will be 50 ms \n\nin 10^3 ms 10^6 bits\nso, in 50 ms X bits;\n\nX = 50*(10^6)/10^3 = 50*10^3 bits\n\nnow, 1 frame is of size 1kb ie 1000 bits\nso total number of frames will be 50. this will be a window size.\n\nhence, to represent 50 frames uniquely we need 6 bits.\n</code></pre>\n\n<p>and 6 is not even in the option. Answer key is using same solution but taking propagation time not RTT. and their answer is 5 bits. I am totally confused, which one is correct?</p>\n', 'ViewCount': '133', 'Title': 'Sliding window protocol, calculation of sequence number bits', 'LastActivityDate': '2014-02-06T08:25:54.473', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '12221', 'Tags': '<computer-networks>', 'CreationDate': '2014-02-05T17:01:04.357', 'Id': '21324''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Deep Learning, now one of the most popular fields in Artificial Neural Network, has shown great promise in terms of its accuracies on data sets. How does it compare to Spiking Neural Network. Recently Qualcomm unveils its zeroth processor on SNN, so I was thinking if there are any difference if deep learning is used instead. </p>\n', 'ViewCount': '71', 'Title': 'What are the key differences between Spiking Neural Network and Deep Learning', 'LastEditorUserId': '98', 'LastActivityDate': '2014-02-25T19:49:57.550', 'LastEditDate': '2014-02-10T08:40:54.117', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '14541', 'Tags': '<machine-learning><neural-networks>', 'CreationDate': '2014-02-10T07:43:27.300', 'Id': '21487''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'ViewCount': '70', 'Title': "Why can't you write the 2-paths problem as a max-flow problem?", 'LastEditDate': '2014-02-12T19:55:24.250', 'AnswerCount': '1', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '8877', 'FavoriteCount': '1', 'Body': '<p>This is a follow-up question to <a href="http://cstheory.stackexchange.com/questions/20989/graph-problems-which-are-np-complete-on-directed-graphs-but-polynomial-on-undire/20991#comment55620_20991">this</a>. Consider the 2-paths problem:</p>\n\n<blockquote>\n  <p>Given a directed graph $D=(V,A)$ and pairs of vertices $(s_1,t_1)$ and $(s_2,t_2)$, are there paths $P_1 = (s_1,\\dots, t_1)$ and $P_2=(s_2,\\dots,t_2)$ such that $P_1$ and $P_2$ are vertex-disjoint?</p>\n</blockquote>\n\n<p>This problem has been shown to be NP-complete (references <a href="http://cstheory.stackexchange.com/questions/20989/graph-problems-which-are-np-complete-on-directed-graphs-but-polynomial-on-undire/20991#comment55620_20991">here</a>). \nThis struck me as unusual, because there seems to be a natural way to formulate this as a max flow problem: </p>\n\n<ul>\n<li>Add new vertices $s$ and $t$ to $D$.</li>\n<li>Add arcs $(s,s_1),(s,s_2),(t_1,t),(t_2,t)$.</li>\n<li>Let all vertices have capacity one (besides $s$ and $t$).</li>\n</ul>\n\n<p>It seems to me that the max $s-t$ flow of this new graph (call it $D\'$) should be two iff $D$ has those desired paths $P_1$ and $P_2$. Surely there must be some mistake here, because this seems to imply that an NP-complete problem can be solved in polytime. Where is the mistake?</p>\n', 'Tags': '<complexity-theory><graphs><network-flow>', 'LastEditorUserId': '8877', 'LastActivityDate': '2014-02-12T22:50:32.903', 'CommentCount': '2', 'AcceptedAnswerId': '21577', 'CreationDate': '2014-02-12T18:35:27.667', 'Id': '21574''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I am considering strategies to compare the performance of routers with buffers vs. their lower latency counterparts in a simple network setting (N clients communicating with each other randomly through a router). I know that buffered routers should ideally perform better when there are traffic bursts.</p>\n\n<p>My question is regarding my concern which is that I do not know what is a good strategy to pick scenarios and how could I convey that these models are relevant to common real world situations. So the question would be:</p>\n\n<ol>\n<li>How to pick scenarios that are similar to real world situations?</li>\n<li>How to convince that these scenarios are indeed relevant to real\nworld situations.</li>\n</ol>\n\n<p>My main concern is measuring the benefit of buffers vs. an improvement in RRT (lower latency) with varying levels of congestion. Also showing possible disadvantages where the amounts of congestion are overwhelming (buffer bloat) and possibly other patterns.</p>\n', 'ViewCount': '29', 'ClosedDate': '2014-04-01T22:04:17.640', 'Title': 'Buffering packets vs. low latency routing', 'LastEditorUserId': '14875', 'LastActivityDate': '2014-02-21T10:18:53.960', 'LastEditDate': '2014-02-21T10:18:53.960', 'AnswerCount': '0', 'CommentCount': '3', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '14875', 'Tags': '<computer-networks><empirical-research><routing>', 'CreationDate': '2014-02-20T09:28:32.287', 'Id': '21840''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>For many machine learning projects that we do, we start with the k Nearest Neighbour classifier. This is an ideal starting classifier as we usually have sufficient time to calculate all distances and the number of parameters is limited (k, distance metric and weighting)</p>\n\n<p>However, this has often the effect that we stick with the knn classifier as later in the project there is no room for switching to another classifier. What would be good reason to try a new classifier. Obvious ones are memory and time restraints, but are there cases when another classifier can actually improve the accuracy? </p>\n', 'ViewCount': '24', 'Title': 'When should I move beyond k nearest neighbour', 'LastActivityDate': '2014-02-24T18:16:51.620', 'AnswerCount': '3', 'CommentCount': '2', 'AcceptedAnswerId': '21980', 'Score': '8', 'OwnerDisplayName': 'Rhand', 'PostTypeId': '1', 'Tags': '<neural-networks><classification>', 'CreationDate': '2014-02-11T12:18:44.347', 'Id': '21977''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I am having an AI exam in two weeks, and I am still figuring out certain concepts and ideas, related to Bayesian Nets, Hidden Markov Chains, Conditional Random Fields and Neural Nets (yes it is all going to be tested and yes we have a text (AI - A Modern Approach), but no, we did not cover everything in class).</p>\n\n<p>I "know" a few things about the mathematical descriptions of all of those, but I know pretty much nothing about their usage or practical applications.</p>\n\n<p>Here are my questions (and I apologize for my naivety):</p>\n\n<ol>\n<li>What kind of machine learning algorithm classes do they belong to? Since they all need training, does it mean that they are all supervised learning algorithms?</li>\n<li>They all have an underlying structure that allows a graph to represent them, where directed edges denote dependencies between states. The probability of being in a state is computed as a conditional probability from ancestors of the state. Does that sound about right?</li>\n<li>In what kind of situation do you want to use which of the algorithms? Is it possible to some it up, or does it require subtle differentiation and expert-level knowledge?</li>\n<li>Why do Neural Nets get special treatment? I heard of many classes teaching Neural Nets, but I have heard of no such thing for the other guys.</li>\n</ol>\n', 'ViewCount': '52', 'Title': 'How are Bayesian Nets, Hidden Markov Chains, Conditional Random Fields and Neural Nets related?', 'LastActivityDate': '2014-02-28T16:11:53.907', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '15080', 'Tags': '<machine-learning><artificial-intelligence><neural-networks><probabilistic-algorithms><markov-chains>', 'CreationDate': '2014-02-26T20:00:12.453', 'Id': '22062''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>I'm not sure what the purpose of the o(1-o) in the back propagation algorithm achieves? I'm guessing it's related to using the sigmoid function on the output but I'd like to have a proper understanding of the math behind it. Thanks!</p>\n", 'ViewCount': '44', 'Title': 'What\'s the purpose of the "o(1-o)" in the back propagation algorithm', 'LastEditorUserId': '55', 'LastActivityDate': '2014-03-02T12:29:42.360', 'LastEditDate': '2014-03-02T12:29:42.360', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '1', 'OwnerDisplayName': 'user11406', 'PostTypeId': '1', 'Tags': '<neural-networks>', 'CreationDate': '2014-03-01T20:41:03.517', 'Id': '22189''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>To calculate the error in back propagation you would use,\n(target_output - actual_output) * actual_output * (1 - actual_output)</p>\n\n<p>So what does, actual_output * (1 - actual_output) solve?</p>\n\n<p>Wouldn't, [target_output - actual_output] be the amount it's incorrect by?</p>\n", 'ViewCount': '45', 'ClosedDate': '2014-03-27T07:55:51.317', 'Title': 'In back propagation why is this necessary, o (1 - o)', 'LastEditorUserId': '9479', 'LastActivityDate': '2014-03-17T16:29:15.307', 'LastEditDate': '2014-03-12T10:21:12.580', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '-1', 'OwnerDisplayName': 'user15206', 'PostTypeId': '1', 'Tags': '<machine-learning><artificial-intelligence><neural-networks>', 'CreationDate': '2014-03-02T21:39:20.853', 'Id': '22207''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>If my goal were to compress say 10,000 images and I could include a dictionary or some sort of common database that the compressed data for each image would reference, could I use a large dictionary shared by the entire catalog and therefore get much smaller file sizes?  Could this be expanded to work with images in general, i.e. to replace something like JPEG?</p>\n\n<p>Are there existing compression systems that operate like this, where there is a large common set of bits transmitted and loaded before decompression, that has been built by analyzing many images?</p>\n\n<p>For example, is there an existing computer science/machine learning research effort using sparse autoencoding over a large set of images and this concept of distributing a network derived from that encoding with the decompressor?</p>\n\n<p>Note: I have deleted quite a bit of context from this question because it was claimed that this made the question too "opinionated".  I also had to edit the title after someone else modified the title in such a way as to change the meaning of the question.  If you are looking for clarification about my question, please ask.</p>\n', 'ViewCount': '165', 'Title': 'Does there exist a data compression algorithm that uses a large dataset distributed with the encoder/decoder?', 'LastEditorUserId': '15323', 'LastActivityDate': '2014-04-06T22:59:48.903', 'LastEditDate': '2014-03-07T02:16:22.923', 'AnswerCount': '1', 'CommentCount': '6', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '15323', 'Tags': '<machine-learning><neural-networks><data-compression><computer-vision>', 'CreationDate': '2014-03-05T21:00:31.943', 'Id': '22317''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>Given a set of buyers, houses, agents with the following constraints: </p>\n\n<ol>\n<li>Agents only know a subset of buyers</li>\n<li>Agents only know a subset of houses</li>\n<li>Agents can only do some amount of transactions</li>\n</ol>\n\n<p>Construct a flow network to model the problem.\n<em>Disclaimer this is homework</em></p>\n\n<p>I have put together some thoughts on a solution to this problem.  First I realized that agents should be right before the sink node with a max flow equal to the number of possible transactions.  This would then limit the number of transactions that can flow through an agent since the max flow can't be exceeded.  </p>\n\n<p>I was then thinking that it would be possible to put an edge between each person and house that an agent knows (example if agent knows person A, B and house 1, 2 there are edges (A,1), (A,2), (B,1), (B,2)). Finally, connect each house that an agent knows to an agent with max flow of 1. Then by running a Ford-Fulkerson algorithm across it the inflow of the sink node would indicate max number of transactions.</p>\n\n<p>However, I am concerned that there is no limit of stopping a house from being purchased more than once. I have tried building the network with various configurations (swapping houses and clients, building nodes of client/house pairs) and nothing seems to solve this specific problem.</p>\n\n<p>I am mostly looking for hints to solve this problem.</p>\n", 'ViewCount': '30', 'Title': 'Network Flow with multiple connected subsets', 'LastActivityDate': '2014-04-10T02:41:15.647', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '7887', 'Tags': '<algorithms><network-flow>', 'CreationDate': '2014-03-10T07:12:56.767', 'Id': '22455''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Phase space learning <a href="http://cseweb.ucsd.edu/users/gary/pubs/nips94.pdf" rel="nofollow">Paper1</a> and <a href="http://gliamac.mit.edu/people/seung/papers/continuous.pdf" rel="nofollow">Paper2</a> in neural network represents the input  in higher dimension in auto associative learning. So, the network functions as an auto-associative memory where dynamical attractors are fixed points, each corresponding to one of the patterns that we want to store in the network. If the network has 3 input nodes, the the number of outputs will also be 3. Thus, for a time instant, $t$ Input is a vector. </p>\n\n<p>The Authors mention that a trajectory is traced out. In my case, for every time instant I have a feature vector of dimension 3 i.e there are three features. In my opinion, for every time step, t a learning algorithm is used to update the weights. Also. the Authors mention delay embedding for time series reconstruction which is an essential point in any phase space representation. Based on these, the following concepts are unclear and I will be thankful for an intuitive explanation. </p>\n\n<p>Q1. How come a feature vector is delay embedded and a trajectory is formed since we have only one example at every time instant? </p>\n\n<p>Q2. I will appreciate ideas in how to apply phase space learning with particle Swarm optimization and the objective function is the mean square error between the actual output of the network and the target. In my application, I only have the final target vector not a target vector for every time step. </p>\n', 'ViewCount': '14', 'Title': 'Supervised learning based on phase space representation', 'LastEditorUserId': '10583', 'LastActivityDate': '2014-03-11T03:06:09.200', 'LastEditDate': '2014-03-11T03:06:09.200', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '10583', 'Tags': '<machine-learning><neural-networks><pattern-recognition><research>', 'CreationDate': '2014-03-11T02:56:38.210', 'Id': '22489''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>I'm reading up on network scheduling algorithms such as RED, ARED and WRED but I'm still not completely sure why networks need scheduling and these algorithms are necessary. </p>\n\n<p>Thanks!</p>\n", 'ViewCount': '49', 'Title': 'Why do networks need scheduling?', 'LastEditorUserId': '15503', 'LastActivityDate': '2014-03-12T12:39:32.913', 'LastEditDate': '2014-03-12T12:39:32.913', 'AnswerCount': '0', 'CommentCount': '3', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '15503', 'Tags': '<computer-networks><scheduling>', 'CreationDate': '2014-03-12T10:35:07.107', 'FavoriteCount': '1', 'Id': '22537''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I have a variant of bidding problem at hand.\nThere are N bidders(~20) who bid for items from a pool of many items(~10K). Each bidder can bid many items. I want to maximize the number of bidders who are satisfied. A bidder is satisfied if he gets all the items that he bid for in the first place. For eg-</p>\n\n<pre><code>Bidders = A,B,C\nItems = 1,2,3,4\n\nBidder    Bids\nA         1,2\nB         2,3\nC         3,4\n</code></pre>\n\n<p><img src="http://i.stack.imgur.com/Xcxlu.png" alt="enter image description here">\nIn this case its only possible to satisfy 2 bidders at max.</p>\n\n<p>I\'ve tried to model the problem to a maxflow problem and have taken several approaches but to no avail\nMy approaches so far-</p>\n\n<ol>\n<li><p>Tried to model this problem as a bipartite matching problem. The only problem being that instead of a one-one mapping I have a one-many mapping with an AND condition. </p></li>\n<li><p>A maxflow problem with edges going from source to each vertex with a capacity of number of bids. Problem here being ensuring that all edges from a bidder are selcted.</p></li>\n<li><p>A maxflow problem with both upper bounded and lower bounded edge capacities.</p></li>\n</ol>\n', 'ViewCount': '155', 'Title': 'Maximum number of matched vertexes in a one-to-many bipartite graph', 'LastActivityDate': '2014-03-12T17:58:04.897', 'AnswerCount': '3', 'CommentCount': '2', 'AcceptedAnswerId': '22548', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '15606', 'Tags': '<algorithms><graph-theory><network-flow><bipartite-matching><max-cut>', 'CreationDate': '2014-03-12T16:10:00.057', 'Id': '22542''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>What will happen if sequence number is not used in an ARQ protocol (e.g, Go-back-N, selective repeat)?</p>\n', 'ViewCount': '23', 'ClosedDate': '2014-04-02T16:34:43.273', 'Title': 'ARQ Protocols and sequence numbers', 'LastActivityDate': '2014-03-14T04:59:29.223', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '-1', 'PostTypeId': '1', 'OwnerUserId': '15652', 'Tags': '<efficiency><computer-networks>', 'CreationDate': '2014-03-13T16:41:38.160', 'Id': '22592''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I start to suspect this problem is very hard now that I cannot find a single relevant literature on the subject, but it\'s too late to change the class project topics now, so I hope any pointers to a solution. Please pardon the somewhat artificial scenerio of this question, but here goes:</p>\n\n<p>Technical version: </p>\n\n<p>Let $\\Sigma_{c}$ and $\\Sigma_{q}$ and $\\Sigma_{a}$ be 3 disjoint finite alphabet (c, q, a stand for content, query and answer respectively). Let $L_{c}\\in\\Sigma_{c}^{*}$ and $L_{q}\\in\\Sigma_{q}^{*}$ be FINITE languages, wherein $L_{q}$ have the property that for every string in the language all of its prefix are in the language too. There is an unknown function $f:L_{c}\\times L_{q}\\rightarrow\\Sigma_{a}^{*}$. Consider a mysterious machine that receive continuous stream of symbol through a channel one at a time step (we assume that the symbol are clearly distinguishable). This machine, whenever being feed with a string in $c\\in L_{c}$ (with the symbol in correct temporal order) followed by a string in $q\\in L_{q}$ will output (through a different output channel) the value of $f(c,q)$ as a temporal sequence, one symbol at a time. Note that the machine always output after every new symbol from $\\Sigma_{q}$. Note that the empty string is in $L_{q}$, which means the machine also output something before any symbol on $\\Sigma_{q}$ have arrived, but only if it is certain with high probability that the full string in $L_{c}$ have been received.</p>\n\n<p>The objective is to construct a neural network that emulate that mysterious machine, if we have only access to its input and output channel to use as training data, and we do not know $f$. We also have to assume that the input channel are noisy in the following sense: random noise are inserted into the input channel at high probability, delaying input symbol, and we initially do not know which one is noise and which one is authentic; also symbol in the input channel are sometimes lost at low probability. EDIT: Note: we do not know $L_{c}$ nor $L_{q}$, only the mysterious machine know, in fact we do not even know the alphabet $\\Sigma_{c}$ and $\\Sigma_{q}$ other than the fact that they are disjoint and are subset of the set of all possible input symbol (input symbol not in either set are certainly noise, but we can\'t tell which set it belongs to initially; note that it is still possible for symbol from the alphabet to be noise).</p>\n\n<p>(why neural network: beside the noise problem, also because that\'s what I wrote in my class project proposal)</p>\n\n<p>(layman version: consider Sherlock Holmes sitting in his chair, bored. Dr. Watson give a short description of the client. Once he\'s done, Sherlock Holmes give a conclusion about the client. Dr. Watson is astonished, and ask more question, and Sherlock Holmes reply. The conclusion must obviously based on the description alone; and subsequent answer have to answer the question being asked, taking into account the contexts which consists of question already being asked (for example, the same "How did you know?" following "Age?" demands different answer than when following "Height?"). Now you want to make a neural network that simulate Sherlock Holmes, having all the recordings of those session. Dr. Watson however tend to insert in long description that are rather irrelevant, making long statement before finally getting around to ask question, and sometimes accidentally omit crucial information, but otherwise describe people in a rather fixed order of details. The neural network must be able to deal with that. Of course, this is a just a layman\'s description, the situation is much less complex.)</p>\n\n<p>I have looked through various relevant literature, and I cannot find anything relevant. Conversion to spatial domain is useless due to high amount of noise causing very long input sequence. I have looked into LSTM to deal with the memory problem over arbitrary long time lag, but I for the life of me cannot figure out how is the network is supposed to be trained when there are arbitrarily long noise insertion everywhere or possibilities of missing symbol (every method I found seems to force a fixed time-lag between input and output, and missing symbol immediately wreck any method based on predicting the next item in the sequence). Also, is it too much to ask for network that isn\'t too hard to code? Integrate-and-fire neuron is even worse than LSTM in term of difficulty in coding.</p>\n\n<p>Thanks for your help. It\'s due in 2 days, so please be fast.</p>\n', 'ViewCount': '37', 'Title': 'Neural network: noisy temporal sequence converter (transducer?producer?) on demand?', 'LastEditorUserId': '15741', 'LastActivityDate': '2014-04-15T10:54:18.623', 'LastEditDate': '2014-03-16T10:28:14.080', 'AnswerCount': '1', 'CommentCount': '11', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '15741', 'Tags': '<formal-languages><neural-networks>', 'CreationDate': '2014-03-16T06:32:31.097', 'Id': '22666''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>What is a known strategy to approach a situation where short bursts of data are being sent very often over a high bandwidth, high latency cable? I am aware of cubic but even that does not utilize a 10GBps cable in a short burst scenario.</p>\n\n<p>Lets say I have a distributed network where a single computer is sending tasks to many other computers. The computers then respond with a short answer 50-100KB. We need to receive these answers as quickly as possible.</p>\n\n<p>What are the consideration and do we determine the optimal initial congestion window size? </p>\n\n<p>Assumptions:</p>\n\n<ol>\n<li>Using TCP Cubic.</li>\n<li>Bursts are arrive with a Poisson distribution.</li>\n<li>Goal is to get the data as quickly as possible.</li>\n<li>Two scenarios, limited or vast buffer size.</li>\n</ol>\n', 'ViewCount': '23', 'Title': 'Picking an optimal initial congestion window size (high bw, high latency and short bursts)?', 'LastEditorUserId': '14875', 'LastActivityDate': '2014-04-23T13:15:33.887', 'LastEditDate': '2014-04-23T13:15:33.887', 'AnswerCount': '0', 'CommentCount': '2', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '14875', 'Tags': '<computer-networks><network-flow><communication-protocols>', 'CreationDate': '2014-03-18T19:07:01.763', 'Id': '22765''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': u'<p>I am working out with the rooks problem. If there are m rooks on an nxn chessboard,i have to give describe a polynomial (in m and n) time algorithm that \ufb01nds a maximum-sized subset of the rooks such that if we leave this subset on the chessboard and remove all other rooks, then no two rooks attack one another. (Two rooks are said to attack one another if and only if they are either in the same row or in the same column with no other intervening rooks between them.)</p>\n\n<p>My idea for solving this problem is to consider a bipartite graph (X,Y) where X is the rows in the chessboard and Y is the columns. if a row and column have a rook placed at their intersection, then there is an edge between the those vertices from x to y. This can be converted into a maximum flow network and the value of max flow is the max matching. </p>\n\n<p>In order to find a polynomial time algorithm i can run maybe BFS.</p>\n\n<p>I wanted to know that if i build my solution on this idea shall it be correct. Is there a better algorithm (polynomial in m and n)?</p>\n\n<p>Any help is appreciated.</p>\n', 'ViewCount': '34', 'Title': 'maximum bipartite matching', 'LastActivityDate': '2014-03-20T02:28:19.897', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '6688', 'Tags': '<network-flow><bipartite-matching>', 'CreationDate': '2014-03-20T01:48:01.570', 'Id': '22840''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Which kind of machine learning concept / model is used in <a href="http://www.20q.net" rel="nofollow">20 Questions</a>?<br>\nIs this kind of thing best solved by a neural network?<br>\nWhere I can read something about it?</p>\n', 'ViewCount': '44', 'Title': 'What kind of model is used by 20 Questions?', 'LastActivityDate': '2014-03-20T22:24:41.397', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '22885', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '15915', 'Tags': '<machine-learning><neural-networks><data-mining>', 'CreationDate': '2014-03-20T16:48:31.383', 'FavoriteCount': '2', 'Id': '22872''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I have a friend working in wireless communications research. He told me that we can transmit more than one symbol in a given slot using one frequency (of course we can decode them at the receiver).</p>\n\n<p>The technique as he said uses a new modulation scheme. Therefore if one transmitting node transmits to one receiving node over a wireless channel and using one antenna at each node, the technique can transmit two symbols at one slot over one frequency.</p>\n\n<p>I am not asking about this technique and I do not know whether it is correct or not but I want to know if one can do this or not? Is this even possible? Can the Shannon limit be broken? Can we prove the impossibility of such technique mathematically?</p>\n\n<p>Other thing I want to know, if this technique is correct what are the consequences? For example what would such technique imply for the famous open problem of the interference channel? </p>\n\n<p>Any suggestions please? Any reference is appreciated.  </p>\n', 'ViewCount': '148', 'ClosedDate': '2014-04-02T13:18:01.173', 'Title': 'Can we break the Shannon capacity?', 'LastActivityDate': '2014-03-24T17:49:47.007', 'AnswerCount': '1', 'CommentCount': '3', 'AcceptedAnswerId': '23014', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '15913', 'Tags': '<reference-request><computer-networks>', 'CreationDate': '2014-03-24T17:01:40.950', 'FavoriteCount': '1', 'Id': '23009''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>My question is that I'm trying to find the sparsest cut in a connected, undirected graph (all weights are = 1). Basically, I am looking trying to find the smallest cut (i.e., number of edges cut since all weights = 1) while maximizing the number of vertices in the resulting subgraph. How do I approach this problem with flow?</p>\n", 'ViewCount': '20', 'ClosedDate': '2014-04-16T23:02:28.523', 'Title': 'Minimum cut versus sparsest cut?', 'LastActivityDate': '2014-04-14T02:32:51.203', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '16201', 'Tags': '<algorithms><graphs><network-flow>', 'CreationDate': '2014-03-27T15:31:57.593', 'Id': '23133''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>My neural net is having trouble switching the sign of a weight. The issue is that the deltas applied to the weight are proportional to that weight, so when it gets closer to zero, the deltas become smaller and are never sufficient to get it past that point. I tried adding a momentum term with 5% of the previous iteration contributing to the current iteration without success.</p>\n\n<p>In my example I have a very simple neural net with one input and one output and no hidden layer. The transfer function in the neural net is a sigmoid, and the function I am trying to learn is also a sigmoid. Specifically: $y = S(10 x - 5)$ where S is the sigmoid function. The neural net gets to a point where its internal weights are essentially generating a function very close to $y = S(2x + 0)$. At this point it gets stuck because the fitted function is sometimes above and sometimes below the desired function, but the weight on $x$ needs to go up and the weight on the constant term needs to go down. I ran it for 1,000 epochs and 100,000 epochs and it stays in the same place. The initial weights were 0.6 and 0.2, so it made improvements over that.</p>\n\n<p>How can a net get over this hump? Should I not be scaling the weight delta by the weight value?</p>\n\n<p><a href="http://www.willamette.edu/~gorr/classes/cs449/linear2.html" rel="nofollow">Here\'s</a> the reference I\'m using for computing the weights for back-propagation.  I am using a learning rate of 0.05 and apply the deltas after each training example.  The x-values (input) used in training are 0.00, 0.01, 0.02, ... 0.99, 1.00.  I always play them in order.</p>\n\n<p>Thanks for your help.</p>\n\n<p>Note: I <a href="http://stackoverflow.com/questions/22725336/how-can-an-artificial-neural-net-change-the-sign-of-a-weight?noredirect=1#comment34633956_22725336">originally posted</a> this on stack overflow and was directed here.</p>\n', 'ViewCount': '39', 'Title': 'How can an artificial neural net change the sign of a weight?', 'LastEditorUserId': '13022', 'LastActivityDate': '2014-04-24T12:55:05.880', 'LastEditDate': '2014-03-29T05:18:10.917', 'AnswerCount': '2', 'CommentCount': '1', 'AcceptedAnswerId': '23221', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '16260', 'Tags': '<neural-networks>', 'CreationDate': '2014-03-29T04:40:03.687', 'Id': '23209''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>I am doing a project in order to recognize an apple. (I am using Emgucv with Visual Studio 2010 C#, if that's relevant). My project is a classification (is or is not an apple). I have 2000 images of apples but I need images for the second class. </p>\n\n<p>I have read about classification using ANN but they have multiple classes but I need to recognize if image contain an apple or not. So what kind of images do I need for the second classes? I want to use background of apples like second class. Is that a good idea?</p>\n\n<p>I only want that ANN recognize if a image contain a pen or not so I have 2 classes(pen and non-pen) My question is What kind of image can I use to the second class? For example My first class are images of pen and second class are images of non pen (pencil, apples, grapes, tables); is that correct?</p>\n", 'ViewCount': '54', 'ClosedDate': '2014-04-29T23:35:57.197', 'Title': 'What are good counter-examples when training an apple classifier?', 'LastEditorUserId': '39', 'LastActivityDate': '2014-04-05T11:35:16.640', 'LastEditDate': '2014-04-05T11:35:16.640', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '16399', 'Tags': '<machine-learning><neural-networks><data-sets>', 'CreationDate': '2014-04-02T23:33:24.867', 'Id': '23374''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I am doing a project to recognize a kind of leaf using ANNs with Emgu CV in C#. My project is to get frames from camera then present them to the ANN and have the ANN tell me if that frame contain a leaf or does not contain a leaf. </p>\n\n<p>I am using 1000 images of leaves that I want to recognize, so if the frame contain a leaf, the ANN will tell me that frame contains one.  I do not know what kind of images I should use for the second class. I want to use images perhaps, for example, like pens, rocks, or telephones all together in the second class.</p>\n', 'ViewCount': '14', 'ClosedDate': '2014-04-10T22:30:27.440', 'Title': 'What types of images should I use for negative examples in a classification problem?', 'LastEditorUserId': '88', 'LastActivityDate': '2014-04-10T19:51:49.737', 'LastEditDate': '2014-04-10T19:51:49.737', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '16457', 'Tags': '<artificial-intelligence><neural-networks><classification>', 'CreationDate': '2014-04-04T20:25:40.320', 'Id': '23434''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>i\'m a little bit lost ... can you help me ?</p>\n\n<p>So I have this table of date (each row give a point with its group)</p>\n\n<p><img src="http://i.stack.imgur.com/h3wef.png" alt="data table"></p>\n\n<p><img src="http://i.stack.imgur.com/RnEgL.jpg" alt="enter image description here"></p>\n\n<p>So i took a random weight let\'s say : [1, -2]\nH = 1 if n =&lt; 0\n    0 otherwise</p>\n\n<p>a= H([1,-2][6,3]) = H(0) = 1 but the target output is 0 ... so we have to update the weight:\nw -> w - p = [5 , -5] .\nNext : </p>\n\n<p>a= H([5,-5][3,3]= H(0)=1 the problem is : there the target output is 1 so we don\'t have to update the weight , but that\'s strange because the [5 -5] vector doesn\'t draw a linear separation between the 2 groups ...</p>\n\n<p>Thanks for your help ? :) </p>\n', 'ViewCount': '55', 'ClosedDate': '2014-04-14T17:40:03.533', 'Title': "Perceptron learning rule doesn't work", 'LastActivityDate': '2014-04-08T12:53:53.387', 'AnswerCount': '2', 'CommentCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '16532', 'Tags': '<algorithms><machine-learning><neural-networks>', 'CreationDate': '2014-04-07T14:53:01.470', 'Id': '23518''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>Im looking online for a good definition of sparse graphs, but i'm confused. Is a sparse graph effectively a big one, with millions/billions of nodes. An example, is a real world one - like Facebook. Or can they be in small networks as well?</p>\n\n<p>Thanks in advance!</p>\n", 'ViewCount': '41', 'Title': 'Understanding sparse graphs', 'LastActivityDate': '2014-04-08T13:33:43.637', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '7173', 'Tags': '<graph-theory><network>', 'CreationDate': '2014-04-08T11:40:29.187', 'Id': '23546''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': u"<p>That's the problem</p>\n\n<p>$$y=(x,w,\\rho) = \\begin{cases}\n 1 &amp; \\sum_{i=1}^3 w_ix_i &gt;\\rho\\\\\n 0 &amp; \\text{otherwise}\n\\end{cases},$$</p>\n\n<p>where $x=\\{x_1,x_2,x_3\\}$ are inputs, $w=\\{w_1,w_2,w_3\\}$ are weights and\n$\\rho$ is the threshold value.</p>\n\n<p>The problem asks to find an opportune set of weights that can \nclassify these inputs.</p>\n\n<p>$$A = \\{(1, 2, 0), (\u22121, 3, 0), (\u22122, \u22123, 0)\\},$$ \n$$B = \\{(0,1,2),(9,0,1),(\u22123,\u22123,3)\\}.$$</p>\n\n<p>The first step is to assign a random weights to all inputs</p>\n\n<p>$w_1= 0.5$, $w_2= 0.7$, $w_3=0.3$.</p>\n\n<p>For the first example\n$(1,2,0)$ that I know is part of the A class</p>\n\n<p>$\\sum_{i=1}^3 w_ix_i=1.9 &lt; \\rho~ \\Rightarrow y=0$ is the result.</p>\n\n<p>I need to update the weights but I can't understand how.</p>\n\n<p>The formula is</p>\n\n<p>$w_i'=w_i*n*x(t-y)$.</p>\n\n<p>Correct?</p>\n", 'ViewCount': '51', 'Title': 'Perceptron learning rule for classification', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-14T08:18:17.777', 'LastEditDate': '2014-04-09T11:47:08.043', 'AnswerCount': '2', 'CommentCount': '3', 'Score': '-3', 'PostTypeId': '1', 'OwnerUserId': '12495', 'Tags': '<artificial-intelligence><probability-theory><neural-networks><classification>', 'CreationDate': '2014-04-09T09:05:18.430', 'Id': '23589''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>What is the difference between maximal flow and maximum flow. I am reading these terms while working on Ford Fulkerson algorithms and they are quite confusing. I tried on internet, but couldn't get a reasonable answer. I believe maximum flow is quite clear as it means maximum amount of flow that can be transferred from source to sink in a network, but what exactly is maximal flow.</p>\n\n<p>Please answer in layman terms if possible.</p>\n\n<p>Thanks.</p>\n", 'ViewCount': '100', 'Title': 'What is the difference between maximal flow and maximum flow?', 'LastActivityDate': '2014-04-14T01:38:17.857', 'AnswerCount': '2', 'CommentCount': '1', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '16750', 'Tags': '<algorithms><graph-theory><graphs><network-flow>', 'CreationDate': '2014-04-14T00:31:01.150', 'Id': '23763''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I\'m studying Distributed Systems and synchronization and I didn\'t catch this solution of totally ordered multicast with Lamport timestamps. I read that it doesn\'t need ack to deliver a message to the application, but</p>\n\n<blockquote>\n  <p>"It is sufficient to multicast any other type of message, as long as that message has a timestamp larger than the received message. The condition for delivering a message m to the application, is that another message has been received from each other process with a large timestamp. This guarantees that there are no more messages underway with a lower timestamp."</p>\n</blockquote>\n\n<p>This is a definition from a book. I tried to apply this definition to an example but I guess that something is wrong.</p>\n\n<h3>Example.</h3>\n\n<blockquote>\n  <p>There are 4 processes and they multicast the following messages (second number in parentheses is timestamp) :<br>\n  P1 multi-casts (m11, 5);  (m12, 12); (m13, 14);<br>\n  P2 multi-casts (m21, 6); (m22, 14);<br>\n  P3 multi-casts (m31, 5); (m32, 7); (m33, 11);<br>\n  P4 multi-casts (m41, 8); (m42, 15); (m43, 19).</p>\n</blockquote>\n\n<p>Supposing that there are no acknoledgments, can I guess which messages can be delivered and which not? Based on definition, my guess is that only m11 and m31 can be delivered to the application, because all the other messages received will have a timestamp greater, but this seems very strange, and I think I didn\'t understand the delivery condition very well. I have an exam next week and in general I\'d like to understand this mechanism.</p>\n', 'ViewCount': '73', 'Title': 'totally ordered multicast with Lamport timestamp', 'LastEditorUserId': '16819', 'LastActivityDate': '2014-04-20T13:25:52.457', 'LastEditDate': '2014-04-20T13:25:52.457', 'AnswerCount': '0', 'CommentCount': '2', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '16819', 'Tags': '<distributed-systems><computer-networks><synchronization><communication-protocols><message-passing>', 'CreationDate': '2014-04-16T07:26:03.173', 'FavoriteCount': '1', 'Id': '23847''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p><a href="https://en.wikipedia.org/wiki/K%C3%B6nig%27s_theorem_%28graph_theory%29#Proof" rel="nofollow">Wikipedia</a> shows how one can determine the minimum vertex cover in a bipartite graph ($G(X \\cup Y, E)$) in polytime from a maximum flow using alternating paths. However, I read that the (S,T) cut (extracted from the final residual network) can also be used to determine the minimum vertex cover:</p>\n\n<p>$$(X\\cap T)\\cup(Y\\cap S)$$</p>\n\n<p>If this expression is a correct alternative, I don\'t have an intuition for why it\'s true. The best intuition I\'ve been able to come up with is: Select each vertex on the left (X) that has a positive flow leading up to it and select each vertex on the right if there is no flow leading up to it. Why is this set equal to the minimum vertex cover?</p>\n', 'ViewCount': '13', 'Title': 'Determining the minimum vertex cover in a bipartite graph from a maximum flow/matching using the residual network rather than alternating paths', 'LastActivityDate': '2014-04-17T01:33:45.290', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '23873', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '4748', 'Tags': '<graphs><network-flow><bipartite-matching>', 'CreationDate': '2014-04-17T00:27:40.150', 'Id': '23871''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>I have been reading a lot and I am still unsure of how to determine this. Let's say I have an initial binary state vector (1, 1, 1). How would I go about determining whether (1, 1, 1) is a fixed point in the network? </p>\n\n<p>My initial understanding was to put the state through the network and if it converged to (1, 1, 1) then it is a fixed point. However I have a feeling it is not as simple as that.</p>\n\n<p>Thanks.</p>\n", 'ViewCount': '50', 'Title': 'How to determine if a state is a fixed point in a Hopfield network?', 'LastActivityDate': '2014-04-23T18:01:06.973', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '24004', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '16944', 'Tags': '<neural-networks>', 'CreationDate': '2014-04-20T22:42:10.000', 'Id': '23969''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>Why does packet don\'t need trailer/footer while frame needs it?</p>\n\n<p>I am trying to understand networking concept regarding OSI &amp; TCP/IP layering. I have googled a bit and it says that the footer in data link layer pdu (frame) is needed as a mark of the end of the pdu.</p>\n\n<p>But why does packet data etc in the layers above it doesn\'t need footer to mark the end of the pdu as well?</p>\n\n<p><img src="http://i.stack.imgur.com/ndZjU.gif" alt="enter image description here"></p>\n', 'ViewCount': '18', 'Title': "Why does packet data don't need trailer/footer while frame needs it?", 'LastEditorUserId': '13022', 'LastActivityDate': '2014-04-21T07:28:28.700', 'LastEditDate': '2014-04-21T07:28:28.700', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '16948', 'Tags': '<computer-networks><communication-protocols>', 'CreationDate': '2014-04-21T06:35:21.200', 'Id': '23976''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>I have made and trained a simple neural network which now seems to produce outputs reasonable  in all the aspects but one: it gives negative values from time to time even though the outputs are always either 0 or 1 (positive) in all my treaining samples (the actual neural outputs show to be more or less close to the answer most probable but never actually reach them, I consider this ok). Won\'t "telling" the network what output values are just impossible improve its performance.</p>\n\n<p>Perhaps my mistake is in choosing activation functions. As far as my input values domain is (-1, 1) I use TANH for input neurons, but I have no idea what is the logic to choose hidden and output neurons activation functions and so I set the same (TANH) for all of them (update: I have just noticed that I have mistakenly chosen linear activation function for the output layer while inpit and hidden layers use TANH).</p>\n\n<p>Clearly a negative value means "the answer is very probable to be zero" in this case and it works just fine from the practical point of view but it still gives me a sense that I am doing something wrong.</p>\n', 'ViewCount': '23', 'Title': 'How do I "tell" a simple perceptron/adaline neural netrork its output can\'t be negative?', 'LastEditorUserId': '16894', 'LastActivityDate': '2014-04-25T14:32:37.770', 'LastEditDate': '2014-04-23T18:23:43.567', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '16894', 'Tags': '<neural-networks>', 'CreationDate': '2014-04-23T18:11:40.750', 'Id': '24052''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>As far as I know choosing an activation function for the input layer is relatively straightforward: I use Sigmoid if the input data domain is (0,1) and TANH if it is (-1,1).</p>\n\n<p>But what activation functions to set for hidden and output layers? Is there any conventional logic for making thish choice reasonably? How do I know/set the domain of a neuron layer output?</p>\n', 'ViewCount': '17', 'Title': 'How to choose proper activation functions for hidden and output layers of a perceptron neural network?', 'LastActivityDate': '2014-04-23T20:18:15.173', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '16894', 'Tags': '<neural-networks>', 'CreationDate': '2014-04-23T20:18:15.173', 'Id': '24061''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': '<p>To me they describe the same attributes, is there a real difference or are they the same thing.</p>\n\n<p>Thanks in advance</p>\n', 'ViewCount': '13', 'ClosedDate': '2014-04-26T17:15:30.040', 'Title': 'Whats the difference between the MasterNode and the NameNode?', 'LastActivityDate': '2014-04-26T11:46:19.663', 'AnswerCount': '0', 'CommentCount': '1', 'Score': '-1', 'PostTypeId': '1', 'OwnerUserId': '7173', 'Tags': '<computer-networks>', 'CreationDate': '2014-04-26T11:46:19.663', 'Id': '24126''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}{'Body': "<p>I'm studying for my finals in algorithms and reading the part about flow networks. There's a certain section that has me completely stumped and it is as follows:</p>\n\n<blockquote>\n  <p>Given a graph $G= \\langle V_G, E_G \\rangle$, we can construct the $H(G)=\\langle V_H, E_H\\rangle$ as follows:\n  $$V_H = V_G\\times\\{0,1\\}E_H = \\{((v,0),(v,1))|v\\in V_G\\}\\cup\\{((x,1),(y,0))|(x,y)\\in E_G\\}.$$\n  Say that we have a graph $\\langle G,u,v\\rangle$ where $G$ is some directed graph, which contains vertices $u$ and $v$ then $H(G)$ can be used to find the smallest number of nodes that must be removed from $G$ to separate $u$ to $v$, meaning there will be no simple path from $u$ to $v$.</p>\n</blockquote>\n\n<p>I really don't understand what's going on here, partly because I can't visualise $H(G)$. I assume we'd get some bipartite graph and maybe apply Edmonds-Karp only because the flow networks sections is succinct and there's not much else in this chapter. Could someone tell/show me what $H(G)$ is doing exactly and why this result is true. Much appreciated.</p>\n", 'ViewCount': '65', 'Title': "Don't understand this graph definition", 'LastEditorUserId': '98', 'LastActivityDate': '2014-05-02T21:53:50.963', 'LastEditDate': '2014-05-02T21:53:50.963', 'AnswerCount': '1', 'CommentCount': '4', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '15826', 'Tags': '<graph-theory><terminology><network-flow>', 'CreationDate': '2014-05-01T14:30:30.687', 'Id': '24295''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}