{'Body': '<p>A drink dispenser requires the user to insert a coin ($\\bar c$), then press one of three buttons: $\\bar d_{\\text{tea}}$ requests a cup of tea $e_{\\text{tea}}$, ditto for coffee, and $\\bar r$ requests a refund (i.e. the machine gives back the coin: $\\bar b$). This dispenser can be modeled by the following <a href="http://en.wikipedia.org/wiki/Calculus_of_communicating_systems" rel="nofollow">CCS</a> process:</p>\n\n<p>$$ M \\stackrel{\\mathrm{def}}= c.(d_{\\text{tea}}.\\bar e_{\\text{tea}}.M + d_{\\text{coffee}}.\\bar e_{\\text{coffee}}.M + r.\\bar b.M)$$</p>\n\n<p>A civil war raises the price of coffee to two coins, while the price of tea remains one coin. We want a modified machine that delivers coffee only after two coins, and acquiesces to a refund after either one or two coins. How can we model the modified machine with a CCS process?</p>\n', 'ViewCount': '151', 'Title': 'CCS process for a drink dispenser with two different prices', 'LastEditorUserId': '39', 'LastActivityDate': '2013-09-17T17:42:36.120', 'LastEditDate': '2013-09-17T17:42:36.120', 'AnswerCount': '2', 'CommentCount': '3', 'AcceptedAnswerId': '446', 'Score': '8', 'PostTypeId': '1', 'OwnerUserId': '39', 'Tags': '<logic><concurrency><modelling><process-algebras><ccs>', 'CreationDate': '2012-03-17T00:49:38.620', 'Id': '444''color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2}