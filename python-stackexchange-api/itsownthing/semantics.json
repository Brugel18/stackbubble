{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>In programming languages, closures are a popular and often desired feature. <a href="https://en.wikipedia.org/wiki/Closure_%28computer_science%29">Wikipedia</a> says (emphasis mine):</p>\n\n<blockquote>\n  <p>In computer science, a closure (...) is a <strong>function together with a referencing environment</strong> for the non-local variables of that function. A closure allows a function to access variables outside its immediate lexical scope.</p>\n</blockquote>\n\n<p>So a closure is essentially a (anonymous?) function value which can use variables outside of its own scope. In my experience, this means it can access variables that are in scope at its definition point.</p>\n\n<p>In practice, the concept seems to be diverging, though, at least outside of functional programming. Different languages implement different semantics, there even seem to be wars of opinons on. Many programmers do not seem to know what closures are, viewing them as little more than anonymous functions.</p>\n\n<p>Also, there seem to exist major hurdles when implementing closures. Most notable, Java 7 was supposed to include them but the feature was pushed back to a future release.</p>\n\n<p>Why are closures so hard (to understand and) to realise? This is too broad and vague a question, so let me focus it more with these interconnected questions: </p>\n\n<ul>\n<li>Are there problems with expressing closures in common semantic formalisms (small-step, big-step, ...)? </li>\n<li>Are existing type systems not suited for closures and can not be extended easily?</li>\n<li>Is it problematic to bring closures in line with a traditional, stack-based procedure translation?</li>\n</ul>\n\n<p>Note that the question relates mostly to procedural, object-oriented and scripting languages in general. As far as I know, functional languages do not have any problems.</p>\n', 'ViewCount': '253', 'Title': 'Problems Implementing Closures in Non-functional Settings', 'LastActivityDate': '2012-03-14T06:33:23.727', 'AnswerCount': '3', 'CommentCount': '3', 'AcceptedAnswerId': '239', 'Score': '8', 'PostTypeId': '1', 'OwnerUserId': '98', 'Tags': '<programming-languages><semantics>', 'CreationDate': '2012-03-12T07:52:37.183', 'Id': '231'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p><a href="http://en.wikipedia.org/wiki/Reflection_%28computer_programming%29" rel="nofollow">Reflection</a> is a common mechanism for accessing and changing the structure of a program at run-time, found in many dynamic programming languages such as Smalltalk, Ruby and Python, and in impoverished form in Java and (hence) Scala. Functional languages such as LISP and Scheme also support a good reflect framework. </p>\n\n<p>Modern languages support concurrency, either by adding threads on top of the existing language constructs, or by designing from the ground up with concurrency in mind.</p>\n\n<p>My question is: </p>\n\n<blockquote>\n  <p>What models of reflection for the concurrency aspects in concurrent languages (multi-threaded, actor-based, active-object-based) exist? </p>\n</blockquote>\n', 'ViewCount': '164', 'Title': 'Reflection on Concurrency', 'LastEditorUserId': '31', 'LastActivityDate': '2012-03-16T23:43:47.517', 'LastEditDate': '2012-03-12T19:34:39.557', 'AnswerCount': '1', 'CommentCount': '4', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '31', 'Tags': '<programming-languages><semantics><concurrency><reflection>', 'CreationDate': '2012-03-12T16:55:45.647', 'FavoriteCount': '1', 'Id': '246'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'ViewCount': '627', 'Title': 'When are two simulations not a bisimulation?', 'LastEditDate': '2012-03-27T03:06:25.847', 'AnswerCount': '3', 'Score': '10', 'PostTypeId': '1', 'OwnerUserId': '31', 'FavoriteCount': '2', 'Body': '<p>Given a <a href="http://en.wikipedia.org/wiki/State_transition_system">labelled transition system</a> $(S,\\Lambda,\\to)$, where $S$ is a set of states, $\\Lambda$ is a set of labels, and $\\to\\subseteq S\\times\\Lambda\\times S$ is a ternary relation. As usual, write $p \\stackrel\\alpha\\rightarrow q$ for $(p,\\alpha,q)\\in\\to$. The labelled transition $p\\stackrel\\alpha\\to q$ denotes that the system in state $p$ changes state to $q$ with label $\\alpha$, meaning that $\\alpha$ is some observable action that causes the state change.</p>\n\n<p>Now a  relation $R \\subseteq S \\times S$ is a called a <em>simulation</em> iff\n$$ \\forall (p,q)\\in R, \r\n   \\text{ if } p \\stackrel\\alpha\\rightarrow p&#39;\r\n   \\text{ then } \\exists q&#39;, \\;\r\n   q \\stackrel\\alpha\\rightarrow q&#39; \\text{ and } (p&#39;,q&#39;)\\in R.\r\n$$</p>\n\n<p>One LTS is said to <em>simulate</em> another if there exists a simulation relation between them. </p>\n\n<p>Similarly, a relation $R \\subseteq S \\times S$ is a <em>bisimulation</em> iff $\\forall (p,q)\\in R,$ \n$$ \r\n\\begin{array}{l}\r\n   \\text{ if } p \\stackrel\\alpha\\rightarrow p&#39;\r\n   \\text{ then } \\exists q&#39;, \\;\r\n   q \\stackrel\\alpha\\rightarrow q&#39; \\text{ and } (p&#39;,q&#39;)\\in R\r\n\\text{ and } \\\\\r\n\\text{ if } q \\stackrel\\alpha\\rightarrow q&#39;\r\n   \\text{ then } \\exists p&#39;, \\;\r\n   p \\stackrel\\alpha\\rightarrow p&#39; \\text{ and } (p&#39;,q&#39;)\\in R.\r\n\\end{array}\r\n$$</p>\n\n<p>Two LTSs are said to be bisimilar iff there exists a bisimulation between their state spaces.</p>\n\n<p>Clearly these two notions are quite related, but they are not the same.</p>\n\n<blockquote>\n  <p>Under what conditions is it the case that an LTS simulates another and vice versa, but that the two LTSs are not bisimilar?</p>\n</blockquote>\n', 'Tags': '<programming-languages><formal-methods><semantics><process-algebras>', 'LastEditorUserId': '41', 'LastActivityDate': '2012-09-24T21:05:13.533', 'CommentCount': '0', 'AcceptedAnswerId': '548', 'CreationDate': '2012-03-20T16:28:13.400', 'Id': '541'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'ViewCount': '126', 'Title': 'Late and Early Bisimulation', 'LastEditDate': '2012-03-27T03:01:00.267', 'AnswerCount': '1', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '31', 'FavoriteCount': '1', 'Body': '<p>This is a follow up to my earlier questions on <a href="http://cs.stackexchange.com/q/525/31">coinduction</a> and <a href="http://cs.stackexchange.com/q/541/31">bisimulation</a>.</p>\n\n<p>A relation  $R \\subseteq S \\times S$ on the states of an LTS is a <em>bisimulation</em> iff $\\forall (p,q)\\in R,$ \n$$ \r\n\\begin{array}{l}\r\n   \\text{ if } p \\stackrel\\alpha\\rightarrow p&#39;\r\n   \\text{ then } \\exists q&#39;, \\;\r\n   q \\stackrel\\alpha\\rightarrow q&#39; \\text{ and } (p&#39;,q&#39;)\\in R\r\n\\text{ and } \\\\\r\n\\text{ if } q \\stackrel\\alpha\\rightarrow q&#39;\r\n   \\text{ then } \\exists p&#39;, \\;\r\n   p \\stackrel\\alpha\\rightarrow p&#39; \\text{ and } (p&#39;,q&#39;)\\in R.\r\n\\end{array}\r\n$$</p>\n\n<p>This is a very powerful and very natural notion, after you come to appreciate it. But it\'s not the only notion of bisimulation. In special circumstances, such as in the context of the <a href="http://en.wikipedia.org/wiki/%CE%A0-calculus" rel="nofollow">$\\pi$-calculus</a>, other notions such as open, branching, weak, barbed, late and early bisimulation exist, though I do not fully appreciate the differences. But for this question, I want to limit focus just two notions.</p>\n\n<blockquote>\n  <p>What are <em>late</em> and <em>early</em> bisimulation and why would I use one of these notions instead of standard bisimulation?</p>\n</blockquote>\n', 'Tags': '<programming-languages><formal-methods><semantics><process-algebras>', 'LastEditorUserId': '41', 'LastActivityDate': '2012-03-27T03:01:00.267', 'CommentCount': '2', 'AcceptedAnswerId': '624', 'CreationDate': '2012-03-21T15:58:38.290', 'Id': '614'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'ViewCount': '315', 'Title': 'Confluence proof for a simple rewriting system', 'LastEditDate': '2012-04-06T04:32:54.413', 'AnswerCount': '2', 'Score': '9', 'PostTypeId': '1', 'OwnerUserId': '17', 'FavoriteCount': '2', 'Body': "<p>Assume we have a simple language that consists of the terms:</p>\n\n<ul>\n<li>$\\mathtt{true}$</li>\n<li>$\\mathtt{false}$</li>\n<li>if $t_1,t_2,t_3$ are terms then so is $\\mathtt{if}\\: t_1 \\:\\mathtt{then}\\: t_2 \\:\\mathtt{else}\\: t_3$</li>\n</ul>\n\n<p>Now assume the following logical evaluation rules:</p>\n\n<p>$$ \\begin{gather*}\r\n\\dfrac{}\r\n      {\\mathtt{if}\\: \\mathtt{true} \\:\\mathtt{then}\\: t_2 \\:\\mathtt{else}\\: t_3 \\to t_2}\r\n      \\text{[E-IfTrue]} \\quad\r\n\\dfrac{}\r\n      {\\mathtt{if}\\: \\mathtt{false} \\:\\mathtt{then}\\: t_2 \\:\\mathtt{else}\\: t_3 \\to t_3}\r\n      \\text{[E-IfFalse]} \\\\\r\n\\dfrac{t_1 \\to t_1&#39;}\r\n      {\\mathtt{if}\\: t_1 \\:\\mathtt{then}\\: t_2 \\:\\mathtt{else}\\: t_3 \\to \\mathtt{if}\\: t_1&#39; \\:\\mathtt{then}\\: t_2 \\:\\mathtt{else}\\: t_3}\r\n      \\text{[E-If]} \\\\\r\n\\end{gather*} $$</p>\n\n<p>Suppose we also add the following funky rule:</p>\n\n<p>$$\r\n\\dfrac{t_2 \\to t_2&#39;}\r\n      {\\mathtt{if}\\: t_1 \\:\\mathtt{then}\\: t_2 \\:\\mathtt{else}\\: t_3 \\to \\mathtt{if}\\: t_1 \\:\\mathtt{then}\\: t_2&#39; \\:\\mathtt{else}\\: t_3}\r\n      \\text{[E-IfFunny]}\r\n$$</p>\n\n<p>For this simple language with the given evaluation rules I wish to prove the following:</p>\n\n<p><strong>Theorem: If $r \\rightarrow s$ and $r \\rightarrow t$ then there is some term $u$ such that $s \\rightarrow u$ and $t \\rightarrow u$.</strong></p>\n\n<p>I am proving this by induction on the structure of $r$. Here is my proof so far, it all worked out well, but I am stuck at the very last case. It seems like induction on the structure of $r$ is not sufficing, can anyone help me out?</p>\n\n<p><em>Proof.</em> By induction on $r$, we will seperate all the forms that $r$ can take:</p>\n\n<ol>\n<li>$r$ is a constante, nothing to prove since a normal form does not evaluate to anything.</li>\n<li>$r=$ if true then $r_2$ else $r_3$. (a) both derivations were done with the E-IfTrue rule. In this case $s=t$, so there is nothing to prove. (b) one deriviation was done with the E-IfTrue rule, the other with the E-Funny rule. Assume $r \\rightarrow s$ was done with E-IfTrue, the other case is equivalently proven. We now know that $s = r_2$. We also know that $t =$ if true then $r&#39;_2$ else $r_3$ and that there exists some deriviation $r_2 \\rightarrow r&#39;_2$ (the premise). If we now choose $u = r&#39;_2$, we conclude the case.</li>\n<li>$r=$ if false then $r_2$ else $r_3$. Equivalently proven as above.</li>\n<li>$r=$ if $r_1$ then $r_2$ else $r_3$ with $r_1 \\neq $ true or false. (a) both deriviations were done with the E-If rule. We now know that $s =$ if $r&#39;_1$ then $r_2$ else $r_3$ and $t =$ if $r&#39;&#39;_1$ then $r_2$ else $r_3$. We also know that there exists deriviations $r_1 \\rightarrow r&#39;_1$ and $r_1 \\rightarrow r&#39;&#39;_1$ (the premises). We can now use the induction hypothese to say that there exists some term $r&#39;&#39;&#39;_1$ such that $r&#39;_1 \\rightarrow r&#39;&#39;&#39;_1$ and $r&#39;&#39;_1 \\rightarrow r&#39;&#39;&#39;_1$. We now conclude the case by saying $u =$ if $r&#39;&#39;&#39;_1$ then $r_2$ else $r_3$ and noticing that  $s \\rightarrow u$ and $t \\rightarrow u$ by the E-If rule. (b) one derivation was done by the E-If rule and one by the E-Funny rule.</li>\n</ol>\n\n<p>This latter case, where one derivation was done by E-If and one by E-Funny is the case I am missing... I can't seem to be able to use the hypotheses.</p>\n\n<p>Help will be much appreciated.</p>\n", 'Tags': '<logic><semantics><proof-techniques><term-rewriting>', 'LastEditorUserId': '41', 'LastActivityDate': '2012-04-06T04:32:54.413', 'CommentCount': '3', 'AcceptedAnswerId': '1061', 'CreationDate': '2012-04-05T18:36:04.420', 'Id': '1060'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>In the discussion around <a href="http://cs.stackexchange.com/q/1157/98">this question</a>, Gilles mentions correctly that any correctness proof of an algorithm that uses arrays has to prove that there are no out-of-bounds array accesses; depending on the runtime model, this would cause a runtime error or access to non-array elements.</p>\n\n<p>One common technique to perform such correctness proofs (at least in undergrad studies and probably in automated verification) is by using <a href="https://en.wikipedia.org/wiki/Hoare_logic">Hoare logic</a>. I am not aware that the standard set of rules containes anything relating to arrays; they seem to be restricted to monadic variables.</p>\n\n<p>I can imagine adding axioms of the form</p>\n\n<p>$\\qquad \\displaystyle \\frac{}{\\{0 \\leq i \\lt A.\\mathrm{length} \\land {P[A[i]/E]} \\}\\ A[i] := E;\\ \\{P\\}}$</p>\n\n<p>However, it is not clear to me how you would deal with an array access on the right hand side, i.e. if it is part of a complex expression $E$ in some statement $x := E$.</p>\n\n<blockquote>\n  <p>How can arrays accesses be modelled in Hoare logic so that the absence of invalid accesses can and has to be proven for program correctness?</p>\n</blockquote>\n\n<p>Answers may assume that we disallow array elements to be used in statements other than $A[i] := E$ or as part of some $E$ in $x := E$ as this does not restrict expressiveness; we can always assign a temporary variable the desired value, i.e. write $t := A[i];\\ \\mathtt{if} ( t &gt; 0 ) \\dots$ instead of $\\mathtt{if} ( A[i] &gt; 0 )\\dots$.</p>\n', 'ViewCount': '317', 'Title': 'How to deal with arrays during Hoare-style correctness proofs', 'LastEditorUserId': '41', 'LastActivityDate': '2012-04-10T16:17:41.297', 'LastEditDate': '2012-04-10T16:17:41.297', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '9', 'PostTypeId': '1', 'OwnerUserId': '98', 'Tags': '<proof-techniques><semantics><arrays><hoare-logic><software-verification>', 'CreationDate': '2012-04-10T08:00:09.683', 'FavoriteCount': '1', 'Id': '1200'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>I\'m really struggling with this property:</p>\n\n<blockquote>\n  <p>Let $X,Y$ be <a href="http://en.wikipedia.org/wiki/Coherent_space" rel="nofollow">coherence spaces</a> and $f: Cl(X) \\rightarrow Cl(Y)$ be a monotone function. $f$ is continuous if and only if $f(\\bigcup_{x\\in D} x)=\\bigcup_{x \\in D}f(x)$, for all $D \\subseteq Cl(X)$ such that $D$ is a directed set.</p>\n  \n  <p><strong>Directed set</strong> is defined thus: $D \\subseteq $ POSET$ $ is a directed set iff $ \\forall x, x\' \\in D$ $  \\exists z \\in D $ such $ x \\subseteq z$ and $x&#39; \\subseteq z$.<br>\n  $Cl(X) $stands for cliques of X: $\\{x \\subseteq |X| \\mid a,b \\in x \\Rightarrow a$ coherent $b \\}$.</p>\n</blockquote>\n\n<p>Many books give that as a definition of <strong><a href="http://en.wikipedia.org/wiki/Scott_continuity" rel="nofollow">Scott-continuous</a> functions</strong>, but unluckly not my teacher. He gave us this definition of continuous:</p>\n\n<blockquote>\n  <p>$f : Cl(X) \\rightarrow Cl(Y)$ is continuous iff it is monotone and $\\forall x \\in Cl(X), \\forall b \\in f(x), \\exists x_0 \\subseteq_{fin} x, b \\in f(x_0)$,<br>\n  where <strong>monotone</strong> is defined as:\n  $f$ is monotone iff $a \\subseteq b \\Rightarrow f(a) \\subseteq f(b)$</p>\n</blockquote>\n\n<p>This is the proposed proof I have, but I can\'t understand the last equation.</p>\n\n<p><strong>Proof of $f$ continuous implies $f(\\bigcup D)=\\bigcup f(D)$</strong>:<br>\nLet $b \\in f(\\bigcup D)$. By the definition of continuity, $\\exists x_0 \\subset_{fin} x \\mid b \\in f(x_0)$. Note that $x_0$ is the union of  $\\{ x_i \\mid x_i \\in D\\}$.<br>\nIf $D$ is direct then: $\\exists z \\in D \\mid x_i \\subseteq z$ then $x_0 \\subseteq z$. By the definition of monotony, $f(x_0)\\subseteq f(z)$ so $b \\in f(z)$ <strong><em>(???)</em></strong> $\\subseteq \\bigcup f(D)$. And  even that is true we should show that $\\bigcup f(D) = f(\\bigcup D)$, not just $\\subseteq$.</p>\n\n<p>The proof of the other implication is even worse so I can\'t write it here... Can you explain to me how the proof can work?</p>\n', 'ViewCount': '360', 'Title': 'Scott-continuous functions: an alternative definition', 'LastEditorUserId': '98', 'LastActivityDate': '2013-08-26T07:15:30.433', 'LastEditDate': '2013-08-26T07:15:30.433', 'AnswerCount': '2', 'CommentCount': '14', 'Score': '13', 'PostTypeId': '1', 'OwnerUserId': '1154', 'Tags': '<terminology><programming-languages><semantics>', 'CreationDate': '2012-04-19T22:29:19.940', 'FavoriteCount': '2', 'Id': '1371'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'ViewCount': '314', 'Title': 'Can a program language be malleable enough to allow programs to extend language semantics', 'LastEditDate': '2012-04-29T17:58:24.437', 'AnswerCount': '4', 'Score': '11', 'OwnerDisplayName': 'kunkunur', 'PostTypeId': '1', 'OwnerUserId': '1301', 'FavoriteCount': '2', 'Body': '<p>With reference to features in languages like ruby (and javascript), which allow a programmer to extend/override classes any time after defining it (including classes like String), is it theoretically feasible to design a language which can allow programs to later on extend its semantics.</p>\n\n<p>ex: Ruby does not allow multiple inheritance, yet can I extend/override the default language behaviour to allow an implementation of multiple inheritance. </p>\n\n<p>Are there any other languages which allow this? Is this actually a subject of concern for language designers? Looking at the choice of using ruby for building rails framework for web application development, such languages may be very powerful to allow designing frameworks(or DSLs) for wide variety of applications.</p>\n', 'Tags': '<programming-languages><semantics>', 'LastEditorUserId': '1298', 'LastActivityDate': '2012-05-09T09:17:20.730', 'CommentCount': '4', 'AcceptedAnswerId': '1561', 'CreationDate': '2012-04-28T20:45:30.713', 'Id': '1560'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>I\'m working through Simon Peyton Jones\' "The Implementation of Functional Programming Languages" and on page 20 I see:</p>\n\n<pre>\nIF TRUE ((&#955;p.p) 3) &#8596; IF TRUE 3         (per &#946; red)   (1)\n                   &#8596; (&#955;x.IF TRUE 3 x)  (per &#951; red)   (2)\n                   &#8596; (&#955;x.3)                          (3)\n</pre>\n\n<p>Step 1 to 2 is explained as &#951;-conversion. But from 2 to 3 it says "The final step is the reduction rule for IF." I\'m not sure what this reduction rule is. </p>\n', 'ViewCount': '213', 'Title': 'Reduction rule for IF?', 'LastEditorUserId': '41', 'LastActivityDate': '2012-05-10T03:26:39.087', 'LastEditDate': '2012-05-10T03:26:39.087', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '7', 'OwnerDisplayName': 'galaxybeing', 'PostTypeId': '1', 'OwnerUserId': '1335', 'Tags': '<logic><programming-languages><lambda-calculus><term-rewriting><operational-semantics>', 'CreationDate': '2012-05-01T03:47:18.940', 'Id': '1607'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>I am trying to understand Hoare logic presented at Wikipedia,\n<a href="http://en.wikipedia.org/wiki/Hoare_logic" rel="nofollow">Hoare logic at Wikipedia</a>\nApparently, if I  understand correctly, a Hoare triple $$\\{P\\}~ C ~\\{Q\\}$$ means</p>\n\n<blockquote>\n  <p>if P just before C, then Q holds immediately after C, as long as C terminates. (A)</p>\n</blockquote>\n\n<p>However, the assignment axiom schema seems to be interpreted in a different way:</p>\n\n<p>$$\\frac{}{\\{P[x/E]\\} ~~x:=E~~   \\{P\\}}$$</p>\n\n<p>The wikipedia says:</p>\n\n<p>The assignment axiom means that the truth of $\\{P[x/E]\\}$ is equivalent to the after-assignment truth of $\\{P\\}$. Thus were $\\{P[x/E]\\}$ true prior to the assignment, by the assignment axiom, then $\\{P\\}$ would be true subsequent to which. Conversely, were $\\{P[x/E]\\}$ false prior to the assignment statement, $\\{P\\}$ must then be false consequently.</p>\n\n<p>I think the Hoare triple only affirms that if P[x/E] before x:=E, then P(x) holds after x:=E. It DOES NOT affirm, by its definition, that if P(x) holds after x:=E, then P[x/E] holds before x:=E. </p>\n\n<p>My naive question is, how can $\\{P[x/E]\\}$ before the assignment can be equivalent to $\\{P\\}$ after the assignment? Does this contradict with point (A) at the beginning of my post?</p>\n', 'ViewCount': '245', 'Title': 'Hoare triple for assignment P{x/E} x:=E {P}', 'LastEditorUserId': '41', 'LastActivityDate': '2012-05-16T21:09:01.143', 'LastEditDate': '2012-05-16T21:09:01.143', 'AnswerCount': '3', 'CommentCount': '0', 'AcceptedAnswerId': '1867', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '694', 'Tags': '<logic><programming-languages><semantics><hoare-logic><program-verification>', 'CreationDate': '2012-05-16T09:09:24.887', 'Id': '1864'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>In terms of references and their implementation on the heap and the stack, how is\nequality testing for arrays different from that for integers? </p>\n\n<p>This is to do with Java programming, if you have a stack and a heap, would equality testing for example <code>j == i</code> be the same for arrays and for integers? I understand that arrays, are stored in the heap and the stack, as it holds bulks of data, but integers are only stored in the stack and referenced in the heap.</p>\n\n<p><img src="http://i.stack.imgur.com/xtIHW.png" alt="this is a picture on how integer variables are stored on the heap and referenced on the heap"></p>\n\n<p>I understand for equality testing <code>j==i</code> (variables) the stack pointer will point to the same location.</p>\n\n<p>I\'m confused on how <code>j==i</code> would be different for array and integers.</p>\n\n<p>Could someone explain? </p>\n', 'ViewCount': '214', 'Title': 'Equality testing of arrays and integers in a procedural language', 'LastEditorUserId': '39', 'LastActivityDate': '2012-07-26T10:32:40.923', 'LastEditDate': '2012-05-19T18:11:42.023', 'AnswerCount': '2', 'CommentCount': '5', 'AcceptedAnswerId': '1935', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '1376', 'Tags': '<programming-languages><arrays><semantics><equality><memory-management>', 'CreationDate': '2012-05-19T06:38:55.350', 'Id': '1919'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>I\'m looking for a simple calculus that supports reasoning about <a href="http://en.wikipedia.org/wiki/Reflection_%28computer_programming%29">reflection</a>, namely, the introspection and manipulation of running programs.</p>\n\n<blockquote>\n  <p>Is there an untyped $\\lambda$-calculus extension that enables one to convert $\\lambda$-terms into a form that can be syntactically manipulated and then subsequently evaluated?</p>\n</blockquote>\n\n<p>I imagine that the calculus has two main additional terms:</p>\n\n<ul>\n<li>$\\mathtt{reflect}\\ v$: takes $v$ and produces a representation of $v$ amendable to\nsyntactic manipulation.</li>\n<li>$\\mathtt{eval}\\ v$: takes a syntactic representation of a term and evaluates it.</li>\n</ul>\n\n<p>In order to support reflection, a syntactic representation of terms is required. It would look something like:</p>\n\n<ul>\n<li>$\\lambda x.e$ would be represented as a term $(\\mathsf{LAM}\\ R(e))$, where\n$R(e)$ is the reflected version of $e$,</li>\n<li>$e\\ e\'$ would be represented as term $(\\mathsf{APP}\\ R(e)\\ R(e\'))$, and</li>\n<li>$x$ would be represented as $(\\mathsf{VAR}\\ x)$.</li>\n</ul>\n\n<p>With this representation, pattern matching could be used to manipulate terms.</p>\n\n<p>But we run into a problem. $\\mathtt{reflect}$ and $\\mathtt{eval}$ need to be encoded as terms, as does pattern matching. Dealing with this seems to be straightforward,\nadding $\\mathsf{REFLECT}$, $\\mathsf{EVAL}$ and $\\mathsf{MATCH}$, but will I need to add other terms to support the manipulation of these?</p>\n\n<p>There are design choices that need to be made. What should the $R(-)$ function alluded to above do with \nthe body of $\\mathtt{reflect}$ and $\\mathtt{eval}$? Should $R(-)$ transform the body or\nnot?</p>\n\n<p>As I am not so much interested in studying reflection itself -- the calculus would serve as a vehicle for other research -- I do not want to reinvent the wheel.</p>\n\n<blockquote>\n  <p>Are there any existing calculi that match what I have just described?</p>\n</blockquote>\n\n<p>As far as I can tell, calculi such as MetaML, suggested in a comment, go a long way, but they do not include the ability to pattern match and deconstruct code fragments that have already been built.</p>\n\n<p>One thing I would like to be able to do is the following:</p>\n\n<ul>\n<li>$\\mathtt{let}\\ x=\\lambda y.y\\ \\mathtt{in}\\ \\mathtt{reflect}\\ x \n\\to (\\mathsf{LAM}\\ (\\mathsf{VAR}\\ y)\\ (\\mathsf{VAR}\\ y))$</li>\n</ul>\n\n<p>And then perform pattern matching on the result to build a completely different\nexpression. </p>\n\n<p>This is certainly not a conservative extension to the $\\lambda$-calculus and the meta-theory is likely to be ugly, but this is kind of the point for my application. I want to break $\\lambda$-abstractions apart.</p>\n', 'ViewCount': '284', 'Title': '$\\lambda$-calculus with reflection', 'LastEditorUserId': '41', 'LastActivityDate': '2012-07-27T06:09:52.923', 'LastEditDate': '2012-07-16T23:37:11.120', 'AnswerCount': '2', 'CommentCount': '8', 'Score': '11', 'PostTypeId': '1', 'OwnerUserId': '31', 'Tags': '<logic><lambda-calculus><semantics><reflection>', 'CreationDate': '2012-07-12T11:26:19.763', 'FavoriteCount': '2', 'Id': '2707'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>I\'m defining an intermediate language for a multi-backend code generator that I\'m writing.  I want to document the operational semantics for this intermediate language in a way that is readable both from within the source code and generated documentation (ocamldoc).  The notation introduced used in "Types and Programming" languages is great for a book, but I don\'t want to try to do the prerequisite over conclusion style notation via ASCII art.</p>\n\n<p>Is there a widely recognized notation for operational semantics that doesn\'t require non-ASCII characters?  I looked through various RFCs but can\'t find any that use a non-natural language way of specifying semantics.</p>\n', 'ViewCount': '89', 'Title': 'Notation for operational semantics that can be used in code comments', 'LastEditorUserId': '41', 'LastActivityDate': '2012-07-24T08:06:36.720', 'LastEditDate': '2012-07-24T06:07:21.987', 'AnswerCount': '1', 'CommentCount': '6', 'AcceptedAnswerId': '2894', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '1298', 'Tags': '<programming-languages><semantics><operational-semantics>', 'CreationDate': '2012-07-23T21:37:12.833', 'Id': '2886'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': u'<p>I am looking for references and papers on the following topic.</p>\n\n<ol>\n<li><p>In <em>general</em>, some programming languages allow dynamic changes to classes. As an example, a new instance variable \u2018weight\u2019 can be added to the class <code>Edge</code> (the class of unweighted edges of graphs). But what should happen with existing edge objects?</p>\n\n<p>They can be upgraded to include the new instance variable with a default value, perhaps weight <code>0</code>, in the edge example. Or existing objects stay the same.</p></li>\n<li><p>In <em>context-oriented</em> programming, similar situations can arise, when a context is dynamically activated at run-time. This may affect changes to methods which are currently executed (although I am concerned at the single thread execution at the moment).</p></li>\n<li><p>Considering <em>design patterns</em>, when a proxy object wraps another object, references to the old object may expect certain invariants that the proxy object doesn\u2019t adhere to. This may also lead to inconsistencies when an object is wrapped/\u2019updated\u2019 with a proxy object.</p></li>\n</ol>\n\n<p>Are there any references that list possible ways to treat the problem in case of dynamic changes/activation? Like the options to keep the state consistent?</p>\n\n<p>I looked primarily in the communities of dynamic software evolution, context-oriented programming and software components. Are there other important communities I can search to find references?</p>\n', 'ViewCount': '35', 'Title': 'Dynamic changes to classes or context activation -- how to treat existing objects in a consistent way?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-08-14T01:18:12.753', 'LastEditDate': '2012-08-13T23:35:19.433', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '3165', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '1829', 'Tags': '<reference-request><programming-languages><semantics><object-oriented>', 'CreationDate': '2012-08-13T22:06:34.507', 'Id': '3156'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'ViewCount': '203', 'Title': 'Formally describing a new domain specific programming language', 'LastEditDate': '2012-08-24T20:38:02.907', 'AnswerCount': '1', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '2409', 'FavoriteCount': '5', 'Body': "<p>I am about to implement a domain specific language for representation of social learning conventions. Part of the implementation is a formal description of a language - its 'calculus', symbols and logical expressions.</p>\n\n<p>My approach would be to describe the language by describing its grammar but there are also concepts such as relations, dialogs, expectations that require more theoretic approach and the description of the logic. </p>\n\n<p>I would like to ask for an example and a literature recommendation (papers, books) that would help me with this description. I feel relatively competent approaching this task so I am not asking for a total hand holding, but help from a theoretician in this area would be GREATLY appreciated. </p>\n", 'Tags': '<formal-languages><programming-languages><semantics>', 'LastEditorUserId': '31', 'LastActivityDate': '2012-08-25T08:20:35.950', 'CommentCount': '2', 'AcceptedAnswerId': '3320', 'CreationDate': '2012-08-24T14:56:26.330', 'Id': '3313'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': "<p>I want to define a semantics of a DSL through transition semantics. For my DSL I defined the syntax and implemented a code generator. Although I can provide a demo by giving examples, I want to write the semantics of my DSL to provide a formal specification of it. </p>\n\n<p>However I don't know how to do it!. Can someone provide me with an example?</p>\n", 'ViewCount': '207', 'Title': 'Looking for a simple example of Transition Semantics', 'LastEditorUserId': '98', 'LastActivityDate': '2012-09-21T13:13:12.907', 'LastEditDate': '2012-09-21T13:13:12.907', 'AnswerCount': '1', 'CommentCount': '5', 'Score': '4', 'OwnerDisplayName': 'asghar ashgari', 'PostTypeId': '1', 'OwnerUserId': '2904', 'Tags': '<formal-languages><semantics>', 'CreationDate': '2012-09-20T09:58:10.913', 'Id': '4627'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': "<h2>Context</h2>\n\n<p>I've been programming in java for a few years now. And atm i'm learning something totally different: Clojure.\nThere the expression problem can be solved by using multimethods whereas in java you will need something like the visitor pattern or something alike.</p>\n\n<h2>The question</h2>\n\n<p>I've been reading about multimethods and got quite confused with the actual difference with method overloading.</p>\n\n<p>The only difference I spotted so far that a multimethod doesn't depend on the runtime type of the object on which the method is called.</p>\n", 'ViewCount': '252', 'Title': 'Difference between multimethods and overloading', 'LastEditorUserId': '39', 'LastActivityDate': '2012-09-22T08:57:09.780', 'LastEditDate': '2012-09-21T22:02:19.697', 'AnswerCount': '2', 'CommentCount': '1', 'AcceptedAnswerId': '4661', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '1700', 'Tags': '<programming-languages><semantics><functional-programming><object-oriented>', 'CreationDate': '2012-09-21T19:49:37.353', 'Id': '4660'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': "<p>I am designing a small DSL and I know that implementing dynamic scoping (with a simple global stack) is easier then using full lexical scoping (each function needs its own scope/closure). What kind of features can be added that do not care how scope is implemented and what features would require a particular kind of scope implementation?</p>\n\n<p>For example, if I have a very simple language that does not allow nested functions or function arguments I feel that both implementation choices are likely equivalent. On the other end of the spectrum, if I wanted to support returning inner functions then I'm pretty sure we would need to allow functions to save their own closures. However, I am not really sure what would happen in the middle if say, I alowed nested functions while not allowing them to be returned or if I allowed functions to be passed as arguments to other functions.</p>\n", 'ViewCount': '83', 'Title': 'When are Dynamic and Lexical Scoping equivalent?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-09-23T16:16:33.293', 'LastEditDate': '2012-09-23T16:16:33.293', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '4690', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '137', 'Tags': '<programming-languages><semantics>', 'CreationDate': '2012-09-22T19:05:10.233', 'Id': '4670'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'ViewCount': '519', 'Title': 'what is semantics?', 'LastEditDate': '2012-11-12T17:00:04.110', 'AnswerCount': '1', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '2879', 'FavoriteCount': '2', 'Body': '<p>There are many popular languages. But, computer scientists tell us that in order to understand the behaviour of programs in those languages definitely and unambiguously argue upon program behavior (e.g. prove their identity), we need to translate them into another, well understood language. They call such language "a semantics". Authors propose one of many semantics. They explain the meaning of their constructions and how you can translate your language into their. Once you do that, everybody will understand your program certainly, they say. </p>\n\n<p>Looks good, yet, I do not understand something. Do they tell us that they introduce another language to understand the first one? Why do we understand it better than the original one? Why this semantics is better than that? Why not to learn semantics of C right away instead of inventing another language, for describing semantics of C? The same applies to the syntax. Why don\'t I ask the same question regarding the syntax?</p>\n\n<p><strong>PS</strong> In the comments I hear that semantics does not mean another language or translation into it. But Formal Semantics for VHDL says that if you understand something in only one way then you do not understand it and "meaning of meaning" can be specified if we supply a language with a mechanism that translates it into another (known) language. That is, "semantics is a Relation between formal systems". Hennessy, in <a href="https://www.scss.tcd.ie/Matthew.Hennessy/slexternal/resources/sembookWiley.pdf" rel="nofollow">Semantics of Programming Languages</a>, says that semantics allows for formal processing of the program "meaning", when semantics is supplied as BNF or Syntax Diagram. What is a formal system if not a language? </p>\n\n<p><strong>PS2</strong> Can I say that HW synthesis of given HDL program into interconnection of gates, is a process of semantics extraction? We translate (high-level) description into the (low-level) language that we understand, afterwards.</p>\n', 'Tags': '<formal-languages><semantics>', 'LastEditorUserId': '2879', 'LastActivityDate': '2012-11-12T17:00:04.110', 'CommentCount': '8', 'AcceptedAnswerId': '6518', 'CreationDate': '2012-11-06T16:41:54.460', 'Id': '6517'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': "<p>From my Googling, it appears that call by value-result is similar to call by reference in that it changes values in the caller, but it's different in that the changes don't take place until the callee exits, and that if the same variable is passed as more than one argument, it'll be treated as separate values in the callee instead of the same value as in call by reference.</p>\n\n<p>Neither fact helps me explain why call by value-result produces different output than call by reference in the following code:</p>\n\n<pre><code>program Param (input, output); \nvar\n  a, b: integer;\n  procedure p (x, y : integer); \n  begin\n    x := x + 2 ; \n    a := x * y ; (1)\n    x := x + 1   (2)\n  end; \nbegin\n  a := 1 ;\n  b := 2 ;\n  p (a, b) ; \n  writeln (a)\nend.\n</code></pre>\n\n<p>Edit: here's my understanding of things:\nThe insight here is that in CBR, in line (1), both <code>a</code> and <code>x</code> point to the same thing, so assigning to <code>a</code> updates both <code>a</code> and <code>x</code> to <code>x * y</code> which is 6. But in CBVR, <code>a</code> and <code>x</code> point to different things, so line 1 only updates <code>a</code> to 6. <code>x</code> remains 3. Then CBR updates <code>a</code> right away so <code>a</code> ends up being 7 outside <code>p</code>. But CBVR updates <code>a</code> to whatever <code>x</code> is at the end of <code>p</code>, which is 4, so even though <code>a</code> was 6 in line (1), after <code>p</code> exits it's changed to 4.</p>\n", 'ViewCount': '1730', 'Title': 'Call by value-result vs. call by reference?', 'LastEditorUserId': '4198', 'LastActivityDate': '2012-11-10T18:14:34.560', 'LastEditDate': '2012-11-10T18:14:34.560', 'AnswerCount': '3', 'CommentCount': '3', 'AcceptedAnswerId': '6559', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '4198', 'Tags': '<terminology><programming-languages><semantics>', 'CreationDate': '2012-11-08T03:45:38.873', 'Id': '6549'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>Is there any algorithm that tells us how to modify semantic actions associated with a left-recursive grammar? For example, we have the following grammar, and its associated semantic actions:</p>\n\n<p>$ S \\rightarrow id = expr $  { S.s = expr.size }</p>\n\n<p>S $\\rightarrow$ if expr then $S_1$ else $S_2$ { $S_1.t = S.t + 2; $\n$S_2.t = S.t + 2;$ $S.s = expr.size + S_1.size + S_2.size + 2;$ }</p>\n\n<p>S $\\rightarrow$ while expr do $S_1$ { $S_1.t = S.t + 4;$ $S.s = expr.size + S_1.s + 1;$ }</p>\n\n<p>S $\\rightarrow$ $S_1$ ; $S_2$  {$S_1.t = S_2.t = S.t;$ $S.s = S_1.s + S_2.s; $ }</p>\n\n<p>Clearly the non-recursive version of the grammer is:</p>\n\n<p>S $\\rightarrow$ id = expr T </p>\n\n<p>S $\\rightarrow$ if expr then $S_1$ else $S_2$ T</p>\n\n<p>S $\\rightarrow$ while expr do $S_1$ T</p>\n\n<p>T $\\rightarrow$ ; $S_2$ T</p>\n\n<p>T $\\rightarrow$ $\\epsilon$</p>\n\n<p>But we also need to change the semantic actions accordingly. Any ideas how this can be done?</p>\n', 'ViewCount': '78', 'Title': 'How to modify semantic actions when removing left-recursion from a grammer', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-23T17:17:48.393', 'LastEditDate': '2014-01-23T17:17:48.393', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '7739', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '2596', 'Tags': '<formal-grammars><compilers><semantics><left-recursion>', 'CreationDate': '2012-11-10T16:11:44.337', 'Id': '6604'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>I have a question about inheritance in Java-like OO programming languages. It came up\nin my compiler class, when I explained how to compile methods and their invocation. I was using Java as example source language to compile. </p>\n\n<p>Now consider this Java program.</p>\n\n<pre><code>class A {\n  public int x = 0;\n  void f () { System.out.println ( "A:f" ); } }\n\nclass B extends A {\n  public int x = 1;\n  void f () { System.out.println ( "B:f" ); } }\n\npublic class Main {\n  public static void main ( String [] args ) {\n    A a = new A ();\n    B b = new B ();\n    A ab = new B ();\n\n    a.f();\n    b.f();\n    ab.f();\n    System.out.println ( a.x );\n    System.out.println ( b.x );\n    System.out.println ( ab.x ); } }\n</code></pre>\n\n<p>When you run it, you get the following result.</p>\n\n<pre><code>A:f\nB:f\nB:f\n0\n1 \n0\n</code></pre>\n\n<p>The interesting cases are those that happen with the object <code>ab</code> of\nstatic type <code>A</code>, which is <code>B</code> dynamically. As <code>ab.f()</code> prints out</p>\n\n<pre><code>B:f\n</code></pre>\n\n<p>it follows that method invocations are not affected by the compile-time type of the object the method is invoked with.  But\n<code>System.out.println ( ab.x )</code> prints out <code>0</code>, so member access is affected by compile-time types. </p>\n\n<p>A student asked about this difference: should not the access of members and methods be\nconsistent with each other?\nI could not come up with a better answer than "that\'s the semantics of Java".</p>\n\n<p>Would you know a crisp <em>conceptual</em> reason why members and methods are\ndifferent in this sense? Something I could give my students?</p>\n\n<p><strong>Edit</strong>: Upon further investigation, this seems to be a Java idiosyncrasy: C++ and C# act differently, see e.g. Saeed Amiri\'s comment below.</p>\n\n<p><strong>Edit 2</strong>: I just tried out the corresponding Scala program:</p>\n\n<pre><code>class A {\n  val x = 0;\n  def f () : Unit = { System.out.println ( "A:f" ); } }\n\nclass B extends A {\n  override val x = 1;\n  override def f () : Unit = { System.out.println ( "B:f" ); } }\n\nobject Main {\n  def main ( args : Array [ String ] ) = {\n    var a : A = new A ();\n    var b : B = new B ();\n    var ab : A = new B ();\n    a.f();\n    b.f();\n    ab.f();\n    System.out.println ( "a.x = " + a.x );\n    System.out.println ( "b.x = " + b.x );\n    System.out.println ( "ab.x = " + ab.x ); } }\n</code></pre>\n\n<p>And to my surprise this results in</p>\n\n<pre><code>A:f\nB:f\nB:f\na.x = 0\nb.x = 1\nab.x = 1\n</code></pre>\n\n<p>Note that the <code>overrise</code> modifiers are necessary. This surprises me because Scala compiles to the JVM, and moreover, when I compile and execute the Java program at the top using the Scala compiler/runtime, it behaves like the Java program. </p>\n', 'ViewCount': '270', 'Title': 'Inheritance, and dynamic access to members/attributes and methods in Java-like languages', 'LastEditorUserId': '39', 'LastActivityDate': '2014-03-24T13:58:31.023', 'LastEditDate': '2014-03-24T13:58:31.023', 'AnswerCount': '3', 'CommentCount': '5', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '2887', 'Tags': '<programming-languages><semantics><typing><object-oriented><java>', 'CreationDate': '2012-11-20T13:08:40.163', 'FavoriteCount': '1', 'Id': '6782'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'ViewCount': '355', 'Title': 'What is a linearization point?', 'LastEditDate': '2012-12-03T20:59:49.560', 'AnswerCount': '1', 'Score': '3', 'OwnerDisplayName': 'nfaughnan', 'PostTypeId': '1', 'OwnerUserId': '4866', 'Body': '<p>With respect concurrent programming, what is a linearization point? </p>\n\n<p>They seem to occur at a compare-and-swap instruction apparently. The best definition I could find is <a href="http://en.wikipedia.org/wiki/Atomicity_%28programming%29#Linearization_points" rel="nofollow">here</a>. </p>\n\n<blockquote>\n  <p>All function calls have a linearization point at some instant between their invocation and their response.</p>\n</blockquote>\n\n<p>Okay that\'s fine, they occur somewhere within a function call, but what are they?</p>\n\n<blockquote>\n  <p>All functions appear to occur instantly at their linearization point, behaving as specified by the sequential definition.</p>\n</blockquote>\n\n<p>Occur instantly at their LP\'s??? I don\'t understand this.</p>\n\n<p>I also read through <a href="http://www.eecs.qmul.ac.uk/~ohearn/Workshops/Concurrency09/slides/vafeiadis.pdf" rel="nofollow">this</a> which attempts to prove LP\'s. I am having trouble finding any solid definitions. Could anyone help?</p>\n', 'Tags': '<semantics><concurrency><synchronization>', 'LastEditorUserId': '39', 'LastActivityDate': '2012-12-03T20:59:49.560', 'CommentCount': '0', 'AcceptedAnswerId': '7133', 'CreationDate': '2012-12-03T19:04:17.580', 'Id': '7132'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'ViewCount': '101', 'Title': 'Present syntax rules in a more succinct way', 'LastEditDate': '2013-01-03T13:47:19.787', 'AnswerCount': '2', 'Score': '2', 'OwnerDisplayName': 'SoftTimur', 'PostTypeId': '1', 'OwnerUserId': '5008', 'Body': '<p>I am resuming syntax rules for a small language:</p>\n\n<p>\\begin{eqnarray*}\ne_C &amp;::=&amp; \\epsilon \\mid constant \\\\\n\\textit{prefix-op} &amp;::=&amp; - \\\\\n\\textit{infix-op} &amp;::=&amp; + \\mid - \\mid * \\\\\ne_E &amp;::=&amp; e_C \\mid \\textit{prefix-op} \\; e_E \\mid e_E \\; \\textit{infix-op} \\; e_E \\mid \\textit{function}_E (e_{E,0}, e_{E,1},\\ldots) \\mid \\textit{specialE} \\\\\ne_V &amp;::=&amp; e_C \\mid \\textit{prefix-op} \\; e_V \\mid e_V \\; \\textit{infix-op} \\; e_V \\mid \\textit{function}_V (e_{V,0}, e_{V,1}, \\ldots) \\mid \\textit{specialV}\n\\end{eqnarray*}</p>\n\n<p>The expressions $e_E$ and $e_V$ have something common: $e_C$. Some of their operators look same: $\\textit{prefix-op}$ and  $\\textit{infix-op}$. Their functions $\\textit{function}_E$ and $\\textit{function}_V$ are 2 different sets, and $\\textit{specialE}$ and $\\textit{specialV}$ are totally different.</p>\n\n<p>I am wondering if it is still possible to present this syntax more succinct, more compact in a conventional way... Could anyone help?</p>\n', 'Tags': '<formal-languages><formal-grammars><semantics>', 'LastEditorUserId': '5008', 'LastActivityDate': '2013-01-03T13:47:19.787', 'CommentCount': '0', 'AcceptedAnswerId': '7303', 'CreationDate': '2012-12-10T09:33:16.420', 'Id': '7300'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>If the definition of Initial Algebra is:</p>\n\n<p>"An object is initial if there exists a unique morphism from the object to every\nobject in the category"</p>\n\n<p>Why do we need such object, and could any one give an example ?</p>\n', 'ViewCount': '151', 'Title': 'Initial Algebra example', 'LastEditorUserId': '31', 'LastActivityDate': '2013-01-18T10:08:50.310', 'LastEditDate': '2013-01-17T15:48:08.647', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '1584', 'Tags': '<semantics><formal-methods>', 'CreationDate': '2013-01-17T11:56:10.557', 'FavoriteCount': '1', 'Id': '8985'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>Suppose we have an algebraic specification in the form: $\\{S,F,w\\}$ where $S$ are the sorts, $F$ are the functions and $w$ are the set of equations.\nFor example, the specification for natural numbers:</p>\n\n<ul>\n<li>$S = \\{\\mathrm{int}\\}$</li>\n<li>$F = \\{\n         0: \\mathrm{int}, \\;\n         \\mathrm{succ} : \\mathrm{int}\\rightarrow\\mathrm{int}, \\;\n         \\mathrm{pred}: \\mathrm{int}\\rightarrow\\mathrm{int}\n       \\}$</li>\n<li>$w = \\{\n         \\mathrm{succ}(\\mathrm{pred}(x)) = x, \\;\n         \\mathrm{pred}(\\mathrm{succ}(x)) = x\n       \\}$</li>\n</ul>\n\n<p>My question is, why and where do we need homomorphisms and isomorphisms in this case? How do homomorphisms and isomorphisms look like between algebras ?</p>\n', 'ViewCount': '84', 'Title': 'Homomorphisms and isomorphisms in an equational calculus', 'LastEditorUserId': '39', 'LastActivityDate': '2013-01-21T20:51:55.753', 'LastEditDate': '2013-01-21T20:51:55.753', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '1584', 'Tags': '<semantics><denotational-semantics>', 'CreationDate': '2013-01-17T22:21:50.770', 'Id': '9005'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': "<p>An assignment questions asks the following:</p>\n\n<blockquote>\n  <p>Consider an array 'var a : array[1..10] of real'.  Express the\n  semantics of this array as a function, defining the domain and\n  codomain (you might also be able to write the rule).  In this\n  programming language, the subrange '1..10' is viewed as a genuine\n  type, so we can comfortably say that 'a[13]' is a type error.</p>\n</blockquote>\n\n<p>I've come up with a semantic that works as a function, that is: f(a[$x$]) -> $y$ where $x$ is a type defined by the numbers $1$ to $10$ and $y$ is the set of all Real numbers. Does this seems correct?</p>\n\n<p>Would there be any difference if I wrote the function in the opposite way, that is: f($y$) -> a[$x$] ?</p>\n", 'ViewCount': '107', 'Title': 'Expressing semantics of an array as a function', 'LastActivityDate': '2013-02-05T18:13:49.583', 'AnswerCount': '3', 'CommentCount': '2', 'AcceptedAnswerId': '9485', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '4348', 'Tags': '<arrays><semantics><functional-programming>', 'CreationDate': '2013-01-27T18:37:43.773', 'Id': '9212'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>I have a language for sensor networks (generates C code) and I want to define the formal semantics of it.</p>\n\n<p>The language has this form:</p>\n\n<pre><code>{STATE name_state:\nEVERY time\nSELECT {variable [, variable] ...}\n[SENDIF send_condition]\n[CHANGEIF change_condition GOTO new_state];\n} ...\n\nSTART IN initial_state;\n</code></pre>\n\n<ul>\n<li>The initial state of the program is specified by the START IN instruction.</li>\n<li>Each state is defined by the STATE instruction.</li>\n<li>In the specification of each state the clauses EVERY and SELECT are compulsory and the clauses SENDIF and CHANGEIF are optional.</li>\n<li>The CHANGEIF clause is only not specified when there is a single state.</li>\n</ul>\n\n<p>What type of formal semantics is more convenient to use?</p>\n', 'ViewCount': '96', 'Title': 'Formally describing a sensor network language', 'LastActivityDate': '2013-02-20T19:27:47.843', 'AnswerCount': '2', 'CommentCount': '7', 'AcceptedAnswerId': '9981', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '6624', 'Tags': '<formal-languages><programming-languages><semantics>', 'CreationDate': '2013-02-18T19:20:41.680', 'Id': '9902'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>I currently have a system that has <code>{f(a) = b, f(f(x)) = x}</code> (part of an <a href="http://folk.uio.no/peterol/INF3230V13/Oppgaver/midterm06.pdf" rel="nofollow">exam question</a> - look at page 5 - exercise 1).</p>\n\n<p>To start off with proving non-confluency, I am thinking along these lines:</p>\n\n<pre><code>f(f(x)) and f(a) can be unified by using {a -&gt; f(x)}. \n</code></pre>\n\n<p>Then we can rewrite:</p>\n\n<pre><code>f(f(x)) = x                 [eq.1]\nf(f(x)) = b                 [eq.2]\n</code></pre>\n\n<p>The above two cannot be reduced any further, and do not have any common ancestor or successor. Therefore the system is not confluent.</p>\n\n<p>To make this confluent, we can add a third equation to the system:</p>\n\n<pre><code>x = b\n</code></pre>\n\n<p>This way, the equation will both be confluent and terminate. Another alternative would be:</p>\n\n<pre><code>f(x) = b\n</code></pre>\n\n<p>Is there anything I have missed? Or is this pretty much the gist of it?</p>\n', 'ViewCount': '73', 'Title': 'Proving non-confluency and adding an equation to make it confluent and terminating', 'LastActivityDate': '2013-07-15T16:03:03.313', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '10108', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '6867', 'Tags': '<logic><proof-techniques><semantics><term-rewriting>', 'CreationDate': '2013-02-25T21:26:12.353', 'Id': '10096'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>This question arises from my reading of <a href="http://www.cis.upenn.edu/~bcpierce/tapl/" rel="nofollow">"Types and Programming Languages"</a> (<a href="http://www.worldcat.org/oclc/47705787" rel="nofollow">WoldCat</a>) by Benjamin C. Pierce.</p>\n\n<p>For the small step operational semantic evaluation rules for the arithmetic expressions (NB) in Figure 3-2 on page 41, there is the rule </p>\n\n<blockquote>\n  <p>$pred\\;(succ\\;nv_1)\\rightarrow\\;nv_1$</p>\n</blockquote>\n\n<p>My understanding is that it is to keep out invalid input like </p>\n\n<blockquote>\n  <p>$pred\\;(false)$</p>\n</blockquote>\n\n<p>but how did he come to that exact syntax for the rule? Is there some algorithm that is used to massage the rules into the necessary form? Is there some book or paper that explains how to formulate rules for small step operational semantics?</p>\n\n<p>Note: I am aware that there is a forum dedicated to questions for the book <a href="http://lists.seas.upenn.edu/mailman/listinfo/types-list" rel="nofollow">here</a>. </p>\n', 'ViewCount': '76', 'Title': 'How does one deduce small step operational semantics?', 'LastActivityDate': '2013-03-08T01:26:40.747', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '10348', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '268', 'Tags': '<semantics><operational-semantics><small-step>', 'CreationDate': '2013-03-07T00:29:07.013', 'Id': '10347'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>This question arises from my reading of <a href="http://www.cis.upenn.edu/~bcpierce/tapl/" rel="nofollow">"Types and Programming Languages"</a> (<a href="http://www.worldcat.org/oclc/47705787" rel="nofollow">WorldCat</a>) by Benjamin C. Pierce.</p>\n\n<p>On page 36 is the definition for <em>satisfied</em></p>\n\n<blockquote>\n  <p>A rule is <em>satisfied</em> by a relation if, for each instance of the rule,\n  either the conclusion is in the relation or one of the premises is\n  not.</p>\n</blockquote>\n\n<p>On page 36 is the definition for <em>instance</em></p>\n\n<blockquote>\n  <p>An <em>instance</em> of an inference rule is obtained by consistently replacing\n  each metavariable by the same term in the rule\'s conclusion and all its\n  premises (if any).</p>\n  \n  <p>For example </p>\n  \n  <p><code>if true then true else (if false then false else false) -&gt; true</code></p>\n  \n  <p>is an instance of <strong>E-IFTRUE</strong>, where both occurrences of $t_2$ have been\n  replaced by <code>true</code> and $t_3$ has been replaced by <code>if false then false else\n  false</code>.</p>\n</blockquote>\n\n<p>On page 15 is the definition for <em>relataion</em></p>\n\n<blockquote>\n  <p>An n-place <em>relation</em> on a collection of sets $S_1, S_2,..., S_n$ is a\n  set $R\\subseteq  S_1\\times\\;S_2\\;\\times\\;...\\;\\times\\;S_n$ of tuples\n  of elements from $S_1$ through $S_n$. We say that the elements $s_1\\in\n&gt; S_1$ thorugh $s_n\\in S_n$ are related by $R$ if $(s_1,...,s_n)$ is an\n  element or $R$.</p>\n</blockquote>\n\n<p>On page 36 is the definition for <em>one-step evaluation relation ($\\rightarrow $)</em> </p>\n\n<blockquote>\n  <p>The <em>one-step evaluation relation $\\rightarrow $</em> is the smallest\n  binary relation on terms satisfying the three rules of Figure 3-1.\n  When the pair $(t,t\')$ is in the evaluation relation,  we say that "the\n  evaluation statement (or judgment) $t \\rightarrow t\'$ is derivable."</p>\n</blockquote>\n\n<p>On page 34 are the three rules from Figure 3-1</p>\n\n<p><strong>E-IFTRUE</strong></p>\n\n<blockquote>\n  <p>\\begin{equation}if\\;true\\;then\\;t_2\\;else\\;t_3\\;\\rightarrow\\;t_2\\end{equation}</p>\n</blockquote>\n\n<p><strong>E-IFFALSE</strong></p>\n\n<blockquote>\n  <p>\\begin{equation}if\\;false\\;then\\;t_2\\;else\\;t_3\\;\\rightarrow\\;t_2\\end{equation}</p>\n</blockquote>\n\n<p><strong>E-IF</strong></p>\n\n<blockquote>\n  <p>\\begin{equation}\\frac{t_1\\rightarrow\\;t_1\'}{if\\;t_1\\;then\\;t_2\\;else\\;t_3\\;\\rightarrow\\;if\\;t_1\'\\;then\\;t_2\\;else\\;t_3}\\end{equation}</p>\n</blockquote>\n\n<p>Can someone explain this definition and give an example for parts of the defintion.<br>\n1. The conclusion is in the relation.<br>\n2. One of the premises is not.  </p>\n\n<p>Note: I am aware that there is a forum dedicated to questions for the book <a href="http://lists.seas.upenn.edu/mailman/listinfo/types-list" rel="nofollow">here</a>.</p>\n\n<p>Note: You can use <a href="http://scholar.google.com/" rel="nofollow">Google Scholar</a> to see more of the details to this question in context.</p>\n\n<p>EDIT</p>\n\n<p>To connect some of the dots about my comment regarding unification and term rewriting.</p>\n\n<p>When I saw</p>\n\n<p>$$(A\\rightarrow B)\\equiv (\\neg A \\vee B)$$</p>\n\n<p>it reminded me of <a href="http://en.wikipedia.org/wiki/Horn_clause" rel="nofollow">Horn claues</a> from <a href="http://en.wikipedia.org/wiki/Prolog" rel="nofollow">Prolog</a>, that along with the example then connected with my understanding of <a href="http://en.wikipedia.org/wiki/Rewriting" rel="nofollow">term rewriting</a>. Having the book "<a href="http://www.cambridge.org/gb/knowledge/isbn/item1166682/?site_locale=en_GB" rel="nofollow">Term Rewriting and All That</a>" (<a href="http://www.worldcat.org/title/term-rewriting-and-all-that/oclc/37315354&amp;referer=brief_results" rel="nofollow">WorldCat</a>) by Franz Baader and Tobias Nipkow, I quickly looked up satisfiability and found satisfiable on page 58. This is actually the start of whole chapter on Equational Problems; but it also covers <a href="http://en.wikipedia.org/wiki/Unification_%28computer_science%29" rel="nofollow">unification</a>. At that point I realized that the definition was dealing with <a href="http://en.wikipedia.org/wiki/Satisfiability" rel="nofollow">Satisfiability</a> and from there is was a topic I was already familiar. What threw me was the way Benjamin defined it. He used a very precise definition right up front in a manner I didn\'t associate with my knowledge.  </p>\n\n<p>If you work through the code as I am and understand logic programming, then the definition makes perfect sense.</p>\n', 'ViewCount': '107', 'Title': 'TAPL: Explanation and example(s) for satisfied', 'LastEditorUserId': '268', 'LastActivityDate': '2013-03-11T01:59:40.410', 'LastEditDate': '2013-03-11T01:59:40.410', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '10403', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '268', 'Tags': '<satisfiability><operational-semantics><small-step><term-rewriting>', 'CreationDate': '2013-03-08T14:05:18.400', 'Id': '10386'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'ViewCount': '150', 'Title': 'Getting started with Program Analysis', 'LastEditDate': '2013-03-23T16:25:07.047', 'AnswerCount': '2', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '758', 'FavoriteCount': '0', 'Body': '<p>I\'m looking for resources on getting started with <a href="http://en.wikipedia.org/wiki/Program_analysis" rel="nofollow">program analysis</a>.</p>\n\n<p>The only book I\'ve found on the topic is the <a href="http://www.amazon.ca/Principles-Program-Analysis-Flemming-Nielson/dp/3540654100" rel="nofollow">Nielson &amp; Nielson</a> book.</p>\n\n<p>Other than that, it seems like there are only "compiler" books where "program analysis" would be a chapter, or something along those lines. </p>\n\n<p>Do people know of any other resources?</p>\n', 'Tags': '<reference-request><compilers><semantics>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-03-24T21:06:22.787', 'CommentCount': '2', 'AcceptedAnswerId': '10726', 'CreationDate': '2013-03-22T20:09:12.373', 'Id': '10696'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p><a href="http://www.cs.utexas.edu/~ml/nldata/geoquery.html" rel="nofollow">GeoQuery</a> is a dataset used for benchmarking semantic parsers. It contains 880 queries about USA geography. The queries are in Prolog format, for example:</p>\n\n<blockquote>\n  <p>answer(A,longest(A,(river(A),traverse(A,B),const(B,countryid(usa)))))</p>\n</blockquote>\n\n<p>(this represents a question for the longest river that passes through the us).</p>\n\n<p>I have read <a href="http://www.citeulike.org/user/erelsegal-halevi/tag/geoquery" rel="nofollow">several papers about the GeoQuery</a>, but they don\'t seem to give a formal definition of the grammar underlying the dataset. The email address in the dataset page seem to be dysfunctional. So, my question (addressed primarily to researchers who have worked with the GeoQuery dataset before) is twofold:</p>\n\n<ul>\n<li>Is there a formal definition of the GeoQuery language?</li>\n<li>Is this language context-free?</li>\n</ul>\n\n<p>EDIT:</p>\n\n<p>It seems that, if the number of variables (A, B, C...) is unlimited, then GeoQuery is not context-free, because a CFG cannot make sure that two variables in different places are identical (this is similar to the {ww} language, which is not context-free).</p>\n\n<p>But what if we limit ourselves to A, B and C?</p>\n', 'ViewCount': '51', 'Title': 'The grammar of the GeoQuery language', 'LastEditorUserId': '1342', 'LastActivityDate': '2013-04-16T10:02:47.367', 'LastEditDate': '2013-04-16T10:02:47.367', 'AnswerCount': '0', 'CommentCount': '5', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '1342', 'Tags': '<formal-languages><context-free><semantics><natural-lang-processing>', 'CreationDate': '2013-04-15T13:22:36.020', 'Id': '11331'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': "<p>I've started reading <em>Practical Foundations for Programming Languages</em> and in the first chapter, the author mentions that ast's are associated with <em>sorts</em>. Intuitively, <em>sorts</em> are like types, but I'd like to know if they have a precise definition, and which is it. I'd be glad if some references are provided as well.</p>\n", 'ViewCount': '220', 'Title': 'What is a sort in Programming Language Semantics?', 'LastActivityDate': '2013-05-26T16:52:41.337', 'AnswerCount': '3', 'CommentCount': '0', 'Score': '3', 'OwnerDisplayName': 'rslima', 'PostTypeId': '1', 'OwnerUserId': '605', 'Tags': '<programming-languages><semantics>', 'CreationDate': '2013-05-02T13:38:36.920', 'FavoriteCount': '1', 'Id': '11735'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>Denotational semantics are abstract functions that give meaning to statements of a programming language. They accept an expression and return a value.</p>\n\n<p>But how do you define denotational semantics for languages that define, for example, functions (and later use these functions), or global variables, and change some global state of the program?</p>\n\n<p>I think the simplest way to do it would be to define the semantics function so that it returns a pair of values and a "global state" instead of just a value.</p>\n\n<p>But is there a place I can read about it some more? I am sure someone have done something like that. For example, is there denotational semantics for languages like Java or C?</p>\n\n<p>It would be nice to find a book that focuses on denotational semantics for programming languages which are not necessarily purely functional (though I think functional languages, like LISP, can also change a global state).</p>\n', 'ViewCount': '181', 'Title': 'how do you define functions with denotational semantics?', 'LastActivityDate': '2013-06-16T17:10:03.140', 'AnswerCount': '2', 'CommentCount': '2', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '8692', 'Tags': '<programming-languages><denotational-semantics>', 'CreationDate': '2013-06-16T15:10:41.253', 'Id': '12697'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>I have to show whether a program containing only <em>if-else</em> statements but no loops is able to calculate the following type of functions: $f^n(x)$. The function $f$ is applied $n$ times to $x$, so I guess this is a recursive function.</p>\n\n<p>How can I prove that formally?</p>\n', 'ViewCount': '231', 'Title': 'Can we create recursive functions only by using if-else statements?', 'LastEditorUserId': '39', 'LastActivityDate': '2013-06-21T00:07:05.620', 'LastEditDate': '2013-06-20T23:54:27.990', 'AnswerCount': '3', 'CommentCount': '4', 'Score': '2', 'OwnerDisplayName': 'Nicolas', 'PostTypeId': '1', 'OwnerUserId': '8933', 'Tags': '<recursion><semantics>', 'CreationDate': '2013-06-18T17:34:36.170', 'Id': '12772'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'ViewCount': '172', 'Title': 'Is lambda calculus suitable for expressing semantics of non-functional languages?', 'LastEditDate': '2013-07-05T14:41:24.283', 'AnswerCount': '1', 'Score': '1', 'OwnerDisplayName': u'Petr Bedn\xe1\u0159', 'PostTypeId': '1', 'OwnerUserId': '9034', 'Body': '<p>Would it be convenient to express semantics of imperative languages (e.g. C) and object-oriented languages (e.g. Java) with $\\lambda$-calculus?</p>\n\n<p>Or in the other words: is $\\lambda$-calculus a suitable candidate for expressing semantics of all context-sensitive languages?</p>\n', 'Tags': '<programming-languages><lambda-calculus><semantics>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-07-06T04:24:05.467', 'CommentCount': '6', 'AcceptedAnswerId': '13103', 'CreationDate': '2013-07-05T08:13:53.170', 'Id': '13097'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>Where can I find <em>introductory</em> books, articles, notes or slides on Game Semantics?</p>\n\n<p>I have searched a lot on the internet but I\'m not satisfied by the material I found. It either is too informal, or it assumes too much knowledge of/attitude to other kind of semantics, and it\'s hard to follow for a beginner.</p>\n\n<p>Ideally the material shouldn\'t have any prerequisites, except a little of game theory and few concepts of semantics.</p>\n\n<p>Examples of the material that I\'ve found are:</p>\n\n<ul>\n<li><p><a href="http://www.pps.univ-paris-diderot.fr/~curien/Game-semantics.pdf" rel="nofollow">Notes on Game Semantics</a>: These are quite good, but they lack a bit of formalism at the beginning and I find some explanations or examples difficult to follow.</p></li>\n<li><p><a href="http://www.illc.uva.nl/lint/documents/workshop08/slides/abramsky_tutorial.pdf" rel="nofollow">Tutorial on Game Semantics</a>: Slides; they lack oral explanations.</p></li>\n</ul>\n', 'ViewCount': '41', 'Title': 'Reference introductory books or articles to Game Semantics', 'LastActivityDate': '2013-08-27T08:59:11.797', 'AnswerCount': '0', 'CommentCount': '4', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '7246', 'Tags': '<reference-request><semantics><game-theory>', 'CreationDate': '2013-08-27T08:59:11.797', 'Id': '13963'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>I\'m doing some research on game semantics using <a href="http://www.cs.bath.ac.uk/~gam23/papers/marktoberdorf.ps.gz" rel="nofollow">these notes</a>. Currently I\'m trying to prove that the definition of composite-strategy is indeed a strategy.</p>\n\n<p>I have already proved all the conditions of strategies except that it is prefix-closed(for even-length prefixes) and respects the alternation rule. </p>\n\n<p>Can somebody give me a <strong>hint</strong> on approaching this two specific conditions? I have already tried many times but all my attempts led to unfinished proofs with a lot of cases (e.g. 10-12) and after proving most of those I couldn\'t finish the others, so I believe I\'m approaching the problem from the wrong point of view.</p>\n\n<hr>\n\n<p>For the definitions please refer to Chapter 3 of the notes linked above, not to the articles of, say, Abramsky and Hyland/Ong, since the definitions are slightly different(e.g strategies contains only even-length strings, while Hyland/Ong admit odd-length strings). <em>If</em> you refer to these you should also give some hint as to how to apply the techniques to the definitions in the notes.</p>\n\n<p>Also note that the missing conditions that I\'m trying to prove are all about proving that $u \\upharpoonright A, C$ is a legal position for $A \\multimap C$, which, in Ong\'s article, is something <em>assumed</em> in <em>their</em> definition of composite strategy.</p>\n', 'ViewCount': '48', 'Title': 'How to prove that the composite strategy is prefix-closed and respects the alternation condition?', 'LastEditorUserId': '7246', 'LastActivityDate': '2013-09-24T08:56:34.510', 'LastEditDate': '2013-09-24T08:56:34.510', 'AnswerCount': '0', 'CommentCount': '2', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '7246', 'Tags': '<proof-techniques><semantics><game-semantics>', 'CreationDate': '2013-09-24T07:59:34.780', 'Id': '14577'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>Here is a simple transition system of beverage vending machine:\n<img src="http://i.stack.imgur.com/bgJM8.png" alt="beverage vending machine"> </p>\n\n<p>The exemplary execution fragments can look like this:</p>\n\n<p><img src="http://i.stack.imgur.com/F0kPo.png" alt="enter image description here"></p>\n\n<p>Now, imagine we have multi-process TS where processes are identical and communicate over channels. I don\'t understand the semantics of how to present an execution fragment that runs across multiple processes. Should I specify the whole execution in one line? If yes how do I denote that the state belongs to some certain process? Or maybe I present execution fragment on each process in the separate line? I\'d love to see a "meta-example" of how that could look like. </p>\n\n<p>I am referring to this specific <a href="http://www-i2.informatik.rwth-aachen.de/i2/fileadmin/user_upload/documents/MC11/sheet02.pdf" rel="nofollow">exercise sheet</a>, task 3.) b). The figures are from the book "Principles of Model Checking" by Christel Baier and Joost-Pieter Katoen p. 22 and p. 25.  </p>\n', 'ViewCount': '65', 'Title': 'Example of execution fragment of multi-process transition system', 'LastActivityDate': '2013-10-08T17:15:44.600', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '10582', 'Tags': '<formal-languages><automata><model-checking><denotational-semantics>', 'CreationDate': '2013-10-08T17:15:44.600', 'Id': '14915'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>I\'m reading <a href="http://www.pps.univ-paris-diderot.fr/~mellies/mpri/mpri-ens/articles/harmer-hyland-mellies-categorical-combinatorics.pdf" rel="nofollow">this</a> article about game semantics and I\'m a bit puzzled with the definition given for $\\Upsilon$ in section $3.3$. There are some points that are either unintelligible or that don\'t make sense at all.</p>\n\n<p>The definition provided is based on the concept of <em>schedule</em>:</p>\n\n<blockquote>\n  <p>A schedule $e:\\{1, \\ldots, n\\} \\rightarrow {0, 1}$ is a sequence of\n  $0$ and $1$s. We also define $|e| = n$, $|e|_0$ is the number of $0$s\n  in $e$ and $|e|_1$ is the number of $1$s. The notation $e \\upharpoonright m$ denotes the restriction of $e$ to its first $m$ terms.</p>\n</blockquote>\n\n<p>(Where $e$ is actually a function, but we can view $e$ as the sequence $e(1)\\cdot e(2)\\cdots e(n)$.)</p>\n\n<p>Now the definition of the category $\\Upsilon$ is:</p>\n\n<blockquote>\n  <ul>\n  <li>The objects are the natural numbers. We think of $p \\in \\Upsilon_0$ as the totally ordered set $(p) = \\{1, \\ldots, p\\}$. We\n  write $(p)^+$ for the set of even elements and $(p)^-$ for the set of\n  odd elements of $(p)$.</li>\n  <li><p>The morphism in $\\Upsilon(p, q)$ are schedules $e$ such that $|e|_0 = p$ and $|e|_1 = q$. </p>\n  \n  <p><strong>A schedule $e: p \\rightarrow q$ corresponds to obvious order preserving (collectively surjective) embeddings $l:(p) \\rightarrow (p+q)$\n  and $r : (q) \\rightarrow (p+q)$ and thus to order relations\n  $l(x) &lt; r(y)$ from $(p)^+$ to $(q)^+$ and $r(y) &lt; l(x)$ from $(q)^-$\n  to $(p)^-$</strong></p></li>\n  <li><p>The identity in $\\Upsilon(p, p)$ is the copy-cat function $c$ of length $2p$, such that $c(2k+1) \\neq c(2k+2)$. <strong>The induced orders are\n  $\\leq$ on $(p)^+$ and on $(p)^-$</strong></p></li>\n  <li><p>Let $e:p \\rightarrow q$ and $f: q \\rightarrow r$ be morphisms in $\\Upsilon$, then their composition $e;f:p \\rightarrow r$ is defined by\n  taking the corresponding order relations , composing them as relations\n  and <strong>reconstructing the function</strong></p></li>\n  </ul>\n</blockquote>\n\n<p>Where I emphasized in bold the parts I don\'t understand. In particular:</p>\n\n<ul>\n<li><p>What\'s the meaning of <em>embedding</em> when he defined morphisms? I know what an embedding <em>functor</em> is, but this definition doesn\'t apply here.</p></li>\n<li><p>What does "$l(x) &lt; r(y)$ from $(p)^+$ to $(q)^+$" mean? Where do $x$ and $y$ come from? My <em>guess</em> is: $x \\in (p)^+$ and $y \\in (q)^+$. What are $l$ and $r$? My <em>guess</em> would be that $l$, given the index $x$ of a $0$ returns its index in $e$ and $r$ does the same for $1$s but then the $l(x) &lt; r(y)$ part doesn\'t make any sense to me.</p></li>\n<li><p>What\'s an <em>induced order</em>?</p></li>\n<li><p>What does <em>reconstructing a function</em> mean?</p></li>\n</ul>\n\n<hr>\n\n<p>I hope my question is on-topic here. I didn\'t ask it on tcs because it doesn\'t look like a research level question to me.</p>\n\n<hr>\n\n<p><strong>Edit</strong></p>\n\n<p>Reading carefully the rest of the paper, later mentions that $l$ and $r$ are <em>injections</em>, so maybe for <em>embedding</em> he simply meant injection(?).</p>\n\n<p>Assuming this, this is what I thought:\nthe point about morphism means that $e$ could be seen to represent two injective functions $l:\\{1, \\ldots, p\\} \\rightarrow \\{1, \\ldots, p+q\\}$ and $r:\\{1, \\ldots, q\\} \\rightarrow \\{1, \\ldots, p+q\\}$ such that the union of their images is $\\{1, \\ldots, p+q\\}$.\nThese functions have the property that, for $x \\in (p)^+, y \\in (q)^+$, $l(x) &lt; r(y)$ and for $x \\in (p)^-, y \\in (q)^-, r(y) &lt; l(x)$ (although in the text this seems like a consequence of an "obvious order preserving ...". no idea what order he\'s talking about and how it\'s obvious.)</p>\n\n<p>We can obtain these functions assigning the lowest values to even arguments for $l$, the next lower values for even arguments to $r$, then the next lower values to odd arguments for $r$ and finally the remaining values for $l$.\n(i.e. $r(2) = 1, r(4) = 2, \\ldots, r(2k) = k$ then $l(1) = k+1, \\ldots l(2t+1) = k+t+1$ etc.) </p>\n\n<p><em>However</em> such $l$ and $r$ are <em>not</em> unique, which <em>is</em> a problem in the rest of the paper since he later uses $l$ and $r$ in some definitions, which cannot be done if $l$ and $r$ aren\'t unique.</p>\n\n<p><strong>Edit2</strong></p>\n\n<p>Maybe the <em>embedding</em> means <a href="http://en.wikipedia.org/wiki/Order-embedding" rel="nofollow">order-embedding</a>. However even in this case I don\'t see how $e$ can be related with <em>one</em> obvious couple of order embeddings.\nI mean: the most obvious choice is to put $l(x)$ to be the index of the $x$th $0$ in $e$ and similarly for $r(y)$ and $1$s, but then the last statement in the description is wrong(take $e = 010$ we have that $r(1) = 2 &gt; l(1) = 1$ but we should have $r(y) &lt; l(x)$ for odd $x$ and $y$.</p>\n\n<p>Is there any obvious way to define two embeddings $l$ and $r$ in a unique way?</p>\n', 'ViewCount': '45', 'Title': "What's the correct definition of the $\\Upsilon$ category of schedules?", 'LastEditorUserId': '7246', 'LastActivityDate': '2013-10-14T12:52:33.647', 'LastEditDate': '2013-10-11T18:08:07.680', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '16070', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '7246', 'Tags': '<combinatorics><category-theory><game-semantics>', 'CreationDate': '2013-10-10T13:54:23.550', 'Id': '14986'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': "<p>What is the meaning of the double, down facing arrow $\\Downarrow$ in the context of operational semantics? Here's the example formula that uses it:</p>\n\n<p>$$\\frac{s_0 \\vdash M_1 \\Downarrow P_1, s_1 \\; ... \\; s_{n-1} \\vdash M_n \\Downarrow P_n, s_n}{s_0 \\vdash M \\Downarrow P, s_n}$$</p>\n\n<p>It would be also beyond priceless if you could explain in words what do other pictograms of this formula mean. I feel that $\\vdash$ here doesn't mean what it usually means in logic (is provable from). However the general form of this formula is the derivation rule (I can understand it from the context). It is a rather general derivation rule though (it is followed by few other more specific examples which use all the same pictograms).</p>\n\n<p>The source of the formula: On Exceptions versus Continuation in the Presence of State by Hayo Thielecke. It cites several other sources, but I couldn't find the explanation of the symbols used.</p>\n", 'ViewCount': '110', 'Title': 'Double, down facing arrow in operational semantics', 'LastActivityDate': '2013-10-18T18:27:27.837', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '16209', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '10314', 'Tags': '<terminology><semantics><operational-semantics>', 'CreationDate': '2013-10-18T17:06:53.357', 'Id': '16201'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p><strong>My Problem is:</strong> to define a "repeat until"-construct in terms of Denotational semantics. I made an attempt and now i need to know if i made it right.</p>\n\n<p><strong>The Conditions are</strong>: i used the language "While" as specified in "Semantics with Applications" by Nielson &amp; Nielson (1992) (<a href="http://www.daimi.au.dk/~bra8130/Wiley_book/wiley.pdf" rel="nofollow">pdf</a>) (<a href="http://www.worldcat.org/oclc/24671378" rel="nofollow">WorldCat</a>). I do not want to use the help of the While-construct. </p>\n\n<p>In denotational semantics, we are interested in the effect of a program, rather than in "how" it is executed. Thats why semantic functions are defined compositionally. The corresponding definitions for the Denotational semantics (or "direct style semantics") can be found on page 86 in the Book from Nielson &amp; Nielson (they made it avaible over the Internet).</p>\n\n<p><strong>My Approach is</strong>:\n$$\\mathcal{S}_{\\text{ds}} \\lbrack\\lbrack\\text{repeat } S \\text{ until } b\\rbrack\\rbrack = \\text{FIX }F\\\\ \\text{where }F\\ g = \\mathcal{S}_{\\text{ds}}\\lbrack\\lbrack S\\rbrack\\rbrack\\circ\\text{cond}(\\mathcal{B}\\lbrack\\lbrack b\\rbrack\\rbrack , \\mathcal{S}_{\\text{ds}}\\lbrack\\lbrack S\\rbrack\\rbrack\\circ g, id)$$</p>\n\n<p>As you might see, my approach is quite similar to the definition of while, but i cannot see a mistake in it.</p>\n\n<p><strong>post scriptum</strong>: Bounty given, and second edit: yes, i meant $$\\mathcal{S}_{\\text{ds}} \\lbrack\\lbrack\\text{repeat } S \\text{ until } b\\rbrack\\rbrack$$ .. typo corrected. </p>\n', 'ViewCount': '190', 'Title': 'Defining a "repeat until"-construct in Denotational semantics', 'LastEditorUserId': '6828', 'LastActivityDate': '2013-11-22T20:36:29.933', 'LastEditDate': '2013-11-18T19:21:20.790', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '18119', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '6828', 'Tags': '<semantics><denotational-semantics>', 'CreationDate': '2013-11-15T19:03:40.283', 'Id': '18054'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>As big-step operational semantics is about evaluating an expression to a final value, can we state that for defining a concurrent language one needs small-step semantics, as concurrent programs need not result in a value?</p>\n', 'ViewCount': '19', 'Title': 'defining the operational semantics of a concurrent language', 'LastActivityDate': '2013-12-28T21:01:38.003', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '12426', 'Tags': '<concurrency><operational-semantics>', 'CreationDate': '2013-12-28T21:01:38.003', 'Id': '19349'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>I\'ll preface this by saying that this IS a homework question.</p>\n\n<p>However, when asked about how to solve it in class, (I believe) my professor was unable to complete it.</p>\n\n<p>The question is: </p>\n\n<blockquote>\n  <p>Compute the weakest precondition for each of the following \n  assignment statements and postconditions:\n  $$a = a + 2b - 1\\ \\{a &gt; 1\\}$$ (where a > 1 is the postcondition)</p>\n</blockquote>\n\n<p>His answer was: "$a &gt; 2 - 2b$."\nIs this correct? It seems that he broke the rules of equivalents, by using the ">" as "="</p>\n\n<p>I believe the answer is:\n$$\\{a&gt;1\\;\\wedge\\; b&lt;\\tfrac12\\}\\quad\\text{or}\\quad \\{a &gt; 0\\;\\wedge\\;2b-1 +a &gt;1\\},$$ \n    where the "$\\wedge$" symbol means "and"</p>\n\n<p>We\'re using <em>Concepts of Programming Languages</em>, by Sebesta, 10th Edition, so any references from that material would be excellent :)</p>\n\n<p>Thanks!</p>\n', 'ViewCount': '35', 'Title': 'Axiomatic Semantics and Postconditions', 'LastEditorUserId': '9550', 'LastActivityDate': '2014-02-07T00:42:18.400', 'LastEditDate': '2014-02-06T23:02:29.157', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '21411', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '14445', 'Tags': '<semantics><hoare-logic>', 'CreationDate': '2014-02-06T22:17:44.433', 'Id': '21407'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': "<p>I have two questions</p>\n\n<p>Is it possible to have 2 languages with different syntax but the same semantics? If not why not else give an example of 2 languages .</p>\n\n<p>Is it possible to have 2 languages with same syntax but different semantics? If not why not else give an example of 2 languages .</p>\n\n<p>I understand that the syntax is the external visible representation of a program and the semantics is the meaning of a program can some one please help answer these questions thank you.</p>\n\n<p>Sorry if I wasn't clear but I was looking for examples of languages for example for the first question i have C# and VB.NET does that seem appropriate?</p>\n", 'ViewCount': '41', 'ClosedDate': '2014-02-26T07:00:34.433', 'Title': 'Is it possible to have 2 languages with different syntax but the same semantics?', 'LastActivityDate': '2014-02-26T06:09:02.827', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '15052', 'Tags': '<programming-languages><semantics>', 'CreationDate': '2014-02-26T04:46:36.133', 'Id': '22043'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': u'<p>I have a few small questions about section 2.4 ("Rule induction") in <a href="https://www.cs.cmu.edu/~rwh/plbook/book.pdf" rel="nofollow">Practical Foundations for Programming Languages</a> (p. 19).</p>\n\n<p>(1) In the rule induction principles for <code>nat</code>,</p>\n\n<blockquote>\n  <p>To show P(a nat) whenever a nat, it is enough to show:\n  (1) P(zero nat).\n  (2) for every a, if (a nat and) P(a nat), then P(succ(a) nat).</p>\n</blockquote>\n\n<p>why is the bracketed "(<em>a</em> <code>nat</code> and)" clause necessary (and similarly for <code>tree</code>)?  This seems "natural" - we shouldn\'t need to prove things about syntactic entities that don\'t define <code>nat</code>s - but doesn\'t appear in the definition given of property <em>P</em> "respecting the rules" defining <code>nat</code>/<code>tree</code> (also on p. 19), which is how the rule induction principle is defined.  In the proof of Lemma 2.1, the extra "<em>a</em> nat and" part has become part of the definition of the property <em>P</em> - what\'s going on here?</p>\n\n<p>(2) I don\'t understand the induction step of Lemma 2.1 (<code>succ(a) nat</code> implies <code>a nat</code>).  If I were doing this proof, I\'d just invert the rules for <code>nat</code> right away, or, using Harper\'s property <em>P</em>, say: If <code>succ(a)</code> is of form <code>succ(b)</code>, then by injectivity, <code>a</code> equals <code>b</code>, hence <code>b nat</code> as <code>a nat</code>, but injectivity hasn\'t been proven yet.  It seems instead that Harper applies the induction hypothesis about <code>a</code> directly to <code>succ(a)</code> - I must be missing something.</p>\n\n<p>(3) In a more naive framework, Lemma 2.3 would just follow from sufficiency of the <code>= nat</code> relation rules ("inversion"), but I don\'t know how to write down a proof in this style.  Why is induction even needed?</p>\n\n<p>I\'m sorry if these questions seem like nitpicking, but Martin-L\xf6f/LF feels very foreign to me.  If I squint and pretend I\'m doing everything in a more "traditional" operational semantics, I can read other parts of the book (with slightly different proofs), but I feel I\'m missing the point in doing so.</p>\n\n<p>If these questions are too tedious to answer individually, are there other references on doing semantics in this style?</p>\n', 'ViewCount': '47', 'Title': "Rule induction principles in Harper's PFPL", 'LastEditorUserId': '15757', 'LastActivityDate': '2014-03-21T16:34:29.187', 'LastEditDate': '2014-03-21T16:34:29.187', 'AnswerCount': '2', 'CommentCount': '3', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '15757', 'Tags': '<type-theory><semantics><induction><operational-semantics>', 'CreationDate': '2014-03-17T03:10:30.117', 'Id': '22690'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>I want to create an archive of my many e-books and various notes (.pdf, .docx, etc.) and be able to do semantic search against that archive.  Maybe something like ElasticSearch could be the archive.</p>\n\n<p>I want to be able to do semantic search against these archives.  So if my search phrase was "pass by value" the search algorithm should know to include things like references in C++ and golang in the results.</p>\n\n<p>Since my archives will consist of a lot of material that I have not written I will need code that can catalog the relevant search criteria for all of this material.</p>\n\n<p>I know what I want this system to do, but don\'t know how to go about it.  Where do I start with something like this?  If this requires some AI techniques I\'ll have to learn those.  Are there good open source projects that can handle this?</p>\n\n<p>Thanks for your insights.</p>\n', 'ViewCount': '11', 'ClosedDate': '2014-03-19T17:32:57.237', 'Title': 'Where do I learn how to program semantic search', 'LastActivityDate': '2014-03-19T15:57:42.600', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '0', 'OwnerDisplayName': 'Dean Schulze', 'PostTypeId': '1', 'OwnerUserId': '16072', 'Tags': '<semantics>', 'CreationDate': '2014-03-18T16:46:29.620', 'Id': '22811'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>In the pure lambda calculus, we have the inductively defined set of terms (the grammar):\n$$e::= x \\mid \\lambda x . e \\mid e_1 e_2$$</p>\n\n<p>Under the call-by-value evaluation strategy, we have the inference rules for beta-reduction and rules on how to evaluate applications (congruence rules). I am trying to understand how evaluation contexts can replace the congruence rules without actually changing the syntax of the language. Without evaluation contexts, we have the following:</p>\n\n<p>$$\n\\frac{e_1 \\rightarrow e_1\'}{e_1e_2 \\rightarrow e_1\'e_2}\n$$\nand\n$$\n\\frac{e_2 \\rightarrow e_2\'}{ve_2 \\rightarrow ve_2\'}.\n$$</p>\n\n<p>This makes sense, since if we have an instance of an expression $t = (\\lambda f . \\lambda x. f x)((\\lambda y .y)\\lambda z .z)\\lambda w.w$, it is clear that it is of the form $e_1e_2 \\rightarrow e_1\'e_2$ and thus $$(\\lambda f . \\lambda x. f x)((\\lambda y .y)\\lambda z .z)\\lambda w.w \\rightarrow (\\lambda f . \\lambda x. f x)(\\lambda z .z)\\lambda w.w$$</p>\n\n<p>If we replace the congruence rules with evaluation contexts:\n$$E::= [\\cdot] \\mid Ee \\mid vE$$\nthen we need only a single rule to express the congruence rules of the language:\n$$\n\\frac{e \\rightarrow e\'}{E[e] \\rightarrow E[e\']}.\n$$</p>\n\n<p>I am confused as to how evaluation contexts can tell us how to evaluate the expression $t$ from above without changing the syntax of the language. I don\'t understand how the evaluation context "works" without rewriting $t$ as </p>\n\n<p>$$E_t = (\\lambda f . \\lambda x. f x)[\\cdot]\\lambda w.w$$</p>\n\n<p>where $t = E_t[((\\lambda y .y)\\lambda z .z)]$. There is no obvious a priori reason to evaluate $t$ under call-by-value without knowledge of $E_t$. I really have no idea where I am going wrong. Can someone help correct my thinking?</p>\n', 'ViewCount': '70', 'Title': 'Lambda Calculus: How do evaluation contexts "work"', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-01T07:08:12.150', 'LastEditDate': '2014-03-24T10:30:47.387', 'AnswerCount': '1', 'CommentCount': '3', 'AcceptedAnswerId': '23314', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '15660', 'Tags': '<programming-languages><lambda-calculus><semantics>', 'CreationDate': '2014-03-23T00:44:53.920', 'Id': '22954'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'ViewCount': '156', 'Title': 'What is pass-by-value-result and its advantage and disadvantage?', 'LastEditDate': '2014-03-30T05:52:41.380', 'AnswerCount': '1', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '16281', 'Body': '<p>I have searched on Google, but I can\'t quite understand what is pass-by-value-result. What is the advantage and disadvantage of using pass-by-value-result?</p>\n\n<p>If I have a program code like this, what will be the result when parameters are passed by value-result?</p>\n\n<pre><code>#include &lt;stdio.h&gt;\n\nint a=2;\nint b=1;\n\nvoid fun(int x, int y) {\n    b=x+y;\n    x=a+y;\n    y=b+x;\n}\n\nvoid main() {\n    fun(b,b);\n    printf("%d %d\\n",a,b);\n}\n</code></pre>\n', 'ClosedDate': '2014-04-01T02:00:53.887', 'Tags': '<terminology><programming-languages><semantics>', 'LastEditorUserId': '13022', 'LastActivityDate': '2014-03-30T17:03:12.450', 'CommentCount': '1', 'AcceptedAnswerId': '23255', 'CreationDate': '2014-03-30T05:09:09.320', 'Id': '23246'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': "<p>I have to prove the following 2 properties of the Small-step semantics of the WHILE programming language:</p>\n\n<ul>\n<li>If $\\langle C_1; C_2, s\\rangle \\rightarrow^k s'$ then there is a\nstate $s''$ and natural numbers $k_1$ and $k_2$ such that $\\langle C_1;s\n   \\rangle \\rightarrow^{k_1} s''$ and $\\langle C_2; s'' \\rangle\n   \\rightarrow^{k_2} s'$ where $k_1 + k_2 = k$.</li>\n<li>If $\\langle C_1, s \\rangle \\rightarrow^k s'$ then $\\langle C_1; C_2,\n   s \\rangle \\rightarrow^k \\langle C_2, s'\\rangle$.</li>\n</ul>\n\n<p>I am not quite sure which kind of induction I should use. I am not asking for a full proof, I would rather appreciate some hints on which kind of induction I should use in this case. Thanks in advance!</p>\n", 'ViewCount': '13', 'Title': 'How to prove the following properties of Small-step semantics?', 'LastEditorUserId': '15669', 'LastActivityDate': '2014-04-04T16:47:11.947', 'LastEditDate': '2014-04-04T16:47:11.947', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '23415', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '15669', 'Tags': '<proof-techniques><operational-semantics>', 'CreationDate': '2014-04-04T00:28:36.010', 'Id': '23406'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': "<p>I'm trying to construct the small-step semantic rules involving the for-loops, but I can't find anything about it in the literature (only about while-loops).</p>\n\n<p>I was wondering if anyone could help me out with this? This is a first attempt, where $s$ represents a statement and $e$ an expression:</p>\n\n<p>$\\quad \\displaystyle\\sigma, \\text{for } s_1 \\, e_1 \\, e_2 \\, s_2 \\, \\rightarrow \\, \\sigma, \\text{if } e_1 \\text{ then (} s_2 ; \\, e_2; \\, \\text{for } s_1 \\, e_1 \\, e_2 \\, s_2 \\text{ ) else } skip$</p>\n\n<p>Where $\\sigma$ is a local value store, $s_1$ is for example $i = 0$, $e_1$ could equal $i &lt; 4$ and $e_2$ $i=i+1$. </p>\n", 'ViewCount': '27', 'Title': 'Small-step semantics: for-loops', 'LastEditorUserId': '16897', 'LastActivityDate': '2014-04-21T10:32:24.130', 'LastEditDate': '2014-04-21T10:32:24.130', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '23983', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '16897', 'Tags': '<formal-languages><programming-languages><semantics><operational-semantics><small-step>', 'CreationDate': '2014-04-21T10:18:48.197', 'Id': '23981'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': "<p>I am given the following command $C$:</p>\n\n<p>$y:=1;$\nwhile $\\neg (x=1)$ do\n$y:= y*x;$\n$x:= x - 1$.</p>\n\n<p>I have to show that $[\\![ C ]\\!]_s(s) = \\{x \\mapsto 1, y \\mapsto s(x)!\\}$ if $s(x) \\geq 1$ and undefined otherwise. Where $[\\![ C ]\\!]_s(s) = s'$ if $\\langle C, s \\rangle \\rightarrow^* s'$ and undefined otherwise.</p>\n\n<p>The proof is by induction on $s(x)$. My problem is to figure out the last step in the induction step. The induction hypothesis is that $[\\![ C ]\\!]_s(s) = \\{x \\mapsto 1, y \\mapsto s(x)!\\}$ for $s(x) \\leq k$. For the induction step I assume that $s(x)=k+1$. Using the small step semantics rules I obtain a state $s''' = \\{x \\mapsto k, y \\mapsto (k+1)\\}$. Then I can apply the induction hypothesis and obtain $[\\![ C ]\\!]_s(s) = \\{x \\mapsto 1, y \\mapsto k!\\}$. Now I am stuck - can anybody give me a hint on how to arrive at $[\\![ C ]\\!]_s(s) = \\{x \\mapsto 1, y \\mapsto (k+1)!\\}$?</p>\n", 'ViewCount': '36', 'Title': 'Proving the small-step semantics of factorial program', 'LastEditorUserId': '15669', 'LastActivityDate': '2014-04-27T13:50:47.293', 'LastEditDate': '2014-04-27T13:50:47.293', 'AnswerCount': '0', 'CommentCount': '3', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '15669', 'Tags': '<programming-languages><semantics><operational-semantics>', 'CreationDate': '2014-04-26T21:58:20.370', 'Id': '24142'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': "<p>Consider the following program:</p>\n\n<pre><code>const int n = 50;\nint tally;\n\nvoid total() {\n  int count;\n  for (count = 1; count &lt;= n; count++){\n    tally++;\n  }\n}\n\nvoid main() {\n  tally = 0;\n  parbegin (total (), total ());\n  write (tally);\n}\n</code></pre>\n\n<blockquote>\n  <ol>\n  <li><p>Determine the proper lower bound and upper bound on the final value of the\n  shared variable tally output by this concurrent program.Assume processes can execute\n  at any relative speed and that a value can only be incremented after it has\n  been loaded into a register by a separate machine instruction.</p></li>\n  <li><p>Suppose that an arbitrary number of these processes are permitted to execute in\n  parallel under the assumptions of part (a).What effect will this modification have\n  on the range of final values of tally?</p></li>\n  </ol>\n</blockquote>\n\n<p>My problem is that I don't understand the question what does this mean ?</p>\n\n<blockquote>\n  <p>... and that a value can only be incremented after it has been loaded into a register by a separate machine instruction.</p>\n</blockquote>\n\n<p>I feel that when two processes execute simultaneously due to this assumption some value of tally will be lost but I don't know how it can happen because I don't know what this assumption means so I can't find lower bound!it is obvious that if 2 or n process execute one after the other tally will be 100 hence 100 = (number of process *50) is upper bound!</p>\n", 'ViewCount': '72', 'Title': "What does it mean that a value can only be incremented after it's been loaded into a register?", 'LastEditorUserId': '98', 'LastActivityDate': '2014-05-03T08:40:59.377', 'LastEditDate': '2014-04-30T17:24:13.493', 'AnswerCount': '3', 'CommentCount': '3', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '17217', 'Tags': '<terminology><concurrency><semantics>', 'CreationDate': '2014-04-30T14:01:31.777', 'FavoriteCount': '0', 'Id': '24255'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>A few years ago, I read a paper that gave me a deeper understanding of ecological data (<a href="https://bcrc.bio.umass.edu/courses/fall2010/grad/micbio697b/sites/default/files/madin_2008.pdf" rel="nofollow">Madin et al, 2008</a>). More recently, I read a paper in PLOS-ONE (<a href="https://dx.doi.org/10.1371/journal.pone.0091001" rel="nofollow">Villa et al 2014</a>) that describes a particularly powerful a software based on ontologies.</p>\n\n<p>I find both of these papers informative, engaging, and useful. I and others have applied concepts from the first paper to database design, and the new programming language in the second paper seems useful. So I was surprised when a colleague (senior math faculty at an R1 university) told me that he scoffed that "Ontology" was a bogus field, in the same vein as astrology and homeopathy.</p>\n\n<p>When presented these two papers from my field, he called the first a "typical example of bogus research" and the second "valid attempt to do meaningful research within a failed framework". He pointed to two compelling graphs from Google Trends, one for "semantic web" and one for "web ontology language". I know this isn\'t peer-reviewed, but it is straightforward evidence that interest in these topics (or at least these specific terms) is waning. Here is a similar query:</p>\n\n<p><img src="http://i.stack.imgur.com/bPkCV.png" alt="enter image description here"></p>\n\n<p>I would appreciate additional background so that I can better understand my colleague\'s perspective. Are there any references that would provide me with historical context and a background for understanding the limitations of research on and applications of Ontology?</p>\n', 'ViewCount': '61', 'ClosedDate': '2014-05-03T09:41:47.747', 'Title': 'Why is interest in the fields of ontology and semantics declining?', 'LastActivityDate': '2014-05-03T09:41:37.610', 'AnswerCount': '0', 'CommentCount': '8', 'Score': '2', 'OwnerDisplayName': 'Bob The Builder', 'PostTypeId': '1', 'OwnerUserId': '17286', 'Tags': '<reference-request><formal-languages><programming-languages><semantics>', 'CreationDate': '2014-05-01T02:44:51.360', 'FavoriteCount': '1', 'Id': '24298'}},