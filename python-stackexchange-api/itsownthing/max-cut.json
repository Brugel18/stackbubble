3600:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>The <em>MAXDICUT</em> problem on a directed graph $G$ is where one is given integer $t$ and a graph $G$ and one has to decide if there is a subset $S \\subset \\mathcal{V}(G)$ such that $$|\\{(i\\rightarrow j)\\in\\mathcal{E}(G)\\mid i\\in S \\text{ and } j\\cap S=\\emptyset\\}|\\geq t$$</p>\n\n<p>Consider a $(c^a,d^a)$-regular directed hypergraph $H$ (meaning every hyperedge $\\{i_1\\rightarrow i_2,i_3,i_4,\\dots,i_{c^a}\\}\\in\\mathcal{E}(H)$ has $c^a$ vertices with  $head(i_1\\rightarrow i_2,i_3,i_4,\\dots,i_{c^a})=i_1$ and every vertex is on $d^a$ hyperedges with each vertex being a head on only one hyperedge) on $n^a$ vertices with fixed $n\\geq 4$ and fixed $c,d\\geq 2$ and variable parameter $a\\geq 1$. Consider the problem of given an integer $t$ and a hypergraph $H$ with above parameters, one has to decide if there is a subset $S \\subset \\mathcal{V}(H)$ such that $$|\\{\\mathcal{I}=\\{i_1\\rightarrow i_2,i_3,i_4,\\dots,i_{c^a}\\}\\in\\mathcal{E}(H)\\mid i_1\\in S \\text{ and } \\mathcal{I}\\setminus i_1\\cap S=\\emptyset\\}|\\geq t$$</p>\n\n<p>Call this problem <em>REGULAR-HYPERGRAPH-MAXDICUT</em>. Clearly this problem is NP-complete. Note that a directed $d$-regular graph on $n$ vertices with one outgoing edge per vertex is a $(2,d)$-regular hypergraph on $n$ vertices. So <em>REGULAR-HYPERGRAPH-MAXDICUT</em> $\\leq$ <em>MAXDICUT</em>.</p>\n\n<p>Now consider a $(c^a,d^a)$-regular directed hypergraph $H$ on $n^a$ vertices with fixed $n\\geq 4$ and fixed $c,d\\geq 2$ and variable parameter $a\\geq 1$. Given this graph, form a sequence of $d^a$-regular directed graphs $G_j$ on $n^a$ vertices for $j=1\\rightarrow c^a-1$ by projecting the hyperedge $\\{i_1\\rightarrow i_2,i_3,i_4,\\dots,i_{c^a}\\}\\in\\mathcal{E}(H)$ to the edge $\\{i_1 \\rightarrow i_{j+1}\\}$ and dropping the remaining possibles projections. Conversely given such $G_i$s, we can glue each set of edges from $i_1$ to get back the hypergraph $H$. Note each vertex of $G_i$ lies on $d^a$ edges.</p>\n\n<p>Given this graph, form a sequence of $r^m$-regular directed graphs $\\mathcal{G}_j$ on $N^m$ vertices for $j=1\\rightarrow r^m-1$ by projecting the hyperedge $\\{i_1\\rightarrow i_2,i_3,i_4,\\dots,i_{c^a}\\}\\in\\mathcal{E}(\\mathcal{H}([G,m]))$ to the edge $\\{i_1 \\rightarrow i_{j+1}\\}$ and dropping the remaining possibles projections. Conversely given such $\\mathcal{G}_j$ graphs, we can glue each set of edges from $i_1$ to get back the hypergraph $\\mathcal{H}[G,m]$. Note each vertex of $G_i$ lies on $r^m$ edges. </p>\n\n<p>Now from the $G_j$ construct the graph sum $\\mathcal{G}$ which is the directed graph with the hyperedge $\\{i_1\\rightarrow i_2,i_3,i_4,\\dots,i_{c^a}\\}\\in\\mathcal{E}(\\mathcal{H}([G,m]))$ replaced by a sequence of edges $\\{i_1\\rightarrow i_2,i_1\\rightarrow i_3,i_1\\rightarrow i_4,\\dots,i_1\\rightarrow i_{c^a}\\}\\in\\mathcal{E}(\\mathcal{G}$. It is clear \\emph{MAXDICUT} problem on $\\mathcal{G}$ solves the <em>HYPERGRAPH-MAXDICUT</em> problem in $\\mathcal{H}([G,m])$.</p>\n\n<p>Can the above give <em>MAXDICUT</em> $\\leq$ <em>REGULAR-HYPERGRAPH-MAXDICUT</em>? (THE ISSUE IS WHEN WE CHOOSE AN HYPEREDGE WE CHOOSE ALL ITS VERTICES. THIS IS NOT THE CASE WHEN WE REPLACE THE HYPERGRAPH WITH A DIRECTED GRAPH).</p>\n\n<p>Is <em>REGULAR-HYPERGRAPH-MAXDICUT</em> $\\leq_{APX}$ <em>MAXDICUT</em> and <em>MAXDICUT</em> $\\leq_{APX}$ <em>REGULAR-HYPERGRAPH-MAXDICUT</em>? This will give a constant factor approximation to <em>REGULAR-HYPERGRAPH-MAXDICUT</em> where the constant factor is independent of $a$.</p>\n\n<p>Can we generalize to a possible version of <em>IRREGULAR-HYPERGRAPH-MAXDICUT</em>? Would this yield constant factor approximations to <em>IRREGULAR-HYPERGRAPH-MAXDICUT</em> as well?</p>\n', 'ViewCount': '39', 'Title': 'Constant factor approximation of hypergraph maxdicut', 'LastEditorUserId': '9753', 'LastActivityDate': '2013-10-02T19:15:11.187', 'LastEditDate': '2013-10-02T19:15:11.187', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '9753', 'Tags': '<reductions><approximation-algorithms><max-cut>', 'CreationDate': '2013-10-02T08:29:17.627', 'Id': '14751'},3601:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I have a variant of bidding problem at hand.\nThere are N bidders(~20) who bid for items from a pool of many items(~10K). Each bidder can bid many items. I want to maximize the number of bidders who are satisfied. A bidder is satisfied if he gets all the items that he bid for in the first place. For eg-</p>\n\n<pre><code>Bidders = A,B,C\nItems = 1,2,3,4\n\nBidder    Bids\nA         1,2\nB         2,3\nC         3,4\n</code></pre>\n\n<p><img src="http://i.stack.imgur.com/Xcxlu.png" alt="enter image description here">\nIn this case its only possible to satisfy 2 bidders at max.</p>\n\n<p>I\'ve tried to model the problem to a maxflow problem and have taken several approaches but to no avail\nMy approaches so far-</p>\n\n<ol>\n<li><p>Tried to model this problem as a bipartite matching problem. The only problem being that instead of a one-one mapping I have a one-many mapping with an AND condition. </p></li>\n<li><p>A maxflow problem with edges going from source to each vertex with a capacity of number of bids. Problem here being ensuring that all edges from a bidder are selcted.</p></li>\n<li><p>A maxflow problem with both upper bounded and lower bounded edge capacities.</p></li>\n</ol>\n', 'ViewCount': '155', 'Title': 'Maximum number of matched vertexes in a one-to-many bipartite graph', 'LastActivityDate': '2014-03-12T17:58:04.897', 'AnswerCount': '3', 'CommentCount': '2', 'AcceptedAnswerId': '22548', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '15606', 'Tags': '<algorithms><graph-theory><network-flow><bipartite-matching><max-cut>', 'CreationDate': '2014-03-12T16:10:00.057', 'Id': '22542'}