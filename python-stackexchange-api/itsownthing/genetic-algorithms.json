{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>Yesterday I've done some research how to optimize genetic algorithm and I've encountered a very interesting theory that we can use Lamarckian theory (adaptive theory) to optimize the neural network. But I still didn't understand how can it be done? What I've read from some source to optimize the genetic algorithm we must do some adaptation to the parents before we do the mating (crossover &amp; mutation) but how is exactly the adaptation done? For example, if I have a genetic algorithm population to train a neural network, how can I alter the chromosome of the population to be adapted to the environment? Is it based on the error of the output or how?</p>\n", 'ViewCount': '62', 'Title': 'Lamarckian and Genetic algorithm', 'LastEditorUserId': '39', 'LastActivityDate': '2013-01-12T19:02:18.517', 'LastEditDate': '2013-01-12T19:02:18.517', 'AnswerCount': '0', 'CommentCount': '7', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '4573', 'Tags': '<algorithms><artificial-intelligence><genetic-algorithms>', 'CreationDate': '2013-01-12T09:40:47.417', 'FavoriteCount': '1', 'Id': '7903'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I have a set of observations of real data, and a set of Random Variables I produce my self. The goal is to generated Random Variables with the same Distribution as the real data. To investigate the simliarity the two distributions, I use the Kullback-Leibler Divergence. Now with the genetic algorithm of Matlab, I try to find the best parameters for my generator, the thing only is that genetic algorithm is stochastic and so I have no consistent results for the Kullback Leibler Divergence. One idea would be though to run my generator say a thousand times then chosse the minimum Kullback-Leibler Divergence and reproduce the result with this: <a href="http://www.mathworks.ch/ch/help/gads/reproducing-your-results-1.html" rel="nofollow">http://www.mathworks.ch/ch/help/gads/reproducing-your-results-1.html</a>\nWould that work? The idea would be to get a continuous fitness function...</p>\n', 'ViewCount': '40', 'Title': 'Stochasticity of Genetic Algorithm', 'LastActivityDate': '2013-03-12T21:50:37.423', 'AnswerCount': '0', 'CommentCount': '2', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '7255', 'Tags': '<genetic-algorithms>', 'CreationDate': '2013-03-12T21:50:37.423', 'Id': '10496'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I was wondering since randomness is embedded in genetic algorithms at almost every level, is there a really fine line between genetic algorithms and pure random search?</p>\n\n<p>Ever since I finished my implementation of a GA , since randomness is present in the mutation function,the initialization part (as well as the reinitialization part) and crossbreeding part as well... other than a encoder which tries to sense of the chromsomes (encoder tailored to make sense of the chromosome in context of the problem) and a fitness function , it feels like genetic algorithms are just random search functions in disguise .</p>\n\n<p>So my question is : are GA implementations just plain old random searches with a shot of memory to make it look like there is some sort of meaningful feedback? </p>\n', 'ViewCount': '108', 'ClosedDate': '2013-04-02T22:15:50.887', 'Title': 'Are genetic algorithms special instances of random search done in an unexpectedly short run-time?', 'LastEditorUserId': '7545', 'LastActivityDate': '2013-04-02T21:07:18.593', 'LastEditDate': '2013-04-02T20:35:30.713', 'AnswerCount': '1', 'CommentCount': '6', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '7545', 'Tags': '<search-algorithms><efficiency><randomness><evolutionary-computing><genetic-algorithms>', 'CreationDate': '2013-04-02T15:57:17.913', 'Id': '10975'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': u'<p>I want to solve the Physical Travelling Salesman Problem using an evolutionary algorithm.</p>\n\n<p>The objective of the PTSP is to visit the maximum number of waypoints of the map in the minimum number of time steps. \nThe map takes the form of a two-dimensional board, where ten waypoints are scattered around and multiple obstacles are present.</p>\n\n<p>Now, I have a way to run random games and create "population" \u2014 a list of waypoints in the order we visit them.\nI need some idea how to do the crossover. I mean, how to create the next generation.\nI saw ideas, but they take in account that each gene contains <em>all</em> the waypoints on the map. (Take a random part from parent1 and take the waypoints that do not appear in parent1 from parent2 in the order they appear in parent2).\nWhat to do in case a gene contains just part of the waypoints?</p>\n', 'ViewCount': '120', 'Title': 'Evolutionary algorithm for the Physical Travelling Salesman Problem', 'LastEditorUserId': '39', 'LastActivityDate': '2013-06-06T15:03:33.913', 'LastEditDate': '2013-06-06T15:03:33.913', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '1', 'OwnerDisplayName': 'user2459338', 'PostTypeId': '1', 'OwnerUserId': '8546', 'Tags': '<genetic-algorithms><traveling-salesman>', 'CreationDate': '2013-06-06T11:02:17.433', 'Id': '12485'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I try to solve Physical Travelling Salesman Problem using evolutionary algorithm and I have diffucult to detemine how to choose the parent , on which we do the crossover.</p>\n\n<p>Assume I have popultion of 100. \nThe parent should be selected randomally? or according to their fitness? \nIf I choose them randomally I don\'t think the result be enough good but in the other hand, if I will choose the 2 with the best fitness, I will always choose the same! (Maybe child  of them , but most of my population will never be choosed!).</p>\n\n<p>What I miss?</p>\n\n<p>I also need some advise on how to calculate fitness. The parameters are the amount of waypoints each van collect and the total time.</p>\n\n<p>My problem here is becuase there are unit that don\'t manage to collect any points and thus thier fitness is 0 and step by step my array full with 0....(I am working with the code here : <a href="http://www.ptsp-game.net/" rel="nofollow">http://www.ptsp-game.net/</a> ant there is problem of time exceed..)</p>\n', 'ViewCount': '56', 'Title': 'Evolutionary algorithm - how to select the parents', 'LastEditorUserId': '472', 'LastActivityDate': '2014-02-05T14:23:17.103', 'LastEditDate': '2014-02-05T14:23:17.103', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '8546', 'Tags': '<traveling-salesman><genetic-algorithms>', 'CreationDate': '2013-06-13T05:07:01.893', 'Id': '12648'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I\'m currently writing my thesis, which uses genetic algorithms at some point.\nNow I need to define some parameters for the genetic algorithm </p>\n\n<p>I know that, because of the <a href="http://en.wikipedia.org/wiki/No_free_lunch_theorem" rel="nofollow">No Free Lunch Theorem</a> there is no optimal parameter configuration for all problems.</p>\n\n<p>However I do need some default parameters, because finding the optimal parameters is out of scope of my paper.\nAlso I don\'t want to use random values as these parameters.</p>\n\n<p>I would prefer to reuse parameters used in some well trusted sources in the field of genetic algorithms.\nThen I could rely on these cited sources and reuse these parameters.</p>\n\n<p>I need default values for these parameters:</p>\n\n<ul>\n<li>population size</li>\n<li>mutation rate</li>\n<li>number of generations</li>\n</ul>\n\n<p>I searched for papers, but am not sure which paper is well-known.\nI\'m looking for papers that are well-known and have these parameters used.\nA online available pdf is preferable.</p>\n', 'ViewCount': '273', 'Title': 'Standard Parameters for Genetic Algorithms', 'LastActivityDate': '2013-07-03T22:41:59.493', 'AnswerCount': '3', 'CommentCount': '2', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '8992', 'Tags': '<genetic-algorithms>', 'CreationDate': '2013-07-03T13:32:01.630', 'Id': '13062'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I'm writing a program (using genetic algorithms) that finds sort-of-optimal scheduling plan for a factory.</p>\n\n<ul>\n<li>The factory has several types of machines (say, <code>locksmith, miller, welding</code>)</li>\n<li>There are few machines of each type. (say, <code>3 locksmiths, 2 millers, 3 welders</code>)</li>\n<li>There are several types of operations (some machines do more than one operation on the job, say, <code>locksmith does soldering and assembling</code>).</li>\n<li>The jobs on the machines have different times, all known beforehand.</li>\n<li>The jobs have dependencies on jobs done before (say, <code>a product's made of 10 screws and 4 subparts, each of which needs 4 screws</code>).</li>\n</ul>\n\n<p>From what I searched, this looks sort of like a Flow Shop problem. The difference is in the dependencies and in the same machine doing different operations with different times on a job.</p>\n\n<hr>\n\n<h2>My main question is:</h2>\n\n<p><strong>Is there some kind of a classification of these problems?</strong> A summary telling the differences?</p>\n\n<p>For example, I don't understand much of how do these differ: Open Shop, Job Shop, Flow Shop, Permutation Flow Shop. And whether or not I missed something similar that could fit better to my problem.</p>\n\n<hr>\n\n<p>As a side question, what approach do you think could help me best with the unusual requirements I've posted above? I'm writing my current approach below.</p>\n\n<p>So far I've been able to work with the tree of dependencies without regard to the makespan times: just making a plan - a list of IDs, really - of what comes after what, from looking at the tree of what's been done so far and what are the leaves (nodes having done all their dependencies).</p>\n\n<p>This allows for fast creation of meaningful individuals in the Genetic Algorithm population, but there seems to be no computationally cheap way to learn the individual's makespan time (which I have as the fitness function).</p>\n\n<p>For that I have to create a calendar, or Gantt chart, if you will, to which I put the operations on the jobs in the earliest place possible, in the machine queue that's free at that moment, etc. The whole plan has to materialize and that seems the most costly computation of the whole problem.</p>\n", 'ViewCount': '234', 'Title': 'Classification of job shop scheduling problems', 'LastActivityDate': '2013-07-23T01:50:49.417', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '13366', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '9122', 'Tags': '<optimization><scheduling><heuristics><genetic-algorithms>', 'CreationDate': '2013-07-11T03:03:06.187', 'Id': '13219'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I've had a bit of experience programming Neural networks but I am fairly new with genetic algorithms (I'm only 17). I have a major issue that I can't understand. If a child get's one chromatid from one parent and another from another parent, then the genes are crossed over, how do you determine which alleles are active in the child? How do other people go about mating with genetic algorithms. No need to go deep into it because I also want to work somethings out for myself but a general idea would be good enough. Thanks in advance.</p>\n", 'ViewCount': '106', 'Title': "Something I don't understand about Genetic Algorithms", 'LastActivityDate': '2013-08-04T12:46:31.363', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '13595', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '9506', 'Tags': '<artificial-intelligence><neural-networks><genetic-algorithms>', 'CreationDate': '2013-08-04T12:05:08.643', 'Id': '13594'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>For example, I've a chromosome with 10 genes, the first 5 genes represent a specific property of phenotype and the last 5 genes represent another property of phenotype.</p>\n\n<p>So, I need a crossover operator that performs the cross considering this configuration, where the parent1's first 5 genes are cross with parent2's first 5 genes and the same for the last 5 genes.</p>\n\n<p>Is there any paper or description of a crossover operator to perform cross in this kind of chromosome?</p>\n", 'ViewCount': '26', 'Title': 'Is there a crossover operator to cross sections of specific phenotype genes?', 'LastEditorUserId': '9766', 'LastActivityDate': '2013-08-21T13:49:28.587', 'LastEditDate': '2013-08-21T13:49:28.587', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '9766', 'Tags': '<genetic-algorithms>', 'CreationDate': '2013-08-21T12:43:40.503', 'Id': '13852'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': u"<p>I have a genetic algorithm in Java and I'm testing new types of selections.</p>\n\n<p>For my tests I'm using the De Jong Half Sphere, my fitness function is $x^2 + y^2$.</p>\n\n<p>The selection method used is Sigma scaling : </p>\n\n<pre><code>fscaled = S + (fraw \u2212fmean)/2\u03c3\n</code></pre>\n\n<p>Example using S=1</p>\n\n<pre><code> - a) Fitness = 5.927822124 |  After Scaling = 0.900756351532265  | 17.74410992 %\n - b) Fitness = 3.431749363 |  After Scaling = 0.5720553077878213 | 10.27246375 %\n - c) Fitness = 8.428103101 |  After Scaling = 1.2300115637030606 | 25.22835279 %\n - d) Fitness = 2.548825744 |  After Scaling = 0.455785494144756  | 7.629554871 %\n - e) Fitness = 13.07076638 |  After Scaling = 1.841391282832097  | 39.12551868 %\n</code></pre>\n\n<p>I know that sigma scaling should be used with a proportional selection.</p>\n\n<ul>\n<li><p>Is this the right way to implement this type of selection?</p></li>\n<li><p>If I wanted to minimize the function instead of maximize it how can I accomplish it, should I subtract the mean to each fitness and get the percentage this way or is there a better way?</p></li>\n</ul>\n", 'ViewCount': '145', 'Title': 'How to use Sigma Scaling in a genetic algorithm', 'LastEditorUserId': '98', 'LastActivityDate': '2014-05-04T02:20:08.893', 'LastEditDate': '2014-02-03T00:18:32.670', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '11665', 'Tags': '<algorithms><genetic-algorithms>', 'CreationDate': '2013-11-27T15:44:34.027', 'FavoriteCount': '0', 'Id': '18418'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I got an amount of numbers, they are shuffled and represent the individuals.\nFor example (3,1,3,2,5,22,5) is one individual or (22,3,1,3,5,5,2).</p>\n\n<p>Mutation is done quite easy by permutation within an individual.</p>\n\n<p>The problem is to find a crossover method between 2 individuals, in which the quantity of the values stay the same(for the above example 2 times 3, 2 times 5, 1 time 22 and so on).<br/> I searched a lot on it but only found crossover methods for either unordered / ordered lists. Those for ordered lists seemed promising but they require that every value only occur ones.</p>\n\n<p>Do you know a method to solve this problem or got an idea for altering an crossover for ordered list method like PMX?</p>\n', 'ViewCount': '57', 'Title': 'Crossover method for genetic algorithm', 'LastActivityDate': '2013-11-27T23:32:23.200', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '11601', 'Tags': '<algorithms><genetic-algorithms>', 'CreationDate': '2013-11-27T23:32:23.200', 'Id': '18429'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I have a problem whose solution can be written as a binary string with a given length $N$, where $N$ is a given parameter. Standard GA works well on this problem. From runs of small values $N$, I found that optimal solutions are binary strings that contain only 01 or 011. For example, the optimal solution for $N=16$ is <code>0101011010101101</code>. So I think it would be a good idea to only search the solutions space where all solutions/chromosomes only contain 01 or 011. But clearly the standard GA cannot restrict the search in the subspace I desire. One mutation or one crossover will make the new solution go into the larger solution space.</p>\n\n<p>My question is: is there a way to adapt the standard GA to restrict its solution space to one where the chromosomes contain only 01 or 011?</p>\n', 'ViewCount': '99', 'Title': 'A genetic algorithm modified for a specific problem', 'LastEditorUserId': '472', 'LastActivityDate': '2014-01-30T15:55:12.573', 'LastEditDate': '2014-01-30T15:55:12.573', 'AnswerCount': '3', 'CommentCount': '3', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '12564', 'Tags': '<algorithms><optimization><genetic-algorithms>', 'CreationDate': '2014-01-03T12:57:36.797', 'Id': '19484'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I\'ve been looking into computer assisted music composition lately for my school project. While searching for literature I came across <a href="http://igm.rit.edu/~jabics/GenJam94/Paper.html" rel="nofollow">GenJam</a>, an interactive jazz improvisation software which uses genetic algorithms to produce musical phrases. </p>\n\n<p>I was wondering If anyone has done some work on computer generated music and could suggest term papers, books or other reading material I should look into. </p>\n', 'ViewCount': '72', 'Title': 'Computer Music Composition', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-31T22:36:37.800', 'LastEditDate': '2014-01-31T10:52:11.543', 'AnswerCount': '2', 'CommentCount': '3', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '13272', 'Tags': '<algorithms><reference-request><genetic-algorithms>', 'CreationDate': '2014-01-31T10:24:17.680', 'FavoriteCount': '1', 'Id': '20150'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '80', 'Title': 'Genetic algorithm: What is the expected number of strings that are explored?', 'LastEditDate': '2014-01-31T12:10:35.870', 'AnswerCount': '2', 'Score': '3', 'OwnerDisplayName': 'Remi.b', 'PostTypeId': '1', 'OwnerUserId': '13275', 'Body': "<p>My question concerns genetic algorithm searching along bit strings.</p>\n\n<p>Given:</p>\n\n<ul>\n<li>$N$ = population size</li>\n<li>$l$ = length of bit strings</li>\n<li>$p_c$ = probability that a single crossover occur (double crossover never occur)</li>\n<li>$p_m$ = probability for a given bit that a mutation occur</li>\n</ul>\n\n<p>$w(x)$, the fitness function is equal to the number of 1 in the strings. Therefore, the fitness can take any integer value between 0 and $l$ (the length of the strings).</p>\n\n<p>My question is (three ways of formulating the same question):</p>\n\n<ul>\n<li>What is the expected total number of possibilities explored in $G$ generations?</li>\n</ul>\n\n<p>or</p>\n\n<ul>\n<li>What is the expected proportion of the total possibility space (which equals $2^l$) that is explored in $G$ generations?</li>\n</ul>\n\n<p>or</p>\n\n<ul>\n<li>What is the expected size of the subset of strings that have ever existed in the population during a simulation that last $G$ generations?</li>\n</ul>\n\n<p>Secondary questions:</p>\n\n<ul>\n<li>How does the frequency distribution - of the total number of possibilities explored in $G$ generation - looks like?\n<ul>\n<li>is it a normal (Gauss) distribution?</li>\n<li>Is it skewed?</li>\n<li>...</li>\n</ul></li>\n</ul>\n\n<hr>\n\n<p>I don't quite know how complex is my question. Here are two assumptions that one would like to consider in order to ease the problem.</p>\n\n<ul>\n<li><p>one might want to assume that the population at start is not randomly drawn from the possibility space. He could assume that the whole population is made of identical strings (only one instance). For example, the string <code>000000000</code> (which length equals $l$).</p></li>\n<li><p>one might want to assume that $p_c = 0$</p></li>\n</ul>\n", 'Tags': '<algorithms><optimization><average-case><genetic-algorithms>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-31T17:51:05.043', 'CommentCount': '3', 'AcceptedAnswerId': '20153', 'CreationDate': '2014-01-31T00:26:34.640', 'Id': '20152'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I have a genetic algorithm for an optimization problem.\nI plotted the running time of the algorithm on several runs on the same input and the same parameters (population size, generation size, crossover, mutation). </p>\n\n<p>The execution time changes between executions.\nIs this normal?</p>\n\n<p>I also noticed that against my expectation the running time sometimes decreases in place of increasing when I run it on a larger input.\nIs this expected?</p>\n\n<p>How can I analyze the performance of my genetic algorithm experimentally?</p>\n', 'ViewCount': '93', 'Title': 'How to analyze the performance of a genetic algorithm experimentally?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-10T23:51:30.663', 'LastEditDate': '2014-02-09T22:59:55.253', 'AnswerCount': '1', 'CommentCount': '4', 'Score': '2', 'OwnerDisplayName': 'user2963216', 'PostTypeId': '1', 'Tags': '<algorithm-analysis><genetic-algorithms><algorithm-engineering>', 'CreationDate': '2014-01-07T13:02:11.520', 'FavoriteCount': '1', 'Id': '21352'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I\'m trying to write some little code (POC for the selection/mutation operators) that uses a genetic algorithm to solve a global maximum for a function.</p>\n\n<pre><code>f(x_1...x_n) = M - (x_1 - a_1)^2 - (x_2 - a_2)^2 - ... - (x_n - a_n)^2\n</code></pre>\n\n<p>M a_i are constants. I have to find x_i such that f(x_i) = max(f) = M</p>\n\n<p>My selection method is truncation (I select the top 100 fittest of a population of 500).\nMy crossover method is average. there is a 80% chance for crossover, other wise one of the parents is passed on.\nMy elite count is 5 (1% of the population)\nThere is a 3% chance for a mutation for an individual, the range of the mutation is [-0.3, 0.3]</p>\n\n<p>My fitness function is f it self and my stopping condition is ABS(previous best fitness - current best fitness) &lt;= 10^(-21)</p>\n\n<p>You can find the code I wrote <a href="https://bitbucket.org/nocgod/ga-testing" rel="nofollow">here</a>.</p>\n\n<p>The problem is that it converges before it reaches even an approximate solution.</p>\n\n<p>What can I change in the solution approach so that the algorithm would converge on the maximum(f)?\n(This is not my algorithm, it\'s a reduction of a problem I have at work.)</p>\n', 'ViewCount': '49', 'ClosedDate': '2014-02-18T21:38:38.293', 'Title': 'Genetic algorithm fitness function', 'LastEditorUserId': '14811', 'LastActivityDate': '2014-02-19T12:52:37.320', 'LastEditDate': '2014-02-19T12:52:37.320', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '14811', 'Tags': '<algorithms><optimization><heuristics><genetic-algorithms>', 'CreationDate': '2014-02-18T16:16:47.953', 'Id': '21776'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I've been looking into diploid genetic algorithms for a while.</p>\n\n<p>Although, it seems like an implementation which includes diploid (dominant/recessive) genes is closer to the implementation that has been running successfully for billions of years in nature, <strong>does it offer any <em>real</em> advantages in GA?</strong></p>\n\n<p>In nature, 'Diploidness' of genes ensures that recessive genes are preserved, even when they are not expressed for generations: Just in case a scenario occurs where organisms having the genes would be more successful than the organisms with the dominant gene.</p>\n\n<p>In GA, by implementing elitism and bringing back organisms from past generations to the current population at random (perhaps based on a '<em>resurrection factor</em> ') should replicate the effects of diploidness, Right?</p>\n\n<p>Or is there some other advantage that diploid nature of genes offers?</p>\n\n<p>Please cite your sources, if possible.</p>\n", 'ViewCount': '26', 'ClosedDate': '2014-04-01T21:57:53.547', 'Title': 'Does using diploid (dominant/recessive) genes in genetic algorithm offer any advantage?', 'LastEditorUserId': '9479', 'LastActivityDate': '2014-02-25T03:14:55.333', 'LastEditDate': '2014-02-25T03:14:55.333', 'AnswerCount': '0', 'CommentCount': '3', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '9479', 'Tags': '<optimization><artificial-intelligence><genetic-algorithms>', 'CreationDate': '2014-02-19T14:41:52.503', 'Id': '21814'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>How can one select the proper number of parameters for a genetic algorithm to model a given system?</p>\n\n<p>For example, say you want to optimize production of cars, and you have 1,000 measurements of hourly efficiency at various tasks for each of 1,000 different employees.  So, you have 1,000,000 data points.  Most of these are likely to be weakly correlated to the overall efficiency of your factory, but not <em>so</em> weakly that you can say they are irrelevant with statistical confidence.  How do you go about picking inputs for your GA so that you don't have 1,000,000+ degrees of freedom, resulting in very slow convergence or no convergence at all?</p>\n\n<p>Specifically, what are the algorithms one could use to pre-select or selectively eliminate features?</p>\n\n<p>One approach I have used myself in this scenario is to evolve the parameter selection itself, so I might have parents like <code>{a,b,c}</code>, <code>{b,d,e,q,x,y,z}</code>, and so on. I would then mutate the children to add or drop features. This works well for a few dozen features. But the problem is that it is inefficient if there is a large number of degrees of freedom. In that case, you are looking at <code>10^n</code> combinations (in the example above, <code>10^1,000,000</code>), which makes some pre-filtering of features critical to get any kind of useful performance.</p>\n", 'ViewCount': '20', 'Title': 'Selection of parameters for genetic algorithm', 'LastActivityDate': '2014-02-24T18:15:42.303', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '21976', 'Score': '8', 'OwnerDisplayName': 'Ed Cottrell', 'PostTypeId': '1', 'OwnerUserId': '11946', 'Tags': '<genetic-algorithms>', 'CreationDate': '2014-02-05T21:37:40.020', 'Id': '21974'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>In most implementations of genetic algorithms, the focus is on crossover and mutation. But somehow, most of them leave out diploid (dominant/recessive) nature of genes. As far as my (limited) understanding goes dominant/recessive nature of genes is a very important factor in deciding the actual characteristics of an organism.</p>\n\n<p>So my question is why is the diploid nature of genes left out of genetic algorithms in most implementation?</p>\n\n<p>Is it because:</p>\n\n<ul>\n<li>it doesn't provide much benefit </li>\n<li>it adds unnecessary complexity to an otherwise simple algorithm</li>\n<li>it's difficult to implement</li>\n</ul>\n\n<p>Or something else entirely? </p>\n", 'ViewCount': '40', 'Title': 'Why are diploid (dominant/recessive) genes not used widely in genetic algorithms?', 'LastActivityDate': '2014-02-24T18:17:57.267', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '11', 'OwnerDisplayName': 'Shayan RC', 'PostTypeId': '1', 'OwnerUserId': '9479', 'Tags': '<machine-learning><genetic-algorithms>', 'CreationDate': '2014-02-18T13:17:26.417', 'Id': '21991'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I've written a genetic algorithm (GA) that solves a 7-dimensional optimisation problem.  All seven variables are floating point numbers.  The problem is that the entire population seems to converge to very nearly the same point in the solution space within about 20 generations, even if I increase the population size by 10x.</p>\n\n<p><strong>Attempted solutions</strong></p>\n\n<p>Starting with a parent population $\\vec{x}^{(j)}$, where $j$ is the individual's index in the population, I take the best 10% (i.e. highest fitness scores) to reproduce.  First I perform cross-over producing 2 children for every randomly selected pair of parents.  The parents can be re-used (is that a problem?).  About 5% of the children get mutated randomly.</p>\n\n<p>I've tried two variations of cross-over but both have the same problem:</p>\n\n<ol>\n<li><p>Calculating a 7 element weights vector $[w_i]$ and calculating the children's elements as $c_i^{(1)}=w_i x_i^{(1)} + (1-w_i)x_i^{(2)}$ and $c_i^{(2)}=(1-w_i)x_i^{(1)} + w_i x_i^{(2)}$.  The parents ith elements are $x_i^{(1)}$ for parent 1 and $x_i^{(2)}$ for parent 2.  Each weight is a sample from a uniform random variable in $[0.0;1.0)$.</p></li>\n<li><p>Confining the weights $w_i$ to be either $0.0$ or $1.0$, i.e. randomly exchanging elements of the two parents genomes to create the children.</p></li>\n</ol>\n\n<p>The mutation operation consists of randomly choosing one of the child's 7 elements and adding some Gaussian noise to it.  The standard deviation of that noise differs for each element since the elements have different physical units.</p>\n\n<p>Afterwards, I evaluate the fitness of the children and keep the best few hundred or thousand (setting that I choose at the start of the algorithm) out of the combined population of parents and children to give the next generation.  Note that the parents do not get mutated, especially since I want to preserve the best from the parent generation in case none of the children improve on it.</p>\n\n<p>I've tried population sizes from 1024 to 20480 and have also tried increasing the probability of mutating a child from 5% to 50% but I still have the problem that all the individuals in the population become very similar within the first 20 or so iterations.  Please advise on what I'm doing wrong.</p>\n\n<p>I should point out that the algorithm, despite this problem, does get fairly close to the optimal solution.  I know this because the quantity to maximise is the correlation between between two things (no more details, sorry) and I can get to about 0.94 (the maximum physically possible is always 1.0).  However, I am concerned that the GA is not covering enough of the solution space, causing it to miss the global maximum.</p>\n\n<p><strong>My questions</strong></p>\n\n<ol>\n<li>Are either of the above cross-over methods correct?</li>\n<li>Is it ok to re-use parents in cross-over?  Stated another way, is polygamy a good idea in this algorithm or should I change that part to ensure that no parent gets used more than once?</li>\n<li>Should I mutate the parents as well?</li>\n<li>What should I do with the 90% of parents that did not get used in the reproduction?</li>\n</ol>\n", 'ViewCount': '72', 'Title': 'How to stop genetic algorithm population converging to a single value', 'LastActivityDate': '2014-03-03T21:17:23.897', 'AnswerCount': '1', 'CommentCount': '5', 'AcceptedAnswerId': '22238', 'Score': '2', 'OwnerDisplayName': 'chippies', 'PostTypeId': '1', 'OwnerUserId': '15228', 'Tags': '<optimization><genetic-algorithms>', 'CreationDate': '2014-02-19T15:05:28.010', 'Id': '22216'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I am trying to write a genetic algorithm for a program. Most examples for genetic algorithms use something like this as the input:</p>\n\n<pre><code>aaaaaaaaaa\n</code></pre>\n\n<p>and mutate/crossover until they get</p>\n\n<pre><code>helloworld\n</code></pre>\n\n<p>or similar. This requires however that you start with something of length N, but my search space doesn't have a fixed length. How should I alter the mutation/crossover steps to allow for changes in unit size?</p>\n", 'ViewCount': '15', 'Title': 'Programming a genetic algorithm with a non-fixed size', 'LastEditorUserId': '98', 'LastActivityDate': '2014-05-02T21:29:08.760', 'LastEditDate': '2014-05-02T21:25:18.507', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '17279', 'Tags': '<algorithms><optimization><genetic-algorithms>', 'CreationDate': '2014-05-02T17:10:57.277', 'Id': '24320'}