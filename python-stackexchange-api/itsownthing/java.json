227_0:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '191', 'Title': 'Is the type inference here really complicated?', 'LastEditDate': '2012-07-17T06:14:48.490', 'AnswerCount': '1', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '1689', 'FavoriteCount': '0', 'Body': '<p>There\'s a <a href="http://stackoverflow.com/questions/9058430/why-doesnt-immutablemap-builder-build-pick-the-correct-type-parameters">question on SO</a> asking why in Java the right type doesn\'t get picked in a concrete case. I know that Java can\'t do it in such "complicated" cases, but I\'m asking myself <em>WHY</em>?</p>\n\n<p>The (for simplicity slightly modified) line failing to compile is</p>\n\n<pre><code>Map&lt;String, Number&gt; m = ImmutableMap.builder().build();\n</code></pre>\n\n<p>and the methods are defined as<sup>1</sup></p>\n\n<pre><code>class ImmutableMap {\n    public static &lt;K1, V1&gt; Builder&lt;K1, V1&gt; builder() {...}\n    ...\n}\n\nclass Builder&lt;K2, V2&gt; {\n    public ImmutableMap&lt;K2, V2&gt; build() {...}\n    ...\n}\n</code></pre>\n\n<p>The solution <code>K1=K2=String</code> and <code>V1=V2=Number</code> is obvious to everyone but the compiler. There are 4 variables here and I can see 4 trivial equations, so what\'s the problem with type inference here?</p>\n\n<p><sup>1</sup>I simplified the <a href="http://guava-libraries.googlecode.com/git/guava/src/com/google/common/collect/ImmutableMap.java" rel="nofollow">code piece from Guava</a> for this example and numbered the type variables to make it (hopefully) clearer.</p>\n', 'Tags': '<programming-languages><typing><java><type-inference>', 'LastEditorUserId': '41', 'LastActivityDate': '2012-07-17T06:14:48.490', 'CommentCount': '5', 'AcceptedAnswerId': '2529', 'CreationDate': '2012-06-28T00:23:38.443', 'Id': '2521'},227_1:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I have a question about inheritance in Java-like OO programming languages. It came up\nin my compiler class, when I explained how to compile methods and their invocation. I was using Java as example source language to compile. </p>\n\n<p>Now consider this Java program.</p>\n\n<pre><code>class A {\n  public int x = 0;\n  void f () { System.out.println ( "A:f" ); } }\n\nclass B extends A {\n  public int x = 1;\n  void f () { System.out.println ( "B:f" ); } }\n\npublic class Main {\n  public static void main ( String [] args ) {\n    A a = new A ();\n    B b = new B ();\n    A ab = new B ();\n\n    a.f();\n    b.f();\n    ab.f();\n    System.out.println ( a.x );\n    System.out.println ( b.x );\n    System.out.println ( ab.x ); } }\n</code></pre>\n\n<p>When you run it, you get the following result.</p>\n\n<pre><code>A:f\nB:f\nB:f\n0\n1 \n0\n</code></pre>\n\n<p>The interesting cases are those that happen with the object <code>ab</code> of\nstatic type <code>A</code>, which is <code>B</code> dynamically. As <code>ab.f()</code> prints out</p>\n\n<pre><code>B:f\n</code></pre>\n\n<p>it follows that method invocations are not affected by the compile-time type of the object the method is invoked with.  But\n<code>System.out.println ( ab.x )</code> prints out <code>0</code>, so member access is affected by compile-time types. </p>\n\n<p>A student asked about this difference: should not the access of members and methods be\nconsistent with each other?\nI could not come up with a better answer than "that\'s the semantics of Java".</p>\n\n<p>Would you know a crisp <em>conceptual</em> reason why members and methods are\ndifferent in this sense? Something I could give my students?</p>\n\n<p><strong>Edit</strong>: Upon further investigation, this seems to be a Java idiosyncrasy: C++ and C# act differently, see e.g. Saeed Amiri\'s comment below.</p>\n\n<p><strong>Edit 2</strong>: I just tried out the corresponding Scala program:</p>\n\n<pre><code>class A {\n  val x = 0;\n  def f () : Unit = { System.out.println ( "A:f" ); } }\n\nclass B extends A {\n  override val x = 1;\n  override def f () : Unit = { System.out.println ( "B:f" ); } }\n\nobject Main {\n  def main ( args : Array [ String ] ) = {\n    var a : A = new A ();\n    var b : B = new B ();\n    var ab : A = new B ();\n    a.f();\n    b.f();\n    ab.f();\n    System.out.println ( "a.x = " + a.x );\n    System.out.println ( "b.x = " + b.x );\n    System.out.println ( "ab.x = " + ab.x ); } }\n</code></pre>\n\n<p>And to my surprise this results in</p>\n\n<pre><code>A:f\nB:f\nB:f\na.x = 0\nb.x = 1\nab.x = 1\n</code></pre>\n\n<p>Note that the <code>overrise</code> modifiers are necessary. This surprises me because Scala compiles to the JVM, and moreover, when I compile and execute the Java program at the top using the Scala compiler/runtime, it behaves like the Java program. </p>\n', 'ViewCount': '270', 'Title': 'Inheritance, and dynamic access to members/attributes and methods in Java-like languages', 'LastEditorUserId': '39', 'LastActivityDate': '2014-03-24T13:58:31.023', 'LastEditDate': '2014-03-24T13:58:31.023', 'AnswerCount': '3', 'CommentCount': '5', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '2887', 'Tags': '<programming-languages><semantics><typing><object-oriented><java>', 'CreationDate': '2012-11-20T13:08:40.163', 'FavoriteCount': '1', 'Id': '6782'},227_2:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': u'<p><strong>Introduction</strong><br>\nFor a paper I need contracts, which are also referred to as Design by Contract (DbC)<a href="http://www.eclipse.org/forums/index.php?t=thread&amp;frm_id=157" rel="nofollow">1</a>, and conceptually go back to Hoare[2]. For my work I need to apply contracts to Java bytecode. The question is only about using contracts on Java bytecode, nothing more.</p>\n\n<p>If you ask, why do you want to use contracts on Java bytecode, there is a reason. The reason is that I use a Java extension. This Java extension takes source code consisting of extended Java code, from which it generates bytecode. I want to use this Java extension and additionally I want to use contracts. The extension doesn\'t support contracts. So I have my extended Java code, I apply to it the compiler of the Java extension and I get Java bytecode. On this resulting bytecode I want to apply contracts. </p>\n\n<p>The Java extension is called Object Teams[4], also called eclipse object teams. The Java extension allows to use dynamic collaborations and aspects, which are not part of regular Java code. </p>\n\n<p>Right now I only need a hack or workaround to get one or two small examples working.</p>\n\n<p><strong>My idea so far:</strong><br>\nThis is irrelevant to the question. But it shows that my current plan is cumbersome and I need a better solution (thus the question). Also, perhaps someone has worked with JML/OpenJML and might know how to do this plan but better. </p>\n\n<p>There is a tool for contracts for Java language. The tool is called java modeling language(JML)[3][5]. The tool does not support contract for Java bytecode. The tool only supports contracts on Java source code. I want to rewrite part of the tool to support contracts on java bytecode (a solution to my question but a cumbersome one).</p>\n\n<p>Currently there is only one working version of the java modeling language(JML), which is called OpenJML[6]. I plan to use OpenJML on Java bytecode (remember, OpenJML doesn\'t support contracts for bytecode, only contracts for Java source code). I don\'t want to use contracts on any bytecode. I want to use contract on bytecode that is generated by a Java extension. (The Java extension is called ObjectTeams, but this is irrelevant for the question).</p>\n\n<p>(Annotations mean annotations that are part of the Java language, e.g., "@Overrides".)</p>\n\n<p>The approach would be to search for specific annotations in the bytecode that is generated by a Java extension. Those specific annotations specify contracts. I have to look for the specific annotations in the bytecode (bytecode that is generated by a Java extension), compile them to Java guard expressions, i.e., code that throws an exception if the contracts are not honored. I can get the compiled Java guard expression by using the library behind OpenJML. Then I need to add the byte code of the Java guard expression at the place where I found the specific annotations that represent contracts. </p>\n\n<p><strong>My question:</strong><br>\nUsing OpenJML seems possible, but difficult to achieve. Right now I just need a solution that works for one or two small examples, so the solution can be a hack or just a temporary solution. As my approach via OpenJML is probably difficult to achieve and further will take quite some time, I look for different solutions.</p>\n\n<p><strong>Question:</strong> <em>What options would you recommend to apply contracts (design by contract) for java bytecode?</em></p>\n\n<p>Requirements:  </p>\n\n<ol>\n<li>a up to date tool or library (i.e., not a project where development\nhas ceased or stopped three years ago)</li>\n<li>ideally, it should be straightforward to use the tool or library\n(i.e., not a project with zero or almost no documentation)</li>\n</ol>\n\n<h2>--</h2>\n\n<hr>\n\n<p><em><strong>Update / Clarification:</em></strong>  </p>\n\n<ul>\n<li>I forgot to mention that don\'t need any form of static checking. I<br>\nonly need to check  that the contracts hold during run time. Further\nI only need to use very basic contracts (pre- and postcondition,<br>\ninvariants) applied to only a few methods of my program.</li>\n<li>As Dave as pointed out in the comments, there may be another option\nto apply contracts together with Object Teams. This would mean\nmodifying or extending Object Teams and the CoreJDT module of Object\nTeams (it\'s in the comments).</li>\n<li>I also got <a href="http://www.eclipse.org/forums/index.php?t=thread&amp;frm_id=157" rel="nofollow">a reply from the creator of Object Teams</a> that using JML and Object Teams together via JDT isn\'t an easy fix.</li>\n</ul>\n\n<p>References:</p>\n\n<p><a href="http://www.eclipse.org/forums/index.php?t=thread&amp;frm_id=157" rel="nofollow">1</a> B. Meyer. Applying Design by Contract. Computer, 25(10):40{51, 1992.</p>\n\n<p>[2] C. A. R. Hoare. Proof of correctness of data representations. Acta Informatica, 1(4):271\u201381, 1972.</p>\n\n<p>[3] Lilian Burdy, Yoonsik Cheon, David R. Cok, Michael Ernst, Joseph R.Kiniry, Gary T. Leavens, K. Rustan M. Leino, and Erik Poll. An overviewof JML tools and applications. International Journal on Software Tools for Technology Transfer (STTT), 7(3):212\u2013232, 2005.</p>\n\n<p>[4] <a href="http://www.eclipse.org/objectteams/" rel="nofollow">http://www.eclipse.org/objectteams/</a> </p>\n\n<p>[5] <a href="http://www.eecs.ucf.edu/~leavens/JML//index.shtml" rel="nofollow">http://www.eecs.ucf.edu/~leavens/JML//index.shtml</a> </p>\n\n<p>[6] <a href="http://jmlspecs.sourceforge.net/" rel="nofollow">http://jmlspecs.sourceforge.net/</a></p>\n', 'ViewCount': '101', 'Title': 'Contracts for Java Bytecode', 'LastEditorUserId': '1829', 'LastActivityDate': '2013-07-07T21:46:18.590', 'LastEditDate': '2013-07-07T18:12:30.883', 'AnswerCount': '1', 'CommentCount': '7', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '1829', 'Tags': '<programming-languages><formal-methods><object-oriented><java>', 'CreationDate': '2013-07-07T03:32:32.007', 'FavoriteCount': '1', 'Id': '13121'},227_3:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': u'<p>While studying for a test in my OOP course, I came upon this question which had an answer I didn\'t really understand. The question is as follows (translated):</p>\n\n<p>The programming language "Sava" is similar to Java in every way except in the following: </p>\n\n<ol>\n<li>It\'s structurally typed</li>\n<li>When overriding a method the argument can be contravariant and the return type can be covariant.  </li>\n</ol>\n\n<p>Given the following class and interface, is the following assignment legal?</p>\n\n<pre><code>  interface I{\n    boolean equals(I i){\u2026}\n  } \n\n  class C{\n    boolean equals(C c){\u2026}\n  }\n\nI i = new C();\n</code></pre>\n\n<p>The answer that was given to this question was:\nThe assignment isn\'t legal. The equals method in C changes the paramater in a covariant way and so it doesn\'t match the equals method in I.</p>\n\n<p>At first I thought the professor forgot to add "Implements I" but the answer also stated the following:\nAnswers that refereed to the fact that C doesn\'t implement I weren\'t accepted because given that it\'s a Structurally Typed language it doesn\'t matter if it were a subtype. </p>\n\n<p>I\'m not sure I understand how we can refer to these methods as covariant / contravariant if there is no relation of subtyping between C and I. </p>\n\n<p>Can anyone clear this up for me?</p>\n', 'ViewCount': '112', 'Title': 'Java, strong typing, covariance and contra-variance', 'LastActivityDate': '2013-10-17T16:29:03.723', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '10801', 'Tags': '<type-theory><java>', 'CreationDate': '2013-10-16T20:52:01.983', 'Id': '16148'},227_4:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I have Java function as input and want to get it's order for example O( n ) \nI search in the internet very hard but didn't find any thing can help me, is there any algorithms or package may help me.</p>\n", 'ViewCount': '100', 'ClosedDate': '2014-02-17T10:37:05.783', 'Title': 'Code to get java code complexity', 'LastActivityDate': '2014-02-15T01:05:39.453', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '14684', 'Tags': '<algorithms><java>', 'CreationDate': '2014-02-15T00:59:16.727', 'FavoriteCount': '1', 'Id': '21650'},227_5:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>error: variable area might not have been initialized</p>\n\n<p>My code is basically:</p>\n\n<pre><code>double area;\n//do some stuff to area...\nreturn area;\n</code></pre>\n\n<p>I thought Java always defaults variables when you declare them (ie - ints to 0, doubles to 0.0, etc.). If so, then why do I get this compiler error? I am still pretty new to Java so thanks for helping to clarify this basic question.</p>\n', 'ViewCount': '13', 'ClosedDate': '2014-04-29T08:32:59.217', 'Title': 'Why do I get an un-initialized variable error at compile time if Java defaults doubles to zero?', 'LastActivityDate': '2014-04-29T05:43:46.970', 'AnswerCount': '0', 'CommentCount': '1', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '14590', 'Tags': '<java>', 'CreationDate': '2014-04-29T05:43:46.970', 'Id': '24213'}