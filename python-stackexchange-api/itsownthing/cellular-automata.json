{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': u"<p>Let's take as an example the 3d \u2192 2d reduction: What's the cost of simulating a 3d cellular automaton by a 2d cellular automaton?</p>\n\n<p>Here is a bunch of more specific questions:</p>\n\n<ol>\n<li><p>What kind of algorithms will have their time complexity changed, by how much?</p></li>\n<li><p>What would be the basic idea for the encoding; how is a 3d grid efficiently (or not efficiently\u2026) mapped to a 2d grid? (The challenge seems to achieve communication between two cells that where originally neighbors on the 3d grid, but are not neighbors anymore on the 2d grid). </p></li>\n<li><p>In particular, I'm interested in the complexity drift for exponential complexity algorithms (which I guess remains exponential whatever the dimension, is it the case?)</p></li>\n</ol>\n\n<p>Note: I'm not interested in low complexity classes for which the chosen I/O method has an influence on complexities. (Maybe the best is to assume that the I/O method is dimensionless: done locally on one specific cell during a variable amount of time steps.) </p>\n\n<hr>\n\n<p><em>Some context: I'm interested in parallel local graph rewriting, but those graphs are closer to 3d (or maybe \u03c9d\u2026) grids than to 2d grids, I'd like to know what to expect of a hardware implementation on a 2-dimentional silicon chip.</em></p>\n", 'ViewCount': '84', 'Title': 'Influence of the dimension of cellular automata on complexity classes', 'LastEditorUserId': '31', 'LastActivityDate': '2012-03-12T20:44:04.593', 'LastEditDate': '2012-03-12T17:34:06.217', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '254', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '68', 'Tags': '<complexity-theory><time-complexity><cellular-automata>', 'CreationDate': '2012-03-12T16:49:47.177', 'Id': '245'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>I wonder whether the massively parallel computation units provided in graphic cards nowadays (one that is programmable in <a href="http://en.wikipedia.org/wiki/OpenCL" rel="nofollow">OpenCL</a>, for example) are good enough to simulate 1D cellular automata (or maybe 2D cellular automata?) efficiently.</p>\n\n<p>If we choose whatever finite grid would fit inside the memory of the chip, can we expect one transition of a cellular automaton defined on this grid to be computed in (quasi)constant time?</p>\n\n<p>I assume 2D cellular automata would require more bandwidth for communication between the different parts of the chips than 1D automata.</p>\n\n<p>I\'d also be interested by the same question in the case of FPGA programming or custom chips.</p>\n', 'ViewCount': '317', 'Title': "Are today's massive parallel processing units able to run cellular automata efficiently?", 'LastEditorUserId': '68', 'LastActivityDate': '2012-09-28T19:50:44.353', 'LastEditDate': '2012-09-17T14:03:09.767', 'AnswerCount': '3', 'CommentCount': '3', 'Score': '10', 'PostTypeId': '1', 'OwnerUserId': '68', 'Tags': '<computer-architecture><parallel-computing><cellular-automata>', 'CreationDate': '2012-03-12T22:02:55.090', 'FavoriteCount': '2', 'Id': '256'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'ViewCount': '717', 'Title': 'How is the rule 110 Turing complete?', 'LastEditDate': '2012-09-30T00:59:44.817', 'AnswerCount': '1', 'Score': '4', 'OwnerDisplayName': 'Pureferret', 'PostTypeId': '1', 'OwnerUserId': '2952', 'FavoriteCount': '3', 'Body': '<p>I\'ve read the wikipedia page for <a href="http://en.wikipedia.org/wiki/Rule_110" rel="nofollow">rule 110</a> in cellular automata, and I more or less know how they work (a set of rules decides where to draw the next 1 or 0).</p>\n\n<p>I\'ve just read they\'re Turing complete, but I can\'t even fathom how would you  \'program\' in \'rule 110\'? </p>\n', 'Tags': '<computability><automata><turing-completeness><cellular-automata>', 'LastEditorUserId': '472', 'LastActivityDate': '2012-09-30T00:59:44.817', 'CommentCount': '11', 'CreationDate': '2012-09-21T23:44:56.810', 'Id': '4779'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>In my studies in computability I have come across the notion of the "machine", an abstract representation of a device that essentially computes. I have read about Turing Machines and Wolfram\'s binary cellular automata and I understand them.ie. the rules, states, colours, etc. and how they work. They begin in some state and run forever(unless a terminating state is specified). The point I\'m trying to make here is that they receive no external input and are essentially functions of themselves:their current state is some function of its starting state, unlike realistic computers.</p>\n\n<p>For the above reasons I\'d like to know why automata are used to represent computers. More generally how can a machine be used to represent a computation?</p>\n', 'ViewCount': '81', 'Title': 'How does an automaton actually "compute"?', 'LastActivityDate': '2012-11-30T13:51:34.223', 'AnswerCount': '2', 'CommentCount': '0', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '802', 'Tags': '<computability><automata><cellular-automata>', 'CreationDate': '2012-11-30T11:26:36.597', 'Id': '7042'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>Do there exist robust structures in <a href="http://en.wikipedia.org/wiki/Conway%27s_Game_of_Life" rel="nofollow">Conway\'s Game of Life</a>?  For instance, has anyone constructed a spaceship with a shield that absorbs all small oscillators and gliders it collides with? </p>\n', 'ViewCount': '166', 'Title': "Cell walls in Conway's Game of Life?", 'LastEditorUserId': '39', 'LastActivityDate': '2012-12-07T21:12:06.567', 'LastEditDate': '2012-12-07T21:12:06.567', 'AnswerCount': '1', 'CommentCount': '4', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '4909', 'Tags': '<cellular-automata>', 'CreationDate': '2012-12-07T02:45:18.350', 'Id': '7222'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>Does there exist a cellular automaton (in 2D) which simulates a $1/r$ force between particles?</p>\n\n<p>More specifically, I would like to know whether it is possible, with strictly local update rules, to have two objects (defined within the model) attract each other with a $1/r$ force, where $r$ is the distance separating the objects.  This would in particular entail an acceleration of the object (particles) as they get closer together.</p>\n\n<p>More generally, can long range attractive forces between objects (blobs) be simulated in a cellular automaton setting with strictly local rules?</p>\n', 'ViewCount': '142', 'Title': '1/r attractive force by cellular automaton', 'LastEditorUserId': '4249', 'LastActivityDate': '2013-06-21T21:02:17.623', 'LastEditDate': '2013-05-10T13:30:34.107', 'AnswerCount': '2', 'CommentCount': '5', 'Score': '9', 'PostTypeId': '1', 'OwnerUserId': '8114', 'Tags': '<simulation><cellular-automata>', 'CreationDate': '2013-05-10T12:57:12.817', 'FavoriteCount': '3', 'Id': '11933'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>I\'m considering an automaton $A$ over a alphabet $\\Sigma$, with a set of states $Q$, such that $\\Sigma \\subset Q$, which includes special "accept" and "blank" states not in $\\Sigma$. It also has an infinite list of cells, which begins with the input string, the rest being blank. It has a transition function $\\delta: Q \\times Q \\times Q \\to Q$. The automaton computes by updating the value  of the middle cell, $a$, using $\\delta(x,a,y)$. The automaton accepts if any cell is in the accept state. From what I understand, this automaton is very similar to a 1-dimensional cellular automaton, with the addition of the accept state.</p>\n\n<p>I\'m trying to prove that a language is recognizable by a Turing machine if and only if it can be recognized by the automaton described.</p>\n\n<p>I\'ve been trying to do a proof by construction, but I\'m really lost. I did some research on cellular automata, but the material I\'ve been finding is way over my level. I know somehow I\'m going to have to construct a TM from CA, and vica versa, but I\'m not even sure how to get started. I would really appreciate any help.</p>\n', 'ViewCount': '234', 'Title': 'Proving Equivalence of 1-dimensional Cellular Automaton and Turing Machines', 'LastEditorUserId': '630', 'LastActivityDate': '2013-10-22T13:58:25.280', 'LastEditDate': '2013-10-22T13:58:25.280', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '16322', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '10448', 'Tags': '<turing-machines><cellular-automata>', 'CreationDate': '2013-10-22T04:11:52.023', 'Id': '16321'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>This question is a follow up to the question: <a href="http://cs.stackexchange.com/questions/16321/proving-equivalence-of-1-dimensional-cellular-automaton-and-turing-machines">Proving Equivalence of 1-dimensional Cellular Automaton and Turing Machines</a>.</p>\n\n<p>To simulate a CA with a TM, I used a construction which placed a marker on the ends of the input, and modeled each "step" with the transition function. Assuming that $\\rho(\\text{\'\'blank\'\'}, \\text{\'\'blank\'\'}, \\text{\'\'blank\'\'}) = \\text{\'\'blank\'\'}$, what is the time complexity of simulating a CA? I\'m only concerned with the upper bound. </p>\n\n<p>I\'m really stuck, any hints would be really appreciated.</p>\n\n<p>Edit: As recommended, I am adding a better description of the algorithm:</p>\n\n<p>On input $w = w_1 w_2 \\dots w_n$, have the TM place unique begin and end characters on each side of the input. We model a single timestamp in the CA by multiple steps of the TM. The head sweeps through the taps, replacing its contents with the contents of the CA tape in the next timestamp. We write each character one place to teh right of where it would have been in the CA. Formally, this is: </p>\n\n<blockquote>\n  <p>there are states $q_{a,b}$ for all pairs of CA states, with transitions in the form:\n  $$ q_{a,b} \\to^{c \\to \\rho(a, b, c), R} q_{b,c}$$</p>\n</blockquote>\n\n<p>after completing a single sweep, return the head to the start of the tape and repeat. Continue unless an accept character is written, in which case, enter the TM accept state.</p>\n', 'ViewCount': '77', 'Title': 'Time Complexity of Simulating CA with TM', 'LastEditorUserId': '10448', 'LastActivityDate': '2013-11-20T04:00:24.680', 'LastEditDate': '2013-11-20T04:00:24.680', 'AnswerCount': '0', 'CommentCount': '7', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '10448', 'Tags': '<complexity-theory><turing-machines><cellular-automata>', 'CreationDate': '2013-11-19T19:37:42.877', 'FavoriteCount': '1', 'Id': '18168'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>In most (all I have seen) work on cellular automata, the state of a cell is from a finite set. Such as a cell can take value from a binary set, or from among few colors. Can we define the state to be something more complicated such as a function of the coordinates of the neighbor cells? (assuming there is a initial coordinate value give to at least one cell) So for example in 2-D if my neighbor to the left has coordinate $(x,y)$ my state will take a value $f(x,y)$ where $f$ is same for all cells.</p>\n', 'ViewCount': '29', 'Title': 'Does the state of a cell in cellular automata has to be from a finite set?', 'LastActivityDate': '2014-02-14T17:37:20.480', 'AnswerCount': '0', 'CommentCount': '3', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '12321', 'Tags': '<automata><cellular-automata>', 'CreationDate': '2014-02-14T17:37:20.480', 'Id': '21638'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<ol>\n<li><p>In a given cellular automaton, such as Conway\'s Game of Life, is there anything known about how many Garden of Eden patterns there are by pattern size? Say, pattern size is n x n, what\'s the likelihood that a random pattern is a GoE as n increases? </p>\n\n<p>Also, by the Garden of Eden-theorem, only cellular automata which are non-injective, that is, for which a given pattern may have more than one predecessor, contain Gardens of Eden.</p></li>\n<li><p>Is it then in general impossible to see whether a given cellular automaton pattern at some time-step is derived from a GoE (since there could also have been a non-GoE ancestor leading to the same state)? That is, does the evolution of the CA \'wash out\' the information that it is derived from a GoE? (I hope it\'s sufficiently clear what I mean.)</p></li>\n<li><p>Furthermore, is there a relation between GoE-patterns and uncomputability/undecidability? It seems to me that if you consider the CA to be implementing some computation, then the GoEs are \'outputs that could never be produced\', at least heuristically, but a brief Google search led nowhere. Perhaps asked another way, is there a relation between the existence of GoEs and the universality of a CA? I know Life is both universal and has GoEs, but I don\'t know about the general case. Any pointers would be much appreciated.</p></li>\n</ol>\n\n<p>Having done some additional reading, I think I can strike out the third question: since reversible cellular automata that are computationally universal exist (according to <a href="http://en.wikipedia.org/wiki/Reversible_cellular_automaton#Simulation_of_irreversible_automata" rel="nofollow">wiki</a>), there doesn\'t seem to be any connection between computational universality and GoEs. Now, what about universal constructors? Are there reversible universal constructors? Von Neumann\'s original rule happens not to be reversible, and in fact, has GoEs, but again, this need not say much. </p>\n\n<p>The wikipedia page above mentions a way to emulate d dimensional irreversible CAs within d + 1 dimensional reversible ones, which readily establishes the computational universality of the latter, but I\'m not sure if this holds as well for universal construction: the emulated constructor would only construct patterns on a d-dimensional sub-grid of the automaton (?).</p>\n', 'ViewCount': '68', 'Title': 'What is the distribution of Garden of Eden patterns in cellular automata with increasing pattern size?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-12T10:59:38.620', 'LastEditDate': '2014-04-12T10:59:38.620', 'AnswerCount': '2', 'CommentCount': '1', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '15588', 'Tags': '<automata><cellular-automata>', 'CreationDate': '2014-03-12T07:23:06.393', 'FavoriteCount': '1', 'Id': '22532'}},{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>I\'m working on making patterns for a digital lava lamp (essentially, making interesting patterns using a 4x10 grid), and I\'ve been looking into cellular automata. I tried implementing some variations on <a href="http://en.wikipedia.org/wiki/Langton%27s_ant" rel="nofollow" title="Langton\'s Ant">Langton\'s Ant</a> but it tends to loop in very boring ways. Does anyone have any suggestions for interesting automata on small boards?</p>\n\n<p>The lamp I\'m working on can be played with <a href="http://tryion.lava.io/" rel="nofollow">here</a>.</p>\n\n<p>Any suggestions on a more appropriate place to post this question are welcome.</p>\n\n<p>EDIT: By interesting, I mean patterns that work well on small boards. For example, \nLangton\'s Ant was not interesting because it always tended to find some static state over such a small board.</p>\n', 'ViewCount': '36', 'Title': 'Cellular Automata Using Small Boards', 'LastEditorUserId': '16663', 'LastActivityDate': '2014-04-12T20:50:33.153', 'LastEditDate': '2014-04-12T20:50:33.153', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '16663', 'Tags': '<automata><cellular-automata>', 'CreationDate': '2014-04-10T21:08:12.633', 'Id': '23658'}},