1700:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '450', 'Title': 'Why is Relativization a barrier?', 'LastEditDate': '2012-04-15T01:47:45.337', 'AnswerCount': '3', 'Score': '14', 'PostTypeId': '1', 'OwnerUserId': '639', 'FavoriteCount': '4', 'Body': "<p>When I was explaining the Baker-Gill-Solovay proof that there exists an oracle with which we can have, $\\mathsf{P} = \\mathsf{NP}$, and an oracle with which we can have $\\mathsf{P} \\neq \\mathsf{NP}$ to a friend, a question came up as to why such techniques are ill-suited for proving the $\\mathsf{P} \\neq \\mathsf{NP}$ problem, and I couldn't give a satisfactory answer. \\</p>\n\n<p>To put it more concretely, if I have an approach to prove $\\mathsf{P} \\neq \\mathsf{NP}$ and if I could construct oracles to make a situation like above happen, why does it make my method invalid? </p>\n\n<p>Any exposition/thoughts on this topic?</p>\n", 'Tags': '<complexity-theory><proof-techniques><relativization>', 'LastEditorUserId': '41', 'LastActivityDate': '2012-11-18T00:26:03.123', 'CommentCount': '0', 'AcceptedAnswerId': '1273', 'CreationDate': '2012-04-14T13:39:56.047', 'Id': '1271'},1701:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '543', 'Title': 'An oracle to separate NP from coNP', 'LastEditDate': '2012-05-18T16:07:06.327', 'AnswerCount': '2', 'Score': '9', 'OwnerDisplayName': 'Stefan.M', 'PostTypeId': '1', 'OwnerUserId': '1487', 'FavoriteCount': '1', 'Body': '<p>How to prove that $\\mathsf{NP}^A \\neq \\mathsf{coNP}^A$ ? I am just looking for a such oracle TM $M$ and a recursive language $L(M) = L$ for which this holds. </p>\n\n<p>I know the proof where you show that there is an oracle $A$ such that $\\mathsf{P}^A \\neq \\mathsf{NP}^A$ and an oracle $A$ such that $\\mathsf{P}^A = \\mathsf{NP}^A$. I have a hint that I should find such oracle $A$ by extending the proof of $\\mathsf{P}^A \\neq \\mathsf{NP}^A$ but wherever I search and read, it is "obvious" or "straightforward" everywhere but I just do not see how prove it at all.</p>\n', 'Tags': '<complexity-theory><relativization>', 'LastEditorUserId': '41', 'LastActivityDate': '2013-06-05T18:50:54.327', 'CommentCount': '1', 'AcceptedAnswerId': '1911', 'CreationDate': '2012-05-13T22:04:12.257', 'Id': '1905'},1702:{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '220', 'Title': 'Intuition behind Relativization', 'LastEditDate': '2012-11-15T09:19:53.543', 'AnswerCount': '1', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '1379', 'FavoriteCount': '1', 'Body': '<p>I take course on Computational Complexity. My problem is I don\'t understand <strong>Relativization method</strong>. I tried to find a bit of intuition in many textbooks, unfortunately, so far with no success. I will appreciate if someone could shed the light on this topic so that I will be able to continue by myself.\nFew following sentences are questions and my thoughts about relativization, they will help to navigate the discussion. </p>\n\n<p>Very often relativization comes in comparison with diagonalization, which is a method that helps distinguish between countable set and uncountable set. It somehow comes from relativization that $P$ versus $NP$ question cannot be solved by diagonalization. I don\'t really see the idea why relativization show the useless of diagonalization, and if it\'s useless why is actually useless.</p>\n\n<p>The idea behind oracle Turing machine $M^A$ at first is very clear. However, when it comes to $NP^A$ and $P^A$ the intuition disappears. Oracle is a blackbox that is designed for special language and answers the question whether the string on the input of the oracle is in the language in time 1. As I understood TM that contains an oracle is just make some auxiliary operations and ask the oracle. So the core of the TM is the oracle, everything else is less important. What\'s the difference between $P^A$ and $NP^A$, even thought oracle in both of them works in time 1.</p>\n\n<p>The last  thing is the proving the existence of an oracle $B$ such that $P^B \\neq NP^B$. I found the proof in several textbooks and in all of them the proof seems very vague. I tried to use <strong>"Introduction to complexity" by Sipser, Chapter9. Intractability</strong>, and didn\'t get the idea of construction of a list of all polynomial time oracle TMs $M_i$. </p>\n\n<p>This is more or less everything what I know about relativization, I will appreciate if someonw would decide to share his/her thoughts on the topic.</p>\n\n<p><strong>Addendum</strong>: in one of the textbooks I found example of $NP^B$ language (Computational Complexity: A Modern Approach by Boaz Barak Sanjeev Arora. Theorem 3.7. Page 74). $U_B=\\left \\{ 1^n:some \\space string \\space of  \\space length \\space  n  \\space is \\space  in \\space B\\right \\} $ it\'s unary language. I believe that (1,11,111,1111,...) are all in $U_B$. Author affirms that such a language is in $NP^B$ which is I cannot understand why, hence oracle for B can resolve everything in time 1. Why do we need nondeterministic TM with oracle. If it\'s not good example of $NP^B$ please put yours such that to approve the existence of $NP^B$.</p>\n', 'Tags': '<complexity-theory><np-complete><complexity-classes><relativization><np>', 'LastEditorUserId': '1379', 'LastActivityDate': '2012-11-15T09:19:53.543', 'CommentCount': '6', 'AcceptedAnswerId': '6666', 'CreationDate': '2012-11-14T14:14:35.827', 'Id': '6665'}