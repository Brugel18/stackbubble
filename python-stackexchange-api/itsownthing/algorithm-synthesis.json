{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>CS sometimes seems take for granted that $\\mathcal O(\\text{poly}(n))$ is "easy", while $\\mathcal O\\left(2^{poly(n)}\\right)$ is "difficult". I am interested in research into "difficult" polynomial-time algorithms, where the best-case solution to the constructed problem runs in $\\Theta(n^c)$, where $c$ can be chosen to be large; but the solution could be tested in $O(n)$ time.</p>\n\n<p><b>Question:</b></p>\n\n<blockquote>\n  <p>Given an integer $c$, can we construct problems that would:</p>\n  \n  <ul>\n  <li>Take $\\Theta\\left(n^c\\right)$ best-case-time to solve,</li>\n  <li>While taking $\\tilde{\\mathcal O}(n)$ time, and $\\tilde{\\mathcal O}(n)$ space, to test a solution?</li>\n  </ul>\n</blockquote>\n\n<p>($\\tilde{\\mathcal O}(n)$ is <a href="https://en.wikipedia.org/wiki/Big_O_notation#Extensions_to_the_Bachmann.E2.80.93Landau_notations" rel="nofollow">soft-big-oh</a>, meaning $O(n \\log^k n)$ for some $k$)</p>\n\n<hr>\n\n<p>Something I note - I might be mistaken somewhere here - is that presumably, if there is a $\\mathcal O(n)$ algorithm to test the solution, then perhaps there can be a $\\mathcal O(n)$ reduction to $\\rm k\\text{-}SAT$. If so, and, if $\\rm P=NP$, and there was a polynomial-time algorithm, say ${\\rm S{\\small OLVE}}\\left(\\Phi(\\mathbf x)\\right) \\in O({|\\mathbf x|}^{\\alpha})$ time, then I think this might contradict our $\\Theta(n^c)$ problem, if $\\alpha &lt; c$.</p>\n\n<hr>\n\n<p>The motivation would be to research the possibility of having a "one-way-function", that is linear(ithmic)-time computable, and best-case "difficult"-polynomial-time invert-able, where "difficult" means a high degree polynomial, instead of the usual exponential-time definition of "difficult"; perhaps this might be able to be used for cryptography even if $\\rm P=NP$ (like "post-P-equals-NP-cryptography", similar to how there is a field of "post-quantum-cryptography").</p>\n', 'ViewCount': '156', 'Title': 'Can we construct problems that can be solved in $\\Theta(n^c)$ time, and tested in $O(n)$ time', 'LastEditorUserId': '2755', 'LastActivityDate': '2013-12-10T15:31:18.290', 'LastEditDate': '2013-12-10T15:31:18.290', 'AnswerCount': '2', 'CommentCount': '7', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '2755', 'Tags': '<algorithms><reference-request><time-complexity><algorithm-synthesis>', 'CreationDate': '2013-11-21T14:40:26.493', 'FavoriteCount': '3', 'Id': '18223'}},