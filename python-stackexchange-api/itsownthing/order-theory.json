{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'ViewCount': '182', 'Title': 'Are two elements always in a relation within a partially ordered set?', 'LastEditDate': '2012-04-22T16:17:54.920', 'AnswerCount': '2', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '594', 'FavoriteCount': '1', 'Body': '<p>In a partially ordered set, am I always able to order two arbitrary elements out of the set? Or is it possible that two elements within the set have no order relation to each other?</p>\n\n<p>For example if there are three elements $\\{a, b, c\\}$ and $a \\leq b$ and $a \\leq c$, does either $b \\leq c$ or $c \\leq b$ have to hold?</p>\n\n<p>I need this to understand the fixed point theory for semantics of programming languages (denotation of while loops).</p>\n', 'Tags': '<terminology><discrete-mathematics><order-theory>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-04-22T16:17:54.920', 'CommentCount': '4', 'AcceptedAnswerId': '765', 'CreationDate': '2012-03-25T15:47:00.687', 'Id': '764'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>I want to encode strings as real numbers while preserving order. The order of the strings is the lexicographic order (as used in phone books); the order of the numbers is the standard order.</p>\n\n<p>Is there an general (i.e. no additional conditions such as e.g. known max string size) encoding with this property?</p>\n', 'ViewCount': '102', 'Title': 'Order preserving encoding of strings to numbers', 'LastActivityDate': '2012-07-25T01:15:34.363', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '2262', 'Tags': '<order-theory>', 'CreationDate': '2012-07-25T00:45:51.000', 'Id': '2903'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'ViewCount': '503', 'Title': 'What are lattices used for?', 'LastEditDate': '2013-06-06T16:39:10.167', 'AnswerCount': '6', 'Score': '10', 'PostTypeId': '1', 'OwnerUserId': '1590', 'FavoriteCount': '5', 'Body': '<p>Wikipedia <a href="http://en.wikipedia.org/wiki/Complete_lattice">says</a>:</p>\n\n<blockquote>\n  <p>Complete lattices appear in many applications in mathematics and computer science</p>\n</blockquote>\n\n<p>Is it just referring to the fact that the standard Boolean algebra used in computation is a complete lattice? Is there anything we gain by working at the abstract level of lattices instead of with Boolean logic specifically?</p>\n\n<p>A google search doesn\'t find much on the subject, but I\'m probably using the wrong keywords.</p>\n', 'Tags': '<lattices><order-theory>', 'LastEditorUserId': '472', 'LastActivityDate': '2013-06-30T02:08:56.750', 'CommentCount': '1', 'AcceptedAnswerId': '12498', 'CreationDate': '2013-06-06T16:38:42.860', 'Id': '12493'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>Imagine I have an ordering on a bunch of elements like so:</p>\n\n<p><img src="http://i.imgur.com/Sl2kUC0.png" alt="enter image description here"></p>\n\n<p>Where an arrow $X \\leftarrow Y$ means $X &lt; Y$. It is also transitive: $\\left(X &lt; Y\\right) \\wedge \\left(Y &lt; Z\\right) \\implies \\left(X &lt; Z\\right)$.</p>\n\n<p>In order efficiently answer queries like $A \\stackrel {?}{&lt;} D$, some sort of labeling or data structure is required. For example, you could number the nodes from left to right, and thus you can simply do integer comparison to answer the query: $A \\stackrel {?}{&lt;} D \\implies 1 &lt; 4 \\implies T$. It would look something like this:</p>\n\n<p><img src="http://i.imgur.com/YQ28co3.png" alt="enter image description here"></p>\n\n<p>Where the number is the ordering, and the letter is just a name.</p>\n\n<p>But what if you needed to insert elements "in between" two other elements in the ordering, like so:</p>\n\n<p><img src="http://i.imgur.com/aLuLJRH.png" alt="enter image description here"></p>\n\n<p><img src="http://i.imgur.com/HTSllkZ.png" alt="enter image description here"></p>\n\n<p><img src="http://i.imgur.com/DaytZtk.png" alt="enter image description here"></p>\n\n<p>How can you maintain such an ordering? With simple numbering, you run into the problem that there are no integers "in between" $2,3$ to use.</p>\n', 'ViewCount': '881', 'Title': 'Maintaining an efficient ordering where you can insert elements "in between" any two other elements in the ordering?', 'LastActivityDate': '2013-10-01T13:49:11.323', 'AnswerCount': '3', 'CommentCount': '0', 'AcceptedAnswerId': '14728', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '2755', 'Tags': '<data-structures><graphs><linked-lists><partial-order><order-theory>', 'CreationDate': '2013-09-30T17:58:23.563', 'FavoriteCount': '2', 'Id': '14708'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': '<p>So I have the question:</p>\n\n<p>Prove that any directed cycle in the graph of a partial order must only involve one node.</p>\n\n<p>So I know that a partial order must be transitive, antisymmetric, and reflective, but from there I am pretty lost. I also know that any path of one or more edges from a node to itself is a directed cycle, but from there I am having trouble connecting everything.</p>\n\n<p>I kind of need help as to where to start thinking, and the first step as to how to answer this question.</p>\n', 'ViewCount': '99', 'Title': 'Prove that any directed cycle in the graph of a partial order must only involve one node', 'LastEditorUserId': '2755', 'LastActivityDate': '2013-10-24T13:28:57.787', 'LastEditDate': '2013-10-24T02:09:46.897', 'AnswerCount': '2', 'CommentCount': '1', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '10282', 'Tags': '<graphs><graph-traversal><partial-order><order-theory>', 'CreationDate': '2013-10-24T01:39:01.753', 'Id': '16389'}}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,{'Body': "<p>I'm curious if there is a name for this way of ordering finite sets of natural numbers (shown here for the case 3 elements, but can be extended to any number of them):</p>\n\n<pre><code>{0, 1, 2} &lt; {0, 1, 3}\n          &lt; {0, 2, 3}\n          &lt; {1, 2, 3}\n          &lt; {0, 1, 4}\n          &lt; {0, 2, 4}\n          &lt; {1, 2, 4}\n          &lt; {0, 3, 4}\n          &lt; {1, 3, 4}\n          &lt; {2, 3, 4}\n          &lt; {0, 1, 5}\n          &lt; ...\n</code></pre>\n\n<p>The sets are generated recursively: increase the highest number and reset all the other elements to the lowest possible numbers, then apply this algorithm recursively to the remaining numbers.</p>\n\n<p>The position within this ordering is given by:</p>\n\n<pre><code>C(x[1], 1) + C(x[2], 2) + C(x[3], 3) + ...\n</code></pre>\n\n<p>where <code>x[i]</code> is the <code>i</code>-th element in the <em>sorted</em> set and <code>C(n, k)</code> is the binomial coefficient.</p>\n\n<p>Does anyone know of a name for this kind of total ordering?  Furthermore, what other common ways are there to order sets containing a fixed number of totally ordered elements?</p>\n", 'ViewCount': '28', 'Title': 'Total ordering of sets of fixed size', 'LastEditorUserId': '14625', 'LastActivityDate': '2014-02-13T11:31:24.640', 'LastEditDate': '2014-02-13T01:52:42.027', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '21597', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '14625', 'Tags': '<combinatorics><sets><order-theory>', 'CreationDate': '2014-02-13T01:45:22.763', 'Id': '21583'}}