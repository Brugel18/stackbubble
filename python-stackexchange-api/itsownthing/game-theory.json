{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Consider a <a href="http://en.wikipedia.org/wiki/Minimax" rel="nofollow">minimax</a> tree for an adversarial search problem. For example, in this picture (alpha-beta pruning):</p>\n\n<p><img src="http://i.stack.imgur.com/NmKIO.jpg" alt="enter image description here"></p>\n\n<p>When marking the the tree with $[\\min,\\max]$ values bottom-up, we first traverse node $3$ and assign $B.\\max = 3$. Then we traverse $12$ and $8$ in this order, it will make sure $B.max = 3$.</p>\n\n<p>But why is $B.\\min = 3$? What is the use of that value?</p>\n', 'ViewCount': '311', 'Title': 'What use are the minimum values on minimax trees?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-04-06T17:30:48.237', 'LastEditDate': '2012-04-06T17:14:35.593', 'AnswerCount': '1', 'CommentCount': '7', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '240', 'Tags': '<data-structures><trees><game-theory>', 'CreationDate': '2012-04-06T04:11:51.570', 'FavoriteCount': '0', 'Id': '1069'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I have a game I\'m building some ai for that has 2 players making simultaneous moves.  In this game there is exactly one move where, if they both make it at the same time, the outcome is different than if they\'d made it separately (all other moves are pretty independent).</p>\n\n<p>Anyway, I\'m trying to find a good algorithm to throw at it.  Minimax with alpha-beta pruning seems like it would be a good candidate if the players were making alternating moves, but not for simultaneous ones.  I found <a href="http://www.lamsade.dauphine.fr/~saffidine/Papers/2012/Alpha-Beta%20Pruning%20for%20Games%20with%20Simultaneous%20Moves.pdf">a paper(pdf)</a> on the topic, but it\'s a little over my head- I\'m having trouble reading the pseduocode.</p>\n\n<p>So, can someone either help clarify that approach, suggest another way to accomplish alpha-beta pruning on such a game, or suggest a better algorithm entirely?</p>\n', 'ViewCount': '188', 'Title': 'Alpha-Beta Pruning with simultaneous moves?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-06-04T08:42:59.177', 'LastEditDate': '2012-06-04T08:42:59.177', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '1737', 'Tags': '<algorithms><artificial-intelligence><search-algorithms><game-theory>', 'CreationDate': '2012-06-04T00:45:22.650', 'Id': '2215'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Many areas in the world suffer from conflicts between two groups (usually ethnic or religious). For the purpose of this question, I assume that most people of both sides want to live in peace, but there are few extremists who incite hatred and violence. The goal of this question is to find an objective way to filter out those extremists.</p>\n\n<p>Imagine a town with 2 conflicting groups, A and B, each has N people. I propose the following voting scheme (which I explain from the point of view of group A, but it\'s entirely symmetric for the other group):</p>\n\n<ul>\n<li><strong>equality-rule</strong>: The number of people in each group must always remain equal.</li>\n<li><strong>expel-vote</strong>: At any time, each person of group A can claim that a certain person of group B is "extremist", and start a vote. If more than 50% of the people in group A agree, then that certain person is expelled from town.</li>\n<li><strong>counter-vote</strong>: To keep the equality-rule, a single person of group A should also leave the town. This person is selected by a vote between the people in group B (i.e. each person in group B votes for a single person in group A, and the one with most votes is expelled from town).</li>\n</ul>\n\n<p>My intuition is that:</p>\n\n<ul>\n<li>On one hand, this scheme encourages people to be nice to people of the other group, so that they won\'t be subject to expel-votes.</li>\n<li>On the other hand, the equality rule encourages people to think twice before starting an expel-vote, because this will put them in danger of expel in the counter-vote.</li>\n</ul>\n\n<p>[ADDITION]\nSeveral questions can be asked about this scheme, for example:</p>\n\n<ul>\n<li>Under what conditions does it diverge to a situation where people vote and counter-vote, until the number of citizens in one of the groups reaches 0? </li>\n<li>Under what conditions does it stabilize on a situation where the two group has more than 0 citizens? </li>\n<li>Under what conditions, the stable number of citizens is more than half the initial number?</li>\n</ul>\n\n<p>Note that this scheme does not even try to reach an objective measure of "extremism". The only goal is stability.</p>\n\n<p>I would like to know, has this voting scheme has been studied in the past?</p>\n', 'ViewCount': '127', 'Title': 'voting scheme for peaceful coexistence', 'LastEditorUserId': '72', 'LastActivityDate': '2012-06-08T21:14:05.203', 'LastEditDate': '2012-06-07T16:33:57.103', 'AnswerCount': '1', 'CommentCount': '7', 'AcceptedAnswerId': '2291', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '1342', 'Tags': '<reference-request><game-theory><voting>', 'CreationDate': '2012-06-07T09:11:00.850', 'Id': '2249'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Is the following statement always true:</p>\n\n<blockquote>\n  <p>if there is a mixed-strategy Nash equilibria then it is unique.</p>\n</blockquote>\n\n<p>I know that there can be several pure strategy Nash equilibrias.</p>\n', 'ViewCount': '118', 'Title': 'Mixed-strategy Nash equilibria', 'LastEditorUserId': '41', 'LastActivityDate': '2012-11-29T05:04:43.200', 'LastEditDate': '2012-06-12T18:05:46.287', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '4', 'OwnerDisplayName': 'Alec', 'PostTypeId': '1', 'Tags': '<game-theory>', 'CreationDate': '2012-05-13T17:07:59.290', 'Id': '2344'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': u'<p>Foo and Bar are playing a game of strategy. At the start of the game, there are $N$ apples, placed in a row (in straight line). The apples are numbered from $1$ to $N$. Each apple has a particular price value.</p>\n\n<p>The price of $i$th apple is $p_i$.</p>\n\n<p>In this game, the players Foo and bar make an alternative move.</p>\n\n<p>In each move, the player does the following:</p>\n\n<ul>\n<li>If there is more than one apple left, the player tosses an unbiased coin. If  the outcome is head, the player takes the first apple among the apples that are  currently present in a row in a straight line.</li>\n<li>If there is a single apple left, te player takes it.</li>\n</ul>\n\n<p>The goal here is to calculate the expected total price value that Foo will get if Foo plays first.</p>\n\n<pre><code>Example 1:\nN=5\nApple price val: \n5 2 3 1 5 \n\nAnswer is : 11.00\n\nExample 2:\nN=6\n7 8 2 3 7 8\n\nAnswer : 21.250\n\n\nExample 3:\nN=3\n1 4 9\n\nFirst           Second      Third          Foo Total Val\nFoo gets 1  Bar gets 4  Foo gets 9          10\nFoo gets 1  Bar gets 9  Foo gets 4          5\nFoo gets 9  Bar gets 1  Foo gets 4          13\nFoo gets 9  Bar gets 4  Foo gets 1          10\n\nprobability 0.5 \u2022 0.5 = 0.25. \nExpected value (Foo)= (0.25 *10 )+ (0.25 *5) + (0.25*13)+ (0.25*10) = 9.500\n</code></pre>\n\n<p>I wrote the following code:</p>\n\n<pre><code>#include&lt;iostream&gt;\nusing namespace std;\ndouble calculate(int start,int end,int num,int current);\nint arr[2010];\nint main()\n{\n    int T;\n    scanf("%d",&amp;T);\n    for(int t=0;t&lt;T;t++)\n    {\n        int N;\n        scanf("%d",&amp;N);\n        for(int i=0;i&lt;N;i++)\n        {\n            scanf("%d",&amp;arr[i]);\n        }\n        printf("%.3lf\\n",calculate(0,N-1,N/2+N%2,0));   \n    }\n\n    return 0;\n}\ndouble calculate(int start,int end,int num,int current)\n{\n    if(num==current)\n        return 0;\n    double  value=0;\n    value=.5*arr[start]+.5*arr[end]+.5*calculate(start+1,end,num,current+1)+.5*calculate(start,end-1,num,current+1);\n    return value;\n}\n</code></pre>\n\n<p>But the above code is quite slow. The constraints are: price of apples $p_i \\le 1000$; $1 \\le N \\le 2000$; there are 500 test cases. How can I solve this more efficiently?</p>\n', 'ViewCount': '115', 'Title': 'Expected gain of a game of chance with differently-priced tokens', 'LastEditorUserId': '39', 'LastActivityDate': '2012-10-06T22:32:58.253', 'LastEditDate': '2012-10-06T20:43:51.750', 'AnswerCount': '1', 'CommentCount': '6', 'AcceptedAnswerId': '4902', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '2041', 'Tags': '<algorithms><game-theory>', 'CreationDate': '2012-10-06T10:02:48.777', 'Id': '4899'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': u'<p><img src="http://i.stack.imgur.com/2hUx4.jpg" alt="search tree"></p>\n\n<p><strong>Problem : Two players have in front of\nthem a single pile of objects, say a stack of 7 pennies. The first player divides the original\nstack into two stacks that must be unequal. Each player alternatively thereafter does the\nsame to some single stack when it is his turn to play. The game proceeds until each stack has\neither just one penny or two\u2014at which point continuation becomes impossible. The player\nwho first cannot play is the loser. Show, by drawing a game tree, whether any of the players\ncan always win.</strong></p>\n\n<p>Why is the state 6-1 not going to 3-3-1?If we have 6-1 pennies we can remove 3 pennies from the 6 stack and we have 3-3-1 pennies.So why isn\'t 3-3-1 not a child of 6-1?</p>\n', 'ViewCount': '1689', 'Title': 'Nim game tree + minimax', 'LastActivityDate': '2012-10-28T23:34:33.923', 'AnswerCount': '1', 'CommentCount': '3', 'AcceptedAnswerId': '6364', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '3004', 'Tags': '<artificial-intelligence><search-trees><game-theory>', 'CreationDate': '2012-10-28T23:20:35.870', 'FavoriteCount': '1', 'Id': '6363'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '182', 'Title': 'Is it more effective to vote for a woman?', 'LastEditDate': '2012-11-04T05:57:39.747', 'AnswerCount': '2', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '1342', 'FavoriteCount': '1', 'Body': "<p>A certain political party wants to encourage women to participate in their primary elections, so they decide, that the 4th position is reserved for a woman. That is, if there is no woman in the top 4 positions, then the woman with the largest number of votes will be promoted to the 4th position, and the candidates at positions 4 and below (5, 6, 7...) will be demoted one position (of course, if there is initially a woman in one of the top 4 positions, then no promotion/demotion will take place).</p>\n\n<p>There are two candidates that I support equally, one is a man and the other is a woman. Is it true that, if I vote for the woman, my vote is more effective?</p>\n\n<p>In a more extreme case, where the 1st position is reserved for a woman, it's clear that my vote is most effective when I give it to the woman, because this is my only chance of sending my favorite candidate to the 1st position; voting for the man, in this case, will never bring my favorite candidate to the 1st position. </p>\n\n<p>Intuitively, it seems to be the same with the 4th position reserved, because, if I vote for the man and he enters position &lt;=4, he might be demoted, but if I vote for the woman and she enters position &lt;=4, she might be promoted, so my single vote may be worth a lot.</p>\n\n<p>However, I am looking for a formal proof that this is the case (or maybe a disproof?)</p>\n", 'Tags': '<game-theory><voting>', 'LastEditorUserId': '1342', 'LastActivityDate': '2012-11-05T16:17:42.630', 'CommentCount': '2', 'AcceptedAnswerId': '6490', 'CreationDate': '2012-11-01T06:36:52.877', 'Id': '6420'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I molded my problem as the following game (it is a <a href="http://en.wikipedia.org/wiki/Congestion_game" rel="nofollow">congestion game</a> with varying price):</p>\n\n<p>$N$ players share resources $E$,</p>\n\n<p>$S_i$ is the strategy space of player $i$ which is in $2^E$ (where $2^E$ is the power set of resources).</p>\n\n<p>$P_e^i$ is the price of resource $e \\in E$ considering player $i$. <strong>The price of resource $e$ is different for different users.</strong></p>\n\n<p>The goal of each player is to select a strategy $S_i$ which minimize its price $\\sum_{e\\in S_i}P_e^i$ .</p>\n\n<p>My questions are:</p>\n\n<ol>\n<li>Does this game have any <a href="http://en.wikipedia.org/wiki/Nash_equilibrium" rel="nofollow">Nash Equilibrium</a> (NE)? If so under which conditions? </li>\n<li>If it has any NE, what is a sample algorithm for achieving it?</li>\n</ol>\n\n<p>I searched literature but could not find any appropriate information! Any solution is appreciated!</p>\n', 'ViewCount': '52', 'Title': 'Congestion Game with Varying Price', 'LastEditorUserId': '3011', 'LastActivityDate': '2013-09-13T13:49:18.273', 'LastEditDate': '2013-02-10T14:36:23.537', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '6550', 'Tags': '<algorithms><optimization><game-theory>', 'CreationDate': '2013-02-05T16:41:45.657', 'FavoriteCount': '2', 'Id': '9512'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>The sum divider game for $n$ starts with the set $M_0 = \\{1,\\dots,n\\}$. Player A chooses a number $m_1$ from $M_0 \\setminus \\{1\\}$ and B has to choose a divider $m_2$ of $m_1$ from $M_1 = M_0 \\setminus \\{m_1\\}$. The players continue to choose a number $m_i$ from $M_{i-1} = M_{i-2} \\setminus \\{m_{i-1}\\}$ alternatingly, where every $m_i$ has to divide $\\sum_{k=1}^{i-1} m_k$. A player wins, if the other player is unable to do so and $M_{i-1} \\neq \\emptyset$, $M_{i-1} = \\emptyset$ is considered a tie.</p>\n\n<p>My questions:</p>\n\n<ul>\n<li>Is there an $n &gt; 2$, for which A has no winning strategy?</li>\n<li>Given some $n$ (in <strike>binary</strike> unary representation), how hard is it to decide whether there is a winning strategy for A\n<ul>\n<li>where A wins in at most $k$ steps ?</li>\n<li>where A chooses no prime numbers ?</li>\n</ul></li>\n</ul>\n', 'ViewCount': '230', 'Title': 'Complexity of deciding whether there is a winning strategy in the following game', 'LastEditorUserId': '41', 'LastActivityDate': '2013-07-20T09:17:09.133', 'LastEditDate': '2013-07-20T09:17:09.133', 'AnswerCount': '0', 'CommentCount': '18', 'Score': '10', 'PostTypeId': '1', 'OwnerUserId': '6716', 'Tags': '<complexity-theory><time-complexity><game-theory><number-theory>', 'CreationDate': '2013-02-21T14:10:55.227', 'FavoriteCount': '2', 'Id': '10011'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>There is a land divided to $D$ districts.</p>\n\n<p>There are $C$ citizens.</p>\n\n<p>We want to divide the land to the citizens, such that each citizen receives a single land-plot in a single district.</p>\n\n<p>Each citizen prefers certain districts, however, the preference also depends on the size of plot. For example, Johnny prefers a plot of 1 dunam in the North to a plot of the 1 dunam in the South, however, he also prefers a plot of 1 dunam in the South to a plot of 0.5 dunams in the North.</p>\n\n<p>Ideally, we would like to divide the land in an envy-free manner, such that no citizen thinks that the plot given to another citizen is better (according to his subjective preferences) than the plot given to him.</p>\n\n<p>However, this is not always possible. For example, suppose there are 2 districts (North and South), each of size 1 dunam, and 3 citizens, all have the same preferences as Johnny. If two of them get a plot in the North and the third gets a plot in the South, then the first two get only 0.5 dunam each, and so they envy the third who gets 1 dunam. The other divisions are even worse (In the singular case where all citizens get 1/3 dunam in the North and the South remains empty, assume that it is invaded by a fourth citizen, so that all 3 citizens now envy the invader).</p>\n\n<p>So, I am looking for a procedure that will minimize the envy - whatever that means.</p>\n\n<p>Note that, in contrast to the standard <a href="http://en.wikipedia.org/wiki/Envy-free" rel="nofollow">envy-free cake-division algorithms</a>, I am not interested in geometric cuts of the land - the division of land to districts is pre-determined, and each person can get a plot in only one district.</p>\n', 'ViewCount': '63', 'Title': 'Minimal-envy land division', 'LastEditorUserId': '6447', 'LastActivityDate': '2013-03-28T17:19:44.837', 'LastEditDate': '2013-03-27T01:27:18.037', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '10746', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '1342', 'Tags': '<reference-request><game-theory>', 'CreationDate': '2013-03-21T06:23:21.400', 'Id': '10679'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I have an assignment to construct a game of Nim (a game in which two players must divide a pile of tokens into two unequal sizes; 6 can be divided into 2 &amp; 4 but not 3 &amp; 3). I was provided a game tree (the same one I find on Google), but I am confused. Shouldn\'t the first turn of the second player have access to S6, S5, <em>and</em> S4 and S3 since 7 can be divided into 4 &amp; 3?</p>\n\n<p><img src="http://i.stack.imgur.com/8EuYb.jpg" alt="NIM game tree"></p>\n', 'ViewCount': '128', 'Title': 'Is this NIM game tree correct?', 'LastActivityDate': '2013-03-26T14:08:55.067', 'AnswerCount': '3', 'CommentCount': '0', 'AcceptedAnswerId': '10810', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '6747', 'Tags': '<game-theory>', 'CreationDate': '2013-03-25T22:26:39.340', 'Id': '10787'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '155', 'Title': 'Poker with Bluffing (game theory)', 'LastEditDate': '2013-03-27T12:09:43.310', 'AnswerCount': '1', 'Score': '2', 'OwnerDisplayName': 'drozzy', 'PostTypeId': '1', 'OwnerUserId': '7433', 'Body': '<p>I\'m doing a self-study of <a href="http://rads.stackoverflow.com/amzn/click/0691140510" rel="nofollow">Game Theory Evolving by Gintis</a>, and am stuck on problem 4.16 "Poker with Bluffing".</p>\n\n<p>The first question asks "<em>Show that Ollie has 64 pure strategies and Stan has 8 pure strategies.</em>". But no matter how I try to approach this, I can\'t get more then 4 strategies for Stan!</p>\n\n<p>Here is the game tree for the game in question:\n<img src="http://i.stack.imgur.com/XbN6c.jpg" alt="enter image description here"></p>\n\n<p>The question marks (?) in the figure mean that the payoff depends on who has the higher card.</p>\n\n<p>Here is the game description:</p>\n\n<ul>\n<li>Two players, each with a deck of three cards: H (high), M(medium) or L (low).</li>\n<li>Each puts \\$1 in the pot, chooses random card</li>\n<li>Ollie (P1) either stays or raises</li>\n<li>Stan (P2) simultaneously also stays or raises</li>\n<li>If both raise/stay - highest card wins the pot (tie - they take their money back)</li>\n<li>If Ollie raises, Stan stays  Ollie gets the \\$3 pot.</li>\n<li>If Stan raises and Ollie stays - Ollie gets another chance:\n<br>-> Drop - Stand wins the \\$3 pot\n<br>-> Call - add \\$1 to the pot.</li>\n</ul>\n\n<p>Why does Stand have 8 pure strategies?</p>\n', 'Tags': '<game-theory><board-games>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-03-28T21:36:48.740', 'CommentCount': '0', 'AcceptedAnswerId': '10820', 'CreationDate': '2013-03-26T18:46:38.850', 'Id': '10818'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I am interested in procedures for fair division of land (i.e. envy-free division, or at least proportional division).</p>\n\n<p>In contrast to the well-studied cake-division problem, land-division is two-dimensional, i.e., the preferences of the users may vary both horizontally and vertically. Therefore, it is not practical to limit the algorithm to parallel cuts.</p>\n\n<p>The only reference I found so far is <a href="http://www.worldscientific.com/doi/pdf/10.1142/S0218843009002051">Karthik Iyer and Michael Huhns, 2007</a>. They say that "We have not come across any constructive (algorithmic) solutions so far to the generic land division problem. All the papers have\noffered existential solutions to qualified versions of the problem."</p>\n\n<p>They themselves prove an O(n^2) algorithm for proportional land division, with certain limitations (e.g. each of the n agents must mark n rectangular regions with utility 1/n, and if the rectangles don\'t overlap too much, the algorithm guarantees that each agent gets one of its rectangles).</p>\n\n<p>Do you know of any newer references on this problem? I am interested specifically in practical algorithms, and they may be approximate.</p>\n', 'ViewCount': '121', 'Title': 'Fair division of two-dimensional cake', 'LastActivityDate': '2013-12-24T22:12:15.823', 'AnswerCount': '2', 'CommentCount': '2', 'Score': '9', 'PostTypeId': '1', 'OwnerUserId': '1342', 'Tags': '<reference-request><game-theory>', 'CreationDate': '2013-03-28T18:58:59.287', 'FavoriteCount': '1', 'Id': '10877'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>The usual statement of the <a href="http://en.wikipedia.org/wiki/Fair_division" rel="nofollow">fair cake-cutting problem</a> assumes that all $n$ players get their share at the same time. However, in many cases the players arrive incrementally. For example, we may divide a cake over $n$ players, but then a new player arrives and wants a share.</p>\n\n<p>Usually, fair cake division requires a lot of effort (for example, requires the players to answer many queries), especially when the number of players is large.</p>\n\n<p>Is it possible to use the existing division of the cake over $n$ players, in order to create a new division of the cake to $n+1$ players, with minimal additional effort (i.e. substantially less effort than re-distributing the cake from scratch)?</p>\n', 'ViewCount': '204', 'Title': 'Fair cake-cutting when players join late', 'LastEditorUserId': '1342', 'LastActivityDate': '2014-01-19T02:03:22.010', 'LastEditDate': '2013-04-12T11:28:27.013', 'AnswerCount': '2', 'CommentCount': '7', 'AcceptedAnswerId': '11204', 'Score': '9', 'PostTypeId': '1', 'OwnerUserId': '1342', 'Tags': '<algorithms><game-theory><online-algorithms>', 'CreationDate': '2013-04-06T18:40:39.860', 'Id': '11077'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I am a little bit confused by the definition of dominant strategy and winning strategy, what\'s the difference between them.</p>\n\n<p>Following are the definitions taken from wikipedia, below every definition I added some thoughts. If you fell that my thoughts are not correct or ambigues please let me know.</p>\n\n<blockquote>\n  <p><strong>Dominant strategy</strong>.In game theory, dominant strategy (commonly called simply dominance) occurs when one strategy is better than another strategy for one player, no matter how that player\'s opponents may play. Many simple games can be solved using dominance. </p>\n</blockquote>\n\n<p>The first interesting note is that the term <strong>dominant strategy</strong> is applied only to two different strategies, and more precisely it\'s should be defined as "A is dominant strategy over B", actually the notion "dominant strategy" might be relevant to the game itself in this case the dominant strategy A dominates over all other strategies of the player.</p>\n\n<blockquote>\n  <p><strong>Winning strategy</strong>.A strategy is winning if the player following it must necessarily win, no matter what his opponent plays.</p>\n</blockquote>\n\n<p>This notion sounds like stronger notion than dominant strategy, because having winning strategy its guaranteed that the player wins if he follows the strategy no matter what the opponent does, on the other hand dominant strategy does not guaranteed the win, it only says that dominant strategy guarantees the best possible outcome for the player over all possible player\'s strategies and <strong>no matter what the opponent does.</strong></p>\n\n<p>I would to emphasize one common property for the dominant strategy and the winning strategy they both determined by the outcome of the game and <strong>don\'t depend on the strategy of the opponent.</strong> </p>\n\n<p>In my opinion, winning strategy is always a dominant strategy, but vice verse is not always true.</p>\n\n<p>Do you agree with the intuitive understand and thought?</p>\n', 'ViewCount': '98', 'Title': 'Difference between Dominant strategy and Winning Strategy', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-10T13:32:02.270', 'LastEditDate': '2013-04-10T13:32:02.270', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '11190', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '4799', 'Tags': '<terminology><game-theory>', 'CreationDate': '2013-04-10T06:49:54.630', 'Id': '11185'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I am looking for an algorithm (or hint where to start), for Toads and Frogs Game. What I am interested in is not how to solve the problem (it\'s NP-hard), but <strong>how to plan one player\'s moves</strong>. I.e. how to design a computer player (AI), which could win against another player (another program or human player). I was looking for some clues but with no luck so far, there\'s not much about it on the Web.</p>\n\n<p><a href="http://en.wikipedia.org/wiki/Toads_and_Frogs_%28game%29" rel="nofollow">Link</a> to game description on Wikipedia.</p>\n\n<p>And <a href="http://nrich.maths.org/1246" rel="nofollow">here</a> you can play the game. Please bear in mind, that starting positions may not be that straightforward. They may be mixed up from the very start.</p>\n', 'ViewCount': '323', 'Title': 'Toads and frogs game algorithm', 'LastEditorUserId': '8067', 'LastActivityDate': '2013-05-06T16:44:20.893', 'LastEditDate': '2013-05-06T16:44:20.893', 'AnswerCount': '0', 'CommentCount': '5', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '8067', 'Tags': '<algorithms><game-theory>', 'CreationDate': '2013-05-06T09:27:38.977', 'FavoriteCount': '1', 'Id': '11824'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p>I'm trying to find complexity class of finding winning strategy for first player in following game:</p>\n\n<p>Intance of 'Stones' game is:</p>\n\n<ul>\n<li>finite set $X$</li>\n<li>relation $R \\subseteq X^3$</li>\n<li>set $Y \\subseteq X$ and node $f \\in X$</li>\n</ul>\n\n<p>At the beggining we place stone in every element of $Y$. \nEvery player in his turn can move stone from $x$ to $z$ iff. $\\exists y.R(x, y, z) \\wedge y\\ has\\ stone\\ placed\\ in\\ it$.\nPlayer who places stone in $f$ wins.</p>\n\n<p>I think it's $PSPACE-complete$, but I was trying to proove this for some time, and I run out of ideas.</p>\n\n<p>I won't lie, it's homework assignment for my complexity class. Any help will be highly appreciated.</p>\n", 'ViewCount': '54', 'Title': "'Stones' game complexity", 'LastActivityDate': '2013-06-01T03:24:19.843', 'AnswerCount': '0', 'CommentCount': '4', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '8469', 'Tags': '<complexity-theory><space-complexity><complexity-classes><game-theory>', 'CreationDate': '2013-06-01T03:24:19.843', 'FavoriteCount': '1', 'Id': '12407'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I have an exercise which I can\'t solve.</p>\n\n<p><strong>Exercise.</strong> Consider a game where the players have $2$ pure strategies each and assume that the graph $G$ is a tree with maximum degree $3$. Give a polynomial time algorithm to decide if such a game has a pure Nash equilibrium.</p>\n\n<p>The idea seems pretty obvious, every vertex of the tree and corresponding neighbouring vertices represent a "mini" game  which can be represent in normal form with size at most $2^4$. This "mini" game can decided efficiently in polynomial time.</p>\n\n<p>The problem is we have $n$ such a neighbouring areas (as a number of players), therefore we need somehow iteratively going over every area and decide where we have equilibrium and if not going back to the previous neighbouring areas change actions and check the existence. On the worst case it is going to take $2^{4n}$.</p>\n\n<p>But how to decide it in polynomial time?</p>\n', 'ViewCount': '47', 'Title': 'Nash Equilibrium in Tree of Bounded Degree', 'LastActivityDate': '2013-06-04T15:26:43.427', 'AnswerCount': '0', 'CommentCount': '3', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '4778', 'Tags': '<complexity-theory><trees><game-theory><polynomial-time>', 'CreationDate': '2013-06-04T15:26:43.427', 'Id': '12460'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Recently I got interested in a game called <a href="http://en.wikipedia.org/wiki/Toads_and_Frogs_%28game%29" rel="nofollow">Toads and Frogs</a> and I\'m trying my best to come up with some software which would be able to beat an average (i.e. not knowing the strategy) human though I\'m struggling with the strategy.</p>\n\n<p>I read on it everything I could google out but turns out there\'s not that much to read about it as one may think - the most helpful thing I\'ve found was probably an <a href="http://compgeom.cs.uiuc.edu/~jeffe/pubs/pdf/toads.pdf" rel="nofollow">analysis by Erickson</a> though it concentrates more on evaluating each position rather than some algorithm which would have to decide how to move a toad or a frog given a particular board as input. Same goes for "Winning Ways", where they evaluate a bunch of positions but don\'t give you too much insight on how to optimally play your game</p>\n\n<p>The best playthrough strategy I could come up with is evaluating the value of the current  position (using "Winning Ways" and Erickson\'s tricks), evaluating the values of all the positions we can go to with  our toads/frogs in a given moment and then performing a move which leads to the lowest  value of the board so that our opponent has the worst moves to choose  from. </p>\n\n<p>Is there anything better? Or if all the "good" strategies are very hard (as I said, I\'m just starting out with my game theory interest), what\'s the best one that even someone with my experience could utilize? :)</p>\n', 'ViewCount': '218', 'Title': 'Finding a winning strategy for toads and frogs', 'LastEditorUserId': '5281', 'LastActivityDate': '2013-06-05T16:04:19.097', 'LastEditDate': '2013-06-05T13:20:39.710', 'AnswerCount': '1', 'CommentCount': '6', 'AcceptedAnswerId': '12473', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '5281', 'Tags': '<algorithms><combinatorics><game-theory>', 'CreationDate': '2013-06-05T12:37:00.333', 'Id': '12471'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': u"<p>Consider 3-player game. </p>\n\n<p>Players $x,y,z$, each player has two strategies. $x$: $x_1$ and $x_2$, $y$: $y_1$ and $y_2$, $z:z_1$ and $z_2$.</p>\n\n<p>The outcome of the game are represented by the labels of the player who has playoff $1$, otherwise outcome is $0$.</p>\n\n<p>The best way to represent the game is to depict two tables, the first one for the case when $c$ plays $c_1$ and the second one when $c$ plays $c_1$</p>\n\n<p>$c$ plays $c_1$</p>\n\n<pre><code>\u2554\u2550\u2550\u2550\u2550\u2566\u2550\u2550\u2550\u2550\u2566\u2550\u2550\u2550\u2550\u2550\u2557\n\u2551 c1 \u2551 b1 \u2551 b2  \u2551\n\u2560\u2550\u2550\u2550\u2550\u256c\u2550\u2550\u2550\u2550\u256c\u2550\u2550\u2550\u2550\u2550\u2563\n\u2551 a1 \u2551    \u2551 B   \u2551\n\u2551 a2 \u2551 A  \u2551 A;C \u2551\n\u255a\u2550\u2550\u2550\u2550\u2569\u2550\u2550\u2550\u2550\u2569\u2550\u2550\u2550\u2550\u2550\u255d\n</code></pre>\n\n<p>$c$ plays $c_2$</p>\n\n<pre><code>\u2554\u2550\u2550\u2550\u2550\u2566\u2550\u2550\u2550\u2550\u2550\u2566\u2550\u2550\u2550\u2550\u2550\u2557\n\u2551 c2 \u2551 b1  \u2551 b2  \u2551\n\u2560\u2550\u2550\u2550\u2550\u256c\u2550\u2550\u2550\u2550\u2550\u256c\u2550\u2550\u2550\u2550\u2550\u2563\n\u2551 a1 \u2551 C   \u2551 A;B \u2551\n\u2551 a2 \u2551 B;C \u2551     \u2551\n\u255a\u2550\u2550\u2550\u2550\u2569\u2550\u2550\u2550\u2550\u2550\u2569\u2550\u2550\u2550\u2550\u2550\u255d\n</code></pre>\n\n<p>The problem is to find all Nash equilibria (pure and mixed) and to show that there is no other Nash equilibria.</p>\n\n<p><strong>pure NE</strong>: There are three pure Nash equilibria $(x_2,y_2,z_1), (x_1,y_2,z_2), (x_2,y_1,z_2)$ (this is all I found, may be there is more).</p>\n\n<p><strong>mixed NE</strong>:Let's place equalities for mixed strategies. Assume that $p_x$ - the probability that $x$ will play $x_1$, therefore $(1-p_x)$- the probability that $x$ will play $x_2$ in the same manner define $p_y$ and $p_z$.</p>\n\n<p>For $x$ to be indifferent between $x_1$ and $x_2$ - $(1-p_y)(1-p_z) = p_y \\cdot p_z + (1-p_y)p_z$,</p>\n\n<p>For $y$ to be indifferent between $y_1$ and $y_2$ - $(1-p_x)(1-p_z) = p_x \\cdot p_z + p_x(1-p_z)$,</p>\n\n<p>For $z$ to be indifferent between $z_1$ and $z_2$ - $(1-p_x)(1-p_y) = p_x \\cdot p_y + (1-p_x)p_y$.</p>\n\n<p>Apparently there is a symmetry, however it's not a symmetric game.</p>\n\n<p>The main problem is how to proceed from this point. There are might be few cases either given one of the equalities we should consider only pure strategies of the rest two players or consider more complicated way when the rest two players play mixed strategies. May be because of the pattern we have symmetric solution? One more problem how to show that there are no other Nash equilibria.</p>\n\n<p><strong>Another approach:</strong> Let represent outcome in terms of vectors.</p>\n\n<pre><code>\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2566\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2566\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\n\u2551 number \u2551 outcome \u2551 winners \u2551\n\u2560\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256c\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256c\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2563\n\u2551      0 \u2551     000 \u2551 -       \u2551\n\u2551      1 \u2551     001 \u2551 C       \u2551\n\u2551      2 \u2551     010 \u2551 B       \u2551\n\u2551      3 \u2551     011 \u2551 A,B     \u2551\n\u2551      4 \u2551     100 \u2551 A       \u2551\n\u2551      5 \u2551     101 \u2551 B,C     \u2551\n\u2551      6 \u2551     110 \u2551 A,C     \u2551\n\u2551      7 \u2551     111 \u2551 -       \u2551\n\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2569\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2569\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\n</code></pre>\n\n<p>It looks like every player have exactly the same chances to win, every player has three permutations  that leads to payoff 1. $A=\\{3,4,6\\}, B=\\{2,3,5\\}, C=\\{1,5,6\\}$, among them the following outcomes appear twice $(3) 011, (5), 101 (6) 110$.</p>\n\n<p>The problem is I don't know how to approach the solution, I would appreciate for ideas.</p>\n", 'ViewCount': '106', 'Title': 'Nash equilibria in 3-player game with symmetry', 'LastActivityDate': '2013-06-17T10:45:38.010', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '8200', 'Tags': '<algorithms><game-theory>', 'CreationDate': '2013-06-17T10:45:38.010', 'Id': '12710'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Let <code>S</code> be a system whose state can be altered by performing actions. Each action has two possible outcomes, and each outcome brings to a specific system state. A state is never visited two times, i.e., the state graph is a DAG (a tree, more specifically, where the root corresponds to the initial system state and each edge corresponds to an action). The probability of obtaining either one of the outcomes is known.</p>\n\n<p>Notice that just <code>B</code> actions can be performed, and the pool of actions contains <code>N</code> different actions.</p>\n\n<p>My objective is to devise an <strong>online optimal</strong> algorithm which identifies the best path to be taken, i.e., the path which guarantees the minimum cost. With the term "online" I am referencing to the following behavior:</p>\n\n<ol>\n<li>An action is chosen</li>\n<li>The system state is consequently modified</li>\n<li>A new action is chosen (taking into account the system state modification performed ad 2.)</li>\n<li>The system state is again modified according to the selected action</li>\n<li>...</li>\n</ol>\n\n<p>My first idea was the one of using A* in the following way:</p>\n\n<ol>\n<li>I ask A* to find the best sequence <code>S</code> of <code>B</code> actions to be performed</li>\n<li>I perform just the first action contained in <code>S</code>, and I modify the system state consequently (according to the outcome of the action)</li>\n<li>I ask A* to find the best sequence <code>S\'</code> of <code>(B-1)</code> actions to be performed</li>\n<li>I perform just the first action contained in <code>S\'</code> and I modify the system state consequently</li>\n</ol>\n\n<p>The problem is that I don\'t know whether this solution is optimal (I didn\'t succeed in finding an optimality proof), and an optimal solution would be required in my case.</p>\n\n<p>May you suggest another online algorithm (or, alternatively, a way of proving the optimality of the method I propose) to find an optimal solution for the problem?</p>\n\n<p><strong>EDIT</strong>: maybe something from game theory can be used instead (<a href="http://en.wikipedia.org/wiki/Extensive-form_game#Imperfect_information" rel="nofollow">extensive form games with imperfect information</a>). I am the player I that chooses the actions, while the player II is a dummy player that chooses the action "first-outcome" or "second-outcome", where "first-outcome" and "second-outcome" are my actions\' possible outcomes.</p>\n\n<p><strong>NOTE:</strong> I posted a similar question <a href="http://stackoverflow.com/questions/17149113/gain-maximization-on-trees">here</a>, although in my previous question an <em>offline</em> version was required, i.e., the modifications of the actions were not taken into account at each iteration.</p>\n\n<p>Thanks in advance.</p>\n', 'ViewCount': '51', 'Title': 'Online algorithm for planning', 'LastEditorUserId': '8798', 'LastActivityDate': '2013-06-24T07:28:52.660', 'LastEditDate': '2013-06-24T07:28:52.660', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '8798', 'Tags': '<decision-problem><game-theory><online-algorithms>', 'CreationDate': '2013-06-21T09:52:04.120', 'FavoriteCount': '2', 'Id': '12810'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': u"<p>I have a rather interesting exercise in Game Theory.</p>\n\n<p><em>Assume there is a 2-players game, and player $i$ has $n_i$ pure strategies. The game is given by listing the payoffs for each player for each $n_1 \xd7 n_2$ possible plays.</em></p>\n\n<p><em>Give a polynomial time algorithm to check if there is a Nash equilibrium for the game in which each player mixes between at most two strategies.\nGive a \ufb01nite algorithm for finding a Nash equilibrium for general games with two players. Your algorithm may run in exponential time.</em></p>\n\n<p>The answer to the first question hopefully can be solved by convex optimization.</p>\n\n<p>In the second case some kind of exhauivet search can be used.</p>\n\n<p>Unfortunately I don't know how to proceed.</p>\n", 'ViewCount': '130', 'Title': 'Nash Equilibrium of 2-players game', 'LastActivityDate': '2013-10-29T07:01:57.073', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '4778', 'Tags': '<algorithms><linear-programming><game-theory>', 'CreationDate': '2013-06-30T18:16:54.620', 'FavoriteCount': '1', 'Id': '12996'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': u"<p>Let us consider the following game: there are some players and a computer. Each player inputs one positive integer and his name (player doesn't know another's numbers, just his own). When all the players made their moves, computer outputs a name of winner \u2013 who submitted the <em>lowest unique</em> number.</p>\n\n<p>How do you think, what is the best strategy for this game?</p>\n", 'ViewCount': '280', 'Title': 'Guessing the smallest unique positive integer', 'LastActivityDate': '2013-07-04T13:07:44.233', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '13085', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '8991', 'Tags': '<game-theory><randomness>', 'CreationDate': '2013-07-03T13:25:27.730', 'Id': '13061'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I wonder if there exists a game in which $\\epsilon$ - Nash equilibrium leads to a much higher payoff than any other Nash equilibrium.</p>\n\n<p>Show, for every $\\epsilon$ > 0, a two player game where there is an $\\epsilon$-Nash equilibrium in which  both players have a much higher payoff then in any Nash equilibrium.</p>\n\n<p>What is $\\epsilon$ Nash - equilibrium.$\\sigma$ is $\\epsilon$-Nash equilibrium, if $ u_i(\\sigma) \\geq u_i(\\sigma_i, \\sigma_{-i}) - \\epsilon, \\forall \\sigma_i \\in \\Delta(S_i), \\forall i \\in N$.</p>\n\n<p>It sounds very counter-intuitive, in other word I have to show the game where $\\epsilon$ - Nash equilibrium, which is according to the definition not the best strategy to play indeed leads to the best payoff.</p>\n\n<p>Could you give such en example?</p>\n', 'ViewCount': '88', 'Title': '$\\epsilon$ - Nash Equilibrium exceeds Nash Equilibrium', 'LastEditorUserId': '98', 'LastActivityDate': '2013-07-10T07:31:38.823', 'LastEditDate': '2013-07-10T07:31:38.823', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '1', 'OwnerDisplayName': 'user16168', 'PostTypeId': '1', 'OwnerUserId': '8473', 'Tags': '<game-theory>', 'CreationDate': '2013-06-20T04:13:27.027', 'Id': '13184'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': "<p><strong>Updated based on comments:</strong></p>\n\n<p>In what ways can we distinguish a human being doing certain activities online and a bot programmed to do similar activities, say checking email, downloading some music files, shopping on ebay, searching on Google etc., or maybe trying to deface/hack a website, brute force a log-in password etc. </p>\n\n<p>To limit the scope of the question and make it more clear, let us restrict our observations <em>only</em> to network-oriented behavior, some examples being- the amount of time spent doing XYZ thing online, the amount/type of data downloaded (say) from a file sharing website, the number of friends/followers on Social media websites, etc. </p>\n\n<p>I guess it should possible to obtain some 'patterns' which will distinguish human behavior and programmed behavior. </p>\n\n<p>The Turing test is not what I am looking for. </p>\n\n<p>What techniques can be useful here? Machine learning? Game theory? </p>\n\n<p>References to relevant academic/research articles will also be good. </p>\n", 'ViewCount': '171', 'Title': 'In what ways can we distinguish between a human and bot behavior?', 'LastEditorUserId': '4190', 'LastActivityDate': '2013-08-06T08:32:41.143', 'LastEditDate': '2013-08-06T08:32:41.143', 'AnswerCount': '0', 'CommentCount': '5', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '4190', 'Tags': '<machine-learning><artificial-intelligence><game-theory><computer-vs-human>', 'CreationDate': '2013-08-03T05:32:35.383', 'Id': '13580'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Where can I find <em>introductory</em> books, articles, notes or slides on Game Semantics?</p>\n\n<p>I have searched a lot on the internet but I\'m not satisfied by the material I found. It either is too informal, or it assumes too much knowledge of/attitude to other kind of semantics, and it\'s hard to follow for a beginner.</p>\n\n<p>Ideally the material shouldn\'t have any prerequisites, except a little of game theory and few concepts of semantics.</p>\n\n<p>Examples of the material that I\'ve found are:</p>\n\n<ul>\n<li><p><a href="http://www.pps.univ-paris-diderot.fr/~curien/Game-semantics.pdf" rel="nofollow">Notes on Game Semantics</a>: These are quite good, but they lack a bit of formalism at the beginning and I find some explanations or examples difficult to follow.</p></li>\n<li><p><a href="http://www.illc.uva.nl/lint/documents/workshop08/slides/abramsky_tutorial.pdf" rel="nofollow">Tutorial on Game Semantics</a>: Slides; they lack oral explanations.</p></li>\n</ul>\n', 'ViewCount': '41', 'Title': 'Reference introductory books or articles to Game Semantics', 'LastActivityDate': '2013-08-27T08:59:11.797', 'AnswerCount': '0', 'CommentCount': '4', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '7246', 'Tags': '<reference-request><semantics><game-theory>', 'CreationDate': '2013-08-27T08:59:11.797', 'Id': '13963'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I am a starting Ph.D. student in computer science, and I am trying to understand some classic game-theory papers, such as those by Nash, Kalai and Smorodinsky.   But I find it hard to understand the mathematical parts. It seems that these papers were written by mathematicians, for mathematicians.</p>\n\n<p>Can you recommend a book that explains the mathematical preliminaries of game theory, to people without extensive mathematical background?</p>\n', 'ViewCount': '189', 'Title': 'High maths for game theory', 'LastActivityDate': '2013-09-16T10:42:28.270', 'AnswerCount': '1', 'CommentCount': '4', 'AcceptedAnswerId': '14332', 'Score': '8', 'PostTypeId': '1', 'OwnerUserId': '1342', 'Tags': '<reference-request><game-theory><mathematical-analysis>', 'CreationDate': '2013-09-13T13:43:55.123', 'FavoriteCount': '3', 'Id': '14289'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>I originally read that Alpha-Beta pruning has time complexity of $O(b\\ ^{m/2}\\ )$ with perfect ordering (where b = branching factor, m = maximum ply depth) but have recently come across claims that this can be reduced to $O(2\\ ^{m/2}\\ )$ with optimal ordering. Does anyone know of a proof for this claim?</p>\n', 'ViewCount': '89', 'Title': 'Complexity of Alpha-Beta pruning with optimal move ordering', 'LastEditorUserId': '11021', 'LastActivityDate': '2013-10-31T02:30:06.530', 'LastEditDate': '2013-10-31T02:30:06.530', 'AnswerCount': '0', 'CommentCount': '2', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '11021', 'Tags': '<artificial-intelligence><game-theory>', 'CreationDate': '2013-10-31T02:23:43.593', 'FavoriteCount': '1', 'Id': '16596'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Here is the variation:\nWe have some P piles of numbers,each having some pi numbers , and in each turn a player may choose a pile, and then a number from the chosen pile. All the numbers greater than equal to the chosen number are removed from the chosen pile. \nWe have to determine, if the player moving first has a winning strategy.</p>\n\n<p>What I have done is, read about the NIM game and how we could generate a winning strategy. But this variation seems to have a dynamic rule set. Is this a standard type? If so, where can I read about this.? If not, how to approach this? Help in any direction will be appreciated.</p>\n', 'ViewCount': '170', 'Title': 'Modification of Nim Game Winning Strategy', 'LastActivityDate': '2013-11-03T10:39:17.880', 'AnswerCount': '0', 'CommentCount': '3', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '8622', 'Tags': '<algorithms><game-theory>', 'CreationDate': '2013-11-03T10:39:17.880', 'FavoriteCount': '1', 'Id': '16668'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': u'<p>I came across the following dynamic subtraction game:</p>\n\n<blockquote>\n  <p>There is one pile of n chips. The \ufb01rst player to move may remove as many chips as\n  desired, at least one chip but not the whole pile. Thereafter, the players alternate moving,\n  each player not being allowed to remove more chips than his opponent took on the previous\n  move. What is an optimal move for the \ufb01rst player if n = 44? For what values of n does\n  the second player have a win?</p>\n</blockquote>\n\n<p>Now, I know how to solve basic subtraction games, i.e., when both the players are allowed the same set of moves throughout the game (e.g., subtract only 1, 2, or 3 throughout the game). But in the game mentioned above, this set of possible numbers for subtraction is not fixed. I have no clue how to go about solving this question. Any kind of help would be appreciated.</p>\n', 'ViewCount': '195', 'Title': 'Dynamic subtraction game', 'LastActivityDate': '2013-11-08T22:24:52.493', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '16834', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '11119', 'Tags': '<algorithms><dynamic-programming><game-theory>', 'CreationDate': '2013-11-08T12:55:34.920', 'Id': '16820'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>The algorithm (from <a href="http://en.wikipedia.org/wiki/Mastermind_%28board_game%29" rel="nofollow">here</a>) - </p>\n\n<blockquote>\n  <ol>\n  <li><p>Create a set S of remaining possibilities (at this point there are 1296). The first guess is aabb.</p></li>\n  <li><p>Remove all possibilities from S that would not give the same score of colored and white pegs if they were the answer.</p></li>\n  <li><p>For each possible guess (not necessarily in S) calculate how many possibilities from S would be eliminated for each possible\n  colored/white score. The score of the guess is the least of such\n  values. Play the guess with the highest score (minimax).</p></li>\n  <li><p>Go back to step 2 until you have got it right.</p></li>\n  </ol>\n</blockquote>\n\n<p>I confused about the 3nd step - </p>\n\n<p>what is mean -  </p>\n\n<blockquote>\n  <p>how many possibilities from S would be eliminated for each possible\n  colored/white score</p>\n</blockquote>\n\n<p>what is the "correct answer" and the "guess" here  ? </p>\n\n<p>Can someone clear it some more ? </p>\n', 'ViewCount': '317', 'Title': 'Mastermind (board game) - Five-guess algorithm', 'LastEditorUserId': '4409', 'LastActivityDate': '2013-12-08T23:49:43.557', 'LastEditDate': '2013-12-08T18:02:05.260', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '18756', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '4409', 'Tags': '<algorithms><game-theory><board-games>', 'CreationDate': '2013-12-08T13:56:57.047', 'Id': '18749'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Today I\'ve heard about fascinating metagame paradox. I tried to come up with an explanation via Turing Machines formalization (below). Do you know what is the solution to the paradox? (the post content: definition - proposed solution - conclusion)</p>\n\n<p>Something is a game iff:</p>\n\n<pre><code>G1. Two players\nG2. Players alternate\nG3. The game finally ends.\n</code></pre>\n\n<p>The metagame is:</p>\n\n<pre><code>M1. First player picks a game\nM2. Second player starts the game\nM3. The winner is the winner of the game at step 2.\n</code></pre>\n\n<p>Example of a metagame:</p>\n\n<pre><code>1) I pick tic-tac-toe\n2) OK, I put X here ..\n.. so they play ..\n3) .. and let player 2 wins in the tic-tac-toe =&gt; player 2 wins the metagame.\n</code></pre>\n\n<p><strong>Paradox: Is metagame a game?</strong></p>\n\n<p>If metagame is a game, then at point (M1) both players can always pick a metagame, so the metagame will never end => (G3) is violated => metagame is not a game => contradiction.</p>\n\n<p>(also contradiction for case "metagame is not a game" -- metagame will satisfy the definition of a game)</p>\n\n<p>(see also <a href="http://www.math.cornell.edu/~mec/2006-2007/Games/hypergame.html" rel="nofollow">http://www.math.cornell.edu/~mec/2006-2007/Games/hypergame.html</a>)</p>\n\n<p><strong>What is the solution to the paradox?</strong></p>\n\n<p><em>UPDATE:</em> You may want to skip this explanation and go directly to D.W. answer.</p>\n\n<p>I came up with the following explanation:</p>\n\n<p>Lets formalize the problem using Turing Machines notations.\nLet a game be a finite binary string that describes "somehow" game rules. Let a game simulator be a non-deterministic TM that reads a description from the input (without any sanity checks, so the TM doesn\'t know if the game finally ends), and then makes non-deterministic moves for the first and second player. Here we assume (A1) that the game-simulator can decide valid next moves.</p>\n\n<p>Now have a look at the description of a meta-game:</p>\n\n<pre><code>M1. First player picks a game\n</code></pre>\n\n<p>This sentence means that we can "pick a game", i.e. in the definition we assume (A2) that whether an arbitrarily binary string is a game (satisfies G1,G2,G3) is decidable. (see also note (n1) )</p>\n\n<p>M2 and M3 look decidable.</p>\n\n<p>So, <strong>my suggestion is that metagame is not "defined properly"</strong>, since its definition assumes the existence of a decider "if a given binary string is a game". And then we derive a contradiction, so this assumption is wrong.</p>\n\n<p><strong>Does it make sense? Is this related with other explanations of the paradox?</strong>\n(intuitive answers would be great!)</p>\n\n<p>Notes:</p>\n\n<ol>\n<li>Assuming "whether an arbitrarily binary string is a game" may be too much. But we need some computable procedure "pick a game" and one that came into mind is "generate random string, check if it is a game".</li>\n<li>I don\'t know what is a formal word for "not defined properly"</li>\n<li>Assumption A1 may also be undecidable, but I believe it should not change the argument..</li>\n</ol>\n', 'ViewCount': '115', 'Title': 'Metagame Paradox: what is wrong with this explanation?', 'LastEditorUserId': '2260', 'LastActivityDate': '2013-12-11T08:56:46.867', 'LastEditDate': '2013-12-11T08:23:57.650', 'AnswerCount': '2', 'CommentCount': '2', 'AcceptedAnswerId': '18821', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '2260', 'Tags': '<computability><turing-machines><game-theory>', 'CreationDate': '2013-12-09T20:00:39.473', 'Id': '18786'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'Body': '<p>Given a fully deterministic single player resource management game \nwith a pre-known finite number of turns and reasonably simple rules \n(eg, Farmville, if it were single player, deterministic, and ended \nafter a certain number of turns), is it usually possible to write a \ncomputer program that can optimize the game in a reasonable amount of \ntime? Details: </p>\n\n<ul>\n<li><p>I\'m trying to create such a game (sort of a M.U.L.E. clone, but \nnot really). Players would compete individually to get the highest \nscore under a given set of starting conditions. The game must be \nsimple enough to be fun, but complex enough that someone can\'t write \na computer program to rapidly optimize it. The game is semi-tedious \n(in its current form), so I encourage API/automated use. </p></li>\n<li><p>Since the game is deterministic and finite, I realize that an \noptimization algorithm must exist. So my question really is: can \nsomeone always write an optimization algorithm that runs fast enough \nto be useful? </p></li>\n<li><p>I realize the answer depends on the actual game I write, so I\'m \nlooking for one of these answers (roughly): </p>\n\n<ul>\n<li><p>Give up. If you design a resource management game easy enough \nfor people to understand, someone could easily design an algorithm \nto win it. </p></li>\n<li><p>There\'s hope. Depending on how you design the game, it may or \nmay not be possible to write a reasonable algorithm to optimize \nit. However, you have to be very careful. </p></li>\n<li><p>Go for it. In general, there are no algorithms that can optimize \nmost resource management games. Barring extreme conditions, any \nresource management game you design could not reasonably be \noptimized by a computer. </p></li>\n</ul></li>\n<li><p>There are Farmville strategy guides online, but they focus on \ngeneral strategy, not an explicit algorithm. </p></li>\n<li><p>I realize this is a specific case of P != NP, and that\'s it \ntheoretically possible to create simple questions that cannot be \nsolved easily (eg, factor a product of two large primes) or even at \nall (eg, the halting problem), but I\'m wondering if resource \nmanagement games fall, in general, into the NP category. </p></li>\n<li><p>For reference, the game will be a scaled down (and single player) \nversion of: </p></li>\n</ul>\n\n<p><a href="https://github.com/barrycarter/bcapps/tree/master/YAMC" rel="nofollow">https://github.com/barrycarter/bcapps/tree/master/YAMC</a> </p>\n', 'ViewCount': '62', 'ClosedDate': '2014-01-23T18:45:33.290', 'Title': 'Optimizing resource management game (similar to Farmville)', 'LastActivityDate': '2014-01-03T08:14:24.230', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '12548', 'Tags': '<game-theory>', 'CreationDate': '2014-01-02T18:20:05.860', 'Id': '19462'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '32', 'Title': 'How do I compute this non terminal positions evaluation, for tic-tac-toe?', 'LastEditDate': '2014-02-15T21:17:43.797', 'AnswerCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '14704', 'FavoriteCount': '2', 'Body': u'<p>Looking at this <a href="http://www-scf.usc.edu/~csci460/docs/homework/solution2.pdf" rel="nofollow">solution on page 3</a> but having trouble understanding the evaluation function specifically.   </p>\n\n<blockquote>\n  <p>For non terminal positions, we use a linear evaluation function\n  defined as</p>\n  \n  <p>Eval (s) = 3[X2(s)]+X1(s)\u2212(3[O2(s)]+O1(s))</p>\n  \n  <p>We define X n ( s ) as the number of rows, columns, and diagonals in\n  state s with exactly n X\u2019s and no O\u2019s, and similarly define O n ( s )</p>\n</blockquote>\n\n<p>Looking at this state \'s\' for example (these problems accounts for symmetry):</p>\n\n<pre><code>|X| | |\n| |O| |\n| | | |\n</code></pre>\n\n<p>It shows an evaluation of <code>-1</code>  </p>\n\n<p>However, got 0:  </p>\n\n<p>X2(s) = 0 because there are no rows or columns with 2 X\'s.<br>\nX1(s) = 2 because the top row and left column both have 1 X (but the diagonal has an O)</p>\n\n<p>O2(s) = 0 because there are no rows or columns with 2 O\'s.<br>\nO1(s) = 2 because the middle row and middle column both have 1 O (but the diagonal has an X)</p>\n\n<p>Plugging in:  </p>\n\n<pre><code>0+2 - (0+2) = 0\n</code></pre>\n\n<p>So, I thought I am missing symmetry but I just get a bigger scale that still = 0\'s.</p>\n\n<p>I must be overlooking something simple but not sure.</p>\n\n<p>Any help is appreciated.</p>\n', 'Tags': '<heuristics><game-theory><board-games>', 'LastEditorUserId': '14704', 'LastActivityDate': '2014-02-15T22:09:24.987', 'CommentCount': '0', 'AcceptedAnswerId': '21681', 'CreationDate': '2014-02-15T21:12:25.917', 'Id': '21679'}{'color':getRandomColor(),'shape':'dot','label':'Strings', 'size': 60, 'isExploded':false, "precedence": 2,'ViewCount': '49', 'Title': 'Where is the recursion, in the minimax-decision algorithm?', 'LastEditDate': '2014-02-17T00:11:58.803', 'AnswerCount': '1', 'Score': '-1', 'PostTypeId': '1', 'OwnerUserId': '14704', 'FavoriteCount': '2', 'Body': '<p>The below is from an article titled: </p>\n\n<blockquote>\n  <p><strong>Minimax: Recursive Implementation</strong></p>\n</blockquote>\n\n<p><img src="http://i.stack.imgur.com/l00le.png" alt="enter image description here"></p>\n\n<p>To be a recursive function, <a href="https://www.youtube.com/watch?v=72hal4Cp_2I&amp;feature=player_detailpage#t=23" rel="nofollow">you need to call yourself</a>.</p>\n\n<ul>\n<li>What part of this pseudo code is calling itself?</li>\n<li>How does depth-first effect the recursion process?</li>\n<li>There seems to be a return in every line of <code>minimax-value</code>,\nshouldn\'t the return be only on a terminal case?</li>\n<li>Will <code>value[op]</code> contain the moves in order from the root node?</li>\n<li>What does <code>Apply(op,game)</code> do the very first time through?</li>\n</ul>\n\n<p>Any pointers are greatly appreciated.</p>\n', 'Tags': '<heuristics><game-theory><board-games>', 'LastEditorUserId': '14704', 'LastActivityDate': '2014-02-17T05:01:36.407', 'CommentCount': '2', 'AcceptedAnswerId': '21719', 'CreationDate': '2014-02-17T00:04:36.773', 'Id': '21710'}