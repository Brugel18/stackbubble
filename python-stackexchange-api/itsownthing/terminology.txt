{'ViewCount': '3042', 'Title': 'How does one know which notation of time complexity analysis to use?', 'LastEditDate': '2013-06-06T14:12:06.230', 'AnswerCount': '3', 'Score': '41', 'PostTypeId': '1', 'OwnerUserId': '110', 'FavoriteCount': '18', 'Body': '<p>In most introductory algorithm classes, notations like $O$ (Big O) and $\\Theta$ are introduced, and a student would typically learn to use one of these to find the time complexity.</p>\n\n<p>However, there are other notations, such as $o$, $\\Omega$ and $\\omega$. Are there any specific scenarios where one notation would be preferable to another?</p>\n', 'Tags': '<algorithms><terminology><asymptotics><landau-notation><reference-question>', 'LastEditorUserId': '6716', 'LastActivityDate': '2014-04-01T22:12:52.083', 'CommentCount': '1', 'AcceptedAnswerId': '61', 'CreationDate': '2012-03-07T01:42:10.933', 'Id': '57'}{'ViewCount': '867', 'Title': 'Why polynomial time is called "efficient"?', 'LastEditDate': '2012-04-22T16:34:25.370', 'AnswerCount': '3', 'Score': '25', 'PostTypeId': '1', 'OwnerUserId': '157', 'FavoriteCount': '5', 'Body': "<p>Why in computer science any complexity which is at most polynomial is considered efficient?</p>\n\n<p>For any practical application<sup>(a)</sup>, algorithms with complexity $n^{\\log n}$ are way faster than algorithms that run in time, say, $n^{80}$, but the first is considered inefficient while the latter is efficient. Where's the logic?!</p>\n\n<p><sup>(a) Assume, for instance, the number of atoms in the universe is approximately $10^{80}$.</sup></p>\n", 'Tags': '<algorithms><complexity-theory><terminology><efficiency>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-09-04T19:18:03.357', 'CommentCount': '10', 'AcceptedAnswerId': '215', 'CreationDate': '2012-03-10T20:49:58.150', 'Id': '210'}{'Body': u'<p>Suppose the datatype for a BST is defined as follows (in SML)</p>\n\n<pre><code>datatype \'a bst_Tree =\n   Empty\n | Node of (int * \'a) * \'a bst_Tree * \'a bst_Tree;\n</code></pre>\n\n<p>So there are two cases one in which the BST is <code>Empty</code> or it can have a (key,value) as well as two children.</p>\n\n<p>Now, for the case of an AVL where the condition is </p>\n\n<blockquote>\n  <p>In an AVL tree, the heights of the two child subtrees of any node differ by at most one<br>\n  <sub>- <a href="http://en.wikipedia.org/wiki/AVL_tree" rel="nofollow">AVL tree Wikipedia</a></sub></p>\n</blockquote>\n\n<p>I want to able to create a height function for use to check whether the tree is balanced. My current setup is as follows</p>\n\n<pre><code>fun height (Empty) = ~1\n  | height (Node(v, Empty, Empty)) = 0 (* Redundant matching because of third case *)\n  | height (Node(v, L, R)) = 1 + Int.max(height(L),height(R))\n</code></pre>\n\n<p>I tried to separate the Tree into three conditions</p>\n\n<ol>\n<li>A empty Tree</li>\n<li>A Tree with a root node</li>\n<li>A populated tree</li>\n</ol>\n\n<p>The reason for this is that there does not seem to be a canonical source on what the value is for the height of an <code>Empty</code> Tree as opposed to one in which only has a root. For the purposes of my balance function it did the job, but I rather try to understand why there isn\'t a canonical answer for the height of an <code>Empty</code> Tree.</p>\n\n<p>There is a canonical answer, in a matter of speaking on <a href="http://en.wikipedia.org/wiki/Tree_height#Terminology" rel="nofollow">Wikipedia</a> but while initially doing research on this on Stack Overflow I arrived at many comments stating this to be wrong/incorrect/unconventional</p>\n\n<blockquote>\n  <p>Conventionally, the value \u22121 corresponds to a subtree with no nodes, whereas zero corresponds to a subtree with one node.)</p>\n</blockquote>\n\n<p>I grabbed the question from which my uncertainty appeared</p>\n\n<p><a href="http://stackoverflow.com/questions/2209777/what-is-the-definition-for-the-height-of-a-tree">What is the definition for the height of a tree?</a></p>\n\n<blockquote>\n  <p>I think you should take a look at the <a href="http://www.itl.nist.gov/div897/sqg/dads/" rel="nofollow">Dictionary of Algorithms and Data Structures</a> at the NIST website. There definition for height says a single node is height 0.</p>\n  \n  <p>The <a href="http://www.itl.nist.gov/div897/sqg/dads/HTML/tree.html" rel="nofollow">definition of a valid tree</a> does include an empty structure. The site doesn\'t mention the height of such a tree, but based on the definition of the height, it should also be 0.</p>\n</blockquote>\n', 'ViewCount': '271', 'Title': 'What is the height of an empty BST when using it in context for balancing?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-04-22T16:28:40.197', 'LastEditDate': '2012-04-22T16:28:40.197', 'AnswerCount': '2', 'CommentCount': '2', 'AcceptedAnswerId': '346', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '151', 'Tags': '<algorithms><data-structures><terminology>', 'CreationDate': '2012-03-13T21:46:09.257', 'Id': '335'}{'ViewCount': '920', 'Title': 'What is coinduction?', 'LastEditDate': '2012-04-22T15:52:25.520', 'AnswerCount': '2', 'Score': '27', 'PostTypeId': '1', 'OwnerUserId': '31', 'FavoriteCount': '8', 'Body': "<p>I've heard of (structural) induction. It allows you to build up finite structures from smaller ones and gives you proof principles for reasoning about such structures. The idea is clear enough.</p>\n\n<blockquote>\n  <p>But what about coinduction? How does it work? How can one say anything conclusive about an infinite structure?</p>\n</blockquote>\n\n<p>There are (at least) two angles to address, namely, coinduction as a way of defining things and as a proof technique. </p>\n\n<blockquote>\n  <p>Regarding coinduction as a proof technique, what is the relationship between coinduction and bisimulation?</p>\n</blockquote>\n", 'Tags': '<logic><proof-techniques><formal-methods><terminology>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-04-22T15:52:25.520', 'CommentCount': '1', 'AcceptedAnswerId': '528', 'CreationDate': '2012-03-19T17:34:08.127', 'Id': '525'}{'ViewCount': '404', 'Title': 'What is beta equivalence?', 'LastEditDate': '2012-04-22T16:20:23.093', 'AnswerCount': '2', 'Score': '9', 'OwnerDisplayName': 'atticae', 'PostTypeId': '1', 'OwnerUserId': '594', 'FavoriteCount': '2', 'Body': '<p>In the script I am currently reading on the lambda calculus, beta equivalence is defined as this:</p>\n\n<blockquote>\n  <p>The $\\beta$-equivalence $\\equiv_\\beta$ is the smallest equivalence that contains $\\rightarrow_\\beta$.</p>\n</blockquote>\n\n<p>I have no idea what that means. Can someone explain it in simpler terms? Maybe with an example?</p>\n\n<p>I need it for a lemma following from the Church-Russer theorem, saying</p>\n\n<blockquote>\n  <p>If M $\\equiv_\\beta$ N then there is a L with M $\\twoheadrightarrow_\\beta$ L and N $\\twoheadrightarrow_\\beta$ L.</p>\n</blockquote>\n', 'Tags': '<logic><terminology><lambda-calculus><type-theory>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-04-22T16:20:23.093', 'CommentCount': '1', 'AcceptedAnswerId': '635', 'CreationDate': '2012-03-21T18:42:56.037', 'Id': '634'}{'ViewCount': '182', 'Title': 'Are two elements always in a relation within a partially ordered set?', 'LastEditDate': '2012-04-22T16:17:54.920', 'AnswerCount': '2', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '594', 'FavoriteCount': '1', 'Body': '<p>In a partially ordered set, am I always able to order two arbitrary elements out of the set? Or is it possible that two elements within the set have no order relation to each other?</p>\n\n<p>For example if there are three elements $\\{a, b, c\\}$ and $a \\leq b$ and $a \\leq c$, does either $b \\leq c$ or $c \\leq b$ have to hold?</p>\n\n<p>I need this to understand the fixed point theory for semantics of programming languages (denotation of while loops).</p>\n', 'Tags': '<terminology><discrete-mathematics><order-theory>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-04-22T16:17:54.920', 'CommentCount': '4', 'AcceptedAnswerId': '765', 'CreationDate': '2012-03-25T15:47:00.687', 'Id': '764'}{'ViewCount': '433', 'Title': 'How does Stack Inspection work?', 'LastEditDate': '2012-04-22T16:17:25.500', 'AnswerCount': '1', 'Score': '10', 'PostTypeId': '1', 'OwnerUserId': '31', 'FavoriteCount': '1', 'Body': '<p><em>This is precursor to my other, more advanced <a href="http://cs.stackexchange.com/q/795/31">question</a> about Stack Inspection.</em></p>\n\n<p>Stack Inspection is a security mechanism introduced in the JVM to deal with running code originating from locations having different levels of trust. This is question aims at finding a simple description of its functionality. So:</p>\n\n<blockquote>\n  <p>How does stack inspection work?</p>\n</blockquote>\n', 'Tags': '<terminology><security><stack-inspection>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-04-22T16:17:25.500', 'CommentCount': '0', 'AcceptedAnswerId': '797', 'CreationDate': '2012-03-26T11:59:14.860', 'Id': '796'}{'ViewCount': '290', 'Title': 'Difference between "information" and "useful information" in algorithmic information theory', 'LastEditDate': '2012-04-22T15:52:04.393', 'AnswerCount': '3', 'Score': '12', 'PostTypeId': '1', 'OwnerUserId': '877', 'FavoriteCount': '3', 'Body': '<p>According to <a href="http://en.wikipedia.org/wiki/Algorithmic_information_theory#Overview">Wikipedia</a>:</p>\n\n<blockquote>\n  <p>Informally, from the point of view of algorithmic information theory, the information content of a string is equivalent to the length of the shortest possible self-contained representation of that string.</p>\n</blockquote>\n\n<p>What is the analogous informal rigorous definition of "useful information"? Why is "useful information" not taken as the more natural or more fundamental concept; naively it seems a purely random string must by definition contain zero information, so I\'m trying to get my head around the fact that it is considered to have maximal information by the standard definition.</p>\n', 'Tags': '<information-theory><terminology><kolmogorov-complexity>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-07-28T19:54:34.903', 'CommentCount': '1', 'AcceptedAnswerId': '946', 'CreationDate': '2012-04-01T14:16:41.417', 'Id': '945'}{'ViewCount': '983', 'Title': '"NP-complete" optimization problems', 'LastEditDate': '2012-04-22T16:14:12.770', 'AnswerCount': '1', 'Score': '12', 'OwnerDisplayName': 'Aniket Schneider', 'PostTypeId': '1', 'OwnerUserId': '890', 'FavoriteCount': '3', 'Body': '<p>I am slightly confused by some terminology I have encountered regarding the complexity of optimization problems.  In an algorithms class, I had the <a href="http://en.wikipedia.org/wiki/Maximum_parsimony_%28phylogenetics%29#Problems_with_maximum_parsimony_phylogeny_estimation">large parsimony</a> problem described as NP-complete.  However, I am not exactly sure what the term NP-complete means in the context of an optimization problem.  Does this just mean that the corresponding decision problem is NP-complete?  And does that mean that the optimization problem may in fact be harder (perhaps outside of NP)?</p>\n\n<p>In particular, I am concerned about the fact that while an NP-complete decision problem is polynomial time verifiable, a solution to a corresponding optimization problem does not appear to be polynomial time verifiable.  Does that mean that the problem is not really in NP, or is polynomial time verifiability only a characteristic of NP decision problems?</p>\n', 'Tags': '<complexity-theory><np-complete><terminology>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-04-22T16:14:12.770', 'CommentCount': '6', 'AcceptedAnswerId': '989', 'CreationDate': '2012-04-02T04:39:45.650', 'Id': '982'}{'Body': "<p>After reading several sources I'm still confused about user- and kernel-level threads. </p>\n\n<p>In particular:</p>\n\n<blockquote>\n  <p>Threads can exist at both the user level and the kernel level</p>\n</blockquote>\n\n<p>What is the difference between the user level and kernel level? </p>\n", 'ViewCount': '13017', 'Title': 'What is the difference between user-level threads and kernel-level threads?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-04-22T16:11:48.700', 'LastEditDate': '2012-04-22T16:11:48.700', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '1066', 'Score': '12', 'PostTypeId': '1', 'OwnerUserId': '935', 'Tags': '<operating-systems><terminology><concurrency><kernel>', 'CreationDate': '2012-04-05T21:26:34.357', 'Id': '1065'}{'Body': '<p>There are different queues of processes (in an operating system):</p>\n\n<p><em>Job Queue:</em> Each new process goes into the job queue. Processes in the job queue reside on mass storage and await the allocation of main memory.</p>\n\n<p><em>Ready Queue:</em> The set of all processes that are in main memory and are waiting for CPU time is kept in the ready queue.</p>\n\n<p><em>Waiting (Device) Queues:</em> The set of processes waiting for allocation of certain I/O devices is kept in the waiting (device) queue.</p>\n\n<p>The short-term scheduler (also known as CPU scheduling) selects a process from the ready queue and yields control of the CPU to the process.</p>\n\n<p>In my lecture notes the long-term scheduler is partly described as maintaining a queue of new processes waiting to be admitted into the system. </p>\n\n<p>What is the name of the queue the long-term scheduler maintains? When it admits a process to the system is the process placed in the ready queue?    </p>\n', 'ViewCount': '1749', 'Title': 'Which queue does the long-term scheduler maintain?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-09-04T05:30:51.123', 'LastEditDate': '2012-04-22T16:10:28.683', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '1115', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '935', 'Tags': '<operating-systems><terminology><process-scheduling>', 'CreationDate': '2012-04-07T06:24:48.613', 'Id': '1106'}{'ViewCount': '193', 'Title': 'What is the difference between "Decision" and "Verification" in complexity theory?', 'LastEditDate': '2012-04-22T16:09:00.167', 'AnswerCount': '2', 'Score': '11', 'PostTypeId': '1', 'OwnerUserId': '603', 'FavoriteCount': '1', 'Body': '<p>In Michael Sipser\'s <em>Theory of Computation</em> on page 270 he writes:</p>\n\n<blockquote>\n  <p>P = the class of languages for which membership can be decided quickly.<br>\n  NP = the class of languages for which membership can be verified quickly.</p>\n</blockquote>\n\n<p>What is the difference between "decided" and "verified"?</p>\n', 'Tags': '<complexity-theory><terminology><decision-problem>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-04-22T16:09:00.167', 'CommentCount': '1', 'AcceptedAnswerId': '1141', 'CreationDate': '2012-04-08T18:57:17.230', 'Id': '1137'}{'ViewCount': '902', 'Title': 'What is meant by "solvable by non deterministic algorithm in polynomial time"', 'LastEditDate': '2012-04-22T16:05:06.120', 'AnswerCount': '4', 'Score': '10', 'PostTypeId': '1', 'OwnerUserId': '947', 'FavoriteCount': '2', 'Body': '<p>In many textbooks NP problems are defined as:</p>\n\n<blockquote>\n  <p>Set of all decision problems solvable by non deterministic algorithms in polynomial time</p>\n</blockquote>\n\n<p>I couldn\'t understand the part "solvable by non deterministic algorithms". Could anyone please explain that?</p>\n', 'Tags': '<complexity-theory><terminology><nondeterminism>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-04-22T16:05:06.120', 'CommentCount': '2', 'AcceptedAnswerId': '1247', 'CreationDate': '2012-04-13T05:35:10.410', 'Id': '1243'}{'Body': '<p>I\'m studying Bootstrapping from Red Dragon Book Compilers and found the T diagram for cross compiler pretty confusing. I can\'t understand what is meant by "Run compiler1 through compiler2". Can anyone provide some better explanation, analogy or an example to relate with some real world compiler?</p>\n\n<p>Some notation first. By\n$LSN=$ <img src="http://i.stack.imgur.com/7G7ga.png" alt="enter image description here">\n I mean a compiler for language $L$\nwritten in language $S$ that produces output language/machine code $N$. \nThis is a <a href="http://en.wikipedia.org/wiki/Tombstone_diagram" rel="nofollow"><em>tombstone</em> or <em>T-diagrams</em></a>.</p>\n\n<blockquote>\n  <p><strong>Compiling a Compiler</strong></p>\n  \n  <ol>\n  <li><p>Suppose we have cross-compiler for a new language L \n     in implementation language S generating code for machine N.</p>\n  \n  <p>$LSN=$<br>\n  <img src="http://i.stack.imgur.com/xsc0T.png" alt="T-diagram for LSN"></p></li>\n  <li><p>Suppose we also have an existing S compiler running on machine M \n     implementing code for machine M:</p>\n  \n  <p>$SMM=$<br>\n  <img src="http://i.stack.imgur.com/UBlkh.png" alt="T-diagram for SMM"></p></li>\n  <li><p>Run LSN through SMM to produce LMN</p></li>\n  </ol>\n  \n  <p><strong>Compiler Construction</strong></p>\n  \n  <p>$LMN = LSN + SMM$<br>\n   <img src="http://i.stack.imgur.com/yFrsZ.png" alt="T-diagram for LMN = LSN + SMM"></p>\n</blockquote>\n', 'ViewCount': '1237', 'Title': "Cross Compiler's T diagram", 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-20T20:26:12.713', 'LastEditDate': '2012-04-22T15:57:57.733', 'AnswerCount': '3', 'CommentCount': '1', 'Score': '8', 'OwnerDisplayName': 'Saurabh', 'PostTypeId': '1', 'Tags': '<compilers><terminology>', 'CreationDate': '2012-04-15T05:55:40.287', 'FavoriteCount': '1', 'Id': '1281'}{'ViewCount': '186', 'Title': 'What is co-something?', 'LastEditDate': '2012-04-20T10:18:16.487', 'AnswerCount': '2', 'Score': '5', 'OwnerDisplayName': 'Vanwaril', 'PostTypeId': '1', 'OwnerUserId': '1160', 'Body': '<p>What does the notation <code>co-</code> mean when prefixing <code>co-NP</code>, <code>co-RE</code> (recursively enumerable), or <code>co-CE</code> (computably enumerable) ?</p>\n', 'Tags': '<complexity-theory><computability><terminology>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-04-20T10:18:16.487', 'CommentCount': '4', 'AcceptedAnswerId': '1372', 'CreationDate': '2012-04-19T20:06:10.973', 'Id': '1370'}{'Body': '<p>I\'m really struggling with this property:</p>\n\n<blockquote>\n  <p>Let $X,Y$ be <a href="http://en.wikipedia.org/wiki/Coherent_space" rel="nofollow">coherence spaces</a> and $f: Cl(X) \\rightarrow Cl(Y)$ be a monotone function. $f$ is continuous if and only if $f(\\bigcup_{x\\in D} x)=\\bigcup_{x \\in D}f(x)$, for all $D \\subseteq Cl(X)$ such that $D$ is a directed set.</p>\n  \n  <p><strong>Directed set</strong> is defined thus: $D \\subseteq $ POSET$ $ is a directed set iff $ \\forall x, x\' \\in D$ $  \\exists z \\in D $ such $ x \\subseteq z$ and $x&#39; \\subseteq z$.<br>\n  $Cl(X) $stands for cliques of X: $\\{x \\subseteq |X| \\mid a,b \\in x \\Rightarrow a$ coherent $b \\}$.</p>\n</blockquote>\n\n<p>Many books give that as a definition of <strong><a href="http://en.wikipedia.org/wiki/Scott_continuity" rel="nofollow">Scott-continuous</a> functions</strong>, but unluckly not my teacher. He gave us this definition of continuous:</p>\n\n<blockquote>\n  <p>$f : Cl(X) \\rightarrow Cl(Y)$ is continuous iff it is monotone and $\\forall x \\in Cl(X), \\forall b \\in f(x), \\exists x_0 \\subseteq_{fin} x, b \\in f(x_0)$,<br>\n  where <strong>monotone</strong> is defined as:\n  $f$ is monotone iff $a \\subseteq b \\Rightarrow f(a) \\subseteq f(b)$</p>\n</blockquote>\n\n<p>This is the proposed proof I have, but I can\'t understand the last equation.</p>\n\n<p><strong>Proof of $f$ continuous implies $f(\\bigcup D)=\\bigcup f(D)$</strong>:<br>\nLet $b \\in f(\\bigcup D)$. By the definition of continuity, $\\exists x_0 \\subset_{fin} x \\mid b \\in f(x_0)$. Note that $x_0$ is the union of  $\\{ x_i \\mid x_i \\in D\\}$.<br>\nIf $D$ is direct then: $\\exists z \\in D \\mid x_i \\subseteq z$ then $x_0 \\subseteq z$. By the definition of monotony, $f(x_0)\\subseteq f(z)$ so $b \\in f(z)$ <strong><em>(???)</em></strong> $\\subseteq \\bigcup f(D)$. And  even that is true we should show that $\\bigcup f(D) = f(\\bigcup D)$, not just $\\subseteq$.</p>\n\n<p>The proof of the other implication is even worse so I can\'t write it here... Can you explain to me how the proof can work?</p>\n', 'ViewCount': '360', 'Title': 'Scott-continuous functions: an alternative definition', 'LastEditorUserId': '98', 'LastActivityDate': '2013-08-26T07:15:30.433', 'LastEditDate': '2013-08-26T07:15:30.433', 'AnswerCount': '2', 'CommentCount': '14', 'Score': '13', 'PostTypeId': '1', 'OwnerUserId': '1154', 'Tags': '<terminology><programming-languages><semantics>', 'CreationDate': '2012-04-19T22:29:19.940', 'FavoriteCount': '2', 'Id': '1371'}{'ViewCount': '7302', 'Title': 'Distributed vs parallel computing', 'LastEditDate': '2012-04-30T07:46:49.827', 'AnswerCount': '3', 'Score': '18', 'PostTypeId': '1', 'OwnerUserId': '1307', 'FavoriteCount': '12', 'Body': "<p>I often hear people talking about <em>parallel</em> computing and <em>distributed</em> computing, but I'm under the impression that there is no clear boundary between the 2, and people tend to confuse that pretty easily, while I believe it is very different:</p>\n\n<ul>\n<li><em>Parallel</em> computing is more tightly coupled to multi-threading, or how to make full use of a single CPU.</li>\n<li><em>Distributed</em> computing refers to the notion of divide and conquer, executing sub-tasks on different machines and then merging the results.</li>\n</ul>\n\n<p>However, since we stepped into the <em>Big Data</em> era, it seems the distinction is indeed melting, and most systems today use a combination of parallel and distributed computing.</p>\n\n<p>An example I use in my day-to-day job is Hadoop with the Map/Reduce paradigm, a clearly distributed system with workers executing tasks on different machines, but also taking full advantage of each machine with some parallel computing.</p>\n\n<p>I would like to get some advice to understand how exactly to make the distinction in today's world, and if we can still talk about parallel computing or there is no longer a clear distinction. To me it seems distributed computing has grown a lot over the past years, while parallel computing seems to stagnate, which could probably explain why I hear much more talking about distributing computations than parallelizing.</p>\n", 'Tags': '<terminology><distributed-systems><parallel-computing>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-05-20T12:16:12.150', 'CommentCount': '2', 'AcceptedAnswerId': '1582', 'CreationDate': '2012-04-29T21:13:33.690', 'Id': '1580'}{'ViewCount': '237', 'Title': 'Big-Endian/Little-Endian argument - paper by Danny Cohen', 'LastEditDate': '2012-05-06T19:09:51.153', 'AnswerCount': '1', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '78', 'FavoriteCount': '1', 'Body': '<p>Reading a book I was redirected to <a href="http://www.ietf.org/rfc/ien/ien137.txt" rel="nofollow">"On holy wars and a plea for peace"</a> paper by Danny Cohen, which covers the "holy war" between big-endians and little-endians considering byte-order.</p>\n\n<p>Reaching the summary of the memory section I got confused as the author sais:</p>\n\n<blockquote>\n  <p>To  the best of my knowledge only the Big-Endians of Blefuscu have\n  built systems with a consistent order  which  works  across \n  chunk-boundaries, registers,   instructions   and   memories.      I<br>\n  failed  to  find  a Little-Endians\' system which is totally\n  consistent.</p>\n</blockquote>\n\n<p>Which kind of contradicts his previous text sections covering little-endian:</p>\n\n<p>e.g.</p>\n\n<blockquote>\n  <p>When they add the bit order and the byte order they get:</p>\n\n<pre><code>               ...|---word2---|---word1---|---word0---|\n              ....|C3,C2,C1,C0|C3,C2,C1,C0|C3,C2,C1,C0|\n             .....|B31......B0|B31......B0|B31......B0|\n</code></pre>\n  \n  <p>In  this regime, when word W(n) is shifted right, its LSB moves into\n  the MSB of word W(n-1).\n                                     4</p>\n  \n  <p>English  text  strings  are  stored  in  the  same order, with the\n  first character in C0 of W0, the next in C1 of W0, and so on.</p>\n  \n  <p>This order is very consistent with itself, with the Hebrew language,\n  and (more importantly) with mathematics, because significance\n  increases with increasing item numbers (address).</p>\n</blockquote>\n\n<p>he even lateron sais:</p>\n\n<blockquote>\n  <p>The  Big-Endians struck again, and without any resistance got their\n  way. The decimal number 12345678 is stored in the VAX memory in this\n  order:</p>\n\n<pre><code>                       7 8  5 6  3 4  1 2\n                  ...|-------long0-------|\n                 ....|--word1--|--word0--|\n                .....|-C1-|-C0-|-C1-|-C0-|\n               ......|B15....B0|B15....B0|\n</code></pre>\n  \n  <p>This ugliness cannot be hidden even by the standard Chinese trick.</p>\n</blockquote>\n\n<p><strong>How did the author get to this completely different conclusion on overall consistency?</strong> </p>\n\n<p>An answer does not have to only base on the text, but may also include other sources which might clear up how the statement is sound.</p>\n', 'Tags': '<terminology><computer-architecture>', 'LastEditorUserId': '41', 'LastActivityDate': '2012-05-06T19:09:51.153', 'CommentCount': '6', 'AcceptedAnswerId': '1691', 'CreationDate': '2012-05-05T23:34:43.757', 'Id': '1681'}{'ViewCount': '546', 'Title': "Why is a regular language called 'regular'?", 'LastEditDate': '2012-05-14T15:15:21.780', 'AnswerCount': '2', 'Score': '20', 'PostTypeId': '1', 'OwnerUserId': '1434', 'FavoriteCount': '3', 'Body': '<p>I have just completed the first chapter of the <a href="http://www-math.mit.edu/~sipser/book.html"><em>Introduction to the Theory of Computation</em></a> by <em>Michael Sipser</em> which explains the basics of finite automata. </p>\n\n<p>He defines a regular language as anything that can be described by a finite automata. But I could not find where he explains why a regular language is called "regular?"  What is the origin of the term "regular" in this context?</p>\n\n<p>NOTE: I am a novice so please try to explain in simple terms!</p>\n', 'Tags': '<formal-languages><regular-languages><terminology><finite-automata><history>', 'LastEditorUserId': '1298', 'LastActivityDate': '2012-05-14T15:15:21.780', 'CommentCount': '1', 'AcceptedAnswerId': '1772', 'CreationDate': '2012-05-10T02:07:18.947', 'Id': '1771'}{'Body': "<p>What does the complexity class $\\oplus P^{\\oplus P}$ mean? I know that $\\oplus P$ is the complexity class which contains languages $A$ for which there is a polynomial time nondeterministic Turing machine $M$ such that $x \\in A$ iff the number of accepting states of the machine $M$ on the input $x$ is odd.</p>\n\n<p>But what does $\\oplus P^{\\oplus P}$ mean? I just can't follow what it actually does :)</p>\n\n<p>What are practical consequences of such complexity class and how it is possible to show that $\\oplus P^{\\oplus P} = \\oplus P$?</p>\n", 'ViewCount': '245', 'Title': 'What is complexity class $\\oplus P^{\\oplus P}$', 'LastEditorUserId': '41', 'LastActivityDate': '2012-05-15T08:01:04.303', 'LastEditDate': '2012-05-14T23:38:46.803', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '9', 'PostTypeId': '1', 'OwnerUserId': '1487', 'Tags': '<complexity-theory><terminology><complexity-classes>', 'CreationDate': '2012-05-14T16:02:11.397', 'Id': '1836'}{'Body': '<p>In the usual definition of probabilistic poly-time machine it is said that the machine halts in polynomial time for all inputs. </p>\n\n<p>Is the intention really to say that the machine halts for all inputs, or that if it halts it must be in polynomial time?</p>\n', 'ViewCount': '124', 'Title': 'Probabilistic poly-time machine always halts on all inputs?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-05-25T20:13:41.407', 'LastEditDate': '2012-05-25T11:15:04.400', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '6', 'OwnerDisplayName': 'user583311', 'PostTypeId': '1', 'Tags': '<complexity-theory><terminology><turing-machines><probabilistic-algorithms>', 'CreationDate': '2012-05-24T14:21:16.507', 'Id': '2047'}{'Body': '<p>I have to make a quick clustering program but the following formula is gibberish to me:</p>\n\n<blockquote>\n  <p>$\\operatorname{Perf}(X,C) = \\sum\\limits_{i=1}^n\\min\\{||X_i-C_l||^2  \\mid  l = 1,...,K\\}$</p>\n  \n  <p>where $X$ is a set of multi-dimensional data and $C$ is a set of centroids for each data cluster.</p>\n</blockquote>\n\n<p>This formula is a fitness function for an <a href="https://en.wikipedia.org/wiki/Artificial_bee_colony_algorithm" rel="nofollow">artificial bee colony clustering algorithm</a> as a substitute for <a href="https://en.wikipedia.org/wiki/K-means_clustering_algorithm" rel="nofollow">k-means clustering algorithm</a>. It is described as a total\nwithin-cluster variance or the total mean-square quantization error (MSE).</p>\n\n<p>Can anyone translate it to <em>pseudo-code</em>, normal human <em>English</em>, or at least enlighten me?</p>\n', 'ViewCount': '117', 'Title': 'What does this performance formula mean?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-05-25T10:19:26.157', 'LastEditDate': '2012-05-25T10:19:26.157', 'AnswerCount': '2', 'CommentCount': '1', 'AcceptedAnswerId': '2068', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '1643', 'Tags': '<algorithms><terminology><evolutionary-computing>', 'CreationDate': '2012-05-25T05:45:24.833', 'Id': '2067'}{'Body': '<p>Has anyone seen this problem before? It\'s suppose to be NP-complete.</p>\n\n<blockquote>\n  <p>We are given vertices $V_1,\\dots ,V_n$ and possible parent sets for each vertex. Each parent set has an associated cost. Let $O$ be an ordering (a permutation) of the vertices. We say that a parent set of a vertex $V_i$ is consistent with an ordering $O$ if all of the parents come before the vertex in the ordering. Let $mcc(V_i, O)$ be the minimum cost of the parent sets of vertex $V_i$ that are consistent with ordering $O$. I need to find an ordering $O$ that minimizes the total cost: $mcc(V_1, O), \\dots ,mcc(V_n, O)$.</p>\n</blockquote>\n\n<p>I don\'t quite understand the part "...if all of the parents come before the vertex in the ordering." What does it mean?</p>\n', 'ViewCount': '94', 'Title': 'Need help understanding this optimization problem on graphs', 'LastEditorUserId': '1123', 'LastActivityDate': '2012-05-27T18:05:16.293', 'LastEditDate': '2012-05-27T18:05:16.293', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '2104', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '1556', 'Tags': '<algorithms><graph-theory><terminology><optimization>', 'CreationDate': '2012-05-27T07:00:31.647', 'Id': '2100'}{'Body': '<p>I have the following question from <a href="http://www.cs.princeton.edu/theory/complexity/" rel="nofollow">Computational Complexity - A modern Approach</a> by Sanjeev Arora and Boaz Barak:</p>\n\n<blockquote>\n  <p><em>[Q 4.1]</em><br>\n  Prove the existence of a universal TM for space bounded computation (analogously to the deterministic universal TM of Theorem 1.9). </p>\n</blockquote>\n\n<p>That is, prove that there exists a Turing Machine $SU$ such that for every string $\\alpha$ and input $x$, if the TM $M_\\alpha$ -- the TM represented by $\\alpha$ -- halts on $x$ before using $t$ cells of its work tape, then $SU(\\alpha, t, x) = M_\\alpha(x)$ and moreover, $SU$ uses at most $C\\cdot t$ cells of its work tape, where $C$ is a constant depending only on $M_\\alpha$.</p>\n\n<p>After checking theorem 1.9 and the universal TM with time bound, I see that the construct $SU(\\alpha, t, x)$ means that the Turing machine SU stops after $t$ steps. However if this is the case, then it means that we can create a Turing Machine equivalent to $M_\\alpha$ such that the new Turing Machine stops in $t$ steps where $t$ is the "space" used in the original.</p>\n\n<p>However, this seems a dubious interchange of space and time. If on the other hand, $t$ actually meant that the second machine stops within $t$ space, too, then the second part does not make sense any more because it says $SU$ uses $Ct$ cells, which is not $t$.</p>\n\n<p>So my question is how do I interpret this? Is the first interpretation really possible?</p>\n', 'ViewCount': '324', 'Title': 'Space bounded Turing Machine - clarification on Computational Complexity (book: Arora-Barak ) question 4.1', 'LastEditorUserId': '98', 'LastActivityDate': '2012-05-27T18:37:19.410', 'LastEditDate': '2012-05-27T18:23:04.883', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '2113', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '1209', 'Tags': '<complexity-theory><terminology><turing-machines><space-complexity>', 'CreationDate': '2012-05-27T17:36:53.217', 'Id': '2110'}{'Body': '<p>My problem is how can I transform a <em>regular</em> grammar into a <em>linear</em> grammar?</p>\n\n<p>I know that a linear grammar has the form</p>\n\n<p>$\\begin{align} A &amp;\\to w_1Bw_2 \\\\ \n               A &amp;\\to w \\end{align}$</p>\n\n<p>where $A,B \\in N$ and $w,w_1,w_2 \\in \\Sigma^*$.</p>\n', 'ViewCount': '181', 'Title': 'Transform regular grammar in linear grammar', 'LastEditorUserId': '1594', 'LastActivityDate': '2012-05-30T07:27:09.727', 'LastEditDate': '2012-05-28T11:25:13.767', 'AnswerCount': '3', 'CommentCount': '2', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '1594', 'Tags': '<terminology><formal-grammars>', 'CreationDate': '2012-05-28T10:33:42.503', 'Id': '2123'}{'ViewCount': '338', 'Title': 'How to read typing rules?', 'LastEditDate': '2012-05-29T17:09:34.050', 'AnswerCount': '3', 'Score': '7', 'OwnerDisplayName': 'suls', 'PostTypeId': '1', 'OwnerUserId': '1745', 'FavoriteCount': '1', 'Body': '<p>I started reading more and more language research papers. I find it very interesting and a good way to learn more about programming in general. However, there usually comes a section where I always struggle with (take for instance part three of <a href="http://math.andrej.com/wp-content/uploads/2012/03/eff.pdf">this</a>) since I lack the theoretical background in computer science: Type Rules.</p>\n\n<p>Are there any good books or online resources available to get started in this area? <a href="http://en.wikipedia.org/wiki/Type_rules">Wikipedia</a> is incredibly vague and doesn\'t really help a beginner.</p>\n', 'Tags': '<logic><reference-request><terminology><type-theory>', 'LastEditorUserId': '41', 'LastActivityDate': '2012-05-29T19:29:45.030', 'CommentCount': '2', 'AcceptedAnswerId': '2160', 'CreationDate': '2012-05-29T07:18:09.443', 'Id': '2155'}{'Body': "<p>The slides from my course in software architecture hints that these are seperate terms, but I can't seem to find the difference. Aren't all of them just translating interfaces?</p>\n", 'ViewCount': '800', 'Title': "What's the difference between a bridge, a mediator and a wrapper?", 'LastEditorUserId': '98', 'LastActivityDate': '2012-06-15T14:30:32.003', 'LastEditDate': '2012-06-08T18:39:15.737', 'AnswerCount': '3', 'CommentCount': '2', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '1797', 'Tags': '<terminology><software-engineering>', 'CreationDate': '2012-06-08T14:19:23.567', 'FavoriteCount': '4', 'Id': '2284'}{'Body': u'<p>Turing machines have a <a href="https://en.wikipedia.org/wiki/Turing_machine#Formal_definition">formal</a> symbol alphabet, state and transition-rules based description of how a computation is done.   </p>\n\n<p><a href="https://en.wikipedia.org/wiki/Actor_model">The Actor Model</a> is sometimes mentioned as a more powerful computational-model than Turing machines (not in what it can compute, but in other aspects).  </p>\n\n<ol>\n<li>Is The Actor Model a full fledged Turning machine alternative as a computational model?  </li>\n<li>Does The Actor Model also have such a symbol-based formal computation description akin to the Turing machine?</li>\n<li>Are the actors assumed to be Turing machine equivalent - since each message is processed sequentially (and atomically)?</li>\n</ol>\n\n<p>There are many theoretical results based on Turing machines, e.g. the halting problem, decidability, relation to G\xf6del\'s incompleteness theorem etc.  </p>\n\n<p>Can these proofs be formally generalize to the Actor Model? Has this been done?</p>\n', 'ViewCount': '233', 'Title': 'Turing Machine-Like Formalism for The Actor Model', 'LastEditorUserId': '41', 'LastActivityDate': '2013-07-20T09:20:54.697', 'LastEditDate': '2013-07-20T09:20:54.697', 'AnswerCount': '1', 'CommentCount': '6', 'Score': '8', 'PostTypeId': '1', 'OwnerUserId': '1813', 'Tags': '<terminology><computability><reference-request><programming-languages><computation-models>', 'CreationDate': '2012-06-10T05:42:02.043', 'Id': '2311'}{'Body': "<p>I'm looking for some standard terminology, metrics and/or applications of the consideration of density and sequentiality of algorithms.</p>\n\n<p>When we measure algorithms we tend to give the big-Oh notation such as $O(n)$ and usually we are measuring time complexity. Somewhat less frequently, though still often, we'll also measure the space complexity of an algorithm.</p>\n\n<p>Given current computing systems however the density of memory and the sequence in which it is accessed plays a major role in the practical performance of the algorithm. Indeed there are scenarios where a time complexity algortihm of $O(\\log n)$ with disperse random memory access can be slower than a $O(n)$ algorithm with dense sequential memory access. I've not seen these aspects covered in formal theory before; surely it must exist and I'm just ignorant here.</p>\n\n<p>What are the standard metrics, terms, and approaches to this space density and access sequentiality?</p>\n", 'ViewCount': '82', 'Title': 'Complexity of space density and sequentiality', 'LastEditorUserId': '98', 'LastActivityDate': '2012-06-10T11:44:37.957', 'LastEditDate': '2012-06-10T11:33:14.040', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '2318', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '1642', 'Tags': '<complexity-theory><reference-request><terminology><space-complexity>', 'CreationDate': '2012-06-10T09:29:46.877', 'Id': '2317'}{'Body': u'<p>It seems to me that the <em>per-record timeline consistency</em> as defined by Cooper et al. in "PNUTS: Yahoo!\u2019s Hosted Data Serving Platform" mimics the (older?) definition of <em>monotonic writes</em>. From the paper:</p>\n\n<blockquote>\n  <p>per-record timeline consistency: all replicas of a given record apply\n  all updates to the record in the same order.</p>\n</blockquote>\n\n<p>This is quite similar to <a href="http://regal.csep.umflint.edu/~swturner/Classes/csc577/Online/Chapter06/img26.html" rel="nofollow">a definition for monotonic writes</a>:</p>\n\n<blockquote>\n  <p>A write operation by a process on data item x is completed before any\n  successive write operation on x by the same process.</p>\n</blockquote>\n\n<p>Can I conclude that those things are the same, or is there a difference that I misunderstand? Note that the link above also mentions possible copies of data item <code>x</code>, so monotonic write includes replicas.</p>\n', 'ViewCount': '135', 'Title': 'per-record timeline consistency vs. monotonic writes', 'LastEditorUserId': '98', 'LastActivityDate': '2012-06-13T12:16:22.567', 'LastEditDate': '2012-06-12T22:13:07.710', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '2361', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '1837', 'Tags': '<terminology><distributed-systems>', 'CreationDate': '2012-06-12T14:36:36.953', 'Id': '2339'}{'Body': '<p><a href="https://en.wikipedia.org/wiki/Side_channel_attack" rel="nofollow">Wikipedia</a> defines <em>side-channel attacks</em> as:</p>\n\n<blockquote>\n  <p>any attack based on information gained from the physical implementation of a cryptosystem</p>\n</blockquote>\n\n<p>Usually in side channel attacks the implementations leak information (e.g., timing attack: the implementation leaks the time it takes to complete a task, etc.)</p>\n\n<p><strong>Are tampering-attacks also considered as side-channel attacks?</strong></p>\n\n<p>On one hand, tampering-attacks are (usually) attacks on the implementation itself.\nOn the other hand, the attack might be such that information only enters the device, and no information comes out of the device, so there is no "side-channel" that leaks the information.\n(example: If we heat some access-control device, until it grants us the access. Or if we perform SQL injection that causes the device to grant the access (but leaks no secret other than that))</p>\n', 'ViewCount': '63', 'Title': 'Are tamper attacks considered side-channel?', 'LastActivityDate': '2012-06-19T20:05:59.080', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '157', 'Tags': '<terminology><cryptography>', 'CreationDate': '2012-06-19T19:08:30.063', 'Id': '2417'}{'ViewCount': '202', 'Title': 'What is the type theory judgement symbol?', 'LastEditDate': '2012-06-22T09:49:43.210', 'AnswerCount': '2', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '1642', 'FavoriteCount': '1', 'Body': '<p>In type theory judgements are often presented with the following syntax:</p>\n\n<p><img src="http://i.stack.imgur.com/7V5r2.png" alt="enter image description here"></p>\n\n<p>My question is what is that symbol in the middle called? All the papers I\'ve found seem to use an image rather than a unicode character so I can\'t look it up. I\'ve also not found any type-theory reference which says what that symbol is (they explain what it means however).</p>\n\n<p>So what character is that symbol and what is its proper name?</p>\n', 'Tags': '<logic><terminology><type-theory>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-06-22T09:49:43.210', 'CommentCount': '5', 'AcceptedAnswerId': '2439', 'CreationDate': '2012-06-21T18:47:51.477', 'Id': '2437'}{'Body': "<p>I'm writing a small function to alter a graph in a certain way and was wondering if there is a formal name for the operation.  The operation takes two distinct edges, injects a new node between the existing nodes of each edge and then adds an edge between the two new nodes.  For example:</p>\n\n<pre><code>add new nodes a and b to the graph\nlet edge1 = (x,y), let edge2 = (u,v)\n\ndelete edge (x,y)\ncreate edges (x,a), (a,y)\n\ndelete edge(u,v)\ncreate edges(u,b), (b,v)\n\ncreate edge (a,b)\n</code></pre>\n", 'ViewCount': '357', 'Title': 'Is there a formal name for this graph operation?', 'LastEditorUserId': '41', 'LastActivityDate': '2013-08-19T11:01:51.283', 'LastEditDate': '2013-07-20T09:19:50.287', 'AnswerCount': '2', 'CommentCount': '2', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '1989', 'Tags': '<graph-theory><terminology><combinatorics>', 'CreationDate': '2012-06-27T18:48:30.197', 'Id': '2517'}{'ViewCount': '147', 'Title': 'Time complexity version of the Church-Turing Thesis', 'LastEditDate': '2012-07-16T23:22:05.273', 'AnswerCount': '1', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '1590', 'FavoriteCount': '1', 'Body': '<p>There\'s a <a href="http://plato.stanford.edu/entries/church-turing/#Bloopers" rel="nofollow">lot of debate</a> about what exactly the Church-Turing thesis is, but roughly it\'s the argument that "undecidable" should be considered equivalent to "undecidable by a universal turing machine."</p>\n\n<p>I\'m wondering if there\'s an analogous statement for time complexity, i.e. an argument that if some language is decided in $\\Theta\\left(f(n)\\right)$ on a universal turing machine, then we should say its time complexity is $\\Theta\\left(f(n)\\right)$. </p>\n\n<p>This isn\'t equivalent to the CT thesis - e.g. quantum computers decide precisely those languages which are decidable in a non-quantum TM, but they may run that decision procedure more quickly.</p>\n', 'Tags': '<computability><terminology><turing-machines><church-turing-thesis>', 'LastEditorUserId': '41', 'LastActivityDate': '2012-07-16T23:22:05.273', 'CommentCount': '3', 'AcceptedAnswerId': '2766', 'CreationDate': '2012-07-02T16:28:33.263', 'Id': '2587'}{'Body': '<p>In <em>Algorithmic Randomness and Complexity</em> from Downey and Hirschfeldt, it is stated on page 129 that </p>\n\n<p>$\\qquad \\displaystyle \\sum_{K(\\sigma)\\downarrow} 2^{-K(\\sigma)} \\leq 1$, </p>\n\n<p>where $K(\\sigma)\\downarrow$ means that $K$ halts on $\\sigma$, $\\sigma$ being a binary string. $K$ denotes the prefix-free Kolmogorov complexity.</p>\n\n<p>When does $K$ halt? I think it only halts on a finite number of inputs, since the classical proof on non-computability of the Kolmogorov complexity gives an upper bound on the domain of $K$. But then, the finite set of inputs on which $K$ halts can be chosen arbitrary (one just needs to store the finite number of complexities in the source code).</p>\n\n<p>So is this sum well-defined? In other words, is the domain of $K$ well defined?</p>\n', 'ViewCount': '145', 'Title': 'When does the function mapping a string to its prefix-free Kolmogorov complexity halt?', 'LastEditorUserId': '2069', 'LastActivityDate': '2012-07-08T09:51:02.807', 'LastEditDate': '2012-07-05T09:06:51.267', 'AnswerCount': '1', 'CommentCount': '8', 'AcceptedAnswerId': '2625', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '2069', 'Tags': '<computability><terminology><kolmogorov-complexity><descriptive-complexity>', 'CreationDate': '2012-07-04T15:34:08.397', 'Id': '2614'}{'Body': '<p>Semi clustering algorithm is mentioned in the <a href="http://people.apache.org/~edwardyoon/documents/pregel.pdf" rel="nofollow">Google Pregel paper</a>. The score of a semi cluster is calculated using the below formula</p>\n\n<p>$\\qquad \\displaystyle S_c =\\frac{I_c - f_BB_c}{\\frac{1}{2}V_c(V_c - 1)}$</p>\n\n<p>where</p>\n\n<ul>\n<li>$I_c$ is sum of the weights of all the internal edges,</li>\n<li>$B_c$ is the sum of the weights of all the boundary edges,</li>\n<li>$V_c$ is the number of edges in the semi cluster and</li>\n<li>$f_b$ is the boundary edge score factor (user defined between 0 and 1).</li>\n</ul>\n\n<p>The algorithm is pretty straight forward, but I could not understand how the above formula was derived. Note that the denominator is the number of edges possible between $V_c$ number of vertices.</p>\n\n<p>Could someone please explain it?</p>\n', 'ViewCount': '94', 'Title': 'What is the significance of the semi clustering formula in the Google Pregel paper?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-07-05T21:43:57.403', 'LastEditDate': '2012-07-05T08:03:25.720', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '2074', 'Tags': '<algorithms><graph-theory><terminology>', 'CreationDate': '2012-07-05T02:48:54.200', 'Id': '2621'}{'Body': "<p>I want to specify, what it means to give an algebra as input to an algorithm and didn't find very much literature about it. So first I want to ask if you can recommend a book or paper that deals with the topic of complexity analysis of algebras over fields <em>and clearly define the decision problem</em>.</p>\n\n<p>After some digging I found <em>something</em> and want to share it here and furthermore ask if the definitions make sense and are in compliance with literature (if there is any):</p>\n\n<blockquote>\n  <p><strong>Definition:</strong> Let $\\mathbb F$ be a field and $A$ be a finitely generated commutative $\\mathbb F$-algebra with additive basis $b_1,\\ldots, b_n\\in\\mathbb F$. We now want to capture the multiplicative structure of the algebra and therefore write every product of base elements as a linear combination of all base elements:\n  $$\n\\forall 1\\leq i, j, k\\leq n: \\exists a_{ijk}: b_ib_j=\\sum_{k=1}^n a_{ijk}b_k.\n$$\n  The $a_{ijk}$ are called <strong>structure coefficients</strong>. We directly have that:\n  $$ A \\cong \\left.\\mathbb{F}[b_1, \\ldots, b_n] \\middle/ \\left&lt;b_i b_j-\\sum_{k=1}^n a_{ijk}b_k\\right&gt;_{1\\leq i,j\\leq n}\\right..$$\n  Now one can define the following decision problem:\n  $$\n\\{(A,B)\\mid A, B \\text{ commutative $\\mathbb F$-algebras with basis $b_1, \\ldots b_n$ and } A\\cong B\\}.\n$$\n  To specify an isomorphism $\\phi:A\\rightarrow B$ it is sufficient to write every $\\phi(b_i)$ as linear combination of the elements of a basis of $B$.</p>\n</blockquote>\n\n<p>Does anything in this definition seem strange to you or do you think that one can work with it? </p>\n\n<blockquote>\n  <p><strong>Motivation:</strong> My motivation behind this is to give a very clear definition of the decision problem first to connect it to other problems, i.e. the problem of deciding polynomial equivalence: Given two polynomials $f,g\\in\\mathbb F[x_1, \\ldots, x_n]$, we say that $f$ is <strong>equivalent</strong> to $g$ if there exists an invertible linear transformation $\\tau$ on the variables such that $f(\\tau(x_1), \\ldots, \\tau(x_n))=g(x_1, \\ldots, x_n)$. In other words, two polynomials are equivalent if you can replace every variable by a linear combination of all variables to obtain the other polynomial. </p>\n</blockquote>\n\n<p>I'm not sure if this helps as a motivation but the connection of this problems is established by constructing finitely generated commutative $\\mathbb F$-algebras from the two polynomials that are isomorphic if and only if the polynomials are equivalent. For this I wanted to make sure that the decision problem is defined very clearly. </p>\n", 'ViewCount': '112', 'Title': 'An $\\mathbb F$-algebra as input to an algorithm', 'LastEditorUserId': '41', 'LastActivityDate': '2012-07-17T06:09:52.990', 'LastEditDate': '2012-07-17T05:59:47.400', 'AnswerCount': '2', 'CommentCount': '1', 'Score': '10', 'PostTypeId': '1', 'OwnerUserId': '2103', 'Tags': '<computability><terminology><decision-problem>', 'CreationDate': '2012-07-07T20:18:54.500', 'FavoriteCount': '1', 'Id': '2642'}{'Body': '<p>I just learned that when we have a polynomial algorithm for NP-complete problems, it is possible to use that algorithm to solve all NP problems. </p>\n\n<p>So, the question is how we then distinguish non-NP-complete NP problems from NP-complete problems? It seems that all these problems will have a polynomial algorithm to convert into other problems...</p>\n', 'ViewCount': '146', 'Title': 'How do we distinguish NP-complete problems from other NP problems?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-07-17T13:41:22.427', 'LastEditDate': '2012-07-17T13:41:22.427', 'AnswerCount': '2', 'CommentCount': '4', 'AcceptedAnswerId': '2659', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '2114', 'Tags': '<complexity-theory><terminology><np-complete>', 'CreationDate': '2012-07-09T15:33:44.827', 'Id': '2655'}{'Body': "<p>Is there any formal definition about the average height of a binary tree?</p>\n\n<p>I have a tutorial question about finding the average height of a binary tree using the following two methods:</p>\n\n<ol>\n<li><p>The natural solution might be to take the average length of all possible\npaths from the root to a leaf, that is</p>\n\n<p>$\\qquad \\displaystyle \\operatorname{avh}_1(T) = \\frac{1}{\\text{# leaves in } T} \\cdot \\sum_{v \\text{ leaf of } T} \\operatorname{depth}(v)$.</p></li>\n<li><p>Another option is to define it recursively, that is the average height for a node is the average over the average heights of the subtrees plus\none, that is </p>\n\n<p>$\\qquad \\displaystyle \\operatorname{avh}_2(N(l,r)) = \\frac{\\operatorname{avh}_2(l) + \\operatorname{avh}_2(r)}{2} + 1$</p>\n\n<p>with $\\operatorname{avh}_2(l) = 1$ for leafs $l$ and $\\operatorname{avh}_2(\\_) = 0$ for empty slots.</p></li>\n</ol>\n\n<p>Based on my current understanding, for example the average height of the tree $T$</p>\n\n<pre><code>    1    \n   / \\\n  2   3\n /\n4\n</code></pre>\n\n<p>is $\\operatorname{avh}_2(T) = 1.25$ by the second method, that is using recursion.</p>\n\n<p>However, I still don't quite understand how to do the first one. $\\operatorname{avh}_1(T) = (1+2)/2=1.5$ is not correct.</p>\n", 'ViewCount': '825', 'Title': 'What is the average height of a binary tree?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-07-22T09:42:41.200', 'LastEditDate': '2012-07-22T09:42:37.330', 'AnswerCount': '2', 'CommentCount': '3', 'AcceptedAnswerId': '2859', 'Score': '8', 'PostTypeId': '1', 'OwnerUserId': '1895', 'Tags': '<graph-theory><terminology><combinatorics><binary-trees>', 'CreationDate': '2012-07-16T13:55:13.860', 'Id': '2762'}{'Body': '<p>What\'s the definition of Kolmogorov complexity for a decision problem? For example, how to define the length of the shortest program that solves the 3SAT problem? Is it the "smallest" Turing machine that recognizes the 3SAT langauge?</p>\n', 'ViewCount': '76', 'Title': 'Kolmogorov complexity of a decision problem', 'LastEditorUserId': '98', 'LastActivityDate': '2012-07-18T01:33:05.280', 'LastEditDate': '2012-07-18T01:33:05.280', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '2779', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '1986', 'Tags': '<computability><terminology><decision-problem><kolmogorov-complexity><3-sat>', 'CreationDate': '2012-07-16T18:48:03.180', 'Id': '2770'}{'Body': '<p>According to <a href="http://en.wikipedia.org/wiki/LR_parser#LR_and_Other_Kinds_of_Parsers">the Wikipedia article</a>, the L in $LR(k)$ means "left-to-right scan", and the "R" means "rightmost derivation."  However, in <a href="http://classes.engr.oregonstate.edu/eecs/winter2012/cs480/assignments/Knuth-1965-TranslationofLanguages.pdf">Knuth\'s original paper on $LR(k)$ grammars</a>, he defines $LR(k)$ (on page 610) as a language that is "translatable from left to right with bound $k$."</p>\n\n<p>I am guessing that this new terminology was chosen to complement $LL(k)$ parsing\'s "left-to-right scan, leftmost derivation."  That said, I don\'t know when the terminology changed meaning.</p>\n\n<p>Does anyone know where the newer acronym for $LR(k)$ comes from?</p>\n', 'ViewCount': '115', 'Title': 'When did $LR(k)$ acquire the meaning "left-to-right scan, rightmost derivation?"', 'LastEditorUserId': '41', 'LastActivityDate': '2012-07-17T22:09:46.040', 'LastEditDate': '2012-07-17T22:09:46.040', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '2131', 'Tags': '<formal-languages><reference-request><terminology><formal-grammars><parsers>', 'CreationDate': '2012-07-17T19:10:32.620', 'FavoriteCount': '1', 'Id': '2791'}{'ViewCount': '1439', 'Title': "Perplexed by Rice's theorem", 'LastEditDate': '2012-11-26T12:04:48.433', 'AnswerCount': '2', 'Score': '21', 'PostTypeId': '1', 'OwnerUserId': '1951', 'FavoriteCount': '5', 'Body': '<p><strong>Summary:</strong> According to Rice\'s theorem, everything is impossible. And yet, I <em>do</em> this supposedly impossible stuff <em>all the time!</em></p>\n\n<hr>\n\n<p>Of course, Rice\'s theorem doesn\'t simply say "everything is impossible". It says something rather more specific: "Every property of a computer program is non-computable."</p>\n\n<p>(If you want to split hairs, every "non-trivial" property. That is, properties which <em>all</em> programs posses or <em>no</em> programs posses are trivially computable. But any other property is non-computable.)</p>\n\n<p>That\'s what the theorem says, or appears to say. And presumably a great number of very smart people have carefully verified the correctness of this theorem. But it seems to completely defy logic! There are <em>numerous</em> properties of programs which are <em>trivial</em> to compute!! For example:</p>\n\n<ul>\n<li><p>How many steps does a program execute before halting? To decide whether this number is finite or infinite is precisely the Halting Problem, which is non-computable. To decide whether this number is greater or less than some finite $n$ is <em>trivial!</em> Just run the program for up to $n$ steps and see if it halts or not. Easy!</p></li>\n<li><p>Similarly, does the program use more or less than $n$ units of memory in its first $m$ execution steps? Trivially computable.</p></li>\n<li><p>Does the program text mention a variable named $k$? A trivial textual analysis will reveal the answer.</p></li>\n<li><p>Does the program invoke command $\\sigma$? Again, scan the program text looking for that command name.</p></li>\n</ul>\n\n<p>I can see plenty of properties that <em>do</em> look non-computable as well; e.g., how many additions does a complete run of the program perform? Well, that\'s nearly the same as asking how many <em>steps</em> the program performs, which is virtually the Halting Problem. But it looks like there are boat-loads of program properties which a really, really <em>easy</em> to compute. And yet, Rice\'s theorem insists that none of them are computable.</p>\n\n<p>What am I missing here?</p>\n', 'Tags': '<computability><terminology><undecidability>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-11-26T18:26:22.353', 'CommentCount': '1', 'AcceptedAnswerId': '6928', 'CreationDate': '2012-07-18T09:23:10.527', 'Id': '2811'}{'Body': '<p>I asked a (seed) question about sums of Landau terms <a href="http://cs.stackexchange.com/questions/366/what-goes-wrong-with-sums-of-landau-terms">before</a>, trying to gauge the dangers of abusing asymptotics notation in arithmetics, with mixed success.</p>\n\n<p>Now, <a href="http://cs.stackexchange.com/a/2803/98">over here</a> our recurrence guru <a href="http://cs.stackexchange.com/a/2803/98">JeffE</a> does essentially this:</p>\n\n<p>$\\qquad \\displaystyle \\sum_{i=1}^n \\Theta\\left(\\frac{1}{i}\\right) = \\Theta(H_n)$</p>\n\n<p>While the end result is correct, I think this is wrong. Why? If we add in all the existence of constants implied (only the upper bound), we have</p>\n\n<p>$\\qquad \\displaystyle \\sum_{i=1}^n c_i \\cdot \\frac{1}{i} \\leq c \\cdot H_n$.</p>\n\n<p>Now how do we compute $c$ from $c_1, \\dots, c_n$? The answer is, I believe, that we can not: $c$ has to bound for all $n$ but we get <em>more</em> $c_i$ as $n$ grows. We don\'t know anything about them; $c_i$ may very well depend on $i$, so we can not assume a bound: a finite $c$ may not exist.</p>\n\n<p>In addition, there is this subtle issue of which variable goes to infinity on the left-hand side -- $i$ or $n$? Both? If $n$ (for the sake of compatibility), what is the meaning of $\\Theta(1/i)$, knowing that $1 \\leq i \\leq n$? Does it not only mean $\\Theta(1)$? If so, we can\'t bound the sum better than $\\Theta(n)$.</p>\n\n<p>So, where does that leave us? It it a blatant mistake? A subtle one? Or is it just the usual abuse of notation and we should not look at $=$ signs like this one out of context? Can we formulate a (rigorously) correct rule to evalutate (certain) sums of Landau terms?</p>\n\n<p>I think that the main question is: what is $i$? If we consider it constant (as it <em>is</em> inside the scope of the sum) we can easily build counterexamples. If it is not constant, I have no idea how to read it.</p>\n', 'ViewCount': '243', 'Title': 'Sums of Landau terms revisited', 'LastEditorUserId': '98', 'LastActivityDate': '2013-02-01T14:11:11.147', 'LastEditDate': '2012-07-18T22:01:47.640', 'AnswerCount': '3', 'CommentCount': '19', 'Score': '8', 'PostTypeId': '1', 'OwnerUserId': '98', 'Tags': '<terminology><asymptotics><landau-notation>', 'CreationDate': '2012-07-18T15:35:15.237', 'FavoriteCount': '1', 'Id': '2814'}{'Body': '<p>I had written a <a href="https://github.com/shabbyX/shCompiler" rel="nofollow">compiler compiler</a> a few years ago and I\'m now cleaning it up, improving it, and turning it into C.</p>\n\n<p>I came across a terminology problem however that I remember in the past I couldn\'t solve it either.</p>\n\n<p>Imagine an LL(k) stack. In this stack, you may have terminals, that are expected to be matched with the next token, or non-terminals that would expand based on the next token. In either case, there is a string in the stack.</p>\n\n<p>The word I am looking for, is a term that means either a terminal or non-terminal. <a href="http://en.wikipedia.org/wiki/Terminal_and_nonterminal_symbols" rel="nofollow">Wikipedia</a> was of no help.</p>\n\n<p>To clarify a bit more, imagine a grammar with $t = \\{a \\mid a \\text{ terminal}\\}$ and $T = \\{A \\mid A \\text{ non-terminal}\\}$. If you have a set $X = \\{x | x \\in t \\vee x \\in T\\}$, how would you refer to an element of $X$? "Grammar symbol"? "Grammar element"? "Terminal or non-terminal symbol"?</p>\n\n<p>I am in particular looking for a name as short and to the point as possible, since this will end up becoming a variable name!</p>\n', 'ViewCount': '153', 'Title': 'How to call something that can be either a terminal or a nonterminal?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-07-23T09:10:30.030', 'LastEditDate': '2012-07-23T09:06:22.513', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '2870', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '944', 'Tags': '<terminology><formal-grammars><compilers>', 'CreationDate': '2012-07-23T08:50:15.063', 'Id': '2868'}{'Body': '<p>In a recent CACM article [1], the authors present an implementation for <em>staged functions</em>. They use the term as if it was well-known, and none of the references looks like an obvious introduction.</p>\n\n<p>They give a short explanation (emphasis mine and reference number changed; it\'s 22 in the original)</p>\n\n<blockquote>\n  <p>In the context of program generation, multistage programming (MSP, staging for short) as established by Taha and Sheard [2] <strong>allows programmers to explicitly delay evaluation of a program expression to a later stage</strong> (thus, staging an expression). The present stage effectively acts as a code generator that composes (and possibly executes) the program of the next stage. </p>\n</blockquote>\n\n<p>However, Taha and Sheard write (emphasis mine):</p>\n\n<blockquote>\n  <p><strong>A multi-stage program is one that involves the generation, compilation, and execution of code, all inside the same process.</strong> Multi-stage languages express multi-stage programs. Staging, and consequently multi-stage programming, address the need for general purpose solutions which do not pay run-time interpretive overheads.</p>\n</blockquote>\n\n<p>They than go on to several references to older work allegedly showing that staging is effective, which suggests that the concept is even older. They don\'t give a reference for the term itself.</p>\n\n<p>These statements seem to be orthogonal, if not contradictory; maybe what Rompf and Odersky write is an application of what Taha and Sheard propose, but maybe it is another perspective on the same thing. They seem to agree that an important point is that programs (re)write parts of themselves at runtime, but I do not know whether that is a necessary and/or sufficient ability.</p>\n\n<p>So, what is <em>staging</em> respectively are interpretations of staging in this context? Where does the term come from?</p>\n\n<hr>\n\n<ol>\n<li><a href="http://dx.doi.org/10.1145/2184319.2184345">Lightweight Modular Staging: A Pragmatic Approach to Runtime Code Generation and Compiled DSLs</a> by T. Rompf and M. Odersky (2012)</li>\n<li><a href="http://dx.doi.org/10.1016/S0304-3975%2800%2900053-0">MetaML and multi-stageprogramming with explicit annotations</a> by W. Taha and T. Sheard (2000)</li>\n</ol>\n', 'ViewCount': '368', 'Title': 'What are staged functions (conceptually)?', 'LastActivityDate': '2012-07-26T21:24:27.617', 'AnswerCount': '3', 'CommentCount': '2', 'AcceptedAnswerId': '2914', 'Score': '8', 'PostTypeId': '1', 'OwnerUserId': '98', 'Tags': '<terminology><programming-languages>', 'CreationDate': '2012-07-23T09:04:28.103', 'FavoriteCount': '1', 'Id': '2869'}{'ViewCount': '256', 'Title': 'Origins of the term "distributed hash table"', 'LastEditDate': '2012-07-23T09:49:38.700', 'AnswerCount': '1', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '1837', 'FavoriteCount': '1', 'Body': "<p>I am currently researching for my diploma thesis in computer science with a topic in the area of distributed hash tables. Naturally, I came to the question were the term <em>distributed hash table</em> came from. (I know it is not rocket science to just derive it from <em>distributing a hash table</em>, but somebody somewhere must have come up with it).</p>\n\n<p>Most papers I read referred to the original paper on <em>consistent hashing</em> and one of the first algorithms making use of it (e.g Chord). I know that there was a lot of research on distributed databases in the 80s, so I figure that the term, or maybe the idea behind it, should be older than ~15 years.</p>\n\n<p>The motivation behind this question is that knowing an earlier date and maybe another term for a similar idea would possibly widen the range of useful information I could gather for my research. For example, what have others done that is similar to what I want to do and where have they failed. Etc. etc.</p>\n\n<p>I tried to find more on this subject using <em>Structured Overlay Networks</em> as a search keyword, but the resulting definitions/papers are also quite young, which leaves me with the impression that the research topic might not be so old after all.</p>\n\n<p>Does anybody of you know of earlier research (maybe pre-90s?) in the topics of distributed hash tables and/or structured overlay networks? I'd be glad to hear some keywords which could lead me to more historic papers.</p>\n", 'Tags': '<data-structures><terminology><distributed-systems><hash-tables><history>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-01-21T07:15:27.943', 'CommentCount': '6', 'AcceptedAnswerId': '8961', 'CreationDate': '2012-07-23T09:43:04.950', 'Id': '2872'}{'Body': '<p>In Sipser\'s textbook "Introduction to the Theory of Computation, Second Edition," he defines nondeterministic time complexity as follows:</p>\n\n<blockquote>\n  <p>Let $N$ be a nondeterministic Turing machine that is a decider.  The <strong>running time</strong> of $N$ is the function $f : \\mathbb{N} \\rightarrow \\mathbb{N}$, where $f(n)$ is the maximum number of steps that $N$ uses on any branch of its computation on any input of length $n$ [...].</p>\n</blockquote>\n\n<p>Part of this definition says that the running time of the machine $N$ is the maximum number of steps taken by that machine on any branch.  Is there a reason that all branches are considered?  It seems like the length of the shortest accepting computation would be a better measure (assuming, of course, that the machine halts), since you would never need to run the machine any longer than this before you could conclude whether the machine was going to accept or not.</p>\n', 'ViewCount': '129', 'Title': 'Why does NTIME consider the length of the longest computation?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-07-24T08:48:55.467', 'LastEditDate': '2012-07-24T08:48:55.467', 'AnswerCount': '3', 'CommentCount': '3', 'AcceptedAnswerId': '2892', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '2131', 'Tags': '<complexity-theory><time-complexity><terminology><turing-machines><nondeterminism>', 'CreationDate': '2012-07-23T22:49:08.547', 'Id': '2887'}{'Body': '<p>While I am learning a lot from others here at the Computer Science site, I must admit that I don\'t get as much out of some questions and answers since I typically don\'t understand the theorems to the level necessary. I am currently reading <a href="http://rads.stackoverflow.com/amzn/click/0910319375" rel="nofollow">How To Prove It - A Structured Approach</a> which is starting to make the theorems easier to read, but still does not get me to the point of being able to understand the theorems to the point that they add great insight to the question or answer.</p>\n\n<p>For this question <a href="http://cs.stackexchange.com/q/2646/268">Is it possible to always construct a hamiltonian path on a tournament graph by sorting?</a></p>\n\n<p>there is a use of a peroid in the premise.</p>\n\n<blockquote>\n  <p>$\\qquad \\displaystyle a \\leq b \\iff (a,b) \\in E \\lor \\left(\\exists\\, c \\in V. a \\leq c \\land c \\leq b\\right)$</p>\n</blockquote>\n\n<p>What does the period mean? I would be expecting either a comma to mean conjuction or or to mean disjunction, but not a period. I don\'t see how this could be converted to logical statements.</p>\n\n<p>Note: <a href="http://meta.cs.stackexchange.com/users/232/jukka-suomela">Jukka Suomela</a> has already provided the answer in this <a href="http://meta.cs.stackexchange.com/q/493/268">CS meta question</a>.</p>\n', 'ViewCount': '200', 'Title': 'Period in postulate; what does it mean?', 'LastEditorUserId': '41', 'LastActivityDate': '2012-08-02T06:21:18.240', 'LastEditDate': '2012-08-02T06:21:18.240', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '2963', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '268', 'Tags': '<terminology><logic>', 'CreationDate': '2012-07-31T13:09:20.260', 'Id': '2962'}{'Body': '<p>In <em>"Introduction to Algorithms: 3rd Edition"</em> there is Theorem 34.2, which states</p>\n\n<blockquote>\n  <p>$P = \\{ L \\mid L \\text{ is accepted by a polynomial-time algorithm} \\}$</p>\n</blockquote>\n\n<p><em>"Accepted in polynomial-time"</em> is defined by:</p>\n\n<blockquote>\n  <p>$L$ is accepted in polynomial time by an algorithm $A$ if it is accepted by $A$\n      and if in addition there exists a constant $k$ such that for any length-n string $x\\in L$, \n      algorithm $A$ accepts $x$ in time $O(n^k)$.</p>\n</blockquote>\n\n<p><em>"Accepted"</em> is defined by:</p>\n\n<blockquote>\n  <p>The language accepted by an algorithm $A$ is the set of strings\n          $L = \\{ x \\in \\{0,1\\}^* \\mid A(x) = 1 \\}$,\n      that is, the set of strings that the algorithm accepts.</p>\n</blockquote>\n\n<p>But what if we take $k = 0$, and algorithm $A(\\cdot) = 1$, which just returns 1 for everything?\nWouldn\'t that mean, that $P$ is just class of all languages?</p>\n', 'ViewCount': '92', 'Title': 'Problem with the definition of P', 'LastEditorUserId': '98', 'LastActivityDate': '2012-08-02T08:33:12.717', 'LastEditDate': '2012-08-02T08:33:12.717', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '3000', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '1552', 'Tags': '<complexity-theory><terminology><time-complexity><polynomial-time>', 'CreationDate': '2012-08-02T07:57:36.103', 'Id': '2999'}{'Body': u'<p>In a recent CACM article [1], the authors present a way to improve scalability of shared  and coherent caches. The core ingredient is assuming the caches are <em>inclusive</em>, that is higher-level caches (e.g. L3, one global cache) contain all blocks which are stored in their descendant lower-level caches (e.g. L1, one cache per core).</p>\n\n<p>Typically, higher-level caches are larger than their respective descendant caches together. For instance, some models of the Intel Core i7 series with four cores have an 8MB shared cache (L3) and 256KB private caches (L2), that is the shared cache can hold eight times as many blocks as the private caches in total.</p>\n\n<p>This seems to suggest that whenever the shared cache has to evict a block (in order to load a new block) it can find a block that is shared with none of the private caches\xb2 (pigeon-hole principle). However, the authors write:</p>\n\n<blockquote>\n  <p>[We] can potentially eliminate all recalls, but only if the associativity, or number of places in which a specific block may be cached, of the shared cache exceeds the aggregate associativity of the private caches. With sufficient associativity, [the shared cache] is guaranteed to find a nonshared block [...]. Without this worst-case associativity, a pathological cluster of misses could lead to a situation in which all blocks in a set of the shared cache are truly shared.</p>\n</blockquote>\n\n<p>How is this possible, that is how can, say, 1MB cover 8MB? Clearly I miss some detail of how such cache hierarchies work. What does "associativity" mean here? "number of places in which a specific block may be cached" is not clear; I can only come up with the interpretation that a block can be stored multiple times in each cache, but that would make no sense at all. What would such a "pathological cluster of misses" look like?</p>\n\n<hr>\n\n<ol>\n<li><a href="http://dx.doi.org/10.1145/2209249.2209269">Why On-Chip Cache Coherence is Here to Stay</a> by M. M. K. Martin, M. D. Hill, D. J. Sorin  (2012)</li>\n<li>Assuming the shared caches knows which blocks are shared where. This can be achieved by explicit eviction notifications and tracking bit, which is also discussed in [1].</li>\n</ol>\n', 'ViewCount': '207', 'Title': 'Why can L3 caches hold only shared blocks?', 'LastActivityDate': '2012-08-02T14:29:37.697', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '3004', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '98', 'Tags': '<terminology><computer-architecture><cpu-cache><shared-memory>', 'CreationDate': '2012-08-02T11:38:21.877', 'Id': '3001'}{'Body': '<p>In the Subset Sum problem can some of the given numbers $a_1,a_2,a_3,\\dots,a_n$ be the same? For example, we might have $[1,1,1,2,3,4]$ and the target is $5$? Can I assume that I have a specific solution with numbers $2$ and $3$ and $1,1,1$ and $2$ is not?</p>\n', 'ViewCount': '216', 'Title': 'Does Subset Sum allow multisets?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-10-21T19:05:00.967', 'LastEditDate': '2012-08-03T06:07:44.717', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '3', 'OwnerDisplayName': 'Iraklis ', 'PostTypeId': '1', 'OwnerUserId': '2367', 'Tags': '<complexity-theory><terminology>', 'CreationDate': '2012-08-02T16:03:35.240', 'Id': '3010'}{'ViewCount': '802', 'Title': 'What is the meaning of $O(m+n)$?', 'LastEditDate': '2012-08-13T22:22:38.217', 'AnswerCount': '2', 'Score': '26', 'OwnerDisplayName': 'Frank', 'PostTypeId': '1', 'OwnerUserId': '9667', 'FavoriteCount': '5', 'Body': '<p>This is a basic question, but I\'m thinking that $O(m+n)$ is the same as $O(\\max(m,n))$, since the larger term should dominate as we go to infinity? Also, that would be different from $O(\\min(m,n))$. Is that right? I keep seeing this notation, especially when discussing graph algorithms. For example, you routinely see: $O(|V| + |E|)$ (e.g. see <a href="http://algs4.cs.princeton.edu/41undirected/">here</a>).</p>\n', 'Tags': '<terminology><asymptotics><mathematical-analysis><landau-notation>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-08-13T22:22:38.217', 'CommentCount': '1', 'AcceptedAnswerId': '3150', 'CreationDate': '2012-08-13T15:29:47.517', 'Id': '3149'}{'Body': '<p>I have been studying <a href="http://en.wikipedia.org/wiki/Spiking_neural_network" rel="nofollow">Spiking Neural Networks</a> online from various papers, mainly <a href="http://mathsci.kaist.ac.kr/~nipl/am621/lecturenotes/spiking_neurons_2.pdf" rel="nofollow">Maass (1997)</a>. I am not entirely sure I understand what makes SNN\'s pulse-code in contrast to earlier <a href="https://en.wikipedia.org/wiki/Artificial_neural_network" rel="nofollow">ANN</a>s which are considered rate-code. \nI have background in neuroscience so I understand the terms and ratio, I\'m asking regarding the actual implementation. </p>\n\n<p>Is the practical difference in the fact that when each neuron updates its current state in an SNN it deals with the entire history of every pre-synaptic neuron and not only the last step? Is that what gives it temporal characteristics which previous generation ANN\'s lack?</p>\n', 'ViewCount': '128', 'Title': "The essential difference between spiking neural networks and earlier generation ANN's", 'LastEditorUserId': '55', 'LastActivityDate': '2012-08-15T19:06:21.157', 'LastEditDate': '2012-08-15T19:06:21.157', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '7', 'OwnerDisplayName': 'Amir', 'PostTypeId': '1', 'Tags': '<terminology><artificial-intelligence><neural-networks>', 'CreationDate': '2012-03-10T16:47:52.833', 'FavoriteCount': '2', 'Id': '3195'}{'Body': '<p>Thw <a href="http://en.wikipedia.org/wiki/Pushdown_automaton" rel="nofollow">Wikipedia article on Pushdown automata</a> doesn\'t explain what the receiving state is for the generated PDA it just states that there is but one state.   </p>\n', 'ViewCount': '473', 'Title': 'When generating a PDA from a CFG do I have a receiving state?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-10-05T18:28:35.937', 'LastEditDate': '2012-08-16T07:19:01.497', 'AnswerCount': '2', 'CommentCount': '2', 'Score': '0', 'OwnerDisplayName': 'user10392', 'PostTypeId': '1', 'Tags': '<terminology><automata><pushdown-automata>', 'CreationDate': '2012-08-15T12:40:36.717', 'Id': '3205'}{'Body': '<p>I have read many documents about <a href="https://en.wikipedia.org/wiki/Convolution" rel="nofollow"><em>convolution</em></a> in image processing, and most of them say about its formula, some additional parameters. No one explains the intuition and real meaning behind doing convolution on an image. For example, intuition of derivation on the graph is make it more linear for example.</p>\n\n<p>I think a quick summary of the definition is: convolution is multiplied overlap square between image and kernel, after that sum again and put it into anchor. And this doesn\'t make any sense with me.</p>\n\n<p>According to <a href="http://www.aishack.in/2010/08/image-convolution-examples/" rel="nofollow">this article about convolution</a> I cannot imagine why convolution can do some "unbelievable" things. For example, line and edge detection on the last page of this link. Just choose appropriate convolution kernel can make a nice effects (detect line or detect edge). </p>\n\n<p>Can anyone provide some intuition (doesn\'t need to have to be a neat proof) on how it can do that?</p>\n', 'ViewCount': '241', 'Title': 'Intuition for convolution in image processing', 'LastEditorUserId': '98', 'LastActivityDate': '2012-11-13T20:38:44.307', 'LastEditDate': '2012-08-16T09:55:11.913', 'AnswerCount': '2', 'CommentCount': '0', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '2538', 'Tags': '<terminology><intuition><graphics><computer-vision>', 'CreationDate': '2012-08-16T08:41:24.633', 'Id': '3215'}{'Body': '<p>After looking at other questions and my textbook, I seem to get some confusion. </p>\n\n<p>I do get that when there is a polynomial algorithm of NPC, there is a polynomial algorithm for a NP problem. </p>\n\n<p>But the statement describing reduction seems obscure to me at least in the beginning of my studies in computational complexity. </p>\n\n<p>So, can we transform an exponential algorithm for NPC (which we have) into an exponential algorithm for another non-NPC NP problem in polynomial time? </p>\n', 'ViewCount': '103', 'Title': 'Can an exponential algorithm for an NPC problem be transformed into an algorithm for other NP problems in polynomial time?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-08-16T11:55:20.967', 'LastEditDate': '2012-08-16T09:30:50.490', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '2540', 'Tags': '<complexity-theory><terminology><np-complete><reductions>', 'CreationDate': '2012-08-16T08:49:13.167', 'Id': '3216'}{'Body': "<p>In the book 'Introduction to Algorithms 3/e', I have found the following definition of Binary Search Tree property:</p>\n\n<blockquote>\n  <p>Let $x$ be a node in a binary search tree. If $y$ is a node in the left subtree\n  of $x$, then $y.key \\leq x.key$. If $y$ is a node in the right subtree of $x$, then $y.key \\geq x.key$.</p>\n</blockquote>\n\n<p>My confusion is that while implementing binary search trees we either consider that the keys of left-subtree of a node $x$ would be $\\leq x.key$ <strong>or</strong> the keys of right-subtree of a node $x$ would be $\\geq x.key$ but <strong>not both</strong>. That is we follow one of the two convention. But in the property they have included $=$ in both the cases. Where am I wrong?</p>\n\n<p>I would appreciate any idea on this issue.</p>\n", 'ViewCount': '274', 'Title': 'Binary Search Tree Property', 'LastEditorUserId': '29', 'LastActivityDate': '2012-08-29T00:50:34.147', 'LastEditDate': '2012-08-28T11:38:51.780', 'AnswerCount': '2', 'CommentCount': '0', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '2556', 'Tags': '<terminology><data-structures><binary-trees><search-trees>', 'CreationDate': '2012-08-28T05:54:20.237', 'Id': '3345'}{'ViewCount': '154', 'Title': u'The meaning of modulo in \u201cformula modulo a background theory\u201d', 'LastEditDate': '2012-09-05T14:02:06.013', 'AnswerCount': '2', 'Score': '6', 'OwnerDisplayName': 'Cemre', 'PostTypeId': '1', 'OwnerUserId': '2743', 'Body': u'<p>I have been reading some papers where I keep reading stuff like \u201cfirst-order formula modulo a background theory\u201d. Does anyone know what modulo means in this case ? Is it something like \u201cwith respect to\u201d?</p>\n', 'Tags': '<terminology><logic><term-rewriting>', 'LastEditorUserId': '39', 'LastActivityDate': '2012-09-06T00:12:20.367', 'CommentCount': '0', 'AcceptedAnswerId': '3436', 'CreationDate': '2012-09-05T12:21:36.783', 'Id': '3435'}{'Body': '<p>I try to teach myself the usage of bison. The manpage bison(1) says about bison:</p>\n\n<blockquote>\n  <p>Generate a deterministic LR or generalized LR (GLR) parser employing LALR(1), IELR(1), or canonical LR(1) parser tables.</p>\n</blockquote>\n\n<p>What is an IELR-parser? All relevant articles I found on the world wide web are paywalled.</p>\n', 'ViewCount': '372', 'Title': 'What is an IELR(1)-parser?', 'LastEditorUserId': '3094', 'LastActivityDate': '2013-06-27T08:08:03.550', 'LastEditDate': '2012-12-05T12:26:17.283', 'AnswerCount': '1', 'CommentCount': '5', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '2280', 'Tags': '<formal-languages><terminology><formal-grammars><parsers>', 'CreationDate': '2012-09-07T15:07:37.423', 'FavoriteCount': '1', 'Id': '3461'}{'Body': '<p>I keep coming across references to <a href="http://en.wikipedia.org/wiki/Fixed_point_%28mathematics%29">fixed point</a> in questions and answers at stackexchange and I look up the meaning on the web obviously finding reference at sites such as Wikipedia. However none of the references really answer my question of what is a fixed point and what does it mean in the world of computer science.</p>\n', 'ViewCount': '803', 'Title': 'Fixed point, what does it mean in the world of computer science', 'LastActivityDate': '2012-09-11T21:20:09.177', 'AnswerCount': '4', 'CommentCount': '1', 'AcceptedAnswerId': '3481', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '268', 'Tags': '<terminology>', 'CreationDate': '2012-09-08T11:34:07.913', 'FavoriteCount': '1', 'Id': '3466'}{'ViewCount': '2167', 'Title': 'What does "dummy argument" mean?', 'LastEditDate': '2012-11-24T15:13:29.297', 'AnswerCount': '2', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '2761', 'FavoriteCount': '1', 'Body': '<p>What is does it mean when an argument to a function is called a <strong>dummy argument</strong>? I have not encountered this term outside Fortran, is it a general term in computer science? What would be examples of arguments passed as dummy and not passed as dummy?</p>\n\n<p>I found <a href="http://encyclopedia2.thefreedictionary.com/dummy+argument" rel="nofollow">this definition</a>, which I am not sure that I understand, but it sounds like a dummy argument is a variable that is passed by reference, in which case in Fortran all variables are dummy variables? (confused)</p>\n\n<p>Edit: I just run into the following essay which helped me to understand better Fortran\'s argument/function calling teminology: <a href="http://software.intel.com/en-us/blogs/2009/03/31/doctor-fortran-in-ive-come-here-for-an-argument" rel="nofollow">Dortor Fortran: I\'ve come here for an argument</a></p>\n', 'Tags': '<terminology><programming-languages><functional-programming>', 'LastEditorUserId': '2761', 'LastActivityDate': '2012-11-24T15:13:29.297', 'CommentCount': '0', 'AcceptedAnswerId': '3471', 'CreationDate': '2012-09-08T16:46:40.727', 'Id': '3469'}{'Body': '<p>In Big Theta notation used for defining the running time of an algorithm, are the constants $c_1$ and $c_2$ <em>different</em> for every value of $n$?</p>\n\n<p>Definition:</p>\n\n<p>$\\qquad \\displaystyle \\Theta (g(n)) = \\{ f(n): \\exists\\, c_1,c_2,n_0&gt;0. \\forall n \\geq n_0.\\ \\ c_1g(n) \\leq f(n) \\leq c_2g(n) \\}.$</p>\n', 'ViewCount': '216', 'Title': 'Value of constants in Big Theta notation', 'LastEditorUserId': '98', 'LastActivityDate': '2012-09-10T14:08:00.560', 'LastEditDate': '2012-09-08T21:39:00.347', 'AnswerCount': '3', 'CommentCount': '2', 'Score': '1', 'OwnerDisplayName': 'sai', 'PostTypeId': '1', 'Tags': '<terminology><asymptotics><mathematical-analysis><landau-notation>', 'CreationDate': '2012-09-08T05:00:24.313', 'Id': '3470'}{'ViewCount': '173', 'Title': 'Length of the certificate in complexity classes', 'LastEditDate': '2012-10-10T20:04:46.300', 'AnswerCount': '3', 'Score': '3', 'OwnerDisplayName': 'Ingrid Morstrad', 'PostTypeId': '1', 'OwnerUserId': '2777', 'FavoriteCount': '1', 'Body': '<blockquote>\n  <p>A nondeterministic machine trying to decide membership in a language\n  is presented with a hint (called a "witness" or "certificate") which\n  proves membership (no such witness is provided for elements outside\n  the language; the definition is asymmetric).</p>\n</blockquote>\n\n<p>So, if a non-deterministic algorithm can solve a problem in O(f(n)) time, does this mean the length of the certificate is f(n) [Since it could try all the possible combinations and the length of the shortest one will be f(n)]? And the input size is n?</p>\n\n<p>Also, if a deterministic algorithm A exists that can verify a certificate in O(f(n)) time, how does this imply the existence of a non-deterministic algorithm that can solve the problem in O(f(n)) time?</p>\n', 'Tags': '<complexity-theory><terminology><nondeterminism>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-10-11T01:01:12.950', 'CommentCount': '2', 'CreationDate': '2012-09-10T08:11:06.193', 'Id': '3494'}{'Body': '<p>I have been reading about PHP and many authors mention semantic and logical errors separately. As an example of a semantic error, they give a function called with incorrect number of parameters: this will not be caught by the parser, but will throw an error when run.</p>\n\n<p>Yet in languages such as C++, this will be caught by the compiler. I would say that it\'s a syntax error then. What is the difference then between a semantic and a logical error?</p>\n\n<p>For example, in <a href="http://www.oopweb.com/Java/Documents/ThinkCSJav/Volume/chap01.htm" rel="nofollow">How to think like a computer scientist</a>, the author uses "logic error" and "semantic error" interchangeably. On the other hand, in the <a href="http://flylib.com/books/en/4.350.1.159/1/" rel="nofollow">Visual Basic .NET. Primer Plus</a>, "logic error" is separated from "semantic error".</p>\n', 'ViewCount': '519', 'Title': 'Can all languages have semantic and logical errors?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-09-13T01:58:13.523', 'LastEditDate': '2012-09-12T22:52:42.637', 'AnswerCount': '3', 'CommentCount': '4', 'Score': '5', 'OwnerDisplayName': 'user970696', 'PostTypeId': '1', 'Tags': '<terminology><programming-languages><compilers><program-correctness>', 'CreationDate': '2012-08-31T09:12:57.057', 'FavoriteCount': '1', 'Id': '3519'}{'ViewCount': '165', 'Title': 'Is a single symbol, not in a set, a language?', 'LastEditDate': '2013-05-24T08:02:35.497', 'AnswerCount': '2', 'Score': '3', 'OwnerDisplayName': 'Pampero', 'PostTypeId': '1', 'OwnerUserId': '2830', 'Body': "<p>I was reading about Turing machines and realized I'm not sure about the difference between the following scenario. Given the alphabet $\\Sigma = \\{a, b \\}$, we have the following assertions:</p>\n\n<ol>\n<li>$a \\in R $</li>\n<li>$\\{a\\} \\in R$</li>\n</ol>\n\n<p>I think that assertion $1$ is incorrect because $a$ is just a symbol, not a language. On the other hand $\\{a\\}$ is the language which contains only the $a$ symbol. Given that information, we can prove that $\\{a\\} \\in R$ by trivially building a TM. Here, $R$ denotes the set of recursive languages.</p>\n\n<p>Is my reasoning wrong? Thanks in advance.</p>\n", 'Tags': '<formal-languages><terminology><computability>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-05-24T14:39:13.220', 'CommentCount': '5', 'AcceptedAnswerId': '3538', 'CreationDate': '2012-09-14T14:41:42.840', 'Id': '3537'}{'Body': "<p>Does accepting mean that the TM will read and recognize a char from the cell it's currently reading from? And is it the case that a TM halts iff the input is decidable?</p>\n", 'ViewCount': '548', 'Title': 'What is the difference between halting, accepting, and deciding in the context of Turing machines?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-09-15T13:08:49.083', 'LastEditDate': '2012-09-15T13:08:49.083', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '3556', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '2835', 'Tags': '<terminology><turing-machines><undecidability>', 'CreationDate': '2012-09-15T01:49:13.377', 'Id': '3554'}{'ViewCount': '470', 'Title': 'What is the difference between decidability and computability?', 'LastEditDate': '2012-09-15T13:10:11.437', 'AnswerCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '2835', 'FavoriteCount': '1', 'Body': '<p>If they are different, what are the typical problems in each that do not fall on the other category? Or are the mutually exclusive or does one completely capture the other?</p>\n', 'Tags': '<computability><terminology>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-09-16T06:23:49.840', 'CommentCount': '7', 'AcceptedAnswerId': '4573', 'CreationDate': '2012-09-15T02:03:45.667', 'Id': '3555'}{'ViewCount': '158', 'Title': 'Unification vs. SAT solver', 'LastEditDate': '2012-09-21T13:12:01.017', 'AnswerCount': '1', 'Score': '9', 'PostTypeId': '1', 'OwnerUserId': '2879', 'FavoriteCount': '1', 'Body': '<p>I read on Wikipedia that <a href="http://en.wikipedia.org/wiki/Unification_%28computer_science%29">unification</a> is a process of solving the satisfability problem.</p>\n\n<p>At the same time, I know that such solvers are called "SAT solvers" or "SMT solvers". So, are they different names for the same thing?</p>\n\n<p>If you say that they are different, please point out a flaw in my treatment. </p>\n', 'Tags': '<terminology><sat-solvers><unification>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-09-21T13:12:01.017', 'CommentCount': '1', 'AcceptedAnswerId': '4652', 'CreationDate': '2012-09-21T08:05:59.773', 'Id': '4650'}{'ViewCount': '775', 'Title': 'What is the significance of reverse polish notation?', 'LastEditDate': '2012-09-23T14:07:01.600', 'AnswerCount': '5', 'Score': '8', 'PostTypeId': '1', 'OwnerUserId': '2919', 'FavoriteCount': '1', 'Body': '<p>I teach computing to 18 year olds. After having reverse polish notation explained to them one asked why is it significant enough to be in the public exam. I explained the historical significance of 70s calculators but this failed to really address the issue. So are there and concurrent practical or theorhetical applications of RPN.</p>\n', 'Tags': '<terminology><education>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-12-02T14:22:16.470', 'CommentCount': '6', 'AcceptedAnswerId': '4668', 'CreationDate': '2012-09-22T16:39:49.267', 'Id': '4666'}{'ViewCount': '2372', 'Title': 'Understanding LEADING and TRAILING operations of an operator precedence grammar', 'LastEditDate': '2012-09-24T18:30:27.660', 'AnswerCount': '2', 'Score': '3', 'OwnerDisplayName': 'Likhit', 'PostTypeId': '1', 'OwnerUserId': '2961', 'FavoriteCount': '2', 'Body': "<p>I want to understand what the <code>LEADING</code> and <code>TRAILING</code> of non-terminal in an operator precedence grammar physically mean.</p>\n\n<p>I am confused by the various definitions I have read on them. <br>\nI understand that the <code>LEADING</code> of a non-terminal is the first terminal which can be present in it's derivation. <br>\nOn the other hand, the <code>TRAILING</code> of a non-terminal is the last terminal which can be present in it's derivation. <br><br>\nIn the following example: <br></p>\n\n<pre><code>E   -&gt;  E   +   T      -- I\nE   -&gt;  T              -- II\nT   -&gt;  T   *   F      -- III\nT   -&gt;  F              -- IV\nF   -&gt;  (   E   )      -- V\nF   -&gt;  id             -- VI\n</code></pre>\n\n<p>By my understanding,</p>\n\n<pre><code>LEADING(E) = { +, *, (, id }\nLEADING(T) = { *, (, id }\nLEADING(F) = { (, id }\n</code></pre>\n\n<p>This turns out fine, but my problem is in the TRAILING.</p>\n\n<pre><code>TRAILING(F) = { id, ) }\nTRAILING(T) = TRAILING(F) = { id, ) }          -- (1)\nTRAILING(E) = TRAILING(T) = { id, ) }          -- (2)\n</code></pre>\n\n<p>Reason for <code>(2)</code> is that according to productions <code>I</code> and <code>II</code>, the last terminal of the derivation of <code>E</code> will be last terminals in the derivation of <code>T</code>.\nHence, <code>TRAILING(E) = TRAILING(T)</code>.<br>\nSimilarly, <code>TRAILING(T) = TRAILING(F)</code>.<br><br>\nUnfortunately the solution to this problem states:</p>\n\n<pre><code>TRAILING(F) = { id, ) }\nTRAILING(T) = TRAILING(F) `union` { * } = { *, id, ) }\nTRAILING(E) = TRAILING(T) `union` { + } = { +, *, id, ) }\n</code></pre>\n\n<p>I don't see how <code>*</code> or <code>+</code> can be the last terminals in the derivation of <code>E</code>. Any derivation of <code>E</code> will always end with either an <code>id</code> or <code>)</code>. Similarly, case for <code>T</code>.</p>\n", 'Tags': '<terminology><formal-grammars><parsing>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-12-27T03:12:52.417', 'CommentCount': '6', 'AcceptedAnswerId': '7223', 'CreationDate': '2012-09-24T12:40:55.317', 'Id': '4716'}{'Body': '<p>The notion of best-case running time is kind of ambiguous for me. According to wikipedia, the definition of best case running time is:</p>\n\n<blockquote>\n  <p>The term best-case performance is used in computer science to describe the way of an algorithm behaves under optimal conditions. For example, the best case for a simple linear search on a list occurs when the desired element is the first element of the list.</p>\n</blockquote>\n\n<p>According to this definition, the best case running time for BST insertion should be $O(1)$ [consider that we are inserting to the root node]. But different resources says different things, some claim that it is $O(\\log n)$ [perfect balanced tree] and some others claim that it is $O(1)$ which one should I believe?</p>\n', 'ViewCount': '1986', 'Title': 'Best-Case Running Time For Binary Search Tree Insertion', 'LastEditorUserId': '98', 'LastActivityDate': '2012-09-24T22:16:37.427', 'LastEditDate': '2012-09-24T22:12:54.513', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '4725', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '2956', 'Tags': '<terminology><data-structures><runtime-analysis><binary-trees>', 'CreationDate': '2012-09-24T21:48:27.473', 'Id': '4723'}{'ViewCount': '123', 'Title': 'definition of formula validity', 'LastEditDate': '2012-09-25T15:57:33.193', 'AnswerCount': '1', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '2879', 'FavoriteCount': '1', 'Body': u'<p>I read in some sources that valid formulas are tautologies (valid under every evaluation). In the others, I read that these are formulas that have conclusions true when premises are true. Are these just equivalent definitions because \u22a8 P \u2192 Q is equivalent to P \u22a8 Q?</p>\n', 'Tags': '<terminology><logic><logical-validity>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-09-25T15:57:33.193', 'CommentCount': '0', 'AcceptedAnswerId': '4728', 'CreationDate': '2012-09-25T07:55:00.977', 'Id': '4727'}{'ViewCount': '233', 'Title': 'Definition of $\\Theta$ for negative functions', 'LastEditDate': '2012-09-30T21:45:34.657', 'AnswerCount': '2', 'Score': '6', 'OwnerDisplayName': 'Ockham', 'PostTypeId': '1', 'OwnerUserId': '3017', 'FavoriteCount': '1', 'Body': "<p>I'm working out of the 3rd edition CLRS Algorithms textbook and in Chapter 3 a discussion begins about asymptotic notation which starts with $\\Theta$ notation. I understood the beginning definition of:</p>\n\n<p>$$\\Theta(g(n)) = \\{ f(n)\\,|\\, \\exists\\, c_1, c_2 &gt; 0, n_0 \\in \\mathbb{N}: 0 \\leq c_1 g(n) \\leq f(n) \\leq c_2 g(n)\\ \\ \\forall n \\geq n_0\\}$$</p>\n\n<p>But then on the next page the text says that:</p>\n\n<blockquote>\n  <p>The definition of $\\Theta(g(n))$ requires that every member $f(n) \\in \\Theta(g(n))$ be asymptotically nonnegative, that is, that $f(n)$ be nonnegative whenever $n$ is sufficiently large. (An asymptotically positive function is one that is positive for all sufficiently large $n$.) Consequently, the function g(n) itself must be asymptotically nonnegative, or else the set $\\Theta(g(n))$ is empty.</p>\n</blockquote>\n\n<p>That last part about the how if the function is negative the set $\\Theta(g(n))$ is empty and the general requirement of a positive function is sort of confusing. Can anyone out there clarify this definition for me and what it means, possible with an example, it would be much appreciated.</p>\n", 'Tags': '<terminology><asymptotics>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-09-30T21:51:26.507', 'CommentCount': '2', 'AcceptedAnswerId': '4820', 'CreationDate': '2012-09-30T15:53:07.287', 'Id': '4818'}{'Body': u'<p>From <a href="http://en.wikipedia.org/wiki/Reduction_%28complexity%29" rel="nofollow">Wikipedia</a>:</p>\n\n<blockquote>\n  <p>Given two subsets A and B of N and a set of functions F from N to N\n  which is closed under composition, A is called reducible to B under F\n  if $$\n     \\exists f \\in F \\mbox{ . } \\forall x \\in \\mathbb{N} \\mbox{ . } x \\in A \\Leftrightarrow f(x) \\in B $$ We write $$\n     A \\leq_{F} B $$ Let S be a subset of P(N) and \u2264 a reduction, then S is called closed under \u2264 if $$\n     \\forall s \\in S \\mbox{ . } \\forall A \\in P(\\mathbb{N}) \\mbox{ . } A \\leq s \\Rightarrow A \\in S $$ A subset A of N is called hard for S\n  if $$\n     \\forall s \\in S \\mbox{ . } s \\leq A $$ A subset A of N is called complete for S if A is hard for S and A is in S.</p>\n</blockquote>\n\n<p>I am trying to relate the above definitions to those for problems: problem A can be reduced to problem B, a set of problems are NP-hard, a set of problems are NP-complete. But I don\'t know how to relate. I think one link I am missing is to see how a subset of problem can be seen as a subset of $\\mathbb{N}$?</p>\n', 'ViewCount': '266', 'Title': 'Understanding the definition of reduction', 'LastEditorUserId': '472', 'LastActivityDate': '2012-10-03T20:37:42.277', 'LastEditDate': '2012-10-03T20:37:42.277', 'AnswerCount': '1', 'CommentCount': '10', 'AcceptedAnswerId': '4851', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '336', 'Tags': '<complexity-theory><terminology><reductions>', 'CreationDate': '2012-10-03T13:27:53.813', 'Id': '4850'}{'Body': '<p>What problem does the halting problem solve in computing, whether theoretical or practical?</p>\n\n<p>It is very easy to debug code which loops forever, just signal the debugger to break if the program is running for too long? What purpose / good is the halting problem? Why was Turing praised for it?</p>\n', 'ViewCount': '316', 'Title': 'What helpful solution does the Halting Problem give to computing?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-10-04T10:03:22.663', 'LastEditDate': '2012-10-04T10:03:22.663', 'AnswerCount': '2', 'CommentCount': '6', 'AcceptedAnswerId': '4869', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '3051', 'Tags': '<computability><terminology><halting-problem>', 'CreationDate': '2012-10-03T21:42:54.827', 'Id': '4867'}{'Body': '<p>From <a href="http://en.wikipedia.org/wiki/Computational_complexity_theory#Complexity_classes" rel="nofollow">Wikipedia</a>:</p>\n\n<blockquote>\n  <p>The type of computational problem: <strong>The most commonly used problems are\n  decision problems</strong>. However, complexity classes can be defined based on\n  function problems, counting problems, optimization problems, promise\n  problems, etc.</p>\n</blockquote>\n\n<p>I also saw the definitions of NP-complete, NP-hard, NP, ..., are defined for decision problems only. I wonder why that is the case?</p>\n\n<p>Is it because any other problem can be equivalently converted to a decision problem? </p>\n', 'ViewCount': '213', 'Title': 'Why are decision problems commonly used in complexity theory?', 'LastEditorUserId': '472', 'LastActivityDate': '2012-10-08T14:42:16.287', 'LastEditDate': '2012-10-05T16:14:22.417', 'AnswerCount': '3', 'CommentCount': '0', 'AcceptedAnswerId': '4877', 'Score': '8', 'PostTypeId': '1', 'OwnerUserId': '336', 'Tags': '<complexity-theory><terminology>', 'CreationDate': '2012-10-04T18:03:40.670', 'Id': '4874'}{'Body': '<p>From <a href="http://en.wikipedia.org/wiki/Computational_complexity_theory" rel="nofollow">Wikipedia</a></p>\n\n<blockquote>\n  <p><strong>a computational problem</strong> is understood to be a task that is in principle amenable to being solved by a computer (i.e. the problem can\n  be stated by a set of mathematical instructions). Informally, a\n  computational problem consists of <strong>problem instances</strong> and <strong>solutions</strong> to\n  these problem instances. For example, primality testing is the problem\n  of determining whether a given number is prime or not. The instances\n  of this problem are natural numbers, and the solution to an instance\n  is yes or no based on whether the number is prime or not.</p>\n  \n  <p>... A key distinction between analysis of algorithms and computational\n  complexity theory is that the former is devoted to <strong>analyzing the\n  amount of resources needed by a particular algorithm to solve a\n  problem</strong>, whereas the latter asks a more general question about <strong>all\n  possible algorithms that could be used to solve the same problem</strong>.</p>\n</blockquote>\n\n<p>So a problem can be solved by multiple algorithms. </p>\n\n<p>I was wondering if an algorithm can solve different problems, or can only solve one problem? Note that I distinguish a problem and its instances as in the quote.</p>\n', 'ViewCount': '96', 'Title': 'Relation between problems and algorithms', 'LastEditorUserId': '98', 'LastActivityDate': '2012-10-05T13:07:38.853', 'LastEditDate': '2012-10-05T11:02:18.093', 'AnswerCount': '3', 'CommentCount': '0', 'AcceptedAnswerId': '4885', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '336', 'Tags': '<algorithms><complexity-theory><terminology>', 'CreationDate': '2012-10-05T04:36:59.257', 'Id': '4880'}{'Body': '<p>If I understand correctly, the complexity of solving a computational problem is defined in terms of which instance $I$ of the problem, what size $n$ of the problem instance, and what algorithm $A$ for solving the problem instance.</p>\n\n<p>Is the complexity of the problem at a given size $n$ of the problem instance defined as\n$$\n\\min_A \\max_{I\\in \\{\\text{instances of size }n\\}} \\text{complexity}(A,I,n)?\n$$\nNote that the solution to the above optimization $A^*(n)$ and $I^*(n)$ are both functions of instance size $n$.</p>\n\n<p>Or is the complexity of the problem defined for some same algorithm for all the problem instances and all sizes of the problem instances?</p>\n\n<p>Or is the complexity of the problem defined for some same instance for all the algorithms that solve the problem and all the problem instance sizes?</p>\n', 'ViewCount': '280', 'Title': 'Meaning of complexity of a computational problem', 'LastEditorUserId': '98', 'LastActivityDate': '2012-10-08T08:19:35.547', 'LastEditDate': '2012-10-05T13:42:44.587', 'AnswerCount': '1', 'CommentCount': '3', 'AcceptedAnswerId': '4886', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '336', 'Tags': '<complexity-theory><terminology>', 'CreationDate': '2012-10-05T13:06:41.417', 'Id': '4884'}{'Body': '<p>Let\'s say I have a graph $|G|$ with $|E|=O(V^2)$ edges. I want to run BFS on $G$ which has a running time of $O(V+E)$.</p>\n\n<p>It feels natural to write that the running time on this graph would be $O(O(V^2)+V)$ and then simplify to $O(V^2)$.</p>\n\n<p>Are there any pitfalls to using such a "remove-the-nested-O" shortcut (not just in this case, but more generally)?</p>\n', 'ViewCount': '329', 'Title': 'Nested Big O-notation', 'LastEditorUserId': '2826', 'LastActivityDate': '2012-10-09T21:54:10.183', 'LastEditDate': '2012-10-07T14:31:31.387', 'AnswerCount': '2', 'CommentCount': '6', 'AcceptedAnswerId': '4919', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '2826', 'Tags': '<terminology><asymptotics><landau-notation>', 'CreationDate': '2012-10-07T07:26:22.087', 'Id': '4913'}{'Body': '<p>In most PL textbooks (even in language specifications) statments like <strong>if, while, for, break</strong> are categorized as <em>flow of control</em> statements. <br/>\nHowever, it is not consistent; i.e. sometimes the same text uses <em>control-flow statement</em> (note the dash), or <em>control flow statment</em>, I read sentences that says <em>control flows...</em></p>\n\n<p>I understand those statements <em>control the flow of execution</em>, hence <em>control of flow</em>. But many texts (even <a href="http://en.wikipedia.org/wiki/Flow_of_control" rel="nofollow">wikipedia</a>) says otherwise, implying <em>control is something that flows in a program</em></p>\n\n<p>What is the formal, language-agnostic definition of this concept in CS, if any?</p>\n', 'ViewCount': '82', 'Title': 'Flow of control? or Control of flow?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-10-08T10:46:27.343', 'LastEditDate': '2012-10-08T10:41:55.447', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '3105', 'Tags': '<terminology><programming-languages>', 'CreationDate': '2012-10-08T10:15:33.570', 'Id': '4947'}{'Body': "<p>The definitions I've found were highly technical and using terms I've never seen before. </p>\n\n<p>Say, I have a certain irrational number <em>e</em> that I get get closer and closer to with a computer and I want to determine if there is a particular digit <em>d</em> appearing after a certain position. Or what about the halting problem (give a program and ask 'will the computer ever halt?')? Are these problems semi-computable problems or noncomputable?</p>\n", 'ViewCount': '114', 'Title': "What's an intuitive distinction between semi-computable problems and noncomputable problems/functions?", 'LastEditorUserId': '98', 'LastActivityDate': '2012-10-11T07:25:53.277', 'LastEditDate': '2012-10-11T07:25:53.277', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '5007', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '2835', 'Tags': '<computability><terminology>', 'CreationDate': '2012-10-11T02:57:07.000', 'Id': '5006'}{'Body': '<p>What differences and relationships are between randomized algorithms and nondeterministic algorithms?</p>\n\n<p>From Wikipedia</p>\n\n<blockquote>\n  <p>A <strong>randomized algorithm</strong> is an algorithm which employs a degree of\n  randomness as part of its logic. The algorithm typically uses\n  uniformly random bits as an auxiliary input to guide its behavior, in\n  the hope of achieving good performance in the "average case" over all\n  possible choices of random bits. Formally, the algorithm\'s performance\n  will be a random variable determined by the random bits; thus either\n  the running time, or the output (or both) are random variables.</p>\n  \n  <p>a <strong>nondeterministic algorithm</strong> is an algorithm that can exhibit\n  different behaviors on different runs, as opposed to a deterministic\n  algorithm. There are several ways an algorithm may behave differently\n  from run to run. A <strong>concurrent algorithm</strong> can perform differently on\n  different runs due to a race condition. A <strong>probabalistic algorithm</strong>\'s\n  behaviors depends on a random number generator. An algorithm that\n  solves a problem in nondeterministic polynomial time can run in\n  polynomial time or exponential time depending on the choices it makes\n  during execution.</p>\n</blockquote>\n\n<p>Are randomized algorithms and probablistic algorithms the same concept? </p>\n\n<p>If yes, so are randomized algorithms just a kind of nondeterministic algorithms?</p>\n', 'ViewCount': '1555', 'Title': 'Differences and relationships between randomized and nondeterministic algorithms?', 'LastEditorUserId': '31', 'LastActivityDate': '2014-02-02T18:42:47.173', 'LastEditDate': '2014-01-23T10:11:12.273', 'AnswerCount': '4', 'CommentCount': '7', 'Score': '12', 'PostTypeId': '1', 'OwnerUserId': '336', 'Tags': '<algorithms><terminology><randomized-algorithms><machine-models><nondeterminism>', 'CreationDate': '2012-10-11T05:19:33.520', 'FavoriteCount': '5', 'Id': '5008'}{'ViewCount': '815', 'Title': 'What is the relationship between NP/NP-Complete/NP-Hard to time complexity?', 'LastEditDate': '2012-10-11T07:36:39.490', 'AnswerCount': '3', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '2835', 'FavoriteCount': '3', 'Body': "<p>I'm familiar with a few problems of each class and even though the definitions are based on sets and polynomial reducibility, I see a pattern with time complexity. NP problems appear to be $O(2^n)$ (minus the P problems of course), and NP-hard problems seem to be worse: $n^n$ or $n!$ (Chess, TSP). Is this a misleading interpretation?</p>\n", 'Tags': '<complexity-theory><terminology><time-complexity><np-hard>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-10-12T04:51:51.627', 'CommentCount': '2', 'AcceptedAnswerId': '5011', 'CreationDate': '2012-10-11T05:29:06.593', 'Id': '5009'}{'Body': '<p>I have two strings, where one is a permutation of the other. I was wondering if there is an alternative to <a href="http://en.wikipedia.org/wiki/Hamming_distance">Hamming distance</a> where instead of finding the minimum number of substitutions required, it would find the minimum number of translocations required to go from string a to string b.</p>\n\n<p>My strings are always of the same size and I know there are no errors/substitutions.</p>\n\n<p>Example:</p>\n\n<pre><code>1 2 3 4 5\n3 2 5 4 1\n</code></pre>\n\n<p>This would give me two:</p>\n\n<pre><code>3 2 5 4 1 (start)\n-&gt; 3 2 1 4 5 \n-&gt; -&gt; 1 2 3 4 5\n</code></pre>\n\n<p>If this is already implemented in R that would be even better.</p>\n', 'ViewCount': '419', 'Title': 'Alternative to Hamming distance for permutations', 'LastEditorUserId': '39', 'LastActivityDate': '2012-10-13T13:08:30.077', 'LastEditDate': '2012-10-12T19:35:10.880', 'AnswerCount': '1', 'CommentCount': '11', 'Score': '6', 'OwnerDisplayName': 'user1357015', 'PostTypeId': '1', 'OwnerUserId': '3174', 'Tags': '<terminology><string-metrics><permutations><edit-distance>', 'CreationDate': '2012-10-12T16:31:30.713', 'Id': '5036'}{'Body': '<p>Could anybody please explain what the difference between "bounding" and "pruning" in branch and bound algorithms is?</p>\n\n<p>I\'d also appreciate references (preferably books), where this distinction is made clear.</p>\n', 'ViewCount': '276', 'Title': 'What is the difference between bounding and pruning in branch-and-bound algorithms?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-13T07:40:01.563', 'LastEditDate': '2012-10-14T09:26:51.660', 'AnswerCount': '3', 'CommentCount': '2', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '2914', 'Tags': '<algorithms><terminology><branch-and-bound>', 'CreationDate': '2012-10-13T10:20:34.733', 'Id': '5040'}{'ViewCount': '157', 'Title': 'How can lazy learning systems simultaneously solve multiple problems?', 'LastEditDate': '2012-10-14T09:43:01.483', 'AnswerCount': '3', 'Score': '5', 'OwnerDisplayName': 'Shedeki', 'PostTypeId': '1', 'OwnerUserId': '8080', 'FavoriteCount': '1', 'Body': u'<p>On the english Wikipedia <a href="http://en.wikipedia.org/wiki/Lazy_learning" rel="nofollow">it says about lazy learning systems</a>:</p>\n\n<blockquote>\n  <p>Because the target function is approximated locally for each query to the system, lazy learning systems can simultaneously solve multiple problems [\u2026]</p>\n</blockquote>\n\n<p>What does this mean? I can only guess what "approximated locally" is supposed to say but even then I have no idea how one is supposed to follow from the other.</p>\n', 'Tags': '<terminology><machine-learning>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-05-07T15:33:57.370', 'CommentCount': '0', 'AcceptedAnswerId': '11856', 'CreationDate': '2012-09-10T21:52:18.973', 'Id': '6058'}{'Body': '<p>We have operator and operands, function and formal arguments. Is the difference purely lexical (we use alphanumerics for funciton identifiers but identify operators with special characters, e.g. "+" and ">=") or it is syntactical, like <a href="http://newsgroups.derkeiler.com/Archive/Comp/comp.lang.vhdl/2012-10/msg00007.html" rel="nofollow">I guessed here</a></p>\n\n<pre><code>f(a,b) -- prefix notation used for functions\na.f(b) -- infix notation for method invocation (used in OOP)\na f b  -- infix notation without dot and parenthesis used in operator invocations\n</code></pre>\n\n<p>so that when we write <code>a + b</code> we have an operator but <code>"+"(a, b)</code> (both ways are acceptable in VHDL) makes it a function? Do tools treat them differently? Can you differentiate them? Can you say that this is not a function, it is an operator or vice-verse? When I read the definitions in wikipedia, I do not see that syntax is a distinguishing feature of a concept. So, is it right that operators and functions are synonyms, two different words for the same thing, same meaning, same notion? I have such guess but have never seen it stated explicitly. Please agree with my guess or say what is the difference.</p>\n', 'ViewCount': '334', 'Title': 'What is the difference between operator and function?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-10-14T22:06:04.497', 'LastEditDate': '2012-10-14T22:06:04.497', 'AnswerCount': '1', 'CommentCount': '3', 'AcceptedAnswerId': '6074', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '2879', 'Tags': '<terminology><programming-languages>', 'CreationDate': '2012-10-14T15:38:56.920', 'Id': '6067'}{'Body': '<p>By <a href="http://math.stackexchange.com/questions/112734/in-what-sense-is-uniform-cost-search-uniform">this</a> possibly good attempt to explain this, the "uniformity" in the Uniform cost search <em>is actually the uniformity of the heuristic function</em>.</p>\n\n<p>Is this explanation correct ? If yes, then don\'t all <code>un-informed</code> cost searches (like <code>BFS</code>, <code>DFS</code>, etc) have no heurstic and thus, be called as "<code>uniform cost</code> searches" ?</p>\n', 'ViewCount': '265', 'Title': 'Why is Uniform cost search called "uniform" cost search?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-10-15T06:30:49.180', 'LastEditDate': '2012-10-14T21:24:18.123', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '6084', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '3032', 'Tags': '<terminology><artificial-intelligence><search-algorithms><heuristics>', 'CreationDate': '2012-10-14T19:43:54.853', 'Id': '6072'}{'Body': '<p>In some literature, as well as in <a href="http://en.wikipedia.org/wiki/Mersenne_twister" rel="nofollow">Wikipedia</a>, the middle term parameter <em>m</em> of Mersenne twister is called "number of parallel sequences". Why? What is meant here by "parallel sequences"?</p>\n', 'ViewCount': '32', 'Title': 'Mersenne twister middle word', 'LastEditorUserId': '157', 'LastActivityDate': '2012-10-20T00:43:31.747', 'LastEditDate': '2012-10-20T00:43:31.747', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '4276', 'Tags': '<terminology><cryptography><pseudo-random-generators>', 'CreationDate': '2012-10-19T20:39:43.797', 'Id': '6178'}{'Body': '<p>$H(x)$ is the program size complexity of $x$ for some universal Turing machine $U$. $H$ is not computable, however $H$ is "<em>computable in the limit from above</em>".</p>\n\n<p>From my notes:</p>\n\n<blockquote>\n  <p>i.e the set $\\{(x,n) \\mid x \\in B^*,n \\geq 0, H(x) \\leq n\\}$ is computably enumerable.</p>\n</blockquote>\n\n<p>Can someone tell me what this means? I understand the incomputability of $H$ but the term "limit from above" is confusing me.</p>\n', 'ViewCount': '71', 'Title': "What does 'computable in the limit from above' mean?", 'LastEditorUserId': '98', 'LastActivityDate': '2012-10-22T13:51:49.480', 'LastEditDate': '2012-10-22T13:51:49.480', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '6215', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '4296', 'Tags': '<computability><terminology>', 'CreationDate': '2012-10-21T02:38:57.497', 'Id': '6206'}{'ViewCount': '172', 'Title': 'Classfication of randomized algorithms', 'LastEditDate': '2012-10-22T00:56:03.857', 'AnswerCount': '2', 'Score': '12', 'PostTypeId': '1', 'OwnerUserId': '336', 'FavoriteCount': '3', 'Body': '<p>From <a href="http://en.wikipedia.org/wiki/Randomized_algorithm">Wikipedia</a> about randomized algorithms</p>\n\n<blockquote>\n  <p>One has to distinguish between <strong>algorithms</strong> that use the random\n  input to reduce the expected running time or memory usage, but always\n  terminate with a correct result in a bounded amount of time, and\n  <strong>probabilistic algorithms</strong>, which, depending on the random input, have a chance of producing an incorrect result (Monte Carlo\n  algorithms) or fail to produce a result (Las Vegas algorithms) either\n  by signalling a failure or failing to terminate.</p>\n</blockquote>\n\n<ol>\n<li>I was wondering how the first kind of "<strong>algorithms</strong> use the random\ninput to reduce the expected running time or memory usage, but\nalways  terminate with a correct result in a bounded amount of time?</li>\n<li>What differences are between it and Las Vegas algorithms which may\nfail to produce a result?</li>\n<li>If I understand correctly,  probabilistic algorithms and randomized algorithms are not the same concept. Probabilistic algorithms are just one\nkind of randomized algorithms, and the other kind is those use the\nrandom  input to reduce the expected running time or memory usage,\nbut always  terminate with a correct result in a bounded amount of\ntime?</li>\n</ol>\n', 'Tags': '<algorithms><terminology><randomized-algorithms><nondeterminism><machine-models>', 'LastEditorUserId': '472', 'LastActivityDate': '2014-04-07T14:10:29.767', 'CommentCount': '0', 'AcceptedAnswerId': '6222', 'CreationDate': '2012-10-22T00:53:00.617', 'Id': '6221'}{'ViewCount': '335', 'Title': 'Do "inductively" and "recursively" have very similar meanings?', 'LastEditDate': '2012-10-23T12:39:08.900', 'AnswerCount': '3', 'Score': '9', 'PostTypeId': '1', 'OwnerUserId': '336', 'FavoriteCount': '1', 'Body': '<p>Do "inductively" and "recursively" mean very similar?</p>\n\n<p>For example, if there is an algorithm that determines a n-dim vector by determine its first k+1 components based on its first k components having been determined, and is initialized with the first component, would you call it works recursively or inductively? I have been using "recursively", but today someone said it "inductively".</p>\n', 'Tags': '<algorithms><terminology><recursion><induction>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-11-19T15:56:33.453', 'CommentCount': '7', 'AcceptedAnswerId': '6551', 'CreationDate': '2012-10-23T02:13:50.443', 'Id': '6247'}{'ViewCount': '157', 'Title': 'Are randomized algorithms constructive?', 'LastEditDate': '2012-10-25T11:05:48.563', 'AnswerCount': '2', 'Score': '8', 'PostTypeId': '1', 'OwnerUserId': '336', 'FavoriteCount': '1', 'Body': '<p>From , the proofs by the probabilistic method are often said to be non-constructive.</p>\n\n<p>However,  a proof by probabilistic method indeed designs a randomized algorithm and uses it for proving existence. Quoted from p103 of <a href="http://books.google.com/books?id=QKVY4mDivBEC&amp;pg=PR5&amp;lpg=PP1&amp;dq=randomized%20algorithms#v=onepage&amp;q&amp;f=false">Randomized Algorithms\n By Rajeev Motwani, Prabhakar Raghavan</a>:</p>\n\n<blockquote>\n  <p>We could view the proof  by the probabilistic method as a randomized\n  algorithm. This would then require a further analysis bounding the\n  probability that the algorithm fails to find a good partition on a\n  given execution. The main difference between a thought experiment in\n  the probabilistic method and a randomized algorithm is the end that\n  each yields. When we use the probabilistic method, we are only\n  concerned with showing that a combinatorial object exists; thus, we\n  are content with showing that a favorable event occurs with non-zero\n  probability. With a randomized algorithm, on the other hand,\n  efficiency is an important consideration - we cannot tolerate a\n  miniscule success probability.</p>\n</blockquote>\n\n<p>So I wonder if randomized algorithms are viewed as not constructive, although they do output a solution at the end of each run, which may or may not be an ideal solution.</p>\n\n<p>How is an algorithm or proof being "constructive" defined?</p>\n\n<p>Thanks!</p>\n', 'Tags': '<algorithms><terminology><randomized-algorithms>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-10-30T16:24:48.083', 'CommentCount': '5', 'AcceptedAnswerId': '6289', 'CreationDate': '2012-10-24T12:19:26.950', 'Id': '6288'}{'ViewCount': '89', 'Title': 'Language member explanation', 'LastEditDate': '2012-10-26T13:05:31.857', 'AnswerCount': '2', 'Score': '3', 'OwnerDisplayName': 'wildplace', 'PostTypeId': '1', 'OwnerUserId': '4379', 'Body': '<p>Given the following formal language $L$:</p>\n\n<p>$$    L=\\{ww \\mid w\\in\\{a,b\\}^*\\}$$</p>\n\n<p>Why is $a$ not a member of this language?</p>\n\n<p>So what is $\\{a,b\\}^*$ exactly? I thought it means $(a+b)^*$?</p>\n', 'Tags': '<formal-languages><terminology><regular-expressions>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-10-26T13:05:31.857', 'CommentCount': '1', 'AcceptedAnswerId': '6316', 'CreationDate': '2012-10-25T15:09:04.310', 'Id': '6312'}{'ViewCount': '267', 'Title': 'Difference between decision tree and rule based reasoner', 'LastEditDate': '2012-10-28T11:16:16.827', 'AnswerCount': '1', 'Score': '2', 'OwnerDisplayName': 'Pio', 'PostTypeId': '1', 'OwnerUserId': '15189', 'FavoriteCount': '0', 'Body': "<p>I am new to this topic, and in some scientific papers I've been reading about prediction in sports I encountered the term rule based reasoner. Is it this term the same as a semantic reasoner( where the two main directions are forward and backwards chaining?). If yes, can you point out the difference between a decision tree and this? Because for me, it seems pretty much the same.</p>\n", 'Tags': '<terminology><artificial-intelligence><data-mining>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-06-01T04:30:47.137', 'CommentCount': '0', 'CreationDate': '2012-10-25T17:02:48.120', 'Id': '6352'}{'ViewCount': '160', 'Title': 'What precisely is infinite ambiguity in a grammar?', 'LastEditDate': '2012-10-28T13:39:38.737', 'AnswerCount': '1', 'Score': '4', 'OwnerDisplayName': u'Jakub L\xe9dl', 'PostTypeId': '1', 'OwnerUserId': '4383', 'Body': "<p>From what I've read, an example of infinite ambiguity is usually given in a form of a loop:</p>\n\n<p>$S \\rightarrow aA \\\\\nA \\rightarrow B \\\\\nB \\rightarrow A \\\\\nB \\rightarrow b$</p>\n\n<p>But a grammar is called <em>ambiguous</em> if there's more than 1 way to derive the input string &omega;. What if I then take this well-known ambiguous grammar:</p>\n\n<p>$S \\rightarrow SSS \\\\\nS \\rightarrow SS \\\\\nS \\rightarrow b$</p>\n\n<p>and extend it with $S \\rightarrow \\epsilon$\nso that for any member of $\\left\\{ b^n \\middle| n \\geq 0\\right\\}$ there's infinitely many ways to derive it? Does this make the grammar <em>infinitely</em> ambiguous?</p>\n", 'Tags': '<terminology><formal-grammars><ambiguity>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-01-28T10:22:03.010', 'CommentCount': '1', 'AcceptedAnswerId': '9228', 'CreationDate': '2012-10-27T22:17:07.123', 'Id': '6357'}{'Body': '<p>I\'m writing a JavaScript library for calculating graph measurements such as degree centrality, eccentrality, closeness and betweenness.</p>\n\n<p>In order to validate my library I use two exist applications <a href="http://gephi.org" rel="nofollow">Gephi</a> and <a href="http://nodexl.codeplex.com/" rel="nofollow">NodeXL</a> to run calculation with them.\nThe problem is I got what looks like different results.</p>\n\n<p>I build simple graph:</p>\n\n<pre><code>  (A) ----- (B)\n   |         |\n   |         | \n  (C) ----- (D)\n</code></pre>\n\n<p>Gephi gave those results:</p>\n\n<pre><code>A ecc=2 close=1.333 bet=0.5\nB ecc=2 close=1.333 bet=0.5\nC ecc=2 close=1.333 bet=0.5\nD ecc=2 close=1.333 bet=0.5\n</code></pre>\n\n<p>NodeXL gave those results:</p>\n\n<pre><code>A close=0.25 bet=0.5\nB close=0.25 bet=0.5\nC close=0.25 bet=0.5\nD close=0.25 bet=0.5\n</code></pre>\n\n<p>Note that NodeXL does not calculate eccentrality.</p>\n\n<p>Which one is right?<br>\nAre the results really different?</p>\n\n<p>I didn\'t normalize (or at least not intend to normalize) any results.</p>\n', 'ViewCount': '153', 'Title': 'Graph Closeness - Different result with gephi and NodeXL', 'LastEditorUserId': '98', 'LastActivityDate': '2012-10-30T14:54:03.650', 'LastEditDate': '2012-10-30T14:54:03.650', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '6384', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '4395', 'Tags': '<graph-theory><terminology><graphs>', 'CreationDate': '2012-10-30T09:37:41.223', 'Id': '6382'}{'Body': '<p>Does anybody know a good definition of 2 decision / optimization problems being equivalent? </p>\n\n<p>I am asking since for example allowing polynomial time computations any 2 problems in NP could be considered equivalent.</p>\n', 'ViewCount': '165', 'Title': 'When are 2 decision/optimization problems equivalent?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-10-31T09:52:13.867', 'LastEditDate': '2012-10-31T09:52:13.867', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '6394', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '4404', 'Tags': '<complexity-theory><terminology><undecidability>', 'CreationDate': '2012-10-30T18:42:29.597', 'Id': '6393'}{'ViewCount': '398', 'Title': 'What are the different types of databases?', 'LastEditDate': '2012-11-09T03:21:27.437', 'AnswerCount': '2', 'Score': '3', 'OwnerDisplayName': 'sashank', 'PostTypeId': '1', 'OwnerUserId': '4421', 'FavoriteCount': '1', 'Body': '<p>Is there is a study or classification available on different types of databases? (Examples include structured, unstructured, semi structured relational, object oriented, folksonomies, etc.) </p>\n', 'Tags': '<terminology><reference-request><databases>', 'LastEditorUserId': '4519', 'LastActivityDate': '2012-11-09T03:21:27.437', 'CommentCount': '0', 'AcceptedAnswerId': '6557', 'CreationDate': '2012-10-31T23:17:00.447', 'Id': '6423'}{'Body': '<p>For a list of integers, of size n, where n is exponential, will merge-sort(n), run in poly-time or psuedo poly-time?</p>\n', 'ViewCount': '146', 'Title': 'Exponential input and poly-time algorithm', 'LastEditorUserId': '98', 'LastActivityDate': '2013-01-27T23:40:33.147', 'LastEditDate': '2012-11-05T08:06:37.387', 'AnswerCount': '1', 'CommentCount': '7', 'Score': '-2', 'PostTypeId': '1', 'OwnerUserId': '4365', 'Tags': '<algorithms><terminology><time-complexity><polynomial-time>', 'CreationDate': '2012-11-04T20:13:32.497', 'FavoriteCount': '1', 'Id': '6478'}{'Body': '<p>Lots of basic questions are there in my mind. I need to clear them.</p>\n\n<p><strong>Statement 1:</strong> A compiler converts a human-readable codes to object codes, and those are converted to a machine code (executable) by linker.</p>\n\n<p>Am I right here?</p>\n\n<p>At <a href="http://en.wikipedia.org/wiki/Object_file" rel="nofollow">wikipedia</a>, it is written that</p>\n\n<pre><code>Object files are produced by an assembler, compiler, or other language\ntranslator, and used as input to the linker.\n</code></pre>\n\n<p><strong>Question 1:</strong> An assembler converts assembly language code (<code>MOV A, B</code> <code>ADD C</code>) to machine code. In case of high-level language like C++, that is generated by linker above. So assembler is not used anywhere. So how can it create an object file as written above? </p>\n\n<p>Intermediate code is generated to make the code run on different architectures.</p>\n\n<p><strong>Question 2:</strong> Are *.class (bytecode) files created by java compiler object files? If yes, then can we say that the JVM that runs them is a type of linker (however its not creating the executable)?</p>\n\n<p><strong>Question 3:</strong> When we compile a C++ program in Turbo C++, we get *.obj files which are the object files. Can we use them to generate the executable in some other architecture?</p>\n', 'ViewCount': '132', 'Title': 'Some questions regarding compilers and assemblers', 'LastEditorUserId': '98', 'LastActivityDate': '2012-11-06T14:50:02.113', 'LastEditDate': '2012-11-06T11:15:57.493', 'AnswerCount': '2', 'CommentCount': '1', 'AcceptedAnswerId': '6513', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '4422', 'Tags': '<terminology><compilers><code-generation>', 'CreationDate': '2012-11-06T09:11:05.570', 'Id': '6506'}{'Body': '<p>I need a concise definition of the "state of an object" in object-oriented programming (for a paper).</p>\n\n<p>For about half of a day I searched for a paper that I can cite on this topic, but I couldn\'t find one. All the papers I found were mostly general papers on object-oriented programming and they didn\'t define the state of an object.</p>\n\n<p>I am unsure, but my best guess is something like:\n<em>The state of an object is defined by the state of the instance variables of the object.</em></p>\n\n<p>I am searching for a definition of the state of an object and/or a reference on the topic.</p>\n\n<p>(btw, could I refer to the concept as "object state" or is this uncommon?)</p>\n', 'ViewCount': '1884', 'Title': 'Definition of the state of an object in OOP', 'LastEditorUserId': '1829', 'LastActivityDate': '2014-04-27T19:38:08.067', 'LastEditDate': '2012-11-07T16:03:17.703', 'AnswerCount': '3', 'CommentCount': '0', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '1829', 'Tags': '<terminology><reference-request><programming-languages><object-oriented>', 'CreationDate': '2012-11-07T14:07:34.027', 'Id': '6536'}{'Body': "<p>From my Googling, it appears that call by value-result is similar to call by reference in that it changes values in the caller, but it's different in that the changes don't take place until the callee exits, and that if the same variable is passed as more than one argument, it'll be treated as separate values in the callee instead of the same value as in call by reference.</p>\n\n<p>Neither fact helps me explain why call by value-result produces different output than call by reference in the following code:</p>\n\n<pre><code>program Param (input, output); \nvar\n  a, b: integer;\n  procedure p (x, y : integer); \n  begin\n    x := x + 2 ; \n    a := x * y ; (1)\n    x := x + 1   (2)\n  end; \nbegin\n  a := 1 ;\n  b := 2 ;\n  p (a, b) ; \n  writeln (a)\nend.\n</code></pre>\n\n<p>Edit: here's my understanding of things:\nThe insight here is that in CBR, in line (1), both <code>a</code> and <code>x</code> point to the same thing, so assigning to <code>a</code> updates both <code>a</code> and <code>x</code> to <code>x * y</code> which is 6. But in CBVR, <code>a</code> and <code>x</code> point to different things, so line 1 only updates <code>a</code> to 6. <code>x</code> remains 3. Then CBR updates <code>a</code> right away so <code>a</code> ends up being 7 outside <code>p</code>. But CBVR updates <code>a</code> to whatever <code>x</code> is at the end of <code>p</code>, which is 4, so even though <code>a</code> was 6 in line (1), after <code>p</code> exits it's changed to 4.</p>\n", 'ViewCount': '1730', 'Title': 'Call by value-result vs. call by reference?', 'LastEditorUserId': '4198', 'LastActivityDate': '2012-11-10T18:14:34.560', 'LastEditDate': '2012-11-10T18:14:34.560', 'AnswerCount': '3', 'CommentCount': '3', 'AcceptedAnswerId': '6559', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '4198', 'Tags': '<terminology><programming-languages><semantics>', 'CreationDate': '2012-11-08T03:45:38.873', 'Id': '6549'}{'Body': '<p>What would be the process state in a multi threaded process, in which threads are in different states (running, waiting, blocked etc)</p>\n', 'ViewCount': '101', 'Title': 'Process state in multi threaded process', 'LastEditorUserId': '98', 'LastActivityDate': '2012-11-09T07:57:00.760', 'LastEditDate': '2012-11-09T07:57:00.760', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '4508', 'Tags': '<terminology><operating-systems><process-scheduling><threads>', 'CreationDate': '2012-11-08T10:47:53.373', 'Id': '6558'}{'Body': '<p>I am getting confused by the regular expression $(a\\mid b)^*$ as it for sure matches $aab$ and $ab$.</p>\n\n<p>Does $(a\\mid b)^*$ also match strings like $aa$, $aaaa$, $bb$ or $bbb$, that is those that use only $a$ or $b$?</p>\n', 'ViewCount': '118', 'Title': 'Does $(a \\mid b)^*$ match $a^n$ and $b^n$?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-11-09T16:55:18.487', 'LastEditDate': '2012-11-09T07:55:22.077', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '1', 'OwnerDisplayName': 'Sudhir', 'PostTypeId': '1', 'Tags': '<formal-languages><terminology><regular-expressions>', 'CreationDate': '2012-11-09T06:03:29.180', 'Id': '6569'}{'Body': '<p>I\'m unclear about the use of the phrases "infinite" language or "finite" language in computer theory.</p>\n\n<p>I think the root of the trouble is that a language like $L=\\{ab\\}^*$ is <strong>infinite</strong> in the sense that it can generate an infinite (but countable) number of strings. Yet, it can still be recognized by a <strong>finite</strong> state automaton. </p>\n\n<p>It also doesn\'t help that the Sipser book doesn\'t really make this distinction (at least as far as I can tell). A question about infinite/finite languages and their relationship to regular languages came up in a sample exam.</p>\n', 'ViewCount': '3132', 'Title': 'Infinite Language vs. finite language', 'LastEditorUserId': '157', 'LastActivityDate': '2012-11-12T16:08:33.073', 'LastEditDate': '2012-11-11T00:49:47.817', 'AnswerCount': '2', 'CommentCount': '2', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '4547', 'Tags': '<formal-languages><terminology><regular-languages>', 'CreationDate': '2012-11-10T23:43:32.613', 'FavoriteCount': '2', 'Id': '6609'}{'Body': "<p>I know that if you try and make the theory</p>\n\n<p>$$\\lambda\\beta+\\{s = t\\ |\\text{ s, t are terms without }\\lambda\\beta\\text{ normal forms}\\}$$</p>\n\n<p>then that theory becomes inconsistent. Are two terms where one is without a $\\lambda\\beta$ normal form also unconvertible in $\\lambda\\beta$, ie can it ever be true that $\\lambda\\beta \\vdash s=t$ if $s$ dosen't have a normal form?</p>\n", 'ViewCount': '67', 'Title': 'Are two terms where one is without a $\\lambda\\beta$ normal form unconvertible in $\\lambda\\beta$?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-11-13T11:54:01.047', 'LastEditDate': '2012-11-12T11:31:26.100', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '1579', 'Tags': '<terminology><logic><lambda-calculus>', 'CreationDate': '2012-11-12T01:03:00.430', 'Id': '6624'}{'Body': '<p>From <a href="http://en.wikipedia.org/wiki/Hash_function#Universal_hashing" rel="nofollow">Wikipedia</a></p>\n\n<blockquote>\n  <p>A hash function is any algorithm or subroutine that maps <strong>large data\n  sets of variable length</strong>, called keys, to <strong>smaller data sets of a\n  fixed length</strong>. For example, a person\'s name, having a variable\n  length, could be hashed to a single <strong>integer</strong>. The values returned\n  by a hash function are called hash values, hash codes, hash sums,\n  checksums or simply hashes.</p>\n</blockquote>\n\n<p>I wonder if the range/codomain of a hash function is always the set of natural numbers or integers, because their function values seem to be always used as indices to some array?</p>\n', 'ViewCount': '151', 'Title': 'Is the codomain/range of a hash function always $\\mathbb{Z}$ or $\\mathbb{N}$?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-11-19T18:17:45.153', 'LastEditDate': '2012-11-19T18:17:45.153', 'AnswerCount': '5', 'CommentCount': '1', 'AcceptedAnswerId': '6746', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '336', 'Tags': '<terminology><hash>', 'CreationDate': '2012-11-15T14:03:29.847', 'Id': '6680'}{'Body': "<p>I'm having difficulty with the following question:</p>\n\n<blockquote>\n  <p>Given a bit pattern with mantissa $10110000$ and exponent $0111$, what\n  does the bit pattern represent in denary (i.e decimal / base 10)?</p>\n</blockquote>\n\n<p>I got the right answer(!) but the wrong (or alternative) work:</p>\n\n<ol>\n<li>Convert the exponent to denary: $0111$ is $7$</li>\n<li>Apply this exponent to the mantissa: $10110000\\rightarrow1011000$ after shifting $7$ places</li>\n<li>Convert the mantissa to denary: $1011000$ is $88$</li>\n<li>Set the sign: $-88$ (which is correct!)</li>\n</ol>\n\n<p>Using a different method, the mantissa $1.0110000$ is somehow deteremined to be $-11/16$ and then $-11/16 \\times 2^7 = - 88$ (I understand this shift with the exponent). However, what I don't understand is:</p>\n\n<blockquote>\n  <p><strong>How do you convert 1.0101 (mantissa) to -11/16?</strong> Is this a standard way to do it?</p>\n</blockquote>\n", 'ViewCount': '140', 'Title': 'Floating-Point Binary to Decimal', 'LastEditorUserId': '98', 'LastActivityDate': '2012-11-19T18:09:03.697', 'LastEditDate': '2012-11-19T18:09:03.697', 'AnswerCount': '1', 'CommentCount': '4', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '4614', 'Tags': '<terminology><binary-arithmetic>', 'CreationDate': '2012-11-16T12:02:13.513', 'Id': '6694'}{'Body': '<p>I know the term <strong>order</strong> of a B-tree. Recently I heard a new term  <strong>B tree with minimum degree of 2.</strong><br>\nWe know the degree is related with a node but what is degree of a tree.<br>\nIs degree imposes any kind of a restriction on height of a B-tree?  </p>\n', 'ViewCount': '1586', 'Title': 'B-Tree Is degree and order both are the same thing related to a B-Tree', 'LastEditorUserId': '98', 'LastActivityDate': '2014-02-21T10:30:15.287', 'LastEditDate': '2014-02-21T10:30:15.287', 'AnswerCount': '3', 'CommentCount': '0', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '3075', 'Tags': '<terminology><data-structures><search-trees><dictionaries>', 'CreationDate': '2012-11-21T05:17:52.773', 'FavoriteCount': '1', 'Id': '6799'}{'Body': '<p>I am new to "Computational Complexity" and therefore I have enough problems with some exercises like the following one:</p>\n\n<blockquote>\n  <p>Remember: $\\text{PH} := \\bigcup_{i} \\Sigma_i$</p>\n  \n  <p>Show:</p>\n  \n  <p>$\\bullet \\bigcup_{i}(\\Sigma_i \\cup \\Pi_i \\cup \\Delta_i) = \\bigcup_{i}\\Sigma_i = \\bigcup_{i}\\Pi_i = \\bigcup_{i}\\Delta_i$</p>\n  \n  <p>$\\bullet \\forall k \\in \\mathbb{N} (\\Sigma_k = \\Pi_k \\Rightarrow \\text{PH} = \\Sigma_k)$</p>\n</blockquote>\n\n<p>I have tried to make myself familiar with <a href="http://en.wikipedia.org/wiki/Polynomial_hierarchy" rel="nofollow">Polynomial hierarchy</a>, but on the one hand I don\'t understand the meaning of the symbols $\\Delta, \\Sigma, \\Pi$ and on the other hand I don\'t know how to solve the actual exercise.</p>\n\n<p>Can somebody give me some help, please?</p>\n', 'ViewCount': '151', 'Title': 'Notations around the polynomial hierarchy', 'LastEditorUserId': '19', 'LastActivityDate': '2012-11-28T05:10:48.793', 'LastEditDate': '2012-11-24T19:10:26.167', 'AnswerCount': '1', 'CommentCount': '4', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '4713', 'Tags': '<complexity-theory><terminology><time-complexity>', 'CreationDate': '2012-11-24T11:26:59.523', 'FavoriteCount': '1', 'Id': '6870'}{'Body': '<ol>\n<li><p>Is it always true that a problem which is ${\\sf NP}$-hard but not ${\\sf NP}$-complete is an optimization problem such as <strong>Minimum-Vertex-Cover</strong> and many others.</p></li>\n<li><p>Is it always true that a ${\\sf NP}$-complete problem is always a decision problem such as vertex cover of size $k$, independent set of size $k$ and many others.</p></li>\n</ol>\n', 'ViewCount': '154', 'Title': 'NP-Hard problems which are not NP-Complete', 'LastEditorUserId': '98', 'LastActivityDate': '2012-11-27T08:19:00.027', 'LastEditDate': '2012-11-27T08:19:00.027', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '2556', 'Tags': '<complexity-theory><terminology><np-complete><np-hard><decision-problem>', 'CreationDate': '2012-11-26T07:02:31.070', 'FavoriteCount': '1', 'Id': '6910'}{'ViewCount': '146', 'Title': 'NP-complete reductions', 'LastEditDate': '2012-11-26T11:49:55.377', 'AnswerCount': '2', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '4735', 'FavoriteCount': '1', 'Body': '<p>I\'ve read that "Every problem in NP can be reduced to every NP-complete problem". </p>\n\n<p>My question is on the choice of the word "reduce". If I were to "reduce" a polynomial problem in NP to an exponential problem in NP, I just plain feel weird about using the word "reduce" because I feel like I\'ve increased the problem, not reduced it. So, why do we use the word reduce?</p>\n\n<p>Also, why do we write "reduce A to B" as $A\\le_{p} B$. It seems backwards.</p>\n', 'Tags': '<complexity-theory><terminology><np-complete><reductions>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-12-05T22:56:51.973', 'CommentCount': '2', 'AcceptedAnswerId': '7200', 'CreationDate': '2012-11-26T08:29:17.163', 'Id': '6912'}{'ViewCount': '670', 'Title': 'What do these arrows in design pattern diagrams mean?', 'LastEditDate': '2012-12-04T17:00:58.440', 'AnswerCount': '3', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '2860', 'FavoriteCount': '1', 'Body': '<p>I am learning about software design patterns by reading Wikipedia pages about them. A lot of the patterns such as the bridge pattern have diagrams with boxes and different kinds of arrows:</p>\n\n<p><a href="http://i.stack.imgur.com/ZPF7S.png" rel="nofollow"><img src="http://i.stack.imgur.com/ZPF7S.png" alt="enter image description here"></a><br>\n<sup>Source: <a href="http://upload.wikimedia.org/wikipedia/commons/thumb/c/cf/Bridge_UML_class_diagram.svg/500px-Bridge_UML_class_diagram.svg.png" rel="nofollow">Wikipedia</a></sup></p>\n\n<p>Do these diagrams stem from a standard? Why do some arrows have different ending markings? Also, why are some of them dotted?</p>\n', 'Tags': '<terminology><software-engineering>', 'LastEditorUserId': '98', 'LastActivityDate': '2012-12-04T17:01:37.473', 'CommentCount': '1', 'AcceptedAnswerId': '6974', 'CreationDate': '2012-11-28T00:02:46.693', 'Id': '6973'}{'Body': u'<p>I am trying to understand how a <code>OUTER UNION</code> $\u222a^\u2733$ works, and why it is only partially compatible. </p>\n\n<p>I am aware this operation was created to take union of tuples from two relations if the relation are not type compatible (which I understand).</p>\n\n<p>Examples of this operation will be great!</p>\n', 'ViewCount': '144', 'Title': 'What is OUTER UNION and why is it partially compatible', 'LastEditorUserId': '98', 'LastActivityDate': '2013-01-28T20:04:37.257', 'LastEditDate': '2012-11-29T16:45:39.650', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '6999', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '4790', 'Tags': '<terminology><database-theory><relational-algebra>', 'CreationDate': '2012-11-28T18:25:12.240', 'Id': '6997'}{'Body': '<p>I don\'t understand this definition of an "instance" of a problem.  Quoting from the CLRS book on page 1054 on abstract problems (Chapter 34.1):</p>\n\n<blockquote>\n  <p>We define an abstract problem $Q$ to be a binary relation on a set $I$ of problem <strong>instances</strong> and set $S$ of problem <strong>solutions</strong>.</p>\n</blockquote>\n', 'ViewCount': '379', 'Title': 'What is an instance of NP complete problem?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-11-29T17:42:14.317', 'LastEditDate': '2012-11-29T16:48:03.150', 'AnswerCount': '4', 'CommentCount': '0', 'AcceptedAnswerId': '7020', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '4193', 'Tags': '<complexity-theory><terminology><np-complete>', 'CreationDate': '2012-11-29T02:18:20.670', 'Id': '7005'}{'Body': '<p>I was wondering if someone knew the origin of the client server model. Where does the term come from (paper, software application, book)?</p>\n', 'ViewCount': '349', 'Title': 'What is the origin of the client server model?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-04T23:06:54.407', 'LastEditDate': '2012-12-02T11:34:11.250', 'AnswerCount': '3', 'CommentCount': '0', 'AcceptedAnswerId': '7060', 'Score': '10', 'PostTypeId': '1', 'OwnerUserId': '4809', 'Tags': '<terminology><reference-request><distributed-systems><history>', 'CreationDate': '2012-11-30T10:05:42.000', 'Id': '7038'}{'Body': '<p>I am doing research on control flow analysis on aspect oriented programs and I found in some papers an interprocedural approach for doing control flow analysis on others call graph or control flow graph. Is there a real difference between control flow graphs and interprocedural control flow graphs?</p>\n', 'ViewCount': '363', 'Title': 'What is the difference between control flow graph & interprocedural control flow graph?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-12-01T16:49:00.093', 'LastEditDate': '2012-12-01T14:24:14.070', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '7085', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '4817', 'Tags': '<terminology><algorithm-analysis><programming-languages>', 'CreationDate': '2012-11-30T22:48:51.100', 'Id': '7054'}{'Body': "<p>I am really confused about clique problem and clique cover problem. I tried googling it,but I don't see to be able to visualise the clique cover problem.</p>\n", 'ViewCount': '172', 'Title': 'What exactly is a clique cover problem?', 'LastEditorUserId': '98', 'LastActivityDate': '2012-12-04T16:59:06.307', 'LastEditDate': '2012-12-04T16:59:06.307', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '7157', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '4193', 'Tags': '<complexity-theory><terminology><np-complete>', 'CreationDate': '2012-12-04T13:19:51.807', 'Id': '7156'}{'ViewCount': '293', 'Title': 'Looking for a dictionary of math/CS notation', 'LastEditDate': '2012-12-13T17:11:42.787', 'AnswerCount': '3', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '699', 'FavoriteCount': '2', 'Body': '<p>There is an at-times dizzying array of symbols used in math and CS papers. Yet many assume basic familiarity that seems rarely taught in one place. I am looking for a dictionary something like the following, especially from a CS perspective. </p>\n\n<ul>\n<li>It would list all the basic mathematical symbols and give their meanings and examples. It would talk about symbols that are sometimes used in equivalent ways. It would note common beginner mistakes.</li>\n<li>It would talk about the subtleties surrounding different meanings of a single symbol (much like multiple definitions of the same word in a dictionary). </li>\n<li>It would not merely be a very terse description of each symbol, such as one word descriptions like "subset".</li>\n<li>It would show how symbols are sometimes "overloaded". For example, $\\binom{x}{y}$ could have $z$ as an integer, but sometimes $z$ can be a set with this notation and it means to choose elements from this set. $[n]$ sometimes means a set of integers $1 \\ldots n$, or other times its a one-element array.</li>\n<li>It might talk about how to describe all kinds of different "objects" in terms of different symbols or equivalent ways of referring to them (but which are more clear) and the operations possible on those objects. In other words, kind of like an API for math objects.</li>\n</ul>\n\n<p>I.e. it would be also at times a "style manual" for different nuances in how to present mathematical writing. This would be a very helpful resource for anyone writing questions in mathematical stackexchanges, where many questions fail to make sense based on not fitting into tricky mathematical conventions.</p>\n\n<p>Some book introductions have many of these features. however ideally it would be a separate treatment. Also, ideally of course it would be online. There are tables of latex symbols, but they don\'t really fulfill many of the above criteria.</p>\n\n<blockquote>\n  <p>Has anyone seen a "dictionary of symbols" that matches these features?</p>\n</blockquote>\n\n<p>(Alternatively, it seems like an excellent wiki or FAQ project if good references like this don\'t exist.)</p>\n', 'Tags': '<terminology><reference-request><education>', 'LastEditorUserId': '472', 'LastActivityDate': '2013-07-11T19:49:51.730', 'CommentCount': '3', 'AcceptedAnswerId': '7370', 'CreationDate': '2012-12-13T04:19:04.670', 'Id': '7367'}{'Body': "<p>I'm currently learning for an exam about compilers and found the following question:</p>\n\n<blockquote>\n  <p>(3 p.) <strong>Bootstrapping</strong>: Explain the concepts of <em>rehosting</em> and <em>retargeting</em>. Use T-diagrams.</p>\n</blockquote>\n\n<p>As far as I understand, rehosting means to compile a compiler for another platform (host), so it should look like this:</p>\n\n<pre><code>-------------\n| a       b |     --------------\n-----   -----     | a        b |\n    | c |-------------    ------\n    -----| c       x || x |\n         -----   ----------\n             | ? |\n             -----\n</code></pre>\n\n<p>Is this correct? And what does retargeting mean? </p>\n", 'ViewCount': '180', 'Title': 'How to explain rehosting and retargeting with T-diagrams?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-18T00:39:30.573', 'LastEditDate': '2014-01-17T23:01:54.847', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '5103', 'Tags': '<terminology><compilers>', 'CreationDate': '2012-12-17T20:15:02.770', 'Id': '7472'}{'ViewCount': '122', 'Title': 'Looking for some more details on "Turing" devices', 'LastEditDate': '2012-12-20T05:57:30.353', 'AnswerCount': '3', 'Score': '0', 'OwnerDisplayName': 'Steel City Hacker', 'PostTypeId': '1', 'OwnerUserId': '5132', 'Body': "<p>I've been reading a lot of computer science literature in the recent past but haven't ran across an explanation of Turing machines, the different types, and why they seem to come up so often (I understand they are a sort of a basis for CS topics).  </p>\n\n<p>I've also seen comments by some members mentioning turing-completeness (Particularly when dealing with programming languages) and was just looking for some clarification.  </p>\n\n<p>I did search around before posting this and haven't been able to find a similar post or a website that describes this in terms that I have been able to understand or decipher.  Thanks.  </p>\n", 'Tags': '<terminology><turing-machines><computation-models><turing-completeness>', 'LastEditorUserId': '3094', 'LastActivityDate': '2012-12-20T05:57:30.353', 'CommentCount': '3', 'AcceptedAnswerId': '7520', 'CreationDate': '2012-12-19T15:33:23.660', 'Id': '7512'}{'Body': '<p>We commonly create sub-groups of strings in one particular algorithm implementation. I just want to know in CS literature is there any standard name for such kind of grouping. For e.g.</p>\n\n<pre><code>Hello World! This is May from the dairy farm.\n</code></pre>\n\n<p>Strings with sub-groups of two:</p>\n\n<pre><code>Hello World!\nWorld! This\nThis is\nis May\n...\n</code></pre>\n', 'ViewCount': '36', 'Title': 'terminology for grouping words in a string?', 'LastActivityDate': '2013-01-01T13:34:35.417', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '7675', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '2374', 'Tags': '<terminology><strings><substrings>', 'CreationDate': '2013-01-01T13:08:48.753', 'Id': '7674'}{'Body': '<p>I have a background in computer architecture and only cursory understanding of process networks. For a paper I am writing I need to understand prefix monotonicity properly. </p>\n\n<p>For now I have "a stream transformer is prefix monotonic if its output for a given input record r is dependent only on the input stream up to and including r, and independent from whether r is the last record in the stream". But this was gathered by word-of-mouth and I am not sure it is the proper approach.</p>\n\n<p>I would welcome suggestions for:</p>\n\n<ul>\n<li>proper formal background and definitions;</li>\n<li>useful analogies to explain the concept to a newcomer (the audience of the paper needs to understand prefix monotonicity but may not be knowledgeable with TCS).</li>\n</ul>\n', 'ViewCount': '123', 'Title': 'What is prefix monotonicity?', 'LastActivityDate': '2013-06-03T14:32:09.153', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '4', 'OwnerDisplayName': 'kena', 'PostTypeId': '1', 'OwnerUserId': '1922', 'Tags': '<reference-request><terminology><nondeterminism>', 'CreationDate': '2013-01-01T13:03:26.163', 'Id': '7685'}{'Body': '<p>The <a href="http://en.wikipedia.org/wiki/Universal_Turing_machine" rel="nofollow">universal Turing machine</a> $U_{TM}$ is a TM that takes in as input an encoding of a TM and a string, then runs the TM on the string and does whatever the simulated TM does.  The language of the universal TM is the set of all encodings of a TM/string pair as a string for which the TM accepts the string.</p>\n\n<p>I have seen several different names for the language of the universal Turing machine.  Michael Sipser refers to it as $A_{TM}$ (the acceptance language for Turing machines), while Hopcroft, Ullman, and Motwani call it $L_u$ (the universal language).</p>\n\n<p>Is the a standardized term for the language of the universal Turing machine?  I would understand if there might be many "universal Turing machines" that vary in their encoding schemes, so if the answer is "no, there is no general term for this" that would be good to know.  I\'m mostly asking because I\'m teaching an introductory course in the theory of computation and have been using the term $A_{TM}$ for this without knowing if there is a better term to use.</p>\n\n<p>Thanks!</p>\n', 'ViewCount': '256', 'Title': 'Standard notation for the language of the universal Turing machine?', 'LastActivityDate': '2013-01-02T07:46:58.950', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '7688', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '2131', 'Tags': '<computability><terminology><turing-machines>', 'CreationDate': '2013-01-02T05:30:33.547', 'Id': '7687'}{'ViewCount': '334', 'Title': 'Importance of recursion in computability theory', 'LastEditDate': '2013-01-05T01:35:23.707', 'AnswerCount': '2', 'Score': '9', 'PostTypeId': '1', 'OwnerUserId': '947', 'FavoriteCount': '3', 'Body': '<p>It is said that computability theory is also called recursion theory. Why is it called like that? Why recursion has this much importance?</p>\n', 'Tags': '<computability><terminology><history>', 'LastEditorUserId': '41', 'LastActivityDate': '2013-01-05T13:01:20.953', 'CommentCount': '0', 'AcceptedAnswerId': '7762', 'CreationDate': '2013-01-04T15:15:03.867', 'Id': '7759'}{'Body': '<p>I do not ask you to respect that the processor is a physical black box whereas interpreter implementation is not that clear. As CS, you must look at the functionality aspect -- both processor (physical machine?) and interpreter (virtual machine?) execute a program (a stream of commands).</p>\n\n<p>Isn\'t <em>to interpret</em> the code just means <em>to evaluate/to execute/to process</em> it?</p>\n\n<p>There is a long <a href="http://en.wikipedia.org/wiki/Interpreted_language" rel="nofollow">article on interpretation in Wikipedia</a>. It uses a lot of words to explain what is interpretation and it even says that it is execution of instruction stream. But nobody stood up and stated that it is just what the processor does (like the child in the "Emperor new clothes")! Why should we think that these are two different things? Processors even invented JIT-compilation (called <a href="http://en.wikipedia.org/wiki/Microcode" rel="nofollow">microcoding</a>) earlier than virtual machines.</p>\n\n<p>Also, bytecode interpretation should give additional clue. It looks like machine code absolutely (to be executed by virtual machines). So, are interpreters just virtual processors? </p>\n\n<p>The self-checking questions are: </p>\n\n<ol>\n<li>What if vendor of your favorite processor discloses you a terrible secret that your instructions are not executed directly but converted into a true machine language beneath, before submitted to the real processor, is you language interpreted or machine? </li>\n<li>What if instruction stream for a real processor is executed by emulator (virtual machine) then is it executed by the processor or interpreted? </li>\n<li>Can the processor that executes an interpreted language (bytecode or script) is not a processor anymore but an interpreter? </li>\n</ol>\n', 'ViewCount': '114', 'Title': 'Can terms "interpreter" and "processor" be used interchangably?', 'LastEditorUserId': '2879', 'LastActivityDate': '2013-01-07T00:13:07.777', 'LastEditDate': '2013-01-06T14:34:32.527', 'AnswerCount': '2', 'CommentCount': '3', 'Score': '-1', 'PostTypeId': '1', 'OwnerUserId': '2879', 'Tags': '<terminology>', 'CreationDate': '2013-01-06T13:37:22.020', 'Id': '7805'}{'ViewCount': '241', 'Title': 'Concrete understanding of difference between PP and BPP definitions', 'LastEditDate': '2013-02-15T07:31:32.413', 'AnswerCount': '3', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '5356', 'FavoriteCount': '3', 'Body': '<p>I am confused about how  <strong>PP</strong> and <strong>BPP</strong> are defined. Let us assume $\\chi$ is the characteristic function for a language $\\mathcal{L}$. <em>M</em> be the probabilistic Turing Machine. Are the following definitions correct:<br>\n$BPP =\\{\\mathcal{L} :Pr[\\chi(x) \\ne M(x)] \\geq \\frac{1}{2} + \\epsilon \\quad \\forall x \\in \\mathcal{L},\\ \\epsilon &gt; 0 \\}$<br>\n$PP =\\{\\mathcal{L} :Pr[\\chi(x) \\ne M(x)] &gt; \\frac{1}{2} \\}$  </p>\n\n<p>If the definition are wrong, please try to make minimal change to make them correct (i.e. do not give other equivalent definition which use counting machine or some modified model). I can not properly distinguish the conditions on probability on both the definitions.  </p>\n\n<p>Some concrete examples with clear insight into the subtle points would be very helpful. </p>\n', 'Tags': '<complexity-theory><terminology><randomized-algorithms><complexity-classes>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-02-15T07:31:32.413', 'CommentCount': '0', 'AcceptedAnswerId': '7849', 'CreationDate': '2013-01-09T11:28:04.633', 'Id': '7848'}{'ViewCount': '826', 'Title': 'The difference between a sequence and a set', 'LastEditDate': '2013-01-13T13:14:58.283', 'AnswerCount': '2', 'Score': '2', 'OwnerDisplayName': 'MHZ', 'PostTypeId': '1', 'OwnerUserId': '5404', 'Body': "<p>I am new to discrete mathematics and the theory of computation I am trying to learn and understand the terminology. </p>\n\n<p>I am having a difficult time understanding the difference between a set and a sequence. I understand that unlike a set, in a sequence order and repetition does matter and sequences contain objects rather than elements or members. However, I don't see how sequences can be logically applied to the real world. </p>\n\n<p>Can someone please give a clear and simple example of when a sequence would be used as opposed to a set and explain how is a sequence is different that a set?</p>\n\n<p>I appreciate any clarification.</p>\n", 'Tags': '<computability><terminology><logic>', 'LastEditorUserId': '5404', 'LastActivityDate': '2013-01-13T13:14:58.283', 'CommentCount': '0', 'AcceptedAnswerId': '7920', 'CreationDate': '2013-01-13T01:29:02.113', 'Id': '7912'}{'Body': '<p>In context of data mining, what does it mean for an association rule measure to be maximal?</p>\n\n<p>I cannot understand the term maximal in this context. </p>\n\n<p>I know of maximal independent sets in algorithms but cannot make out this term.</p>\n', 'ViewCount': '71', 'Title': 'In context of data mining, what does it mean for an association rule measure to be maximal?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-06-15T18:37:46.270', 'LastEditDate': '2013-03-17T18:03:56.097', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '5399', 'Tags': '<terminology><data-mining>', 'CreationDate': '2013-01-13T05:23:36.930', 'Id': '7914'}{'Body': "<p>I am studying primitive recursive functions and there's something that I don't quite understand: let's take the function that computes $x+y$, then, in order to show that $f(x,y)=x+y$ is primitive recursive, my lecture notes give the following equations:</p>\n\n<p>\\begin{cases}\n   f(x,0)=x \\\\\n   f(x,y+1) = f(x,y)+1\n  \\end{cases}\nthis first bunch makes perfect sense to me, on the other hand, looking at the equations down below, I don't get why a new function $g$ is used and also why does it have three parameters, when the sum clearly has only two? Is that $y$ the variable that supposedly holds (partial) results from computation?</p>\n\n<p>\\begin{cases}\n   f(x,0)=u^1_1(x) \\\\\n   f(x,y+1) = g(y, f(x,y),x)\n  \\end{cases}</p>\n\n<p>where $g(x_1, x_2, x_3) = s(u^3_2(x_1, x_2, x_3))$.</p>\n", 'ViewCount': '64', 'Title': 'Clarifications on primitive recursive function definition', 'LastEditorUserId': '98', 'LastActivityDate': '2013-01-16T12:05:02.913', 'LastEditDate': '2013-01-16T10:06:59.627', 'AnswerCount': '1', 'CommentCount': '7', 'AcceptedAnswerId': '8966', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '2778', 'Tags': '<computability><terminology><recursion>', 'CreationDate': '2013-01-16T09:41:09.907', 'Id': '8963'}{'Body': "<p>I have an alphabet $A = \\{b,B\\}$ and I'm asked to write down the <strong>pattern</strong> of the regular expression $(\\epsilon|bb|b)(B|bb)(b|\\epsilon|b)$. What does the question actually want me to do? I'm not sure. Does it want me to give the possible patterns that can be formed with $b$ and $B$? But then surely the question would not have been phrased the way it is. </p>\n\n<p>I'm just confused about what I need to do here and what is expected of the answer. If anyone could give an example it would be very helpful.</p>\n\n<p>Note: This is not the original question, I changed and simplified it.</p>\n", 'ViewCount': '97', 'Title': 'What is meant by "give pattern of a regular expression"', 'LastEditorUserId': '98', 'LastActivityDate': '2013-01-25T13:03:04.673', 'LastEditDate': '2013-01-24T12:52:30.853', 'AnswerCount': '1', 'CommentCount': '7', 'AcceptedAnswerId': '9149', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '6542', 'Tags': '<formal-languages><terminology><regular-languages><regular-expressions>', 'CreationDate': '2013-01-24T12:03:56.200', 'Id': '9132'}{'Body': '<p>My professor gave this assignment question, where he asks us to compare the expressive ease and the expressive range of Low Level and High Level theoretical programming languages.</p>\n\n<p>While in context, I could understand that "hook" seems to refer to the opposite of an abstraction, I don\'t understand precisely what it means. Is it a real term, or did my professor (who isn\'t being helpful) make it up?</p>\n\n<p>This is the question, cut from the assignment:</p>\n\n<p><img src="http://i.stack.imgur.com/ABwpx.jpg" alt="Programming Languages Assignment - "></p>\n', 'ViewCount': '218', 'Title': 'Regarding programming languages, what is meant by "hook"?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-02-25T00:30:18.627', 'LastEditDate': '2013-01-25T11:29:20.677', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '4348', 'Tags': '<terminology><programming-languages>', 'CreationDate': '2013-01-24T18:39:47.987', 'Id': '9134'}{'ViewCount': '218', 'Title': 'Is there a single valid definition for a Turing Machine, or is it mutable?', 'LastEditDate': '2013-01-26T18:06:44.223', 'AnswerCount': '3', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '6569', 'FavoriteCount': '1', 'Body': '<p>I\'m just learning about Turing Machines, and I\'m a bit confused by the difference in formal description between Wikipedia and my textbook.</p>\n\n<p>My textbook says the following:</p>\n\n<p>$$M=\\langle Q,\\Sigma,\\Gamma,\\delta,q_{0},q_{accept}, q_{reject} \\rangle$$</p>\n\n<p>where:</p>\n\n<ol>\n<li>$Q$ is the set of states,</li>\n<li>$\\Sigma$ is the input alphabet not containing the blank symbol $\\sqcup$,</li>\n<li>$\\Gamma$ is the tape alphabet, where $\\sqcup\\in\\Gamma$ and $\\Sigma\\subseteq\\Gamma$,</li>\n<li>$\\delta: Q\\times\\Gamma\\to Q\\times\\Gamma\\times\\{L,R\\}$ is the transition function,</li>\n<li>$q_0\\in Q$ is the start state,</li>\n<li>$q_{accept},q_{reject}\\in Q$ are the accepting and rejecting states, respectively, and $q_{accept}\\neq q_{reject}$</li>\n</ol>\n\n<p>While Wikipedia states </p>\n\n<blockquote>\n  <p>Hopcroft and Ullman (1979, p. 148) formally define a (one-tape) Turing machine as a 7-tuple $M= \\langle Q, \\Gamma, b, \\Sigma, \\delta, q_0, F \\rangle$ where</p>\n  \n  <ul>\n  <li>$Q$ is a finite, non-empty set of states</li>\n  <li>$\\Gamma$ is a finite, non-empty set of the tape alphabet/symbols</li>\n  <li>$b \\in \\Gamma$ is the blank symbol (the only symbol allowed to occur on the tape infinitely often at any step during the computation)</li>\n  <li>$\\Sigma\\subseteq\\Gamma\\setminus\\{b\\}$ is the set of input symbols</li>\n  <li>$q_0 \\in Q$ is the initial state</li>\n  <li>$F \\subseteq Q$ is the set of final or accepting states.</li>\n  <li>$\\delta: Q \\setminus F \\times \\Gamma \\rightarrow Q \\times \\Gamma \\times \\{L,R\\}$ is a partial function called the transition function, where L is left shift, R is right shift. (A relatively uncommon variant allows "no shift", say N, as a third element of the latter set.)</li>\n  </ul>\n</blockquote>\n\n<p>There are obviously a few similarities, but there are a few differences as well. Namely the ordering of the items in the 7-tuple $M$. Also, my textbook has three entries for separate special states, and the Wikipedia entry has only two - My book doesn\'t have a special element just for the blank character.</p>\n', 'Tags': '<terminology><turing-machines>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-01-29T16:46:03.947', 'CommentCount': '0', 'AcceptedAnswerId': '9169', 'CreationDate': '2013-01-26T15:29:26.307', 'Id': '9168'}{'Body': "<p>Frankly I'm very uncomfortable with the material right now. There are some things I can understand, but many I still do not.</p>\n\n<p>My first assignment is asking me in one question (which I do know how to do) to give a full description of a TM that accepts a language $L = \\{ x \\in \\{0,1\\}^* \\mid x \\text{ is divisible by } 4 \\}$.  I know that any binary string ending with $00$ is divisible by 4, so $\\{00,100,1100,1000,11100,11000,10100,10000,\\dots\\}$ is the language that this TM accepts.</p>\n\n<p>But on the topic of (un)decidability:  I know that a language is decidable if there exists a TM that accepts all strings in, and only strings from that language &mdash; and that same TM rejects all strings and only strings not in that language.</p>\n\n<p>Which leads to the question:  What is the difference between a Turing machine <em>accepting</em> and <em>deciding</em> a language?</p>\n", 'ViewCount': '179', 'Title': 'What is the difference between a TM accepting and deciding a language?', 'LastEditorUserId': '4249', 'LastActivityDate': '2013-01-28T14:35:48.290', 'LastEditDate': '2013-01-28T09:52:54.037', 'AnswerCount': '3', 'CommentCount': '1', 'AcceptedAnswerId': '9247', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '6569', 'Tags': '<terminology><turing-machines>', 'CreationDate': '2013-01-28T02:15:33.753', 'Id': '9234'}{'Body': "<p>I'm looking for the name (or <em>a</em> name if there isn't one already) of this relation between $G_1=\\left&lt;\\Sigma_1,\\mathcal{N}_1,\\mathcal{R}_1,S_1\\right&gt;$ and $G_2=\\left&lt;\\Sigma_2,\\mathcal{N}_2,\\mathcal{R}_2,S_2\\right&gt;$:\n$$\\exists f_\\Sigma\\in\\Sigma_1\\times\\Sigma_2,f_\\mathcal{N}\\in\\mathcal{N_1}\\times\\mathcal{N}_2 \\text{ surjective functions s.t. }\\\\ \\mathcal{R}_2=\\left\\{f_\\mathcal{N}(N)\\rightarrow f(\\alpha)\\mid N\\rightarrow\\alpha\\in R_1\\right\\}\\text{ and } S_2=f_\\mathcal{N}(S_1) $$\nwhere $f$ is the extension of $f_\\Sigma$ and $f_\\mathcal{N}$ to words ($f\\in(\\Sigma_1\\cup\\mathcal{N}_1)^*\\times(\\Sigma_2\\cup\\mathcal{N}_2)^*$).</p>\n\n<p>In other words, you can map $G_1$ to $G_2$ (but not necessarily $G_2$ to $G_1$).</p>\n\n<p>If the mapping function were bijective, this would be an isomorphism, but they're not.</p>\n\n<p>What about if only $f_\\mathcal{N}$ is  surjective, i.e. $f_\\Sigma$ is bijective, or even the identity function?</p>\n", 'ViewCount': '40', 'Title': 'Is there a name for this relation on CFGs?', 'LastEditorUserId': '31', 'LastActivityDate': '2013-01-28T15:28:18.950', 'LastEditDate': '2013-01-28T15:16:34.997', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '9252', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '5366', 'Tags': '<terminology><formal-grammars><context-free>', 'CreationDate': '2013-01-28T14:36:24.383', 'Id': '9250'}{'Body': '<p>The <a href="http://en.wikipedia.org/wiki/XOR_linked_list" rel="nofollow">XOR linked list</a> is perhaps the most prominent example of storing a reversible hash of two values and using a known value and the stored hash value to derive the other value.  Is there a term for the general mechanism (or a way to describe it very concisely)?</p>\n\n<p>As a related question, are there other somewhat recognized examples of using this mechanism?</p>\n\n<p>In informally studying computer architecture, I have encountered what I think are two or three examples.  One was a suggestion for a MRU-based cache way predictor by XORing the MRU bit with a bit derived from the address; the derived bit is the "known" value.  The other was a similar, XORing the hysteresis bit of a branch predictor with a bit derived from branch information.  A possible third example might be the agree branch predictor which uses a (possibly static) per-branch prediction to bias entries in a dynamic predictor so that aliasing tends to be non-destructive.  A confirmation that these actually should be recognized as the same general mechanism as used by the XOR linked list would also be helpful.</p>\n', 'ViewCount': '63', 'Title': 'Is there a term for the general method used in XORed linked list?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-01-30T19:21:20.813', 'LastEditDate': '2013-01-30T12:44:52.830', 'AnswerCount': '1', 'CommentCount': '5', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '4577', 'Tags': '<terminology><reference-request><data-structures><lists>', 'CreationDate': '2013-01-29T19:59:22.903', 'FavoriteCount': '3', 'Id': '9284'}{'Body': '<p>I wonder where those terms came from.</p>\n\n<p>Is it computer science related?</p>\n\n<p>Or are they related to civil engineering, or swimming sports?</p>\n\n<p>Is it some analogy with filling water in a pool, or something like that?</p>\n', 'ViewCount': '88', 'Title': 'Where did the terms memory pool and memory leak come from?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-01-30T13:19:42.900', 'LastEditDate': '2013-01-30T13:19:42.900', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '-1', 'PostTypeId': '1', 'OwnerUserId': '5282', 'Tags': '<terminology><history>', 'CreationDate': '2013-01-30T03:43:16.227', 'Id': '9293'}{'Body': '<p>When I am reading a paper I found a notation $\\operatorname{poly}( |F|,n,$$\\frac{1}{\\epsilon}) $.\nIts not clear to me that what this notation represents. Can you please help me out?</p>\n', 'ViewCount': '97', 'Title': 'What is meant by $\\operatorname{poly}(|F|, n, e)$?', 'LastEditorUserId': '472', 'LastActivityDate': '2013-01-30T17:20:24.550', 'LastEditDate': '2013-01-30T17:20:24.550', 'AnswerCount': '2', 'CommentCount': '1', 'AcceptedAnswerId': '9298', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '6522', 'Tags': '<terminology><algorithm-analysis>', 'CreationDate': '2013-01-30T04:51:59.990', 'Id': '9295'}{'Body': "<p>I am familiar with asymptotic notations like Big-O ,little-o. But while I am reading some papers people are using the notations like  $O(\\epsilon^{1/2^d})$, $O(d)^d$ etc. I couldn't understand these notations properly. Is there any way (Lecture notes or video lectures with examples) to understand these things clearly.\nThank You.  </p>\n", 'ViewCount': '162', 'Title': 'asymptotic notations with two exponents', 'LastEditorUserId': '39', 'LastActivityDate': '2013-01-31T07:03:28.657', 'LastEditDate': '2013-01-30T21:33:53.430', 'AnswerCount': '1', 'CommentCount': '5', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '6522', 'Tags': '<terminology><asymptotics><landau-notation>', 'CreationDate': '2013-01-30T06:37:15.033', 'Id': '9299'}{'Body': '<p>I recently discovered that I have a fondness for the work of Dijkstra. I am currently reading random EWDs, and stumbled across one <a href="http://www.cs.utexas.edu/users/EWD/ewd10xx/EWD1014.PDF" rel="nofollow">with some notation that I couldn\'t quite grasp</a>.</p>\n\n<p>Dijkstra states that $[ x &lt; y \\implies f.x.y &lt; f.y.x]$</p>\n\n<p>OK, so. This isn\'t a list comprehension, right? Why the brackets?</p>\n\n<p>Also, how could this be read aloud? What does $\\implies$ mean?</p>\n\n<p>And finally, what does $f.x.y$ and $f.y.x$ mean?</p>\n\n<p>And how could this statement be written more conventionally? And does Dijkstra\'s notation derive from anything, or is it entirely his own invention?</p>\n', 'ViewCount': '96', 'Title': "Understanding Dijkstra's notation $f.x.y$", 'LastEditorUserId': '98', 'LastActivityDate': '2013-01-31T15:40:28.900', 'LastEditDate': '2013-01-31T15:40:28.900', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '1693', 'Tags': '<terminology><history>', 'CreationDate': '2013-01-31T09:20:46.907', 'Id': '9345'}{'ViewCount': '236', 'Title': 'What is the decision version of independent set?', 'LastEditDate': '2013-02-02T18:48:17.307', 'AnswerCount': '3', 'Score': '4', 'OwnerDisplayName': 'Jose Antonio Martin H', 'PostTypeId': '1', 'OwnerUserId': '6655', 'Body': "<p>I always read that finding an independent set of size $k$ in a graph is $\\mathsf{NP}$-complete. However, this only requires looking for all combinations of $k$ vertices and this is a polynomial procedure of order $k$.</p>\n\n<p>I know that we can reduce directly SAT to independent set, with $k$ the number of clauses.</p>\n\n<p>The problem is that I can't grasp correctly, as in 3-COLORING or 3-SAT, the required format to study the complexity of INDEPENDENT SET.</p>\n\n<p>What is the decision version of independent set? And why isn't $k$-independent set in $\\mathsf P$?</p>\n", 'Tags': '<complexity-theory><terminology><decision-problem>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-02-02T18:48:17.307', 'CommentCount': '0', 'AcceptedAnswerId': '9365', 'CreationDate': '2013-01-31T17:41:26.847', 'Id': '9363'}{'ViewCount': '226', 'Title': 'Can a CFG end have a non-terminal symbol in the middle of it?', 'LastEditDate': '2013-02-05T10:16:50.780', 'AnswerCount': '2', 'Score': '1', 'OwnerDisplayName': 'Badger Girl', 'PostTypeId': '1', 'OwnerUserId': '6707', 'Body': "<p>What is the correct way to write a CFG?</p>\n\n<pre><code>A -&gt; B C' E\nC' -&gt; C\nC' -&gt; null\n</code></pre>\n\n<p>or</p>\n\n<pre><code>A -&gt; B C'\nC' -&gt; C E\nC' -&gt; E\n</code></pre>\n", 'Tags': '<terminology><formal-grammars><context-free>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-02-05T10:16:50.780', 'CommentCount': '1', 'AcceptedAnswerId': '9496', 'CreationDate': '2013-02-04T20:47:59.420', 'Id': '9495'}{'ViewCount': '88', 'Title': 'Does reduction from an NP-complete problem to some problem $X$ imply that $X\\in NP$?', 'LastEditDate': '2013-02-06T14:52:09.737', 'AnswerCount': '2', 'Score': '3', 'OwnerDisplayName': 'user6697', 'PostTypeId': '1', 'OwnerUserId': '6697', 'Body': '<p>I am having problems resolving the following question:</p>\n\n<blockquote>\n  <p>Given some problem $X$. If there exists a polynomial time reduction from (for example) $\\mbox{SAT}$ to $X$, $(\\mbox{SAT} \\leq_{p} X)$ and since we know that $\\mbox{SAT}$ is $\\mbox{NP-complete}$, to show that $X$ is $\\mbox{NP-complete}$ is it necessary to show that $X\\in \\mbox{NP}$ via some third party algorithm?</p>\n</blockquote>\n\n<p>If yes, then why?</p>\n', 'Tags': '<complexity-theory><terminology><reductions><np>', 'LastEditorUserId': '683', 'LastActivityDate': '2013-02-06T14:52:09.737', 'CommentCount': '1', 'AcceptedAnswerId': '9520', 'CreationDate': '2013-02-05T12:34:42.987', 'Id': '9519'}{'Body': '<p>If I have some function whose time complexity is O(<em>mn</em>), where <em>m</em> and <em>n</em> are the sizes of its two inputs, would we call its time complexity "linear" (since it\'s linear in both <em>m</em> and <em>n</em>) or "quadratic" (since it\'s a product of two sizes)? Or something else?</p>\n\n<p>I feel calling it "linear" is confusing because O(m + n) is also linear but much faster, but I feel like calling it "quadratic" is also weird because it\'s linear in each variable separately.</p>\n', 'ViewCount': '533', 'Title': 'Is O(mn) considered "linear" or "quadratic" growth?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-02-07T20:34:03.160', 'LastEditDate': '2013-02-06T07:41:49.433', 'AnswerCount': '5', 'CommentCount': '7', 'Score': '9', 'PostTypeId': '1', 'OwnerUserId': '836', 'Tags': '<terminology><asymptotics><landau-notation>', 'CreationDate': '2013-02-05T22:54:48.270', 'FavoriteCount': '1', 'Id': '9523'}{'Body': u'<p>When working with \u03bb-Calculus I see lots of extensions that use other symbols such as \n\u2200 &lt;:Top {} \u2190, which are from "<a href="http://www.cis.upenn.edu/~bcpierce/tapl/" rel="nofollow">Types and Programming Languages</a>" (<a href="http://www.worldcat.org/title/types-and-programming-languages/oclc/51958338&amp;referer=brief_results" rel="nofollow">WorldCat</a>) by Benjamin C. Pierce.</p>\n\n<pre><code>Name                   Extends/Based on Figure                          Figure                                                   Page\nB unyped                                                                3-1 Booleans (B)                                         34\nB \u2115 (untyped)          Extends 3-1 B                                    3-2 Arithmetic expressions (\u2115B)                          41\n\u2192 (untyped)                                                             5-3 Unyped lambda-calculus (\u03bb)                           72\nB (typed)              Extends 3-1 B                                    8-1 Typing rules for booleans (B)                        93\nB \u2115 (typed)            Extends 3-1, 8-1 B                               8-2 Typing rules for numbers (\u2115B)                        93\n\u2192 (typed)              Based on5-3 \u03bb                                    9-1 Pure simply typed lambda-calculus (\u03bb\u2192)               103\n\u2192 Unit                 Extends 9-1 \u03bb\u2192                                   11-2 Unit type                                           119\n\u2192 as                   Extends 9-1 \u03bb\u2192                                   11-3 Ascription                                          122\n\u2192 let                  Extends 9-1 \u03bb\u2192                                   11-4 let binding                                         124\n\u2192 x                    Extends 9-1 \u03bb\u2192                                   11-5 Pairs                                               126\n\u2192 {}                   Extends 9-1 \u03bb\u2192                                   11-6 Tuples                                              128\n\u2192 {}                   Extends 9-1 \u03bb\u2192                                   11-7 Records                                             129\n\u2192 {} let p (untyped)   Extends 11-7, 11-4                               11-8 (Untyped) record patterns                           131\n\u2192 +                    Extends 9-1 \u03bb\u2192                                   11-9 Sums                                                132\n\u2192 +                    Extends 9-1 \u03bb\u2192                                   11-10 Sums (with unique typing)                          135\n\u2192 &lt;&gt;                   Extends 9-1 \u03bb\u2192                                   11-11 Variants                                           136\n\u2192 fix                  Extends 9-1 \u03bb\u2192                                   11-12 General recursion                                  144\n\u2192 B List               Extends 9-1 \u03bb\u2192 with 8-1 booleans                 11-13 Lists                                              147\n\u2192 Unit Ref             Extends 9-1 \u03bb\u2192 with 11-2 Unit                    13-1 References                                          166\n\u2192 error                Extends 9-1 \u03bb\u2192                                   14-1 Errors                                              172\n\u2192 error try            Extends 9-1 \u03bb\u2192 with 14-1 Errors                  14-2 Error handling                                      174\n\u2192 exceptions           Extends 9-1 \u03bb\u2192                                   14-3 Exceptions carrying values                          175\n\u2192 &lt;: Top               Extends 9-1 \u03bb\u2192                                   15-1 Simply typed lambda-calculus with subtyping (\u03bb&lt;:)   186\n\u2192 {} &lt;:                Extends 15-1 \u03bb&lt;: and 11-7 Records                15-3 Records and subtyping                               187\n\u2192 &lt;: Bot               Extends 15-1 \u03bb&lt;:                                 15-4 Bottom type                                         192\n\u2192 &lt;&gt; &lt;:                Extends 15-1 \u03bb&lt;: and 11-11 Simple variant rules  15-5 Variants and subtyping                              197\n\u2192 {} &lt;:                Extends 15-1 \u03bb&lt;: and 15-3 Records and subtyping  16-1 Subtype relataion with records (compact version)    211\n\u2192 {} &lt;:                                                                 16-2 Algorithmic subtyping                               212\n\u2192 {} &lt;:                                                                 16-3 Algorithmic typing                                  217\n\u2192 u                    Extends 9-1 \u03bb\u2192                                   20-1 Iso-recursive types (\u03bbu)                            276\n\u2192\u2200                     Based on 9-1 \u03bb\u2192                                  23-1 Polymorphic lambda-calculus (System F)              343\n\u2192\u2200\u2203                    Extends 23-1 System F                            24-1 Exestential types                                   366\n\u2192\u2200\u2203 Top                Based on 23-1 System F and 15-1 simple subtyping 26-1 Bounded quantification (kernel F&lt;:)                 392\n\u2192\u2200\u2203 Top full           Extends 26-1 F&lt;:                                 26-2 "Full" bounded quantification                       395\n\u2192\u2200&lt;: Top \u2203             Extends 26-1 F&lt;: and 24-1 unbounded existentials 26-3 Bounded existential quantification (kernel variant) 406 \n\u2192\u2200&lt;: Top                                                                28-1 Exposure Algorithm for F&lt;:                          418\n\u2192\u2200&lt;: Top               Extends 16-3 \u03bb&lt;:                                 28-2 Algorithmic typing for F&lt;:                          419\n\u2192\u2200&lt;: Top               Extends 16-2 \u03bb&lt;:                                 28-3 Algorithmic subtyping for kernel F&lt;:                422\n\u2192\u2200&lt;: Top full          Extends 28-3                                     28-4 Algorithmic subtyping for full F&lt;:                  424\n-\u21d2                     Extends 9-1 \u03bb\u2192                                   29-1 Type operators and kinding (\u03bb\u03c9)                     466\n-\u2200\u21d2                    Extends 29-1 \u03bb\u03c9 and 23-1 System F                30-1 Higher-order polymorphic lambda-calculus (F\u03c9)       450\n-\u2200\u2203\u21d2                   Extends 30-1 F\u03c9 and 24-1                         30-2 Higher-order existential types                      452\n-\u2200\u21d2&lt;: Top              Based on 30-1 F\u03c9 and 16-1 kernel F&lt;:             31-1 Higher-order bounded quantification (F\u03c9&lt;:)          470\n-\u2200&lt;: Top {}\u2190           Based on 26-1 F&lt;: with 11-7 records              32-1 Polymorphic update                                  485  \n</code></pre>\n\n<p>or use of \u03c3 and \u03bd as in</p>\n\n<p>"<a href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.38.8716" rel="nofollow">From \u03bb\u03c3 to \u03bb\u03bd-a Journey through Calculi of Explicit Substitutions</a>" by Pierre Lescanne.</p>\n\n<p>and of course <a href="http://www.rbjones.com/rbjpub/logic/cl/tlc001.htm" rel="nofollow">Barendregt\'s Lambda Cube</a>  </p>\n\n<p>Note: For the Weak systems \u03c9 should be underlined.  </p>\n\n<pre><code>\u03bb\u2192   The Simply Typed Lambda Calculus  \n\u03bb\u03c9   Weak Lambda Omega  \n\u03bb2   Polymorphic or Second Order, Typed Lambda Calculus  \n\u03bb\u03c9   The System F\u03c9  \n\u03bbP   LF  \n\u03bbP\u03c9  Weak Lambda P omega   \n\u03bbP2  Lambda P2   \n\u03bbP\u03c9  The Calculus of Constructions  \n</code></pre>\n\n<p>Is there any standard or commonality to the use of these symbols? Where can I find a listing of their meaning.</p>\n\n<p>Also, as I have shown with the extenstions using TAPL, is there any list of the most noteworthy calculi with there symbols, defnition and what they extend? </p>\n\n<p>I am really after a DAG of related \u03bb-Calculi that gives a brief explaination of each one.</p>\n', 'ViewCount': '242', 'Title': u'\u03bb-Calculus extensions: meaning of extension symbols', 'LastEditorUserId': '98', 'LastActivityDate': '2013-02-14T06:32:58.173', 'LastEditDate': '2013-02-14T06:32:58.173', 'AnswerCount': '0', 'CommentCount': '3', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '268', 'Tags': '<terminology><lambda-calculus><computation-models>', 'CreationDate': '2013-02-06T15:28:33.213', 'Id': '9548'}{'ViewCount': '11016', 'Title': 'In basic terms, what is the definition of P, NP, NP-Complete, and NP-Hard?', 'LastEditDate': '2013-06-06T14:06:56.640', 'AnswerCount': '5', 'Score': '56', 'PostTypeId': '1', 'OwnerUserId': '6569', 'FavoriteCount': '54', 'Body': "<p>I'm in a course about computing and complexity, and am unable to understand what these terms mean. All I know is that np is a subset of np complete which is a subset of np hard... but I have no idea what they actually mean. Wikipedia isn't much help either as the explanations are still a bit too high level.</p>\n", 'Tags': '<complexity-theory><terminology><p-vs-np><reference-question>', 'LastEditorUserId': '6716', 'LastActivityDate': '2014-04-16T09:27:50.623', 'CommentCount': '4', 'AcceptedAnswerId': '9566', 'CreationDate': '2013-02-06T20:38:08.297', 'Id': '9556'}{'Body': '<p>Since TMs are equivalent to algorithms, they must be able to perform algoriths like, say, mergesort. But the formal definition allows only for decision problems, i.e, acceptance of languages. So how can we cast the performance of mergesort as a decision problem?</p>\n', 'ViewCount': '233', 'Title': 'Can Turing Machines solve non-decision problems?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-02-08T17:29:15.447', 'LastEditDate': '2013-02-08T08:36:14.007', 'AnswerCount': '4', 'CommentCount': '2', 'Score': '4', 'OwnerDisplayName': 'shilka', 'PostTypeId': '1', 'Tags': '<terminology><turing-machines>', 'CreationDate': '2013-02-07T10:46:15.323', 'Id': '9574'}{'ViewCount': '334', 'Title': 'P, NP and specialised Turing Machines', 'LastEditDate': '2013-02-08T08:34:13.790', 'AnswerCount': '3', 'Score': '10', 'PostTypeId': '1', 'OwnerUserId': '6769', 'FavoriteCount': '2', 'Body': "<p>I'm sort of new, but very interested to the field of computing and complexity theory, and I want to clarify my understanding about how to class problems, and how strongly the problems relate to the machine being used to solve them.</p>\n\n<p><strong>My Understanding</strong></p>\n\n<ul>\n<li>Standard Turing Machine - a Turing Machine which has a finite alphabet, finite number of states and a single right-infinite tape</li>\n<li>Turing-Equivalent Machine - a Turing Machine which, can emulate, and be emulated by, a Standard Turing Machine (quite often with some trade-off between space and time achieved by the emulation)</li>\n<li><code>P</code> - the class of problems which can be solved in polynomial time using a Standard Turing Machine (defined above)</li>\n<li><code>NP</code> - the class of problems which can be verified in polynomial time using a Standard Turing Machine</li>\n<li><code>NP-complete</code> - the hardest problems which are still in <code>NP</code>, which all <code>NP</code> problems can be converted to in polynomial time</li>\n</ul>\n\n<p><strong>My Question</strong></p>\n\n<p>Are the complexity classes (<code>P</code>, <code>NP</code>, <code>NP-complete</code>, etc) related to the algorithm, or the algorithm and the machine?</p>\n\n<p>Said in another way, if you could create a Turing Equivalent Machine (that can solve all the problems that a Standard TM can, but in a different amount of time/space) and this new machine could solve an <code>NP-complete</code> problem in time which grows as a polynomial with respect to the input, would that imply <code>P=NP</code>?</p>\n\n<p>Or must the <code>NP-complete</code> problem be solvable on all possible Turing Machines in polynomial time to be considered in <code>P</code>?</p>\n\n<p>Or do I mis-understand something fundamental above?</p>\n\n<p>I have had a look (maybe not with the correct search terms, I don't know all the jargon quite well) but it seems most lectures/notes etc. focus on standard machines but say that custom machines often have some time/space speed up at the expense of space/time, without saying how that bears on complexity classes. I'm not really familiar enough with the jargon in this field yet to find papers which explain this.</p>\n", 'Tags': '<complexity-theory><computability><terminology><turing-machines><complexity-classes>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-02-08T20:15:58.060', 'CommentCount': '1', 'AcceptedAnswerId': '9593', 'CreationDate': '2013-02-08T02:06:20.137', 'Id': '9585'}{'Body': "<p>Can anyone tell me the difference between the following in data mining? I am taking a class this semester and the professor is using the terms so frequently, I don't know what these mean anymore.</p>\n\n<ul>\n<li>Data point </li>\n<li>attribute </li>\n<li>feature</li>\n</ul>\n", 'ViewCount': '143', 'Title': 'Difference between Data point, attribute, feature?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-02-08T08:39:14.723', 'LastEditDate': '2013-02-08T08:39:14.723', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '9595', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '3004', 'Tags': '<terminology><data-mining>', 'CreationDate': '2013-02-08T04:12:19.020', 'Id': '9587'}{'Body': '<p>I may have missed something in my classes - but with $A\\leq_{P}B$... Does this show that, if $A\\in \\textbf{NP-Complete}$, that $B\\in \\textbf{NP}$ or $B\\in \\textbf{NP-Complete}$?</p>\n\n<p>Or maybe I got things backwards. If $A$ is polynomial-time-reducable to $B$, and $B$ is $\\textbf{NP}$-complete, does that make $A$ $\\textbf{NP}$ or $\\textbf{NP}$-complete?</p>\n', 'ViewCount': '67', 'Title': 'What do time complexity reductions prove?', 'LastEditorUserId': '472', 'LastActivityDate': '2013-05-24T03:17:52.437', 'LastEditDate': '2013-05-24T03:17:52.437', 'AnswerCount': '2', 'CommentCount': '1', 'AcceptedAnswerId': '9754', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '6569', 'Tags': '<complexity-theory><terminology><reductions>', 'CreationDate': '2013-02-13T23:41:37.760', 'Id': '9753'}{'Body': "<p>I'm having a very hard time understanding what's what.</p>\n\n<p>$$L_{1}\\leq_{p}L_{2}$$</p>\n\n<p>If $L_2$ is stated to be in $\\textbf{NP}$, is it necessarily true that $L_1$ is $\\textbf{NP}$-Complete? I need to show the following for an assignment, but I'm having a dispute with a fellow student because he claims that I can't claim that $L_1$ is $\\textbf{NP}$-Complete...</p>\n\n<blockquote>\n  <p>Suppose that $L_1\\leq_p L_2\\leq_p L_3$. Also suppose that $L_3$ is in $\\textbf{NP}$. Explain how to solve $L_1$ deterministically in exponential time.</p>\n</blockquote>\n\n<p>I say (and I could be wrong - and that's a strong possiblity since I have very little understanding of this material) that since $L_3$ is in $\\textbf{NP}$, $L_2$ also has to be in $\\textbf{NP}$, and so therefore $L_1$ has to be in $\\textbf{NP}$. And if that's the case, then $L_1$ can easily be converted to a deterministic algorithm through a breadth first search through the non-deterministic computation tree. Is there something I'm missing?</p>\n", 'ViewCount': '70', 'Title': 'Polynomial time reductions', 'LastEditorUserId': '98', 'LastActivityDate': '2013-02-14T06:34:11.407', 'LastEditDate': '2013-02-14T06:34:11.407', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '9759', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '6569', 'Tags': '<complexity-theory><terminology><np-complete><reductions>', 'CreationDate': '2013-02-14T02:24:22.693', 'Id': '9758'}{'ViewCount': '494', 'Title': 'Are semantic networks ontologies?', 'LastEditDate': '2013-06-03T22:00:31.077', 'AnswerCount': '1', 'Score': '2', 'OwnerDisplayName': 'Zonata', 'PostTypeId': '1', 'OwnerUserId': '6939', 'Body': '<p>I struggle with few definitions in knowledge representation and seek credible help to distinguish between them. I have been searching on wikipedia and many websites for the difference between ontologies and semantic networks (not to be confused with semantic web). While the <a href="http://en.wikipedia.org/wiki/Semantic_networks" rel="nofollow">wikipedia</a> page on semantic network never refer to ontologies, they seem extremely similar and have similar application in CS.</p>\n\n<p>My guess is that semantic network are a type of ontology adapted for research on AI. However, I don\'t know the difference between both. So my question is simply:</p>\n\n<p><strong>Are semantic networks ontologies?</strong> If so, are they synonym? or what are the distinctions?</p>\n', 'Tags': '<terminology><knowledge-representation><ontologies><semantic-networks>', 'LastEditorUserId': '39', 'LastActivityDate': '2013-06-03T22:00:31.077', 'CommentCount': '1', 'AcceptedAnswerId': '9824', 'CreationDate': '2013-02-15T02:03:45.813', 'Id': '9800'}{'ViewCount': '173', 'Title': 'What is the difference between "for infinitely many n" and "for all n"?', 'LastEditDate': '2013-02-17T09:59:19.923', 'AnswerCount': '2', 'Score': '5', 'OwnerDisplayName': 'Jose Antonio Martin H', 'PostTypeId': '1', 'OwnerUserId': '6655', 'Body': '<p>I have read some complexity papers in which "for infinitely many input sizes" is used.</p>\n\n<p>What is the difference in the computational complexity context between "for infinitely many input sizes" and "for all input sizes"?</p>\n', 'Tags': '<complexity-theory><terminology>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-02-17T23:45:10.537', 'CommentCount': '3', 'AcceptedAnswerId': '9845', 'CreationDate': '2013-02-16T22:06:48.160', 'Id': '9844'}{'Body': "<p>Between my textbook and various online sources (namely wikipedia), I'm very confused... can somebody clear up which words are synonymous and which mean different things?</p>\n\n<ul>\n<li>Many-to-one reduction</li>\n<li>Mapping reduction</li>\n<li>Turing reduction</li>\n<li>Cook reduction</li>\n<li>Karp reduction</li>\n<li>Polynomial-time many-to-one reduction</li>\n<li>Polynomial time turing reduction</li>\n</ul>\n\n<p>I've also seen others, but I can't recall them currently.</p>\n", 'ViewCount': '105', 'Title': 'What is the difference between these terms?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-02-17T08:53:28.023', 'LastEditDate': '2013-02-17T08:53:28.023', 'AnswerCount': '1', 'CommentCount': '3', 'AcceptedAnswerId': '9855', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '6569', 'Tags': '<complexity-theory><computability><terminology><reductions>', 'CreationDate': '2013-02-17T01:30:50.600', 'Id': '9847'}{'ViewCount': '4703', 'Title': 'Simple examples of Artificial Intelligence', 'LastEditDate': '2013-02-20T06:52:27.647', 'AnswerCount': '3', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '6944', 'FavoriteCount': '3', 'Body': '<p>I am having trouble understanding the concept of AI. </p>\n\n<p>Is AI just a software that uses Probability, Linear Algebra and some advanced Mathematics to make independent decision ?</p>\n\n<p>Please give me some simple examples of AI. </p>\n', 'ClosedDate': '2014-04-12T13:09:28.970', 'Tags': '<terminology><artificial-intelligence>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-11T17:40:39.997', 'CommentCount': '7', 'CreationDate': '2013-02-19T12:13:56.497', 'Id': '9933'}{'Body': u'<p>I have this confusion. What is the local minimum of a complete binary tree?</p>\n\n<p>Consider an $n$-node complete binary tree $T$, where $n = 2^d \u2212 1$ for some $d$. Each node $v \\in V(T)$ is labeled with a real number $x_v$.  You may assume that the real numbers labeling the nodes are all distinct.  A node $v \\in V(T)$ is a local minimum if the label $x_v$ is less than the label $x_w$ for all nodes $w$ that are joined to $v$ by an edge.</p>\n', 'ViewCount': '377', 'Title': 'What is the local minimum of a complete binary tree', 'LastEditorUserId': '98', 'LastActivityDate': '2013-02-26T06:13:57.493', 'LastEditDate': '2013-02-25T07:15:14.690', 'AnswerCount': '1', 'CommentCount': '9', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '6999', 'Tags': '<terminology><graphs><binary-trees>', 'CreationDate': '2013-02-24T21:49:00.743', 'Id': '10071'}{'ViewCount': '227', 'Title': "How does 'deforestation' remove 'trees' from a program?", 'LastEditDate': '2013-02-27T11:38:07.923', 'AnswerCount': '3', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '4602', 'FavoriteCount': '1', 'Body': '<p>I think understand how deforestation consumes and produces a list at the same time (from a fold and an unfold function -- <a href="http://codereview.stackexchange.com/questions/23180/how-to-make-this-python-function-and-its-inverse-more-beautiful-and-symmetric">see this good answer on CodeReview here</a>), but when I compared that with the <a href="https://en.wikipedia.org/wiki/Deforestation_%28computer_science%29" rel="nofollow">wikipedia entry on the technique</a> it talked about \'removing trees\' from a program. </p>\n\n<p>I understand how a program can be parsed into a syntactic parse tree (is that right?), but what is the meaning of this use of deforestation for some kind of simplification (is it?) of programs? And how would I do it to my code?</p>\n', 'Tags': '<terminology><compilers><functional-programming>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-03-01T19:46:29.167', 'CommentCount': '0', 'AcceptedAnswerId': '10154', 'CreationDate': '2013-02-26T22:53:06.540', 'Id': '10129'}{'Body': '<p>I am reading through PCA and it says that the maximum variance principal component has most of the information. Can we apply that to any data set? If a data set has n attributes and most of the attributes show high variance then can we infer that the dataset has captured lot of useful information? </p>\n\n<p>I am trying to understand how a high variance dataset contains useful information?</p>\n', 'ViewCount': '74', 'Title': 'Maximum variance and useful information of dataset', 'LastEditorUserId': '98', 'LastActivityDate': '2013-03-06T14:34:08.443', 'LastEditDate': '2013-03-06T07:11:43.823', 'AnswerCount': '1', 'CommentCount': '7', 'AcceptedAnswerId': '10307', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '3004', 'Tags': '<terminology><data-mining><data-sets><statistics>', 'CreationDate': '2013-03-05T03:09:00.700', 'Id': '10279'}{'Body': "<p>I don't understand why $n \\log \\log n $ is not $\\Theta (n)$.</p>\n\n<p>Suppose we give $n$ a value of $10,000$. Then $n \\log \\log n$ is $6020.6$. So isn't $n \\log \\log n$ upper- and lower-bounded by $n$, as $n \\log \\log n \\geq Cn$?</p>\n", 'ViewCount': '265', 'Title': 'Why is $n \\log \\log n$ not tightly bounded by $n$?', 'LastEditorUserId': '472', 'LastActivityDate': '2013-03-05T17:07:14.253', 'LastEditDate': '2013-03-05T17:07:14.253', 'AnswerCount': '3', 'CommentCount': '3', 'AcceptedAnswerId': '10282', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '4539', 'Tags': '<terminology><asymptotics>', 'CreationDate': '2013-03-05T03:48:03.413', 'Id': '10281'}{'Body': "<p>I have used FSM in Digital sequential Circuit designs. But I am unfamiliar with Finite Automata. Can somebody help me in understanding 'basic' difference between the two ?    </p>\n", 'ViewCount': '2471', 'Title': 'What is the difference between finite automata and finite state machines?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-03-09T18:01:35.117', 'LastEditDate': '2013-03-07T15:39:44.790', 'AnswerCount': '2', 'CommentCount': '7', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '6466', 'Tags': '<terminology><automata><finite-automata>', 'CreationDate': '2013-03-07T10:44:05.670', 'FavoriteCount': '2', 'Id': '10357'}{'Body': '<p>I am studying computational theory with Sipser\'s textbook. I can\'t quite understand the definition of "reduction". For example, "this problem can be reduced to ATM ..."</p>\n\n<p>What exactly does "to reduce" mean? I can\'t draw the picture in my head. Can anyone can help me understand this definition? </p>\n', 'ViewCount': '177', 'Title': 'What is a "reduction", really?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-21T13:03:11.430', 'LastEditDate': '2014-01-21T13:03:11.430', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '6807', 'Tags': '<terminology><reductions>', 'CreationDate': '2013-03-08T21:47:29.300', 'FavoriteCount': '1', 'Id': '10393'}{'ViewCount': '743', 'Title': 'What is an Efficient Algorithm?', 'LastEditDate': '2013-03-12T14:10:14.620', 'AnswerCount': '4', 'Score': '7', 'PostTypeId': '1', 'OwnerUserId': '6728', 'FavoriteCount': '1', 'Body': '<p>From the point of view of asymptotic behavior, what is considered an "efficient" algorithm?  What is the standard / reason for drawing the line at that point?  Personally, I would think that anything which is what I might naively call "sub-polynomial", such that $f(n) = o(n^2)$ such as $n^{1+\\epsilon}$ would be efficient and anything which is $\\Omega(n^2)$ would be "inefficient".  However, I\'ve heard anything which is of any polynomial order be called efficient.  What\'s the reasoning?</p>\n', 'Tags': '<algorithms><terminology><asymptotics><landau-notation>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-03-12T17:39:15.060', 'CommentCount': '1', 'AcceptedAnswerId': '10477', 'CreationDate': '2013-03-12T10:11:19.533', 'Id': '10472'}{'Body': '<p>A decision problem is NP-complete if it is in NP and all other problems in NP can be reduced to it by a reduction that runs in polynomial time. Why it is important to require that the reduction runs in polynomial time, as opposed to accepting any computable reduction.</p>\n', 'ViewCount': '414', 'Title': 'NP-complete and polynomial time reduction', 'LastEditorUserId': '98', 'LastActivityDate': '2013-03-15T11:05:07.020', 'LastEditDate': '2013-03-15T11:05:07.020', 'AnswerCount': '2', 'CommentCount': '1', 'Score': '2', 'OwnerDisplayName': 'fudu', 'PostTypeId': '1', 'OwnerUserId': '7269', 'Tags': '<terminology><np-complete><reductions>', 'CreationDate': '2013-03-12T10:34:33.867', 'Id': '10488'}{'Body': '<p>I am wondering in general if it is correct to claim that <strong>if a special case of a problem is NP-Hard, the general case of that problem is NP-\nHard too?</strong></p>\n\n<p>For example: Min Set-Cover is NP-Hard does it imply without having to prove that Min Set-k-Cover where each element needs to be covered k times is NP-Hard too? </p>\n', 'ViewCount': '77', 'Title': 'Does hardness of a special case imply hardness of a general case?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-03-18T20:50:52.970', 'LastEditDate': '2013-03-14T07:39:17.577', 'AnswerCount': '3', 'CommentCount': '5', 'Score': '2', 'OwnerDisplayName': 'user14178', 'PostTypeId': '1', 'Tags': '<complexity-theory><terminology><np-hard>', 'CreationDate': '2013-03-13T14:11:38.093', 'Id': '10514'}{'Body': "<p>I'd like to start by stating this isn't homework! I'm studying for a job interview and would appreciate a second opinion. (Well, I guess it is homework, but not for school!).</p>\n\n<p>I've written an algorithm (see pseudocode below) to merge two <em>sorted</em> lists into one sorted list. The problem requires that I implement it as a recursive divide-and-conquer algorithm. My algorithm is recursive and works <em>but does it count as divide-and-conquer</em>?</p>\n\n<p>The reason I'm asking is that the other people working on the same problem insist D&amp;C must divide the lists in half every time and have $O(n \\log n)$ complexity, like quicksort and mergesort. My algorithm doesn't divide the lists in the middle and has a complexity of $O(n+m)$ (where $n$ and $m$ are the lengths of the lists).</p>\n\n<p>To summarize my question: <strong>Does a D&amp;C algorithm have to have $O(n \\log n)$ complexity and divide the problem in half every time? Or does this algorithm count as D&amp;C?</strong></p>\n\n<pre><code>merge_sorted_lists(list1, list2)\n    if(list1 and list2 are empty)\n        return empty list\n\n    if(list1 is empty)\n        return list2\n\n    else if(list2 is empty)\n        return list1\n\n    else if(head of list1 &lt; head of list2)\n        smaller = pop head of list1\n\n    else if(head of list2 &lt; head of list1)\n        smaller = pop head of list2\n\n    return smaller + merge_sorted_lists(list1, list2)\n</code></pre>\n\n<p>P.S. I've implemented the algorithm in Java and it works.</p>\n", 'ViewCount': '239', 'Title': 'Is this a divide-and-conquer algorithm?', 'LastEditorUserId': '7007', 'LastActivityDate': '2013-03-17T03:43:34.093', 'LastEditDate': '2013-03-14T15:12:38.100', 'AnswerCount': '3', 'CommentCount': '7', 'AcceptedAnswerId': '10520', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '7007', 'Tags': '<algorithms><terminology><divide-and-conquer>', 'CreationDate': '2013-03-14T06:33:28.713', 'Id': '10518'}{'Body': "<p>When dealing with Landau notation, $\\Theta, O,\\Omega,o,\\omega$, why do some texts choose the Corman style definitions, i.e.:</p>\n\n<p>$$o(g(n))=\\{ f(n): \\forall c&gt;0:\\exists n_0&gt;0:\\; 0\\leq f(n) &lt; cg(n): \\; \\forall n\\geq n_0 \\}$$</p>\n\n<p>and some texts use limit based definitions such as:</p>\n\n<p>$$\\lim_{n\\to\\infty}\\frac{f(n)}{g(n)}=0\\Rightarrow f(n)\\in o(g(n))$$</p>\n\n<p>Is there any inherent advantage to one definition or the other?  Or is it more a matter of the author's personal preference? </p>\n", 'ViewCount': '114', 'Title': "Landau Notation, Definitions: Limits vs. Corman's", 'LastEditorUserId': '98', 'LastActivityDate': '2013-03-15T19:53:19.617', 'LastEditDate': '2013-03-15T07:46:31.157', 'AnswerCount': '2', 'CommentCount': '3', 'AcceptedAnswerId': '10542', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '6728', 'Tags': '<terminology><asymptotics><landau-notation>', 'CreationDate': '2013-03-15T07:19:17.640', 'Id': '10531'}{'ViewCount': '745', 'Title': 'Why is the name half-adder used to represent the half-adder?', 'LastEditDate': '2013-03-23T18:08:14.133', 'AnswerCount': '3', 'Score': '1', 'OwnerDisplayName': u'De Z\xe9ro Toxin', 'PostTypeId': '1', 'OwnerUserId': '7395', 'FavoriteCount': '1', 'Body': u'<p>I have recently came across half-adders and full adders in my Logic Network lectures. I have somewhat understood the theory, but I am still unable to understand the reason why they called them in that name? I mean, is there any reason why half-adders have the name \u2018half-adders\u2019?</p>\n', 'Tags': '<terminology><circuits>', 'LastEditorUserId': '39', 'LastActivityDate': '2013-06-17T16:07:16.090', 'CommentCount': '0', 'AcceptedAnswerId': '10712', 'CreationDate': '2013-03-23T14:59:29.613', 'Id': '10710'}{'Body': '<p>I am facing problem in understanding the KMP algorithm as given in the book  "Introduction to Algorithm" by Cormen et. al. (Chapter 32): </p>\n\n<p><img src="http://i.stack.imgur.com/5LPPL.jpg" alt="enter image description here"></p>\n\n<p><img src="http://i.stack.imgur.com/MX5hv.jpg" alt="enter image description here"></p>\n\n<p>With respect to the above algorithm, I have following question:</p>\n\n<ol>\n<li><p>In both the algorithms, where exactly (which line number?) while loops, if and for loop ends? It is difficult to visualize the functioning of the algorithm without knowing the \'end\' for each loop and conditional statements.</p></li>\n<li><p>On line number 6 in KMP-MATCHER() and COMPUTE-PREFIX-FUNCTION(), what is the need of checking q>0 and k>0, when we know q and k will always be 0 or positive. Or do the authors want to test q!=0, k!=0? </p></li>\n<li><p>If q=0 and i=1 in KMP-MATCHER(), from 6 to 10 which line will be executed (If I get answer to 1- above then I can find this)       </p></li>\n</ol>\n', 'ViewCount': '164', 'Title': 'Unable to understand control flow in KMP algorithm', 'LastEditorUserId': '2205', 'LastActivityDate': '2013-10-19T19:35:20.363', 'LastEditDate': '2013-04-24T21:15:41.077', 'AnswerCount': '1', 'CommentCount': '4', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '6466', 'Tags': '<algorithms><terminology><strings>', 'CreationDate': '2013-03-24T11:49:45.607', 'Id': '10738'}{'Body': "<p>There are many NP-complete decision problems that ask the question whether it holds for the optimal value that OPT=m (say bin packing asking whether all items of given sizes can fit into m bins of a given size).\nNow, I am interested in the problem whether OPT>m. Is this a decision problem or an optimization problem? It seems to be that it lies in NP (a NTM can guess a solution and it can be verified in polynomial time that the bound is met). Is it also NP-complete?</p>\n\n<p>I would have said yes, because having a polynomial algorithm, we could find a solution in polynomial time for the original problem (asking whether OPT=m) by using binary search and repeatedly using the polynomial algorithm to test if OPT larger than some bound.</p>\n\n<p>However when I try to construct a proper solution, I always see the complication that the oracle (that asks whether OPT>m') would need to be queried more than once, and this is forbidden in the polynomial time Karp reduction.</p>\n\n<p>Any solutions or remarks?\nWould it make a difference if I ask whether OPT>=m?</p>\n\n<p>Thanks in advance</p>\n", 'ViewCount': '136', 'Title': 'Polynomial time reductions using binary search', 'LastEditorUserId': '98', 'LastActivityDate': '2013-03-26T11:07:26.827', 'LastEditDate': '2013-03-25T15:20:47.793', 'AnswerCount': '2', 'CommentCount': '2', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '7309', 'Tags': '<complexity-theory><terminology><np-complete><optimization><decision-problem>', 'CreationDate': '2013-03-25T14:08:42.207', 'Id': '10774'}{'Body': '<p>I am finding it difficult to clearly differentiate between Multiprogramming and Multitasking.</p>\n\n<p>My primary source has been <a href="http://en.wikipedia.org/wiki/Computer_multitasking" rel="nofollow">Wikipedia</a>, but the WP article seems to be a little at odds with some less reputable sources (like my college professor).</p>\n\n<p>As I read WP, <em>multiprogramming</em> is a rudimentary way of increasing CPU throughput, by context-switching when a process waits for I/O.</p>\n\n<blockquote>\n  <p>Multiprogramming doesn\'t give any guarantee that a program will run in a timely manner. Indeed, the very first program may very well run for hours without needing access to a peripheral. </p>\n</blockquote>\n\n<p><em>Cooperative Time-sharing</em>, synonymous with <em>Cooperative Multitasking</em>, is an improvement on multiprogramming (with which it is not synonymous). The CPU context-switches regularly to give the impression of simultaneous execution, but processes are still required to yield - and poorly designed programs can starve the rest of the system.</p>\n\n<p><em>Preemptive Multitasking</em> takes more aggressive control of scheduling, giving priority to some processes over others, etc.</p>\n\n<ol>\n<li>Is this overview correct? If not is that because WP is incorrect or because I read WP wrong?</li>\n<li>Why do some sources seem to conflate multiprogramming and multitasking? </li>\n</ol>\n', 'ViewCount': '7123', 'Title': 'What is the difference between Multiprogramming and Multitasking', 'LastEditorUserId': '98', 'LastActivityDate': '2014-02-17T20:59:46.423', 'LastEditDate': '2013-03-26T11:56:51.257', 'AnswerCount': '3', 'CommentCount': '6', 'AcceptedAnswerId': '10811', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '7421', 'Tags': '<terminology><process-scheduling>', 'CreationDate': '2013-03-26T11:49:56.370', 'Id': '10801'}{'Body': "<p>What does it mean when we say that a run of Prim's algorithm is <em>trivial</em>? What are example graphs for either case, that is with and without trivial runs?</p>\n", 'ViewCount': '134', 'Title': "Non-trivial runs of Prim's algorithm", 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-19T02:02:34.337', 'LastEditDate': '2013-03-26T13:42:55.697', 'AnswerCount': '1', 'CommentCount': '6', 'AcceptedAnswerId': '10809', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '7269', 'Tags': '<algorithms><terminology><graphs>', 'CreationDate': '2013-03-26T11:52:10.267', 'Id': '10804'}{'Body': "<p>In many papers I've read that it is well known that the Shannon entropy of a random variable can be converted to min-entropy (up to small statistical distance) by taking independent copies of the variable.\nCan anyone explain to me what exactly this means?</p>\n", 'ViewCount': '182', 'Title': 'Shannon Entropy to Min-Entropy', 'LastEditorUserId': '98', 'LastActivityDate': '2013-03-29T02:00:25.320', 'LastEditDate': '2013-03-28T11:59:20.143', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '10881', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '7468', 'Tags': '<terminology><probability-theory><entropy>', 'CreationDate': '2013-03-28T09:38:33.157', 'Id': '10862'}{'Body': '<p>Can someone explain in plain English what "two\'s complement integer" means? I read this: </p>\n\n<blockquote>\n  <p>in Java long is a 64-bit signed two\'s complement integer</p>\n</blockquote>\n', 'ViewCount': '766', 'Title': "What are two's complement integers?", 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-02T08:11:47.357', 'LastEditDate': '2013-04-02T08:11:47.357', 'AnswerCount': '3', 'CommentCount': '1', 'Score': '1', 'OwnerDisplayName': 'Gandalf', 'PostTypeId': '1', 'Tags': '<terminology><integers><encoding-scheme>', 'CreationDate': '2013-04-01T14:45:44.883', 'Id': '10958'}{'Body': '<p>I know every regular language is Turing-acceptable, but does that imply it is Turing-decidable?</p>\n', 'ViewCount': '537', 'Title': 'Is every regular language Turing-decidable, and how can we prove this?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-03T07:10:25.113', 'LastEditDate': '2013-04-03T07:10:25.113', 'AnswerCount': '1', 'CommentCount': '3', 'AcceptedAnswerId': '10973', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '6980', 'Tags': '<terminology><computability><regular-languages><decision-problem>', 'CreationDate': '2013-04-02T13:51:03.390', 'Id': '10971'}{'Body': '<p>If a TM(Turing Machine) accepts NO input string(even the blank), then its language is empty.</p>\n\n<p>If a TM ONLY accepts the blank string(meaning that there is nothing on the tape except for the default blank characters), then its language has only one item and it is the blank string.</p>\n\n<p>Are these definitions correct?</p>\n\n<p>Could you describe the TM for each?</p>\n\n<p>Also, this might be irrelevant but let me ask: I saw somewhere that there must be at least two states for a TM. Which states must be there all the time in a TM?</p>\n', 'ViewCount': '164', 'Title': 'Difference between a TM with an empty language and the one accepting empty string', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-09T15:17:51.617', 'LastEditDate': '2013-04-03T20:54:01.820', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '10998', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '7415', 'Tags': '<terminology><turing-machines>', 'CreationDate': '2013-04-03T17:31:21.707', 'Id': '10996'}{'ViewCount': '29', 'Title': 'Why are optimization problems always NP-hard and not NP-complete and what does this mean for other levels of the polynomial time hierarchy?', 'LastEditDate': '2013-04-03T20:22:50.270', 'AnswerCount': '0', 'Score': '2', 'OwnerDisplayName': 'user2145167', 'PostTypeId': '1', 'OwnerUserId': '7309', 'Body': '<p>I have read that optimization problems cannot be $\\mathcal{NP}$-complete, but are always classified as $\\mathcal{NP}$-hard. When a problem is NP-complete, I know it is contained in $\\mathcal{NP}$P. This implies in particular that it is not hard for the second level of the polynomial time hierarchy, e.g. for $\\Sigma_2^P$ or $\\Pi_2^P$. But since optimization problems are only NP-hard, I have no such knowledge. Or are optimization problems usually also $\\Sigma_2^P$-hard or $\\Pi_2^P$-hard, or just some of them?</p>\n\n<p>Are there any interesting problems from combinatorial optimization that are harder than $\\mathcal{NP}$-hard, e.g. hard for the second level of the polynomial time hierarchy?</p>\n\n<p>I am in particular interested in problems from combinatorial optimization, e.g. BP (bin packing), TSP and CVRP (capacitated vehicle routing problem). They are all classified as $\\mathcal{NP}$-hard, but CVRP is a generalization of both TSP and BP, so it should be harder? Bin packing should be easier, are there any results showing this?\nDoes anyone know, if there are hardness results for any of these problems that imply more difficult than $\\mathcal{NP}$-hard?</p>\n\n<p>I know there are many versions of CVRP and TSP and unfortunately I know not a lot about them.</p>\n', 'ClosedDate': '2013-04-05T08:15:21.540', 'Tags': '<complexity-theory><terminology><optimization><integer-programming>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-03T20:22:50.270', 'CommentCount': '3', 'CreationDate': '2013-03-21T09:30:40.023', 'Id': '11001'}{'Body': '<p>I am asked to construct a PDA to accept the language:</p>\n\n<p>$\\qquad \\{w \\in \\{0, 1\\}^* : \\#_{0}(w) \\ge \\#_{1}(w)\\}$</p>\n\n<p>I am wondering how to interpret the $\\#$ symbols and everything. Could someone please explain what exactly this means and how to construct it?</p>\n', 'ViewCount': '37', 'Title': 'How to interpret this formal language definition?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-04T06:38:34.707', 'LastEditDate': '2013-04-04T06:36:25.633', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '7172', 'Tags': '<formal-languages><terminology>', 'CreationDate': '2013-04-04T01:28:55.580', 'Id': '11005'}{'Body': '<p>When clustering a set of data points, what exactly are the differences between <a href="http://en.wikipedia.org/wiki/Fuzzy_clustering#Fuzzy_c-means_clustering" rel="nofollow">Fuzzy C-Means</a> (aka Soft K-Means) and <a href="http://en.wikipedia.org/wiki/Expectation%E2%80%93maximization_algorithm" rel="nofollow">Expectation Maximization</a>?</p>\n\n<p>In slide 30 and 32 of <a href="http://eniac.cs.qc.cuny.edu/andrew/gcml-11/lecture10c.pptx" rel="nofollow">this lecture</a> I found, it says that Soft K-Means is a special case of EM in Soft K-Means only the means are re-estimated and not the covariance matrix, why\'s that and what are the advantages / disadvantages? How does covariance matrix affect the outcomes of EM?</p>\n\n<p>Another question about these two algorithms: When they converge, all the data points will be hard-assigned to a particular cluster if the probability of it being in the said cluster is highest, right?</p>\n', 'ViewCount': '444', 'Title': 'Differences between Fuzzy C-Means and EM', 'LastEditorUserId': '98', 'LastActivityDate': '2013-08-29T14:41:12.010', 'LastEditDate': '2013-08-29T14:41:12.010', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '14017', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '7329', 'Tags': '<algorithms><terminology><algorithm-analysis><machine-learning><statistics>', 'CreationDate': '2013-04-04T17:14:03.000', 'Id': '11022'}{'Body': "<p>For this term:\n      $\\lambda x.(f (g x))$, what are the free and bound variables?</p>\n\n<p>I'm confused as to how to expand this so it will be easier to see.\nIf I expand this will it be $\\lambda x. \\lambda f. \\lambda g$?</p>\n", 'ViewCount': '72', 'Title': 'Free and bound variables in a lambda-calculus term', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-07T13:11:16.640', 'LastEditDate': '2013-04-07T13:11:16.640', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '0', 'OwnerDisplayName': 'user', 'PostTypeId': '1', 'Tags': '<terminology><lambda-calculus><variable-binding>', 'CreationDate': '2013-04-06T23:41:20.587', 'Id': '11083'}{'Body': "<p>In a depth first tree, there are the edges define the tree (i.e the edges that were used in the traversal).</p>\n\n<p>There are some leftover edges connecting some of the other nodes. What is the difference between a cross edge and a forward edge?</p>\n\n<p>From wikipedia:</p>\n\n<blockquote>\n  <p>Based on this spanning tree, the edges of the original graph can be divided into three classes: forward edges, which point from a node of the tree to one of its descendants, back edges, which point from a node to one of its ancestors, and cross edges, which do neither. Sometimes tree edges, edges which belong to the spanning tree itself, are classified separately from forward edges. If the original graph is undirected then all of its edges are tree edges or back edges.</p>\n</blockquote>\n\n<p>Doesn't an edge that is not used in the traversal that points from one node to another establish a parent-child relationship? </p>\n", 'ViewCount': '1017', 'Title': 'Difference between cross edges and forward edges in a DFT', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-08T14:37:35.677', 'LastEditDate': '2013-04-08T14:37:35.677', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '11125', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '863', 'Tags': '<algorithms><terminology><graphs><graph-traversal>', 'CreationDate': '2013-04-07T22:57:20.517', 'Id': '11116'}{'Body': '<p>I\'m a bit confused about the definition of BPP. The way BPP is defined in typical text books (Arora/Barak for example) is that if M(x) is a Probabilistic Turing Machine (PTM) that recognizes a language $L(x)$, then $Pr[M(x)=L(x)]&gt; 2/3$. My question is, what is the probability taken over? Arora/Barak remark (<a href="http://www.cs.princeton.edu/theory/complexity/bppchap.pdf" rel="nofollow">7.2</a>) that the probability is taken over internal coin tosses of $M(x)$, i.e., fix a value of $x$, and run all possible $2^{T(|x|)}$ experiments of internal coin tosses, and compute the majority of accept state. But if this is true, then Amplification theorem cannot hold because by definition if the probability is computed by executing all $2^{T(|x|)}$ possible coin-flips, then no matter how many times I run the algorithm, the probability is not going to change. (For example, if I have a bag with 2 red balls and 1 blue ball, then no matter how many times I pick a ball from the bag (and return it), the probability of picking a red ball is going to remain 2/3.)</p>\n\n<p>Basically, a PTM is a random process in two variables: The input string $x \\in \\{0,1\\}^*$ and random coin tosses $ r \\in \\{0,1\\}^{T(|x|)}$. For the amplification theorem to hold, I think one needs to fix a value of $r$ and run the machine on all values of $x$, and compute $Pr[M(x) = L(x)]$. Then for a fixed $x$, running $M(x)$ multiple times will have amplification effect, but if the probability is computed over internal coin tosses, then the Amplification theorem cannot hold.</p>\n\n<p>What am I misunderstanding here?</p>\n', 'ViewCount': '94', 'Title': 'Accurate definition of BPP', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-08T14:39:16.167', 'LastEditDate': '2013-04-08T14:39:16.167', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '3', 'OwnerDisplayName': 'MachPortMassenger', 'PostTypeId': '1', 'Tags': '<complexity-theory><terminology><complexity-classes><randomness>', 'CreationDate': '2013-04-07T03:51:38.153', 'FavoriteCount': '1', 'Id': '11119'}{'Body': '<p>When talking about Constraint Satisfaction Problems (CSP), what does the term <code>extensional constraint</code> mean?</p>\n', 'ViewCount': '57', 'Title': 'In a CSP, what is an extensional constraint?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-10T08:40:51.137', 'LastEditDate': '2013-04-10T08:40:51.137', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '7652', 'Tags': '<terminology><constraint-programming>', 'CreationDate': '2013-04-09T01:53:43.180', 'Id': '11150'}{'Body': '<p>I just learned PDAs in class today, but am having problems understanding the syntax of the transition function. Could someone please explain to me the meaning of this syntax:</p>\n\n<p>$\\delta(q, \\lambda, S) = \\{(q, aaB), (q, bbA)\\}$</p>\n\n<p>This is one of the rules for my language.  I am unsure of what the meanings of this syntax exactly is.</p>\n', 'ViewCount': '185', 'Title': 'Syntax of a Pushdown Automata transition function', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-10T08:42:45.443', 'LastEditDate': '2013-04-10T08:42:45.443', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '11172', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '7172', 'Tags': '<terminology><automata><pushdown-automata>', 'CreationDate': '2013-04-09T21:30:06.050', 'Id': '11171'}{'Body': "<p>According to my understanding, a Turing machine that's valid <em>has</em> to have finite steps to finish a certain step. If this is right, what else determines the validity of a turing machine? </p>\n", 'ViewCount': '103', 'Title': 'What determines valid and invalid turing machines?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-10T18:47:11.473', 'LastEditDate': '2013-04-10T08:44:23.170', 'AnswerCount': '1', 'CommentCount': '7', 'AcceptedAnswerId': '11202', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '7600', 'Tags': '<terminology><turing-machines>', 'CreationDate': '2013-04-09T22:46:24.153', 'Id': '11173'}{'Body': '<p>I am a little bit confused by the definition of dominant strategy and winning strategy, what\'s the difference between them.</p>\n\n<p>Following are the definitions taken from wikipedia, below every definition I added some thoughts. If you fell that my thoughts are not correct or ambigues please let me know.</p>\n\n<blockquote>\n  <p><strong>Dominant strategy</strong>.In game theory, dominant strategy (commonly called simply dominance) occurs when one strategy is better than another strategy for one player, no matter how that player\'s opponents may play. Many simple games can be solved using dominance. </p>\n</blockquote>\n\n<p>The first interesting note is that the term <strong>dominant strategy</strong> is applied only to two different strategies, and more precisely it\'s should be defined as "A is dominant strategy over B", actually the notion "dominant strategy" might be relevant to the game itself in this case the dominant strategy A dominates over all other strategies of the player.</p>\n\n<blockquote>\n  <p><strong>Winning strategy</strong>.A strategy is winning if the player following it must necessarily win, no matter what his opponent plays.</p>\n</blockquote>\n\n<p>This notion sounds like stronger notion than dominant strategy, because having winning strategy its guaranteed that the player wins if he follows the strategy no matter what the opponent does, on the other hand dominant strategy does not guaranteed the win, it only says that dominant strategy guarantees the best possible outcome for the player over all possible player\'s strategies and <strong>no matter what the opponent does.</strong></p>\n\n<p>I would to emphasize one common property for the dominant strategy and the winning strategy they both determined by the outcome of the game and <strong>don\'t depend on the strategy of the opponent.</strong> </p>\n\n<p>In my opinion, winning strategy is always a dominant strategy, but vice verse is not always true.</p>\n\n<p>Do you agree with the intuitive understand and thought?</p>\n', 'ViewCount': '98', 'Title': 'Difference between Dominant strategy and Winning Strategy', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-10T13:32:02.270', 'LastEditDate': '2013-04-10T13:32:02.270', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '11190', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '4799', 'Tags': '<terminology><game-theory>', 'CreationDate': '2013-04-10T06:49:54.630', 'Id': '11185'}{'Body': '<p>Is there a formal definition for a size of a context-free grammar? The only definition I have seen so far is on this <a href="http://en.wikipedia.org/wiki/CYK_algorithm#Parsing_non-CNF_context-free_grammars" rel="nofollow">wiki page</a>:</p>\n\n<blockquote>\n  <p>The size of a grammar is the sum of the sizes of its production rules, where the size of a rule is one plus the length of its right-hand side. </p>\n</blockquote>\n\n<p>So, how does one define the size of a production rule\'s RHS? </p>\n\n<p>For example, if I define my CFG as:</p>\n\n<pre><code>S : A\nA : \'a\' B | A\nB : \'b\'\n</code></pre>\n\n<p>What is the size of the production rule A?</p>\n', 'ViewCount': '125', 'Title': 'Size of a context-free grammar', 'LastEditorUserId': '39', 'LastActivityDate': '2013-04-10T20:42:30.067', 'LastEditDate': '2013-04-10T20:42:30.067', 'AnswerCount': '1', 'CommentCount': '10', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '7673', 'Tags': '<terminology><formal-grammars>', 'CreationDate': '2013-04-10T16:49:09.827', 'Id': '11195'}{'ViewCount': '98', 'Title': 'Why the name Recursively Enumerable and Recursive?', 'LastEditDate': '2013-04-10T18:35:14.180', 'AnswerCount': '1', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '947', 'FavoriteCount': '1', 'Body': '<p>Why did the sets of languages accepted/decided by a TM get the name Recursively Enumerable and Recursive, respectively?</p>\n', 'ClosedDate': '2013-12-10T22:13:09.560', 'Tags': '<terminology><computability><turing-machines><history>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-10T20:02:27.980', 'CommentCount': '1', 'CreationDate': '2013-04-10T17:08:52.637', 'Id': '11197'}{'Body': "<p>In one of the text book its mentioned that 'running time of this algorithm is 200 computer years'. Can somebody please explain what is the meaning of a computer year?</p>\n", 'ViewCount': '488', 'Title': 'What is a computer year?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-11T12:51:40.690', 'LastEditDate': '2013-04-11T12:51:40.690', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '6522', 'Tags': '<algorithms><terminology><runtime-analysis>', 'CreationDate': '2013-04-11T10:17:15.833', 'FavoriteCount': '1', 'Id': '11220'}{'Body': '<p>My teacher describes <a href="https://en.wikipedia.org/wiki/TQBF" rel="nofollow">true quantified boolean formula</a> (TQBF) as an interactive game between two players $\\exists$ and $\\forall$, and asks us to show a winning strategy for the existential player $\\exists$. Can someone describe what this game is? I feel like this is background knowledge I am missing.</p>\n', 'ViewCount': '86', 'Title': 'TQBF as interactive game', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-11T13:13:05.990', 'LastEditDate': '2013-04-11T13:03:10.897', 'AnswerCount': '2', 'CommentCount': '1', 'Score': '4', 'OwnerDisplayName': 'user15599', 'PostTypeId': '1', 'Tags': '<terminology><logic>', 'CreationDate': '2013-04-10T15:57:29.263', 'Id': '11225'}{'Body': '<p>I have a homework problem that says:</p>\n\n<p><em><strong>For $g(x,y)=xy-5$ compute $h(x) = \\mu y(g(x,y))$ and determine its domain.</em></strong></p>\n\n<p>I was under the impression that this means the least y such that $g(x,y)=0$, so then $y = \\frac{5}{x}, D=\\{x \\in \\mathbb{N}, x \\neq 0\\}$</p>\n\n<p>So $h(x)=\\frac{5}{x}$?</p>\n', 'ViewCount': '60', 'Title': 'Have I got the right understanding of the mu operator?', 'LastEditorUserId': '683', 'LastActivityDate': '2013-04-16T00:59:05.323', 'LastEditDate': '2013-04-16T00:54:30.127', 'AnswerCount': '1', 'CommentCount': '4', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '6551', 'Tags': '<terminology><computability><mu-calculus>', 'CreationDate': '2013-04-15T15:55:45.027', 'Id': '11337'}{'Body': '<p>Studying parallel algorithms for CLRS, old edition Chapter 30.  Can some one explain with a simple example what is pointer jumping and how exactly it works ?   </p>\n', 'ViewCount': '185', 'Title': 'What is Pointer Jumping ?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-21T14:05:55.223', 'LastEditDate': '2013-04-21T14:05:55.223', 'AnswerCount': '0', 'CommentCount': '2', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '6466', 'Tags': '<algorithms><terminology><parallel-computing>', 'CreationDate': '2013-04-19T10:51:17.793', 'Id': '11407'}{'Body': "<p><strong>Edit:</strong> My original question referred to <em>nonconstructive</em> and <em>constructive</em> definitions of function types.  I changed the terminology in the question and the title to <em>semantic</em> and <em>syntactic</em>, which the answer indicates is the correct terminology for this distinction.</p>\n\n<p>I can recall two ways of defining functions in set theory and programming languages with set-theoretic foundations.  The function type $\\tau \\to \\sigma$ can be defined <em>semantically</em> as the set of all maps from $\\tau$ to $\\sigma \\cup \\{\\bot\\}$, i.e., all objects $f$ such that if $x \\in \\tau$ then $f(x) \\in \\sigma \\cup \\{\\bot\\}$.  Alternatively, the function type $\\tau \\to \\sigma$ can be defined <em>syntactically</em> as the set of all terms in a given language whose type is $\\tau \\to \\sigma$ (possibly modulo some equivalence relationship).  As a programmer, I work with the latter definition, but I often pretend that I'm working with the former definition.</p>\n\n<p>What are the differences between the inhabitants of $\\tau \\to \\sigma$ according to the two definitions above?  For instance, are uncomputable functions included in the first but not the second definition?</p>\n\n<p>To be precise, I'm interested in the situation where terms are strongly typed, functions are side effect free and may be nonterminating, and functions are equal iff, for all inputs, they both diverge or both return the same value.</p>\n", 'ViewCount': '184', 'Title': 'What is the difference between the semantic and syntactic views of function types?', 'LastEditorUserId': '2488', 'LastActivityDate': '2013-04-25T18:44:42.253', 'LastEditDate': '2013-04-25T18:44:42.253', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '11422', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '2488', 'Tags': '<terminology><programming-languages><type-theory>', 'CreationDate': '2013-04-19T18:53:30.153', 'Id': '11413'}{'Body': '<p>Sometimes the terms \'Fourier domain\', \'complex frequency domain\', \'Frequency domain\' and \'s domain\' are used interchangeably. Take <a href="http://answers.yahoo.com/question/index?qid=20090924230321AAxvnJg" rel="nofollow">these answers here</a> for example.</p>\n\n<p>Can you really use them interchangeably all the time, without being technically wrong? So, could you describe what would be wrong if I would replace \'s domain\' by \'fourier domain\' for example? Or replacing \'complex frequency domain\' by \'frequency domain\'?</p>\n', 'ViewCount': '122', 'Title': 'How to distinguish between the different frequency domains?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-23T22:00:06.350', 'LastEditDate': '2013-04-21T15:10:19.783', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '7239', 'Tags': '<terminology><fourier-transform>', 'CreationDate': '2013-04-21T08:14:11.533', 'Id': '11460'}{'Body': '<p>In some books and on the internet I occasionally find "pure binary" and "binary" on its own, is there a difference between these two terms? If so, can someone describe briefly what they are?</p>\n', 'ViewCount': '114', 'Title': 'Is there a difference between pure binary and binary?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-21T16:51:11.620', 'LastEditDate': '2013-04-21T15:53:23.217', 'AnswerCount': '2', 'CommentCount': '2', 'AcceptedAnswerId': '11467', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '7824', 'Tags': '<terminology><encoding-scheme>', 'CreationDate': '2013-04-21T14:09:26.617', 'Id': '11462'}{'Body': "<p>Ok, I have done a lot of research on Quantum computers. I understand that they are possibly the future of computers and may be commonplace in approximately 30-50 years time.</p>\n\n<p>I know that a Binary is either 0 or 1, but a Qubit can be 0 or 1. But what I don't understand is how it can be anything other then 0 or 1. Surely a computer can only understand on and off, despite however fast it may be?</p>\n", 'ViewCount': '294', 'Title': 'The difference between a bit and a Qubit', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-22T14:39:15.300', 'LastEditDate': '2013-04-21T23:12:18.507', 'AnswerCount': '4', 'CommentCount': '1', 'AcceptedAnswerId': '11477', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '7830', 'Tags': '<terminology><quantum-computing>', 'CreationDate': '2013-04-21T17:55:43.693', 'Id': '11471'}{'Body': '<p>Basically, I am looking for a (well-defined) term for some "<em>borderline</em>" vertexes interconnecting other vertices <em>in</em> and <em>outside of</em> a given connected component.</p>\n\n<p>More specifically, given directed graph $G = (V_G, E_G)$ and (strongly) connected component $C = (V_C, E_C)$, how do people refer to such vertices $x$, where,</p>\n\n<ol>\n<li>$x \\in V_C$;</li>\n<li>$\\exists\\ v \\in V_G \\setminus V_C$ such that $(x, v) \\in E_G \\setminus E_C$;</li>\n</ol>\n\n<p>My friends have suggested names such as <em>gateway vertex</em> and <em>border vertex</em>. But I feel obliged to make sure we are not reinventing something well-known / well-defined.</p>\n\n<p>It would be helpful if someone can help identify an equivalent (or likewise) definition of this concept in the literature. Thanks a lot.</p>\n\n<p>EDIT:</p>\n\n<p>Please note that -- unlike the well-defined concept of <em>cut vertex</em> -- the concept of <em>borderline vertex</em> (or whatever it should be called) is with respect to a <em>specific</em> given <strong>component</strong>, <em>not</em> the entire graph.</p>\n', 'ViewCount': '67', 'Title': 'Terminology for vertices in graph connecting vertices "in" and "outside of" a given component', 'LastEditorUserId': '7644', 'LastActivityDate': '2013-04-22T14:51:24.510', 'LastEditDate': '2013-04-22T14:51:24.510', 'AnswerCount': '0', 'CommentCount': '8', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '7644', 'Tags': '<graph-theory><terminology><graphs>', 'CreationDate': '2013-04-22T11:09:18.577', 'Id': '11485'}{'ViewCount': '115', 'Title': 'Is there a name for complement of recursively enumerable set?', 'LastEditDate': '2013-04-27T04:51:56.517', 'AnswerCount': '1', 'Score': '2', 'OwnerDisplayName': 'Juris', 'PostTypeId': '1', 'OwnerUserId': '7911', 'Body': '<p>If there is a recursive function\n$$\nf(x) = \n\\begin{cases}\n1 &amp; \\text{if $x \\notin A$}\\\\\n\\text{undefined} &amp; \\text{if $x \\in A$}\\\\\n\\end{cases}\n$$</p>\n\n<p>Is there a special name for the class of sets like $A$?</p>\n', 'Tags': '<terminology><computability><undecidability>', 'LastEditorUserId': '157', 'LastActivityDate': '2013-04-27T04:51:56.517', 'CommentCount': '3', 'AcceptedAnswerId': '11584', 'CreationDate': '2013-04-25T15:45:02.357', 'Id': '11564'}{'Body': '<p>If $L = L(M)$ then $L$ is a subset of $L(M)$ and $L(M)$ is a subset of $L$.</p>\n\n<p>Can anyone clarify what does this mean?</p>\n', 'ViewCount': '189', 'Title': 'If $L = L(M)$ then $L$ is a subset of $L(M)$ and $L(M)$ is a subset of $L$', 'LastEditorUserId': '7492', 'LastActivityDate': '2013-05-06T23:24:43.730', 'LastEditDate': '2013-05-06T23:24:43.730', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '11644', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '7405', 'Tags': '<terminology><sets>', 'CreationDate': '2013-04-28T21:41:46.610', 'Id': '11643'}{'Body': '<p>I have usually been using the Cormen algorithm format to teach some introductory courses in Programming. I mean something like this:</p>\n\n<pre><code>TreeSearch(k,n)\n1. if x==NIL or k==x.key\n2.     return x\n3. if k&lt;x.key\n4.     return TreeSearch(k.left,n)\n5. else return TreeSearch(k.right,n)\n</code></pre>\n\n<p>Actually I have not agree with a couple of lecturers in my institution that they insist to put the type of the variable that they are using in the algorithm. I mean, to do that, will it not be to make a bias toward the programming language and not to focus on the algorithm? For example what would happen if the student grab other programming language, like R or Python, that really do not care about the type of variable.</p>\n\n<p>The other issue that I have is how to represent OOP algorithms in a nice algorithmic way. For example when I make a constructor should I put something like:</p>\n\n<pre><code>Class: car\nAttributes: wheels\nConstructor car()\n</code></pre>\n\n<p>or something like</p>\n\n<pre><code>Class: car\nFunction car()\n</code></pre>\n\n<p>also when I come to the part of inheritance, one of my colleages put the word super() to define inheritance in an algorithmic way, but again I think that is too Java-way to do this part. Usually they teach in that way because the practical part is made in Java, but again I think that the algorithm should be more freely, directly towards the logic, and not to an specific programming language.</p>\n\n<p>Does anybody knows some standard to represent algorithms for OOP?</p>\n', 'ViewCount': '213', 'Title': 'How to represent OOP concepts in algorithms in a standard way?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-04-29T18:27:24.440', 'LastEditDate': '2013-04-29T18:27:24.440', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '6430', 'Tags': '<algorithms><terminology><education><object-oriented><didactics>', 'CreationDate': '2013-04-29T13:30:18.693', 'Id': '11658'}{'Body': "<p>I'm stuck on this question about context-free languages and was hoping for some clarification.</p>\n\n<blockquote>\n  <p>$\\qquad L = \\{a^i b^j c^k \\mid  i=j, i=k\\}$ </p>\n  \n  <p>is <em>not</em> context-free. Show that its complement <em>is</em> context-free.</p>\n</blockquote>\n\n<p>I understand that the complement basically means everything not in $L$, that is $A^* \\setminus L$. However, I have no  idea how to actually take a complement for a language like  this.</p>\n", 'ViewCount': '1075', 'Title': 'How to take complement of a language?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-05-01T10:54:01.700', 'LastEditDate': '2013-04-30T21:56:57.737', 'AnswerCount': '2', 'CommentCount': '0', 'Score': '0', 'OwnerDisplayName': 'user2063561', 'PostTypeId': '1', 'Tags': '<formal-languages><terminology><context-free>', 'CreationDate': '2013-04-30T07:58:49.617', 'Id': '11672'}{'Body': '<p>I am studying parsing, i.e. bottom-up parsing. it is said that there some rules which are used by weak precedence grammar. What does weak precedence grammar mean? What about precedence relation?</p>\n\n<p>Any help will be appreciated. If it is possible, could you give an example. Thanks</p>\n', 'ViewCount': '59', 'Title': 'Weak Precedence Grammar and Parsing', 'LastActivityDate': '2013-05-29T22:21:32.073', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '11753', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '7957', 'Tags': '<formal-languages><terminology><context-free><parsers>', 'CreationDate': '2013-05-02T11:42:03.387', 'Id': '11730'}{'Body': '<p>Lets say we need a function to add two numbers and another function to multiply two numbers.</p>\n\n<p>To take a trivial example, consider the function $F(a, b, c, d) = a \\cdot (c+d) + b \\cdot (c\\cdot d)$\nIf $a=1$ and $b=0$, then $F$ adds $c$ and $d$.  If $a=0$ and $b=1$, then $F$ multiplies $c$ and $d$.</p>\n\n<p>So to evaluate both add and mult I can have only one function $F$ with variable inputs.</p>\n\n<p>Can we have a general function that can evaluate any arbitrary function ? of course with an upper bound on the complexity ? If yes how do we prove in theory that such a general function is possible ? What is this called in theory ? </p>\n', 'ViewCount': '44', 'Title': 'Can we have a general function of any function this way?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-05-23T22:57:50.783', 'LastEditDate': '2013-05-23T22:57:50.783', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '12230', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '4421', 'Tags': '<algorithms><terminology>', 'CreationDate': '2013-05-07T17:54:12.650', 'Id': '11858'}{'ViewCount': '760', 'Title': "What does 'true concurrency' mean?", 'LastEditDate': '2013-05-12T10:15:57.010', 'AnswerCount': '1', 'Score': '16', 'PostTypeId': '1', 'OwnerUserId': '147', 'FavoriteCount': '2', 'Body': "<p>I often hear phrases like 'true concurrency semantics' and 'true concurrency equivalences' without any references. What does those terms mean and why are they important?</p>\n\n<p>What are some examples of true concurrency equivalences and what is the need for them? E.g. in which cases they are more applicable than more standard equivalences (bisimulation, trace equivalence, etc)?</p>\n", 'Tags': '<terminology><reference-request><concurrency>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-20T09:27:25.823', 'CommentCount': '0', 'AcceptedAnswerId': '11896', 'CreationDate': '2013-05-08T14:07:16.857', 'Id': '11893'}{'Body': u'<p>I\'ve been reading some formal language theory papers, and I\'ve come across a term that I don\'t understand.</p>\n\n<p>The paper will often refer to a set being "effectively closed under intersection" or other operations. What does "effectively" mean here? How does this differ from normal closure?</p>\n\n<p>For reference, the paper I\'m seeing these in is:</p>\n\n<p>M. Daley and I. McQuillan. Formal modelling of viral gene compression. International Journal of Foundations of Computer Science, 16(3):453\u2013469, 2005.</p>\n', 'ViewCount': '125', 'Title': 'What does it mean to say that a language is "effectively closed" under an operation?', 'LastActivityDate': '2013-05-09T20:16:49.303', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '11922', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '2253', 'Tags': '<formal-languages><terminology><computability><automata><closure-properties>', 'CreationDate': '2013-05-09T19:51:28.577', 'Id': '11920'}{'Body': "<p>I have seen a lot of explanations of what Bayesian networks are, but I simply cannot wrap my head around their use in code. So here is my three part question. </p>\n\n<ol>\n<li>Am I right in my definition of bayes nets? Bayesian networks are a way to (visually) portray how variables/events are linked and how they will affect each other. Probabilities can be added to each node to give you a greater sense of what will happen. In conjunction with an acting AI, bayes nets are used to predict the AI's actions and inform what it should be doing, ie giving minimax a better prediction.</li>\n<li>Can you give a pseudo code representation of a bayes net? </li>\n<li><p>Let's get a little more specific. I have a creature simulator, the creature has a home where he sleeps and, there are patches of grass where he eats. There are other creatures out there that he wants to avoid because they will fight him. So his action -> reaction set is: </p>\n\n<p>{hungry->find food -> eat food<br>\ntiered -> go to shelter -> sleep<br>\nin danger -> avoid other creature<br>\nunder attack -> run to shelter}</p>\n\n<p>I am trying to express this as an mdp so that it will learn what actions are best when; and what are the best spots(most prosperous &amp; least dangerous) on the map.\nHow, if at all, am I supposed to use a bayes net? If the situation requires probabilities feel free to add your own, pseudo code also appreciated.</p></li>\n</ol>\n", 'ViewCount': '141', 'Title': 'What is the purpose of Bayesian networks?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-08-26T11:19:18.883', 'LastEditDate': '2013-08-26T11:19:18.883', 'AnswerCount': '1', 'CommentCount': '5', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '8147', 'Tags': '<terminology><machine-learning><artificial-intelligence><probability-theory>', 'CreationDate': '2013-05-13T15:29:28.663', 'Id': '11992'}{'Body': '<p>The wikipedia article about <a href="http://en.wikipedia.org/wiki/Primitive_recursive_function" rel="nofollow">primitive recursion</a> states that </p>\n\n<blockquote>\n  <p>An equivalent definition states that a partial recursive function is one that can be computed by a Turing machine.</p>\n</blockquote>\n\n<p>My question is how one can write down formally this definition?</p>\n', 'ViewCount': '122', 'Title': 'Partial recursive function and Turing machine', 'LastEditorUserId': '98', 'LastActivityDate': '2013-05-16T06:02:08.843', 'LastEditDate': '2013-05-16T06:02:08.843', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '1', 'OwnerDisplayName': 'Montaigne', 'PostTypeId': '1', 'Tags': '<terminology><turing-machines><recursion>', 'CreationDate': '2013-05-15T23:26:36.777', 'Id': '12055'}{'Body': '<p>This question stems from a few answers and comments on a question I posted in signal processing <a href="http://dsp.stackexchange.com/questions/9132/implement-a-software-pid-for-the-first-time-in-real-time-software-i-can-find-p">found here</a>.</p>\n\n<p>I guess I am a little confused. Are there any concrete differences between realtime software/hardware and just a regular PC? </p>\n\n<p>I would try to list what I think the differences are but the list I have come up with is ambiguous and short. </p>\n\n<p>The only thing I think makes sense to separate the two ideas is that PC software can run part of its code part of the time, real-time runs all of its code each time. So a PC can load a program but not all programs and run just that program for however long it pleases, real-time is just a single program with a bunch of if-else, switch logic basically a huge abstract collection of relays (PLC) that gets ran through every time it is called. </p>\n\n<p>Yes I realize this is a pretty poor description, so I ask is there any good concrete ways to separate these ideas? </p>\n', 'ViewCount': '122', 'Title': 'Realtime hardware/software versus PC software/hardware, how are these distinct and alike?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-09-19T11:49:29.343', 'LastEditDate': '2013-05-17T06:52:01.733', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '12073', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '8214', 'Tags': '<terminology><computer-architecture>', 'CreationDate': '2013-05-16T13:24:39.720', 'Id': '12067'}{'Body': '<p>I am trying to (intuitively) understand the two terms "decidability" and "verifiability".</p>\n\n<p>I have done a reasonable amount of searching and going through the various texts I can put my hands on. However, their intuitive understanding seems to escape me, specially for the second one.</p>\n\n<p>Out of the many definitions found, the following one found in <a href="http://kilby.stanford.edu/~rvg/154/handouts/decidability.html" rel="nofollow">this page</a>, clearly explained decidability to me.</p>\n\n<blockquote>\n  <p>A language is called decidable if there exists a method - any method\n  at all - to determine whether a given word belongs to that language or\n  not.</p>\n</blockquote>\n\n<p>However, I fail to find a parallel definition for verifiability.</p>\n\n<p>In the <a href="http://rads.stackoverflow.com/amzn/click/0534950973" rel="nofollow">Theory of Computation book by Sipser</a>, we find,</p>\n\n<blockquote>\n  <p>P = the class of languages for which membership can be <em>decided</em>\n  quickly. </p>\n  \n  <p>NP = the class of languages for which membership can be\n  <em>verified</em> quickly.</p>\n</blockquote>\n\n<p>In light of the above, I want to understand verifiability. </p>\n\n<p>Please provide as many examples as you can, at one moment, I try catch the meaning, in the next one, I get confused again.</p>\n', 'ViewCount': '154', 'Title': 'Please explain "decidability" and "verifiability"', 'LastEditorUserId': '98', 'LastActivityDate': '2013-10-17T18:15:56.733', 'LastEditDate': '2013-05-17T06:41:56.163', 'AnswerCount': '2', 'CommentCount': '2', 'AcceptedAnswerId': '12079', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '7200', 'Tags': '<complexity-theory><formal-languages><terminology><computability>', 'CreationDate': '2013-05-16T13:44:06.820', 'Id': '12068'}{'Body': '<p>Can the set of states Q be empty by definition?</p>\n\n<p>I was wondering about this question when doing exercises in the pumping lemma for finite automaton.</p>\n', 'ViewCount': '92', 'Title': 'DFA: Can the set of States Q be empty by definition?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-05-22T08:01:43.090', 'LastEditDate': '2013-05-22T08:01:43.090', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '12167', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '8272', 'Tags': '<terminology><automata><finite-automata>', 'CreationDate': '2013-05-20T19:52:43.710', 'Id': '12166'}{'Body': '<p>What\'s the difference between a stream and a queue? They both have the concept of an ordered set of elements, but tend to have different implementations and a different vocabulary of \'insert\'/\'extract\' (streams) vs. \'enqueue\'/\'dequeue\' (queue). Are these interchangable? Do they suggest different concepts or patterns? If so, what are the differences?</p>\n\n<hr>\n\n<p>Concrete example of \'stream insertion\':\n<a href="http://www.cplusplus.com/reference/ostream/ostream/operator%3C%3C/" rel="nofollow">http://www.cplusplus.com/reference/ostream/ostream/operator%3C%3C/</a></p>\n\n<hr>\n\n<p>Potentially useful conceptual pieces?</p>\n\n<ul>\n<li>Stream as sequence of time-function data: <a href="http://mitpress.mit.edu/sicp/full-text/sicp/book/node69.html" rel="nofollow">http://mitpress.mit.edu/sicp/full-text/sicp/book/node69.html</a></li>\n<li>Stream as IO channel: <a href="http://en.wikipedia.org/wiki/Standard_streams" rel="nofollow">http://en.wikipedia.org/wiki/Standard_streams</a></li>\n</ul>\n', 'ViewCount': '94', 'Title': "What's the difference between a stream and a queue?", 'LastEditorUserId': '8327', 'LastActivityDate': '2013-05-24T03:09:53.050', 'LastEditDate': '2013-05-23T23:22:08.093', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '12241', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '8327', 'Tags': '<terminology><data-structures>', 'CreationDate': '2013-05-23T22:00:54.237', 'Id': '12237'}{'ViewCount': '142', 'Title': 'Can a Boolean circuit be considered an algorithm?', 'LastEditDate': '2013-05-28T14:50:54.623', 'AnswerCount': '2', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '8367', 'FavoriteCount': '1', 'Body': '<p>Can a Boolean circuit by itself be considered an algorithm (a single step algorithm if you like)? For instance say you have a simple tree circuit with two AND gates as the input gates feeding a single OR gate for a depth two circuit. Now change the AND gates to XOR gates, is it correct to say that I now have a different algorithm for any given input? </p>\n', 'Tags': '<algorithms><terminology><circuits>', 'LastEditorUserId': '472', 'LastActivityDate': '2013-05-28T14:50:54.623', 'CommentCount': '0', 'AcceptedAnswerId': '12298', 'CreationDate': '2013-05-26T13:26:47.687', 'Id': '12294'}{'Body': "<p>It's a school assignment:\nThe problem is:\nWrite a BN grammar for +67.</p>\n\n<p>The given solution I have been given is following:</p>\n\n<pre><code>&lt;digit&gt;  ::= 6 | 7\n&lt;number&gt; ::= &lt;digit&gt; | &lt;digit&gt; &lt;number&gt;\n&lt;+67&gt;    ::= + &lt;number&gt;\n</code></pre>\n\n<p>My question is, when given this simple task, could it be derived like this?</p>\n\n<pre><code>&lt;digit&gt;  ::= 6 | 7\n&lt;number&gt; ::= &lt;digit&gt; &lt;digit&gt; \n&lt;+67&gt;    ::= + &lt;number&gt;\n</code></pre>\n\n<p>More precisely, can I use same non-terminal twice in same rule?</p>\n", 'ViewCount': '52', 'Title': 'Is it legal to use non-terminal twice in Backus-Naur grammar', 'LastEditorUserId': '98', 'LastActivityDate': '2013-06-02T22:57:12.397', 'LastEditDate': '2013-06-02T22:57:12.397', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '12419', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '8479', 'Tags': '<terminology><formal-grammars>', 'CreationDate': '2013-06-01T19:59:00.613', 'Id': '12418'}{'Body': '<p>I have a good understanding of how to program using logic languages, but I\'m currently writing up a paper describing some of my work, and I wanted to ensure that I wasn\'t abusing the proper terminology when describing logic languages. I have a few questions:</p>\n\n<ol>\n<li>What exactly is a predicate? How does a predicate relate to rules/facts? I.e. are rules predicates but not all predicates facts and rules?</li>\n<li>What is a clause, and how does it relate to a predicate?</li>\n<li>When describing how a rule is tested/proven, what is the equivalent term for "calling a function"? Do we say that the rule is called, or that a goal is called?</li>\n<li>What exactly is a goal? Is a goal equivalent to a query?</li>\n</ol>\n\n<p>Like I said, I have a very good understanding of how Prolog works, just not a good knowledge of the right terms to describe the right things.</p>\n', 'ViewCount': '319', 'Title': 'Proper terminology in Prolog/logical programming theory?', 'LastEditorUserId': '2253', 'LastActivityDate': '2013-09-16T14:19:14.387', 'LastEditDate': '2013-06-06T16:06:30.640', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '12601', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '2253', 'Tags': '<terminology><programming-languages><logic-programming><prolog>', 'CreationDate': '2013-06-06T15:58:32.000', 'Id': '12489'}{'Body': "<p>I'm not sure if one can compare the two, mainly because what I've read so far, I didn't quite understand, but what are the key differences between these 2 engines?</p>\n", 'ViewCount': '80', 'Title': 'Difference between Analytical and Difference Engines', 'LastEditorUserId': '98', 'LastActivityDate': '2013-06-10T09:41:29.027', 'LastEditDate': '2013-06-10T09:41:29.027', 'AnswerCount': '0', 'CommentCount': '2', 'Score': '1', 'OwnerDisplayName': 'Eduard Luca', 'PostTypeId': '1', 'Tags': '<terminology><history><machine-models>', 'CreationDate': '2013-05-27T03:18:39.130', 'FavoriteCount': '1', 'Id': '12552'}{'Body': '<p>If not, then what does it mean when for some state $q$ and some symbol $a$, $\\delta(q, a)$ does not exist?</p>\n', 'ViewCount': '667', 'Title': 'In a DFA, does every state have a transition on every symbol of the alphabet?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-06-10T22:42:05.853', 'LastEditDate': '2013-06-10T11:16:39.073', 'AnswerCount': '3', 'CommentCount': '7', 'AcceptedAnswerId': '12596', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '8184', 'Tags': '<terminology><automata><finite-automata>', 'CreationDate': '2013-06-10T05:15:52.510', 'Id': '12587'}{'Body': '<p>Exact cover by 3-sets is $\\sf{NP}$-complete:</p>\n\n<blockquote>\n<b>Instance</b>: Given a finite set $X = \\{ x_1,x_2,...,x_{3n}\\}$ of $3n$ elements and a collection $C = \\{ ( x_{i_1}, x_{i_2}, x_{i_3}) \\}  $ of $m$ 3-elements subsets of $X$;<br>\n<b>Question</b>: Find a subcollection $C\'$ of $C$ such that every element in $X$ is contained in exactly one member of $C\'$.\n</blockquote>\n\n<p>The problem remains NPC even if we add the following condition:</p>\n\n<ul>\n<li>every element of $X$ appears exactly in three subsets of $C$</li>\n</ul>\n\n<p>Has this variant an "official" name?</p>\n', 'ViewCount': '167', 'Title': 'Name of an Exact Cover by 3 sets variant', 'LastActivityDate': '2013-06-11T20:52:34.003', 'AnswerCount': '1', 'CommentCount': '3', 'AcceptedAnswerId': '12629', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '140', 'Tags': '<terminology>', 'CreationDate': '2013-06-10T14:06:26.930', 'Id': '12598'}{'Body': "<p>I don't know whether it was a joke, but once I read what was referred to as a formal definition of a file in a versioning system such as git, hg or svn and that was something like a mathmetaical object like a homeomorphism or so, was that a joke or is there really computer science theory about versioning systems and mathematics of VCS?</p>\n", 'ViewCount': '43', 'Title': 'Is there a formal CS definition of VCS and file versions?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-06-15T15:30:11.253', 'LastEditDate': '2013-06-15T15:30:11.253', 'AnswerCount': '0', 'CommentCount': '3', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '2529', 'Tags': '<terminology><reference-request><discrete-mathematics><filesystems>', 'CreationDate': '2013-06-13T06:36:29.267', 'FavoriteCount': '1', 'Id': '12652'}{'Body': '<p>I am trying to come up with a regular expression for the following language:</p>\n\n<blockquote>\n  <p>The set of all strings with at most one triple of adjacent 0s.</p>\n</blockquote>\n\n<p>What does "triple of adjacent 0s" mean? Does it mean 010101, or something else?</p>\n', 'ViewCount': '98', 'Title': 'A regular expression for strings with at most one triple of adjacent zeroes', 'LastEditorUserId': '98', 'LastActivityDate': '2013-06-15T15:30:52.710', 'LastEditDate': '2013-06-15T15:30:52.710', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '8601', 'Tags': '<formal-languages><terminology><regular-expressions>', 'CreationDate': '2013-06-13T17:52:01.333', 'Id': '12660'}{'Body': '<p>How is a <a href="http://en.wikipedia.org/wiki/Hypergraph" rel="nofollow">hypergraph</a> different from the bipartite graph generated from the hypergraph by introducing new vertices for each hyperedge, and connecting these vertices with the vertices connected by the original hyperedge. Alternatively, I could also start with a bipartite graph, designate one of the sets of vertices as the hyperedges, and connect these hyperedges with the vertices connected to the original vertices.</p>\n\n<p>Is there anything wrong with this construction? Are there theorems about hypergraphs that don\'t have a natural interpretation in terms of the bipartite graph just described?</p>\n\n<hr>\n\n<p>I haven\'t read in detail what <a href="http://cs.stackexchange.com/users/699/vzn">vzn</a> is proposing <a href="http://vzn1.wordpress.com/2012/12/08/outline-for-a-np-vsppoly-proof-based-on-monotone-circuits-hypergraphs-and-factoring/" rel="nofollow">here</a>, but this got me interested in the question whether hypergraphs are really non-trivial generalizations of graphs. I googled for hypergraphs (and Wikipedia indeed also described the construction given above) and searched stackexchange and mathoverflow, but somehow hypergraphs are always treated as a non-trivial generalization of graphs, and somehow considered to be much more complicated than graphs. Don\'t read too much into this question, I have neither done an excessive literature research nor thought too deeply about hypergraphs. (Perhaps I even accidentally searched for multigraph instead of hypergraph, but I don\'t think so.)</p>\n', 'ViewCount': '213', 'Title': 'How is a hypergraph different from a bipartite graph?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-06-21T08:15:47.907', 'LastEditDate': '2013-06-21T06:22:57.673', 'AnswerCount': '2', 'CommentCount': '2', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '1557', 'Tags': '<graph-theory><terminology>', 'CreationDate': '2013-06-19T23:01:36.713', 'FavoriteCount': '1', 'Id': '12769'}{'Body': '<p>Is there a name for the DAG obtained from a directed graph by collapsing together the strongly connected components?</p>\n', 'ViewCount': '44', 'Title': 'Is there a name for this kind of graph?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-06-21T06:24:22.760', 'LastEditDate': '2013-06-21T06:24:22.760', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '12795', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '8785', 'Tags': '<graph-theory><terminology>', 'CreationDate': '2013-06-20T16:26:51.737', 'Id': '12794'}{'ViewCount': '49', 'Title': 'Why/how does the definition of PCP use randomness?', 'LastEditDate': '2013-06-21T06:18:14.120', 'AnswerCount': '1', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '4778', 'FavoriteCount': '1', 'Body': '<p>I am confused by the definition of probabilistic checkable proofs. </p>\n\n<p>Language $L$ has an $(r(n),q(n))$ - PCP verifier, if there is a PPA V satisfying:</p>\n\n<p><strong>Efficiency</strong>: $V$ uses at most $r(n)$ random coins and makes at most $q(n)$ nonadaptive queries to location of $\\pi$.</p>\n\n<p><strong>Completeness</strong>: $x \\in L, \\exists \\pi \\in \\{0,1\\}^*, Pr[V^{\\pi}(x)=1]=1$</p>\n\n<p><strong>Soundness</strong>: $x \\notin L, \\forall \\pi \\in \\{0,1\\}^*, Pr[V^{\\pi}(x)=1]\\leq\\frac{1}{2}$</p>\n\n<p>The main question:</p>\n\n<ul>\n<li>Why does PCP need randomness? </li>\n<li>How exactly are random coins  used in the PCP? </li>\n<li>And what happens when these random coins are actually deterministic?</li>\n<li>Where does the effective proof length bound of $2^{r(n)}q(n)$ come from?</li>\n</ul>\n', 'Tags': '<complexity-theory><terminology>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-06-21T06:41:07.980', 'CommentCount': '2', 'AcceptedAnswerId': '12807', 'CreationDate': '2013-06-21T04:44:20.143', 'Id': '12805'}{'ViewCount': '132', 'Title': 'Why don\'t we emphasize "length of input string" when considering time complexity of sorting algorithms?', 'LastEditDate': '2013-06-26T13:42:50.850', 'AnswerCount': '1', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '8809', 'FavoriteCount': '1', 'Body': "<p>The knapsack problem is $O(c\\,n)$ where $c$ is the capacity of knapsack and $n$ is the number of items. Yet it's exponential because the size of the input is $\\log(c)$.</p>\n\n<p>However, why don't we emphasize length of input in other algorithms? To name one example, what would be the <strong>input size $n$</strong> and <strong>worst case time complexity $T$</strong> of the following input when using insertion sort:</p>\n\n<p><code>111111111,101,11,10,1,0</code></p>\n\n<p>Answer A: $n=6$, $T=O(n^2)$<br>\nAnswer B: n = space(all_digits)+space(delimiters_between_numerics)</p>\n\n<p>If B is correct, what is the time complexity $T$?</p>\n", 'Tags': '<algorithms><terminology><time-complexity><runtime-analysis>', 'LastEditorUserId': '39', 'LastActivityDate': '2013-06-26T13:42:50.850', 'CommentCount': '1', 'AcceptedAnswerId': '12827', 'CreationDate': '2013-06-22T07:43:42.833', 'Id': '12825'}{'ViewCount': '140', 'Title': 'Differences between basic, complex and terminological facts in a Knowledge Base using First-Order Logic', 'LastEditDate': '2013-06-23T16:02:05.360', 'AnswerCount': '1', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '8759', 'FavoriteCount': '1', 'Body': '<p>I\'ve been reading the excellent book <a href="http://books.google.pt/books/about/Knowledge_representation_and_reasoning.html?id=OuPtLaA5QjoC&amp;redir_esc=y" rel="nofollow">Knowledge Representation and Reasoning</a> by Ronald Brachman and Hector Levesque.</p>\n\n<p>In the beginning of Section 3.2 "Vocabulary" of Chapter 3 "Expressing Knowledge" they state:</p>\n\n<blockquote>\n  <p>In creating a KB (Knowledge Base) it is a good idea to start with the set of domain-dependent predicates and functions that provide the basis for the facts about the KB\'s domain.</p>\n</blockquote>\n\n<p>In the same section these facts are separated in three categories:</p>\n\n<ul>\n<li>Basic facts</li>\n<li>Complex facts</li>\n<li>Terminological facts</li>\n</ul>\n\n<p>After reading the entire chapter I could not entirely understand the differences between these types of facts.</p>\n\n<p>Can someone help me to understand the differences in these concepts?</p>\n', 'Tags': '<terminology><logic><knowledge-representation><first-order-logic><reasoning>', 'LastEditorUserId': '8759', 'LastActivityDate': '2013-08-16T06:14:52.863', 'CommentCount': '0', 'AcceptedAnswerId': '13748', 'CreationDate': '2013-06-23T14:57:35.450', 'Id': '12841'}{'Body': '<p>When two threads try to access the same resources at exactly the same time how does the computer decide which one gets the resource, or is it just decided at random?</p>\n', 'ViewCount': '89', 'Title': 'How does a race condition work?', 'LastEditorUserId': '31', 'LastActivityDate': '2013-06-26T16:36:03.890', 'LastEditDate': '2013-06-25T06:15:30.397', 'AnswerCount': '2', 'CommentCount': '0', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '8854', 'Tags': '<terminology><concurrency>', 'CreationDate': '2013-06-25T04:52:31.793', 'Id': '12885'}{'Body': '<p>I\'m currently doing some research on operations on languages, specifically prefix, suffix, infix and outfix.</p>\n\n<p>For example, for a language $L$, the prefix set of $L$ is: </p>\n\n<p>$pref(L) = \\{x \\mid xy \\in L, y \\in \\Sigma^* \\}$</p>\n\n<p>Infix is</p>\n\n<p>$inf(L) = \\{w \\mid xwy \\in L, x,y \\in \\Sigma^* \\}$</p>\n\n<p>and outfix is:</p>\n\n<p>$outf(L) = \\{xy \\mid xwy \\in L, w \\in \\Sigma^* \\}$</p>\n\n<p>I\'m wondering, is there a name for the "class" of operations which contains all of these? I think I might have seen "bitfix" used in a paper somewhere, but it seems to mean something different.</p>\n', 'ViewCount': '258', 'Title': 'Is there a name for the class of operations containing prefix, suffix, etc?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-09-02T14:42:39.707', 'LastEditDate': '2013-09-02T10:15:58.383', 'AnswerCount': '4', 'CommentCount': '5', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '2253', 'Tags': '<formal-languages><terminology>', 'CreationDate': '2013-06-26T21:30:39.757', 'Id': '12921'}{'ViewCount': '328', 'Title': 'Difference between Computing Architecture and Platform in Computer Science', 'LastEditDate': '2013-06-30T18:48:15.417', 'AnswerCount': '2', 'Score': '3', 'OwnerDisplayName': 'Espanta', 'PostTypeId': '1', 'OwnerUserId': '8906', 'FavoriteCount': '1', 'Body': '<p>I was looking for an appropriate term to call my proposal. I knew it is either platform or architecture. But could not simply and clearly distinguish them in an academic manner. So, I searched the web and the literature and found few definitions on architecture and platform as follows that sound logical.</p>\n\n<ul>\n<li>Software Architecture: A set of system elements and relations associated with them [reference: documenting software architecture: views and beyond]</li>\n<li>Platform: A set of subsystems and technologies providing a coherent set of functionalities through interfaces and specified usage pattern that any subsystem that depends on the platform can use without concern of the detail of how the functionality provided by the platform is implemented<a href="http://portals.omg.org/dds/sites/default/files/dds_security_rfp_mars_10-12-37.pdf" rel="nofollow">1</a>.</li>\n</ul>\n\n<p>However, still is it not clear what are the differences. I guess researchers often use these two terms interchangeably with marginal consideration on their differentiations. Looking at the definitions, I figured out that architecture likely specifies structural properties of systems and usually tries to describe the structure of a system and its consisting components and their relationship. Using architecture, developers cannot produce a system that works according to that architecture. However, platform is trying to specify structural and behavioural attribute of a system by describing its subsystems and their relationship. Platform also provides an abstract by which developers can create new software systems that rely upon the platform. </p>\n\n<p>Is this interpretation accurate enough? One may argue that platform is prepared on top of an architecture and without architecture one may not be able to propose platform. </p>\n\n<p>In your idea, what else are the differences and distinguishing lines between these two terms?</p>\n', 'Tags': '<terminology><software-engineering>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-11-24T13:16:28.013', 'CommentCount': '4', 'CreationDate': '2013-06-28T08:08:04.147', 'Id': '12958'}{'Body': "<p>Suppose that we have a directed graph $G = (V, E)$ represented as an adjacency list.  Suppose that we want to list all of the edges incident to some node $v \\in V$.  We can do this by iterating over all the elements in the adjacency list.</p>\n\n<p>My question concerns the runtime of this operation.  Is it proper to say that the runtime is $\\Theta(deg^+(v))$ (since the runtime is a linear function of the outdegree of $v$)?  Or should it be $\\Theta(1 + deg^+(v))$, since even if $deg^+(v)$ is zero, there is some amount of work that's still done?  Or are both of these terminologies incorrect because there is no underlying variable $n$ for which we could apply the formal definition of $\\Theta$?</p>\n\n<p>Thanks!</p>\n", 'ViewCount': '46', 'LastEditorDisplayName': 'user742', 'Title': 'What is the proper runtime for visiting all outgoing edges in an adjacency list?', 'LastActivityDate': '2013-09-20T09:28:16.213', 'LastEditDate': '2013-09-20T09:28:16.213', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '2131', 'Tags': '<terminology><graph-theory><asymptotics>', 'CreationDate': '2013-06-29T00:58:31.787', 'Id': '12959'}{'Body': '<p>The running time of knapsack is $O(n*W)$, but we always specify that this is only pseudo-polynomial. I was wondering if somebody could tell me if I understand the notion of pseudo-polynomial time correctly. </p>\n\n<p>My current understanding is that pseudo polynomial time means polynomial in the magnitude of the input, and polynomial time is polynomial in the number of bits it takes to represent the input. Thus, looking through each element of an array is $O(n)$ in the magnitude of its length (pseudo-polynomial), but it is exponential in the number of bits in the length of the array. In the same way, binary search is $O(log_2 n)$ in the magnitude of the length of $n$, but is linear in the number of bits in $n$ making it "pseudo-logarithmic". </p>\n\n<p>If I am correct, why do we never specify that binary search is linear in the number of bits, but we always specify that knapsack is exponential in the number of bits?</p>\n', 'ViewCount': '596', 'Title': 'Do I understand pseudo polynomial time correctly?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-07-06T13:36:01.240', 'LastEditDate': '2013-07-06T13:36:01.240', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '4', 'OwnerDisplayName': 'Maksim', 'PostTypeId': '1', 'Tags': '<algorithms><complexity-theory><terminology><pseudo-polynomial>', 'CreationDate': '2013-07-05T19:56:54.220', 'Id': '13104'}{'Body': '<p>Anyone knows where I can find information about Time-based Inductive Machine(TIM). Good explanation of the method or the source code of the original implementation could help.</p>\n', 'ViewCount': '26', 'Title': 'Time-based Inductive Machine', 'LastEditorUserId': '98', 'LastActivityDate': '2013-07-07T17:47:28.977', 'LastEditDate': '2013-07-07T17:47:28.977', 'AnswerCount': '0', 'CommentCount': '2', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '9067', 'Tags': '<terminology><reference-request><machine-learning>', 'CreationDate': '2013-07-07T13:47:47.017', 'Id': '13130'}{'Body': '<p>When should I call a definition recursive and when should I call it inductive?</p>\n\n<p>I have read Carl Mummert\'s <a href="http://math.stackexchange.com/a/228870/468">nice answer</a> on MSE. So if I understand correctly we refer to definitions of objects like natural numbers, lists, trees, etc. as inductive whereas we refer to definitions of operations over objects like $+$ or $head$ or $leftchild$ as recursive.</p>\n\n<p>Is this the correct way to distinguish these in programming languages theory?</p>\n\n<p>Are there examples where using either would make sense?</p>\n', 'ViewCount': '187', 'Title': 'Inductive vs. recursive definition', 'LastEditorUserId': '98', 'LastActivityDate': '2013-07-17T13:01:02.477', 'LastEditDate': '2013-07-12T10:59:05.280', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '41', 'Tags': '<terminology><programming-languages><logic><recursion><inductive-datatypes>', 'CreationDate': '2013-07-11T09:02:21.290', 'FavoriteCount': '1', 'Id': '13225'}{'Body': '<p>Assume that we have an operation $f$ such that\n$$\nf([a_0,\\ldots, a_n])= [f(a_0),\\ldots,f(a_n)]\n$$</p>\n\n<p>Do we say that $f$ distributes over lits or do we say it commutes with lists?\nWhich one is the correct way of expressing this property?</p>\n\n<p>How about the following? \nWhat do we say for the relation between $f$ and $\\vec{a} = a_0,\\ldots,a_n$?\n$$\nf(g(\\vec{a})) = g(f(\\vec{a})) = g(f(a_0),\\ldots,f(a_n))\n$$</p>\n', 'ViewCount': '73', 'Title': 'Does a function distribute over lists or does it commute with them?', 'LastEditorUserId': '41', 'LastActivityDate': '2013-07-11T12:42:11.520', 'LastEditDate': '2013-07-11T12:42:11.520', 'AnswerCount': '0', 'CommentCount': '5', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '41', 'Tags': '<terminology><programming-languages><lists>', 'CreationDate': '2013-07-11T09:22:04.607', 'Id': '13226'}{'Body': "<p>When calculating runtime dependence on the input, what calculations are considered? For instance, I think I learned that array indexing as well as assignment statements don't get counted, why is that?</p>\n", 'ViewCount': '86', 'Title': 'What constitutes one unit of time in runtime analysis?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-07-13T22:31:00.860', 'LastEditDate': '2013-07-13T09:43:51.293', 'AnswerCount': '2', 'CommentCount': '0', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '8722', 'Tags': '<terminology><algorithm-analysis><runtime-analysis>', 'CreationDate': '2013-07-13T04:30:59.783', 'Id': '13254'}{'Body': '<p>How can I solve $\\mathcal{O}$-notations without using Java or any other programming language?</p>\n\n<p>I only want to use pen and paper.</p>\n', 'ViewCount': '325', 'ClosedDate': '2013-07-17T09:17:35.527', 'Title': "How to do Big 'O' notations", 'LastEditorUserId': '16189', 'LastActivityDate': '2014-03-27T17:04:35.730', 'LastEditDate': '2014-03-27T17:04:35.730', 'AnswerCount': '2', 'CommentCount': '1', 'Score': '-2', 'PostTypeId': '1', 'OwnerUserId': '9210', 'Tags': '<algorithms><formal-languages><terminology><regular-languages><asymptotics>', 'CreationDate': '2013-07-17T05:51:43.213', 'Id': '13305'}{'Body': "<p>I'm trying to understand algorithm complexity, and a lot of algorithms are classified as polynomial. I couldn't find an exact definition anywhere. I assume it is the complexity that is not exponential. </p>\n\n<p>Do linear/constant/quadratic complexities count as polynomial? An answer in simple English will be appreciated :)</p>\n", 'ViewCount': '226', 'Title': 'What exactly is polynomial time?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-08-07T16:32:18.580', 'LastEditDate': '2013-08-07T07:59:04.743', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '13626', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '9538', 'Tags': '<algorithms><terminology><time-complexity><runtime-analysis><polynomial-time>', 'CreationDate': '2013-08-06T01:28:41.500', 'Id': '13625'}{'Body': u"<p>I am trying to figure out difference between fully- and quasi-reduced BDDs. I have read a lot of material but still it is not very clear. As I am trying to figure out the quasi reduced version for union between two BDDs.\nThe algorithm for union between two fully-reduced BDDs is </p>\n\n<pre><code>bdd Union(bdd p, bdd q) \n   //fully-reduced version\n   local bdd r;\n1  if p=0 or q=1 then return q;\n2  if q=0 or p=1 then return p;\n3  if p=q then return p;\n4  if Cachecontainsentry\u27e8UnionCODE,{p,q}:r\u27e9 then return r;\n5  if p.lvl = q.lvl then\n6    r \u2190 UniqueTableInsert(p.lvl, Union(p[0], q[0]), Union(p[1], q[1]));\n7  else if p.lvl &gt; q.lvl then\n8    r \u2190 UniqueTableInsert(p.lvl, Union(p[0], q), Union(p[1], q));\n9  else since p.lvl &lt; q.lvl then\n10   r \u2190 UniqueTableInsert(q.lvl, Union(p, q[0]), Union(p, q[1]));\n11 enter\u27e8UnionCODE,{p,q}:r\u27e9inCache;\n12 return r;\n</code></pre>\n\n<p>I have read the paper <em>Binary decision diagrams in theory and practice</em> by Rolf Drechsler, Detlef Sieling for basics of BDD, and <em>Data Representation and Efficient Solution: A Decision Diagram Approach</em> by Gianfranco Ciardo for quasi-reduced and fully reduced definitions. Then I read more papers with more or less same description of quasi- and fully-reduced BDDs. In the former paper I mentioned the authors talk about reduced BDDs, I am not clear whether these BDDs are fully reduced. Quasi-reduced BDDs has no variable skipping so how come they are reduced when they have redundant nodes. I am pretty confused between BDD, quasi-reduced BDD and fully-reduced BDD. Yes, I am trying to find the difference between union algorithm for quasi-reduced and fully-reduced, for this I need to look at the quasi-reduced version of union algorithm.</p>\n\n<p>I figured out an algorithm for union of two quasi reduced BDDs <code>p</code> and <code>q</code> resulting in <code>r</code>.</p>\n\n<pre><code>bdd Union(bdd p, bdd q) \n  local bdd r;\n1 if p=0 or q=1 then return q;\n2 if q=0 or p=1 then return p;\n3 if p=q then return p;\n4 if Cachecontainsentry\u27e8UnionCODE,{p,q}:r\u27e9 then return r;\n  //p.lvl = q.lvl in case of quasi reduced BDDs\n5 r \u2190 UniqueTableInsert(p.lvl, Union(p[0], q[0]), Union(p[1], q[1]));\n6 enter\u27e8UnionCODE,{p,q}:r\u27e9 in Cache;\n7 return r;\n</code></pre>\n\n<p>Since there is no variable skipping, <code>p.lvl</code> is always equal to <code>q.lvl</code>. I have a question about this algorithm.</p>\n\n<p>If I want to implement Xor or Xnor for quasi-reduced BDDs, can it be done the same way as union or should I implement the expression <code>pq' + p'q</code> where <code>q' = !q</code>.</p>\n", 'ViewCount': '86', 'Title': 'Difference between fully-reduced BDD and quasi-reduced BDD', 'LastEditorUserId': '98', 'LastActivityDate': '2013-08-13T08:56:46.307', 'LastEditDate': '2013-08-13T08:56:46.307', 'AnswerCount': '0', 'CommentCount': '2', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '9556', 'Tags': '<algorithms><terminology><logic><binary-trees><bdd>', 'CreationDate': '2013-08-06T23:35:14.983', 'Id': '13637'}{'Body': "<p>Suppose I have a decision problem $D$ and I encode it to a language $L \\subset \\{0,1\\}^*$. Now, I can also encode it to a different language $L'$.</p>\n\n<p>Is there any theorem relating the time complexity of $L$ and $L'$?</p>\n\n<p>How does the time complexity of a problem change with different encodings of the same problem?</p>\n", 'ViewCount': '211', 'Title': 'Does the time complexity of a problem change with encoding of the problem?', 'LastEditorUserId': '683', 'LastActivityDate': '2013-08-07T19:01:09.883', 'LastEditDate': '2013-08-07T18:59:31.140', 'AnswerCount': '4', 'CommentCount': '1', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '180', 'Tags': '<complexity-theory><terminology><time-complexity>', 'CreationDate': '2013-08-07T02:49:58.497', 'Id': '13640'}{'Body': '<p>I\'m curious about two things.</p>\n\n<ol>\n<li><p>When we define the class called "probabilistic polynomial-time algorithm" in computer science, does it include polynomial-time algorithm with exponential space? \nFor example, when algorithm is considered to be given a input from domain $\\{0,1\\}^n$, \nwhat if the algorithm internally queries its exponential sized table (ex. $0^n\\to0,0^{n-1}1\\to1$ and so on..) and outputs the result? Does it still polynomial-time algorithm?</p></li>\n<li><p>In theoretical cryptography, one-way function $f:\\{0,1\\}^*\\to\\{0,1\\}^*$ has a requirement, which is related with <em>hard-to-invert</em> property, as following block.\nIf the answer to above question is yes, is it possible to construct algorithm $A\'$ to simulate exactly same as $f$ for every value in $\\{0,1\\}^n$ using exponential table as described in above question? If then, it implies that it\'s impossible to design one-way function which is definitely not true. So what have i missed?</p>\n\n<blockquote>\n  <p>For every probabilistic polynomial-time algorithm $A\'$, every positive polynomial $p(\\cdot)$, and all sufficiently large $n$\'s, </p>\n  \n  <p>$Pr[A\'(f(U_n),1^n)\\in f^{-1}(f(U_n))]&lt;\\frac{1}{p(n)}$</p>\n  \n  <p>where $U_n$ is random variable uniformly distributed over $\\{0,1\\}^n$ </p>\n</blockquote></li>\n</ol>\n', 'ViewCount': '195', 'Title': 'Polynomial-time algorithm with exponential space is eligible?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-08-08T10:42:59.150', 'LastEditDate': '2013-08-08T10:42:59.150', 'AnswerCount': '2', 'CommentCount': '3', 'AcceptedAnswerId': '13668', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '9565', 'Tags': '<complexity-theory><terminology><polynomial-time><one-way-functions>', 'CreationDate': '2013-08-07T10:09:41.700', 'Id': '13655'}{'Body': '<p>I get used to think exhaustive search and combinatorial search are same, but I got confused by reading a paper!</p>\n\n<p>What is the difference between  exhaustive search &amp; combinatorial search ?</p>\n', 'ViewCount': '1059', 'Title': 'What is the difference between exhaustive search & combinatorial search?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-08-08T11:03:06.587', 'LastEditDate': '2013-08-08T10:49:28.617', 'AnswerCount': '3', 'CommentCount': '0', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '9098', 'Tags': '<algorithms><terminology><search-algorithms>', 'CreationDate': '2013-08-07T18:25:43.057', 'Id': '13663'}{'Body': '<p>It seems that on this site, people will often correct others for confusing "algorithms" and "problems." What are the difference between these? How do I know when I should be considering algorithms and considering problems? And how do these relate to the concept of a language in formal language theory?</p>\n', 'ViewCount': '453', 'Title': 'What is the difference between an algorithm, a language and a problem?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-08-15T20:11:23.283', 'LastEditDate': '2013-08-08T10:47:58.127', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '12', 'PostTypeId': '1', 'OwnerUserId': '2253', 'Tags': '<algorithms><complexity-theory><formal-languages><terminology><reference-question>', 'CreationDate': '2013-08-08T06:10:27.963', 'FavoriteCount': '6', 'Id': '13669'}{'Body': "<p>While reading a cryptography textbook, i find the definition of a function that is hard on the average.(More precisely, it is 'hard on the average but easy with auxiliary input', but i omit latter for simplicity.)</p>\n\n<blockquote>\n  <p><strong>Definition : Hard on the average</strong> : </p>\n  \n  <p>$h:\\{0,1\\}^*\\to \\{0,1\\}^* $ is hard on the average if <strong>there exists</strong> a probabilistic polynomial-time algorithm $G$ such that<br>\n  for every probabilistic polynomial-time algorithm $A'$ every positive polynomial $p(\\cdot)$, and all sufficiently large $n$'s,  Pr$[A'(X_n)=h(X_n)]&lt;\\frac{1}{p(n)}$  </p>\n  \n  <p>where $X_n := G(1^n)$ is a random variable assigned the output of $G$.</p>\n</blockquote>\n\n<p>My question is why the statement of the existence of qualified algorithm G is sufficient? </p>\n\n<p>In other words, why the above definition gives a formal definition of 'hardness on the average' instead of following definition, which is more intuitive(?) to understand and more strict.\nWhy is the above definition sufficient? </p>\n\n<p>( Now I'm thinking that problem might occur when $G$ has only polynomial number of possible outputs, but if so, let's replace 'for any $G$' with 'for any $G$ which have exponentially many possible outputs' in following definition.)</p>\n\n<blockquote>\n  <p><strong>(strong?) Def : Hard on the average</strong> : </p>\n  \n  <p>$h:\\{0,1\\}^*\\to \\{0,1\\}^* $ is hard on the average if <strong>for any</strong> probabilistic polynomial-time algorithm $G$ and for every probabilistic polynomial-time algorithm $A'$ every positive polynomial $p(\\cdot)$, and all sufficiently large $n$'s,  Pr$[A'(X_n)=h(X_n)]&lt;\\frac{1}{p(n)}$  </p>\n  \n  <p>where $X_n := G(1^n)$ is a random variable assigned the output of $G$.</p>\n</blockquote>\n\n<p>Another question is that whether a following simpler definition is equivalent to original definition or not?</p>\n\n<blockquote>\n  <p><strong>(simple) Def : Hard on the average</strong> : </p>\n  \n  <p>$h:\\{0,1\\}^*\\to \\{0,1\\}^* $ is hard on the average if for every probabilistic polynomial-time algorithm $A'$ every positive polynomial $p(\\cdot)$, and all sufficiently large $n$'s,  Pr$[A'(U_n)=h(U_n)]&lt;\\frac{1}{p(n)}$  </p>\n  \n  <p>where $U_n$ is a random variable uniformly distributed over $\\{0,1\\}^n$.</p>\n</blockquote>\n", 'ViewCount': '64', 'Title': "Completeness of formal definition of 'hardness on the average'", 'LastEditorUserId': '98', 'LastActivityDate': '2013-08-09T07:02:13.240', 'LastEditDate': '2013-08-09T07:02:13.240', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '13678', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '9565', 'Tags': '<complexity-theory><terminology><cryptography><randomized-algorithms><average-case>', 'CreationDate': '2013-08-08T12:43:21.820', 'Id': '13674'}{'Body': '<p>While reading the paper <a href="http://dl.acm.org/citation.cfm?id=564727" rel="nofollow">Holistic twig joins: optimal XML pattern matching</a> I came across the pseudo code for liststack algorithm. (available through google scholar)</p>\n\n<p>A function in the algorithm confused me, since I can understand what it is supposed to do, but can\'t deconstruct the notation:</p>\n\n<p>$\\qquad \\mathtt{Function}\\ \\mathtt{end}(q\\mathtt) \\\\\n \\qquad\\qquad \\mathtt{return}\\ \\forall q_i \\in \\mathtt{subtreeNodes}(q) : \\mathtt{isLeaf}(q_i) \\implies \\mathtt{eof}(T_{q_i})$</p>\n\n<p>This function is supposed to return a single boolean result. It is supposed to be true when all lists associated to leaf nodes of a query pattern node are at their end. So true means there are no more nodes in the query pattern to process.</p>\n\n<p>But what is the meaning of the set builder(ish?) notation here? Is it </p>\n\n<p>$\\qquad$ "for all subtree nodes of $q$ for which $\\mathtt{isLeaf}(q_i)$ is true $\\mathtt{eof}(T_{q_i})$ is also true"</p>\n\n<p>(which means that the list is at the end position)? </p>\n\n<p>Or is it </p>\n\n<p>$\\qquad$ "for all subtree nodes of $q$, $\\mathtt{isLeaf}(q_i)$ implies $\\mathtt{eof}(T_{q_i})$ is true"? </p>\n\n<p>Is double arrow representing implies with its truth table? </p>\n\n<p>As you can see, I\'m having a bit difficulty in associating the colon and its precedence.</p>\n', 'ViewCount': '208', 'Title': 'What is the meaning of this pseudo-code function?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-08-09T09:36:55.053', 'LastEditDate': '2013-08-09T07:21:37.877', 'AnswerCount': '2', 'CommentCount': '1', 'AcceptedAnswerId': '13684', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '9580', 'Tags': '<algorithms><terminology>', 'CreationDate': '2013-08-08T12:46:15.867', 'Id': '13675'}{'Body': '<p>The proof of the undecidability of $A_{TM}$ in Michael Sipser\'s textbook<code>*</code> contains the definition of a Turing Machine, which accepts the encoding of a TM, if this TM doesn\'t accept its own encoding, and rejects it, if it does. If this TM is run on its own encoding, there is problem: it should accept if it doesn\'t accept and vice versa.</p>\n\n<p>My problem with this proof is that it strongly resembles <a href="http://en.wikipedia.org/wiki/Russell%27s_paradox" rel="nofollow">Russel\'s paradox</a>. This paradox arises if we define a set, which contains all sets that are not members of themselves. If we ask whether this set contains itself, there is problem: it should contain itself if it doesn\'t contain itself and vice versa. </p>\n\n<p>Russels\'s paradox has been eliminated from axiomatic set theory: in <a href="http://en.wikipedia.org/wiki/ZFC" rel="nofollow">ZFC</a>, it follows from the axioms that such a property doesn\'t define a valid set. Interestingly enough, in the theory of computation, a similar property defines a valid TM. </p>\n\n<p>That\'s why I don\'t like the proof in Sipser\'s book. I\'d like to emphasize that I know that this proof is perfectly valid, but I\'d like to know if there is another proof which follows a different chain of thought, and doesn\'t define such a TM.</p>\n\n<hr>\n\n<p><code>*</code>Sipser, M.: Introduction to the Theory of Computation (2nd ed.), 2006, page 179. On this page, Sipser uses the term <em>halting problem</em> for the language $A_{TM}$. The proper name for this language is <em>acceptance problem</em>, see the footnote on page 188.</p>\n', 'ViewCount': '101', 'Title': 'Alternative proof for the undecidability of $A_{TM}$', 'LastEditorUserId': '98', 'LastActivityDate': '2013-08-16T11:23:01.367', 'LastEditDate': '2013-08-16T11:23:01.367', 'AnswerCount': '2', 'CommentCount': '3', 'AcceptedAnswerId': '13770', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '9571', 'Tags': '<terminology><computability><turing-machines><halting-problem>', 'CreationDate': '2013-08-15T21:00:43.357', 'Id': '13766'}{'Body': '<p>Wikipedia <a href="http://en.wikipedia.org/wiki/Pushdown_automaton" rel="nofollow">Pushdown automaton</a> (as of aug 16, 2013) states:</p>\n\n<blockquote>\n  <p>In general, pushdown automata may have several computations on a given input string, some of which may be halting in accepting configurations. If only one computation exists for all accepted strings, the result is a deterministic pushdown automaton (DPDA)</p>\n</blockquote>\n\n<p>My professor gave this as an example that we shouldn\'t trust Wikipedia but rather consult a textbook. Is he right? </p>\n', 'ViewCount': '287', 'Title': 'Definition of deterministic pushdown automaton', 'LastEditorUserId': '98', 'LastActivityDate': '2013-08-17T12:07:54.710', 'LastEditDate': '2013-08-17T12:07:54.710', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '4287', 'Tags': '<terminology><pushdown-automata>', 'CreationDate': '2013-08-16T22:04:47.060', 'Id': '13783'}{'ViewCount': '81', 'Title': 'Document definition in information retrieval', 'LastEditDate': '2013-08-23T10:35:35.517', 'AnswerCount': '1', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '9741', 'FavoriteCount': '1', 'Body': '<p>Is there common formal definition of <strong>Document</strong> in information retrieval field? In many researches authors don\'t define the term <strong>Document</strong>(maybe because it is evident for them). Wikipedia says "text file, document (computer science) a computer file that contains text" but it doesn\'t seem as common formal definition. </p>\n\n<p>Do you know the common formal definition of <strong>Document</strong>, or, if not, do you know any researches where that term was defined? </p>\n', 'Tags': '<terminology><data-mining><information-retrieval>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-08-23T10:35:35.517', 'CommentCount': '4', 'AcceptedAnswerId': '13825', 'CreationDate': '2013-08-19T19:20:52.343', 'Id': '13823'}{'Body': '<p>What is the difference between encoding and modulation?</p>\n\n<p>I have seen these terms used sometimes inter-changeably and sometimes differently (the ratio is 50:50).</p>\n\n<p>Can somebody clearly explain this with some non-technical and technical examples both? I have searched this a lot on net and in the end I end up scratching my head.</p>\n', 'ViewCount': '135', 'Title': 'Difference between encoding and modulation in transmission', 'LastEditorUserId': '98', 'LastActivityDate': '2014-02-07T08:02:58.030', 'LastEditDate': '2014-02-07T08:02:58.030', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '8484', 'Tags': '<terminology><computer-networks>', 'CreationDate': '2013-08-22T08:26:57.430', 'Id': '13862'}{'Body': '<p>I have started reading about Decision Support Systems which according to wikipedia is "a computer-based information system that supports business or organizational decision-making activities".</p>\n\n<p>I have seen papers suggesting intelligent decision support systems, does that means a DSS necessarily utilizes Machine Learning ? How is a DSS different from Machine Learning or vice versa.</p>\n', 'ViewCount': '141', 'Title': 'What is the difference between Decision Support System and Machine Learning?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-11-26T00:52:29.473', 'LastEditDate': '2013-08-26T07:15:13.633', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '2741', 'Tags': '<terminology><machine-learning>', 'CreationDate': '2013-08-22T17:23:38.067', 'FavoriteCount': '1', 'Id': '13871'}{'Body': "<p>What is the term for an algorithm that always requests the same sequence of pages?  I recall seeing this concept before buti haven't been able to find anything on Google without more specific vocabulary. </p>\n\n<p>One algorithm in this category is a linear scan to (say) find the minimum of a set of data. Each page is accessed in order, regardless of the value of previous accesses. </p>\n\n<p>Most algorithms do not fall into this category. For example, a binary search chooses what page to access based on the values in the page before it. </p>\n", 'ViewCount': '34', 'Title': 'static paging vocabulary request', 'LastEditorUserId': '98', 'LastActivityDate': '2013-08-26T07:24:37.880', 'LastEditDate': '2013-08-26T07:24:37.880', 'AnswerCount': '0', 'CommentCount': '3', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '2118', 'Tags': '<algorithms><terminology><memory-access>', 'CreationDate': '2013-08-23T16:04:56.540', 'Id': '13891'}{'Body': '<p>If you have two computers with only one thread, a and b.</p>\n\n<p>And computer a runs twice as fast as computer b.</p>\n\n<p>Does this mean that computer a and can do twice as many operations in a given time in comparison to computer b? </p>\n\n<p>To increase the Hertz of a computer, i.e. the speed of the computer and the number of operations it can achieve with in a given time frame, what has to change in the architecture?</p>\n', 'ViewCount': '111', 'Title': "What does it mean when a computer runs 'faster'?", 'LastEditorUserId': '98', 'LastActivityDate': '2013-08-26T07:27:01.047', 'LastEditDate': '2013-08-26T07:27:01.047', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '13899', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '9799', 'Tags': '<terminology><performance>', 'CreationDate': '2013-08-23T18:14:45.107', 'Id': '13894'}{'Body': '<p>Is there any difference between the two?  As per <a href="http://rads.stackoverflow.com/amzn/click/0321486811" rel="nofollow">Ullman\'s book</a>, compilers  convert one language to another (usually low level) language, and so does an assembler. How are the two different?     </p>\n', 'ViewCount': '945', 'Title': 'Is there any real difference between a compiler and an assembler?', 'LastEditorUserId': '903', 'LastActivityDate': '2013-08-28T18:41:50.163', 'LastEditDate': '2013-08-28T18:41:50.163', 'AnswerCount': '2', 'CommentCount': '1', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '6466', 'Tags': '<terminology><compilers>', 'CreationDate': '2013-08-24T12:43:06.587', 'Id': '13904'}{'Body': '<p>I am reading <a href="http://gnuu.org/2009/09/18/writing-your-own-toy-compiler/3/" rel="nofollow">this</a> article about compiler. I am facing some problem in understanding the content of the token file. Specifically, what is the meaning of the following lines: </p>\n\n<pre><code>    [ \\t\\n]                 ;\n    [a-zA-Z_][a-zA-Z0-9_]*  SAVE_TOKEN; return TIDENTIFIER;\n    [0-9]+\\.[0-9]*          SAVE_TOKEN; return TDOUBLE;\n    [0-9]+                  SAVE_TOKEN; return TINTEGER;\n</code></pre>\n\n<p>What is * and + at the end of the expressions ?</p>\n\n<p>Thanks in advance for explaining me.  </p>\n', 'ViewCount': '66', 'Title': 'Trying to understand a token file for lexical analysis', 'LastEditorUserId': '98', 'LastActivityDate': '2013-08-26T08:24:05.363', 'LastEditDate': '2013-08-26T08:06:35.300', 'AnswerCount': '2', 'CommentCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '6466', 'Tags': '<terminology><formal-grammars><compilers>', 'CreationDate': '2013-08-24T14:25:23.360', 'Id': '13909'}{'Body': "<p>I get that R is a set of languages that are decidable by a Turing Machines</p>\n\n<p>And that RE is a set of languages that a each language can be recognized by a TM, that is the machine will halt when given a word from that language and loop otherwise.</p>\n\n<p>But I can't wrap my head around co-RE.  Is there a good way to describe it? A good example to convey what it really means?</p>\n", 'ViewCount': '269', 'Title': 'Good way to describe co-RE (co-recursively enumerable)?', 'LastEditorUserId': '755', 'LastActivityDate': '2013-08-27T05:33:05.260', 'LastEditDate': '2013-08-26T18:23:13.443', 'AnswerCount': '3', 'CommentCount': '0', 'AcceptedAnswerId': '13950', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '9844', 'Tags': '<terminology><computability>', 'CreationDate': '2013-08-26T17:34:07.933', 'Id': '13947'}{'Body': '<p>Suppose we have two entities $A$ and $B$ and some relationship between them. If there is an $M:N$ relationship between them (i.e. an $M$ on the line connecting $A$ to the relationship and an $N$ connecting the relationship to $B$), how do we read this? Would it be the following: A single instance of $A$ is related to $N$ of $B$ and a single instance of $B$ is related to $M$ of $A$?</p>\n', 'ViewCount': '76', 'Title': 'E-R diagram and relationships', 'LastEditorUserId': '98', 'LastActivityDate': '2013-08-27T10:29:27.910', 'LastEditDate': '2013-08-27T10:24:39.920', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '9849', 'Tags': '<terminology><databases>', 'CreationDate': '2013-08-26T18:49:31.027', 'Id': '13953'}{'Body': '<p>Most specifically, his use of small epsilon introduced at the end of section 1 of "Types, Abstraction and Parametric Polymorphism" is throwing me, but in general I would like references to symbols in the Type and Logical Relations literature.</p>\n', 'ViewCount': '51', 'Title': 'Looking for cheat sheet to J.C. Reynolds symbols', 'LastEditorUserId': '98', 'LastActivityDate': '2013-08-27T10:46:17.957', 'LastEditDate': '2013-08-27T10:46:17.957', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '13957', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '9831', 'Tags': '<terminology><reference-request><type-theory><abstract-data-types>', 'CreationDate': '2013-08-27T03:17:11.390', 'Id': '13954'}{'Body': "<p>In other words, given a graph with nodes $N=\\{n_0,n_1,...,n_j\\}$, and a set of nodes in the graph $M=\\{n_a,n_b,...,n_k\\}$ with $M\\subseteq N$, I'm looking for what to call the node or nodes $n'$ which minimize:</p>\n\n<p>$\\sum_{m\\in M}d_{min}(n',m)$</p>\n\n<p>where $d_{min}(x,y)$ is the shortest distance from node $x$ to node $y$, as traditionally defined.</p>\n\n<p>When $M=N$, this would be the node with the highest closeness centrality, but I'm interested in subgraphs.</p>\n", 'ViewCount': '42', 'LastEditorDisplayName': 'user742', 'Title': 'Is there a word/name for the node(s) in a graph with the minimal cumulative path length to a set of other nodes?', 'LastActivityDate': '2013-09-20T09:26:49.253', 'LastEditDate': '2013-09-20T09:26:49.253', 'AnswerCount': '0', 'CommentCount': '4', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '9876', 'Tags': '<terminology><graph-theory>', 'CreationDate': '2013-08-28T20:48:55.503', 'Id': '14003'}{'Body': '<p>Is there any difference between free variable and global variable? Or they are just  synonyms? In which situations I should use one or another?</p>\n', 'ViewCount': '65', 'Title': 'Difference between free and global variables', 'LastEditorUserId': '39', 'LastActivityDate': '2013-08-30T16:03:39.047', 'LastEditDate': '2013-08-30T16:00:55.257', 'AnswerCount': '2', 'CommentCount': '2', 'AcceptedAnswerId': '14042', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '9487', 'Tags': '<terminology><programming-languages>', 'CreationDate': '2013-08-30T14:55:45.840', 'Id': '14038'}{'Body': '<p>As far as I know idempotent operation is a operation that can be applied many times with the same effect. Also I learnt recently that updating a tuple in a database is also idempotent. I thought that an idempotent operation was like a read-only stateless call (thanks to HTTP world with its famous <code>GET</code> request example). So, is changing data in a file (or database) idempotent? Is appending (extending) data in file/database idempotent? Why?</p>\n', 'ViewCount': '85', 'Title': 'Is changing or appending data an idempotent operation?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-09-02T10:10:44.830', 'LastEditDate': '2013-09-02T10:10:44.830', 'AnswerCount': '2', 'CommentCount': '0', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '9487', 'Tags': '<terminology><programming-languages><functional-programming>', 'CreationDate': '2013-08-30T20:56:45.240', 'Id': '14044'}{'Body': '<p>At my university, a degree is "Computer Science and Engineering" but at US universities I understand that the degrees are different so what is the fundamental difference? Is computer engineering lower level like hardware and operating systems while computer science is more like language technologies?</p>\n', 'ViewCount': '106', 'Title': 'Is CS more like software and CE more like hardware?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-09-05T16:33:56.457', 'LastEditDate': '2013-09-05T14:13:13.500', 'AnswerCount': '2', 'CommentCount': '1', 'AcceptedAnswerId': '14153', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '2529', 'Tags': '<terminology><education>', 'CreationDate': '2013-09-05T08:04:04.297', 'Id': '14142'}{'Body': '<p>What is the difference between approximation schemes and approximation algorithms?<br>\nWhy do we study approximation schemes?</p>\n', 'ViewCount': '121', 'Title': 'Difference between approximation scheme and approximation algorithm?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-09-06T16:07:46.940', 'LastEditDate': '2013-09-06T16:07:46.940', 'AnswerCount': '2', 'CommentCount': '0', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '10000', 'Tags': '<algorithms><terminology><approximation>', 'CreationDate': '2013-09-06T02:45:46.770', 'Id': '14162'}{'Body': "<p>As I understand it when doing a DFS run when every new node is discovered and edge is added to the DFS tree from the parent of the new node to the new node. If that's the case how are back edges are created?</p>\n", 'ViewCount': '613', 'Title': 'Where are back edges in a DFS tree?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-09-09T09:42:57.813', 'LastEditDate': '2013-09-09T09:40:11.037', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '14231', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '9851', 'Tags': '<terminology><graph-theory>', 'CreationDate': '2013-09-07T12:54:22.700', 'Id': '14191'}{'Body': '<p>Does this property have a name?</p>\n\n<blockquote>\n  <p>Given a collection of sets $\\mathcal{P}$, for   all pairs $A, B\\in\\mathcal{P}$, either $A\\cap B=\\emptyset$ or $A\\subseteq B$ or $B\\subseteq A$.</p>\n</blockquote>\n\n<p>This concept could equally apply to monoids, groups, partial orders or other mathematical structures, with some adjustments to the definitions. For instance, for monoids and groups we would replace $A\\cap B=\\emptyset$ by $A\\cap B=\\{\\epsilon\\}$, where $\\epsilon$ is the unit of the monoid/group.</p>\n', 'ViewCount': '110', 'Title': 'Name for concept: each pair of sets is either nested or disjoint', 'LastEditorUserId': '98', 'LastActivityDate': '2013-09-16T07:20:35.550', 'LastEditDate': '2013-09-16T07:20:35.550', 'AnswerCount': '1', 'CommentCount': '3', 'AcceptedAnswerId': '14282', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '31', 'Tags': '<terminology><sets>', 'CreationDate': '2013-09-12T09:09:20.537', 'Id': '14280'}{'Body': "<p>I'm having trouble finding materials on what 'finger search' is, in the context of a red black tree.</p>\n\n<p>Even Wikipedia has a very short page about that, could you refer me or explain what kind of search is that.</p>\n", 'ViewCount': '119', 'Title': 'finger search on a red black tree', 'LastEditorUserId': '98', 'LastActivityDate': '2013-09-16T07:28:09.240', 'LastEditDate': '2013-09-16T07:28:09.240', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '14292', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '9851', 'Tags': '<terminology><data-structures><search-trees>', 'CreationDate': '2013-09-13T17:11:10.787', 'Id': '14291'}{'Body': '<p>I am playing around with MapReduce and wanted to ask why the <code>map</code> function takes two inputs <code>(key, value)</code>? Why not just pass along the value? </p>\n\n<p>Specifically, if you look at the <a href="http://en.wikipedia.org/wiki/MapReduce#Examples" rel="nofollow">word count example on Wikipedia page</a> you will see that the map function is:</p>\n\n<pre><code>function map(String name, String document):\n// name: document name\n// document: document contents\n  for each word w in document:\n    emit (w, 1)\n</code></pre>\n\n<p>However, the function never does anything with the parameter "name". Why even pass it in?</p>\n', 'ViewCount': '71', 'Title': 'Why does the map function in MapReduce take two parameters?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-09-16T07:38:52.103', 'LastEditDate': '2013-09-16T07:31:08.817', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '14350', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '3174', 'Tags': '<terminology><programming-languages><parallel-computing>', 'CreationDate': '2013-09-13T19:41:03.380', 'Id': '14295'}{'ViewCount': '57', 'Title': 'Post-selection and complexity theory', 'LastEditDate': '2013-09-17T08:32:43.633', 'AnswerCount': '1', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '7934', 'Body': "<p>I read about post-selection and didn't understand the meaning behind this thing. I didn't understand the Wikipedia article well, so what is a simple but understandable explanation of post-selection and how to use it in complexity?   </p>\n", 'ClosedDate': '2013-09-30T07:56:33.610', 'Tags': '<complexity-theory><terminology><probability-theory>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-09-17T16:55:42.447', 'CommentCount': '3', 'AcceptedAnswerId': '14371', 'CreationDate': '2013-09-16T20:53:29.813', 'Id': '14364'}{'Body': '<p>I am trying to calculate the runtime complexity of a function that does not have fixed size input, but uses several helper methods that do have fixed size input. I was unsure of how to include the helper methods in my calculations. </p>\n\n<p>If I have an array with a fixed size of 32 indices, and I have a function that sums up the elements in that array, will that function be $O(n)$, or $O(1)$?  I think that a function that sums up the elements of an array is $O(n)$ because each element of an $n$-length array must be visited, but if the function only sums up arrays of length 32, is it still $O(n)$?</p>\n', 'ViewCount': '61', 'Title': 'How to include calls to an $O(n)$ subroutine on finite-sized inputs in an analysis?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-09-18T09:49:49.943', 'LastEditDate': '2013-09-18T09:49:49.943', 'AnswerCount': '2', 'CommentCount': '2', 'AcceptedAnswerId': '14412', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '9102', 'Tags': '<terminology><algorithm-analysis><runtime-analysis>', 'CreationDate': '2013-09-18T08:42:53.543', 'Id': '14408'}{'Body': u'<p>If the running time of an algorithm scales linearly with the size of its input, we say it has $O(N)$ complexity, where we understand <code>N</code> to represent input size.</p>\n\n<p>If the running time does not vary with input size, we say it\'s $O(1)$, which is essentially saying it varies proportionally to 1; i.e., doesn\'t vary at all (because 1 is constant).</p>\n\n<p>Of course, 1 is not the only constant. <em>Any</em> number could have been used there, right? (Incidentally, I think this is related to the common mistake many CS students make, thinking "$O(2N)$" is any different from $O(N)$.)</p>\n\n<p>It seems to me that 1 was a sensible choice. Still, I\'m curious if there is more to the etymology there\u2014why not $O(0)$, for example, or $O(C)$ where $C$ stands for "constant"? Is there a story there, or was it just an arbitrary choice that has never really been questioned?</p>\n', 'ViewCount': '225', 'Title': 'Why is it O(1) (and not, say, O(2))?', 'LastEditorUserId': '9574', 'LastActivityDate': '2013-09-19T17:17:20.410', 'LastEditDate': '2013-09-18T20:36:25.443', 'AnswerCount': '4', 'CommentCount': '4', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '9574', 'Tags': '<terminology><time-complexity><asymptotics><landau-notation><history>', 'CreationDate': '2013-09-18T16:39:15.317', 'FavoriteCount': '2', 'Id': '14416'}{'Body': "<p>From CLRS (3rd edition), I came have this question on page 626:</p>\n\n<p>Given these definitions from the text,</p>\n\n<p>DEFINITIONS:\nGiven an undirected graph G = (V,E),\n<p>1. A CUT (S ,V-S) of G is a partition of V, \n<p>2. A LIGHT EDGE over a cut is any edge crossing the cut with a weight smaller than or equal to any other edge crossing that cut,\n<p>3. A cut RESPECTS a set A of edges if no edge in A crosses the cut.</p>\n\n<p>In every example in the text, the set A is coincident with one of the partitions of the cut but I cannot see why this must be. Given an arbitrary new vertex v', it could be added to the partition that contains A and no edge from v' to A would cross the cut. The definition of respects says that a cut cannot divide A, not that A must define the partition.</p>\n\n<p>There is clearly something here I missed since that does not seem consistent with the theorems. Can anyone point out my error?</p>\n\n<p>+++++++++++++++</p>\n\n<p>Amendment.\nThanks for the help. I also now realize that Theorem 23.1 only says that a light-edge is a safe edge but not that such a cut is guaranteed to find every safe edge since some edges may have both vertices in the same partition as A. I see in GENERIC-MST(G) that line 3 only says to find an edge. It is not until Kruskal or Prim algorithms that the method by which we find this edge is explained and neither depend upon the partition being coincident with the set of vertices defined by the set of edges A.</p>\n\n<p>I find it interesting that in Kleinberg Tardos that they take a different approach and define a cut property (4.17, pg 145) that avoids this (what I find awkward) development of the ideas. </p>\n", 'ViewCount': '94', 'Title': 'Clarification sought for definition of a cut that respects a set A of edges in Graph Theory', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-26T08:18:30.237', 'LastEditDate': '2014-03-26T08:18:30.237', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '10333', 'Tags': '<graph-theory><terminology>', 'CreationDate': '2013-09-25T21:45:14.510', 'Id': '14607'}{'Body': '<p>I am reading a paper and it uses the expression "polynomial delay" which I don\'t understand. It is used in conjonction with the big O notation, which I\'m familiar with. </p>\n\n<p>Here is a exemple sentence showing how it is used:</p>\n\n<pre><code>`The loop is executed in time O(n^2(e+n)), which makes a polunomial delay for the output of the data.`\n</code></pre>\n\n<p>I\'ve try searching a bit but I can only seem to find other paper and no definition.</p>\n\n<p>Thank you</p>\n', 'ViewCount': '84', 'Title': 'Polynomial delay', 'LastActivityDate': '2013-09-26T03:04:06.883', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '14617', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '10340', 'Tags': '<terminology><landau-notation>', 'CreationDate': '2013-09-26T02:11:00.670', 'Id': '14614'}{'Body': '<p>Just like there exists binary and integer Semaphores, does the <strong>Event Counter</strong> play an integer version of a <strong>Barrier</strong>?</p>\n', 'ViewCount': '28', 'Title': 'Is an Event Counter essentially an integer version of Barrier?', 'LastActivityDate': '2013-10-03T11:42:58.350', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '6980', 'Tags': '<terminology><operating-systems>', 'CreationDate': '2013-10-03T11:42:58.350', 'Id': '14780'}{'Body': "<p>Those terminologies confuse me. As I understand </p>\n\n<ul>\n<li>SAT solver: decide the satisfiability of propositional logic (using DPLL or Local Search).</li>\n<li>Decision procedure is a procedure to decide the satisfiability of a certain decidable first-order theory.</li>\n<li>SMT solver is a SAT solver + decision procedure.</li>\n<li>Theorem prover indicates something like Dynamic Logic, e.g. the KeY tool</li>\n<li>Constraint solver: I don't know.</li>\n</ul>\n\n<p>But I see people calling Z3 a theorem prover. So I don't know how to dishtinguish those terms. And what is the most general term for all of them? Thank you.</p>\n", 'ViewCount': '308', 'Title': 'Distinguish Decision Procedure vs SMT solver vs Theorem prover vs Constraint solver', 'LastEditorUserId': '8607', 'LastActivityDate': '2013-10-16T13:03:06.590', 'LastEditDate': '2013-10-16T13:03:06.590', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '9', 'PostTypeId': '1', 'OwnerUserId': '8607', 'Tags': '<algorithms><terminology><reference-request><decision-problem>', 'CreationDate': '2013-10-09T12:25:45.727', 'FavoriteCount': '2', 'Id': '14946'}{'ViewCount': '45', 'Title': 'Can embedded systems be considered a part of IS?', 'LastEditDate': '2013-10-10T21:12:03.367', 'AnswerCount': '0', 'Score': '1', 'OwnerDisplayName': 'Franz Kafka', 'PostTypeId': '1', 'OwnerUserId': '10634', 'Body': '<p>IS (information systems) is a brach in CS studying the use of IT in organisations, also including all kinds of socio-cultural aspects next to the actual view on technology. Embedded systems may not have an organisational context (or very small one), however ideas from the development and structuring (architecture) of information systems would be also very useful in the embedded domain.</p>\n\n<p>Is there an accepted line of argumentation allowing embedded systems to also be placed under the IS hat, even if no organisational context exists?</p>\n\n<p><strong>EDIT:</strong> After reading Jonathan Landrum comment, the question(s) should maybe even be: Is CS a branch of IS? Should CS only be about strictly formalisable aspects of information science? Is IS and informatics a synonym, or is informatics a shell for the more or less disjunct fields of CS and IS?</p>\n\n<p>The term informatics is so seldomly used in English language, but it might just be the solution?</p>\n', 'ClosedDate': '2013-11-01T12:53:36.507', 'Tags': '<terminology>', 'LastEditorUserId': '10634', 'LastActivityDate': '2013-10-10T21:12:03.367', 'CommentCount': '10', 'CreationDate': '2013-10-09T08:44:24.337', 'Id': '14956'}{'Body': "<p>In real word problems, the influence of multiple not perfectly known factors results in using heuristics instead of mathemacial solutions that calculates a perfect value from only precisly defined input data. Consequently, any method that does not supply the mathematical maximum or minimum is not an optimisation but an improvement.</p>\n\n<p>Somehow my opinion on this topic differs from the use of the term <code>optimisation</code> in many papers. Are the people just not precise in their language or is my understanding of the term wrong?</p>\n\n<p><code>Improvement</code> doesn't sound as facy as <code>optimisation</code>, but is there maybe some facy word that allows people to still be precise?</p>\n", 'ViewCount': '40', 'Title': 'Is a non-perfect improvement and optimisation?', 'LastActivityDate': '2013-10-14T13:53:07.487', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '-1', 'PostTypeId': '1', 'OwnerUserId': '10634', 'Tags': '<terminology><optimization><approximation><applied-theory><approximation-algorithms>', 'CreationDate': '2013-10-14T13:28:29.267', 'Id': '16071'}{'Body': '<p>I\'m familiar with a dozen of programming languages which have exceptions in some way, yet I came to witness two "pathological" tendencies.</p>\n\n<ol>\n<li><p>There doesn\'t seem to be a common pattern or hierarchy of exceptions. Every language basically rolls its own version, and if the exceptions make it into the standard, then the kinds of exceptions that one finds in the standard would be rather arbitrary (mostly those which were implemented while creating language tools, such as reading source code from string or an exception to invoke debugger, or the one which happens when the file cannot be found etc.)</p></li>\n<li><p>Exceptions defined by the language are very rarely reused by user programs. There would be usually one or two popular exceptions ("not implement" for example). Though most times programmers will create their own exceptions. (Compare this to, for example, creating new numeric types or new collection types).</p></li>\n</ol>\n\n<p>This looks like a terrible omission to me. How comes no one knows what kinds of errors will be needed in user programs? I was hoping for there to be a kind of nice hierarchy, similar to numeric types, collections, object system etc.</p>\n\n<p>Worse yet, Goolge and Wikipedia provide very little help on the subject. So far I\'ve only found a paper on functional exception which opens in a passage:</p>\n\n<blockquote>\n  <p>This paper argues that lazy functional programming not only makes\n  built-in exception handling mechanism unnecessary, but provides a\n  powerful tool for developing and transforming programs that use\n  exceptions</p>\n</blockquote>\n\n<p><em>(A Functional Theory of Exceptions, Mike Spivey, 1988)</em></p>\n\n<p>But I think that exceptions are good. I don\'t want to transform programs that use exceptions, on the contrary, I want to make the use of exceptions less chaotic.</p>\n\n<h1>The question:</h1>\n\n<p>Is there a theory of exceptions? If so, what is it called? What are, if any, the cornerstone works outlining the basis of it?</p>\n', 'ViewCount': '252', 'Title': 'Is there a theory of exception hierarchies?', 'LastEditorUserId': '39', 'LastActivityDate': '2013-10-16T10:11:49.167', 'LastEditDate': '2013-10-15T22:11:27.430', 'AnswerCount': '3', 'CommentCount': '7', 'Score': '13', 'PostTypeId': '1', 'OwnerUserId': '10314', 'Tags': '<terminology><programming-languages><api-design><exceptions>', 'CreationDate': '2013-10-14T17:28:56.940', 'FavoriteCount': '1', 'Id': '16081'}{'ViewCount': '1299', 'Title': 'What is the definition of Computer Science, and what is the Science within Computer Science?', 'LastEditDate': '2013-10-30T21:27:36.957', 'AnswerCount': '7', 'Score': '28', 'PostTypeId': '1', 'OwnerUserId': '10744', 'FavoriteCount': '8', 'Body': '<p>I am pursuing a BS in Computer Science, but I am at an early point of it, and I am pretty sure I will be happy with my choice given that it seems like an academically and career flexible education to pursue.</p>\n\n<p>Having said that, there seems to be a variety of definitions about what Computer Science really is in respects to academia, the private-sector, and the actual "Science" in "Computer Science" I would love to have answers(Or shared pondering) as to the breadth of things an education in Computer Science can be applied to, and ultimately the variety of paths those within Computer Science have pursued.</p>\n', 'Tags': '<terminology><history>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-10-30T21:27:36.957', 'CommentCount': '1', 'AcceptedAnswerId': '16093', 'CreationDate': '2013-10-15T00:44:35.543', 'Id': '16092'}{'Body': '<p>Everybody says that <a href="https://en.wikipedia.org/wiki/Valuation_%28logic%29" rel="nofollow"><em>Valuation</em> is a <strong>truth value</strong> assignment to <strong>all</strong> variables in the formula.</a></p>\n\n<ol>\n<li><p>How do you call the valuation when some (neither single yet nor all) variables are\nassigned a value? </p></li>\n<li><p><code>Truth value</code> implies that variables are binary. How do you call the multivalued\ncase?</p></li>\n<li><p>I know that Haskel uses the term "<a href="https://en.wikipedia.org/wiki/Partial_application" rel="nofollow">partial application</a>". If "partial application" is supplied with optimization, they call it "<a href="https://en.wikipedia.org/wiki/Partial_evaluation" rel="nofollow">partial evaluation</a>". I am not sure whether boolean valuation falls into the <code>application</code> or <code>evaluation</code> or second category?</p></li>\n</ol>\n\n<p><strong>ps, Dec 2013</strong></p>\n\n<ol>\n<li>Is it right that single variable assignment is called <strong>Restrict</strong> operation? I read <code>Restrict(Function F, variable v, constant k)</code> is defined as "Shannon cofactor of $F$ w.r.t. $v=k$" in <a href="https://embedded.eecs.berkeley.edu/eecsx44/lectures/BinaryDecisionDiagrams.pdf" rel="nofollow">Berkly lectures.</a></li>\n</ol>\n', 'ViewCount': '66', 'Title': 'Multivalued, partial evaluation', 'LastEditorUserId': '2879', 'LastActivityDate': '2014-01-14T21:32:08.180', 'LastEditDate': '2013-12-15T20:40:09.053', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '2879', 'Tags': '<terminology><logic>', 'CreationDate': '2013-10-15T07:35:29.503', 'Id': '16098'}{'Body': "<p>What is the meaning of the double, down facing arrow $\\Downarrow$ in the context of operational semantics? Here's the example formula that uses it:</p>\n\n<p>$$\\frac{s_0 \\vdash M_1 \\Downarrow P_1, s_1 \\; ... \\; s_{n-1} \\vdash M_n \\Downarrow P_n, s_n}{s_0 \\vdash M \\Downarrow P, s_n}$$</p>\n\n<p>It would be also beyond priceless if you could explain in words what do other pictograms of this formula mean. I feel that $\\vdash$ here doesn't mean what it usually means in logic (is provable from). However the general form of this formula is the derivation rule (I can understand it from the context). It is a rather general derivation rule though (it is followed by few other more specific examples which use all the same pictograms).</p>\n\n<p>The source of the formula: On Exceptions versus Continuation in the Presence of State by Hayo Thielecke. It cites several other sources, but I couldn't find the explanation of the symbols used.</p>\n", 'ViewCount': '110', 'Title': 'Double, down facing arrow in operational semantics', 'LastActivityDate': '2013-10-18T18:27:27.837', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '16209', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '10314', 'Tags': '<terminology><semantics><operational-semantics>', 'CreationDate': '2013-10-18T17:06:53.357', 'Id': '16201'}{'Body': "<p>What notation is used to discuss the coefficients of functions in big-O notation?</p>\n\n<p>I have two functions:</p>\n\n<ul>\n<li>$f(x) = 7x^2 + 4x +2$</li>\n<li>$g(x) = 3x^2 + 5x +4$</li>\n</ul>\n\n<p>Obviously, both functions are $O(x^2)$, indeed $\\Theta(x^2)$, but that doesn't allow a comparison further than that.  How do I discuss the the coefficients 7 and 3. Reducing the coefficient to 3 doesn't change the asymptotic complexity but it still makes a significant difference to runtime/memory usage.<br/></p>\n\n<p>Is it <b>wrong</b> to say that $f$ is $O(7x^2)$ and $g$ is $O(3x^2)$ ?\nIs there other notation that does take coefficients into consideration? Or what would be the best way to discuss this?</p>\n", 'ViewCount': '111', 'Title': 'How to discuss coefficients in big-O notation', 'LastEditorUserId': '98', 'LastActivityDate': '2013-10-28T07:34:55.270', 'LastEditDate': '2013-10-28T07:28:08.003', 'AnswerCount': '2', 'CommentCount': '2', 'AcceptedAnswerId': '16347', 'Score': '9', 'OwnerDisplayName': 'El Bee', 'PostTypeId': '1', 'Tags': '<terminology><asymptotics><landau-notation>', 'CreationDate': '2013-10-07T23:11:30.400', 'Id': '16346'}{'Body': '<p>Any CS class about caches will at some point address this classical formula (or a variant of it)</p>\n\n<pre><code>Effective_access_time = hit_time + miss_penalty * miss_rate\n</code></pre>\n\n<p>My question is simple: <strong>does this formula have a "name" ?</strong> (i.e. unambiguous, and ideally, well-accepted too). I found plenty of references to many <em>variants</em> of that concept. I\'d like to know whether there exists one name to denote them all. By the way, the question makes sense : there are plenty of variants of the following sentence... </p>\n\n<blockquote>\n  <p>In any square triangle, the square of the length of the hypotenuse is equal\n  to the sum of the squares of the lengths of the two shorter sides.</p>\n</blockquote>\n\n<p>...but we prefer to refer to them all by the name "Pythagoras\' theorem".</p>\n', 'ViewCount': '98', 'Title': u'Is there a prefered name for the \u201ceffective access time\u201d formula?', 'LastActivityDate': '2013-10-23T16:16:48.327', 'AnswerCount': '0', 'CommentCount': '1', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '6719', 'Tags': '<terminology><computer-architecture><cpu-cache>', 'CreationDate': '2013-10-23T16:16:48.327', 'FavoriteCount': '1', 'Id': '16368'}{'Body': '<p>Is there a name for this infinite language?</p>\n\n<p>$$L = \\{ 0(,1)^*(,2)^*(,3)^*....(,n)^* \\;\\mid n \\geq 1\\}$$</p>\n\n<p>A string $w \\in L$ is simply an ordered list of increasing integers in which every integer  $\\geq 1$ can be repeated 0 or more times, for example "0", "0,1", "0,1,2,2", "0,1,2,3", "0,1,1,4,4,4,21,21".</p>\n\n<p>Or perhaps a name for its unary variant: $L_U = \\{ 1^{x_1}(,1^{x_1})^*,1^{x_2}(,1^{x_2})^*,...,1^{x_n}(,1^{x_n})^* \\mid x_1&lt;x_2&lt;...&lt;x_n\\}$</p>\n', 'ViewCount': '83', 'Title': 'Is there a name for this infinite language?', 'LastEditorUserId': '140', 'LastActivityDate': '2013-10-24T19:18:09.343', 'LastEditDate': '2013-10-24T17:35:16.757', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '16409', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '140', 'Tags': '<terminology>', 'CreationDate': '2013-10-24T17:23:31.957', 'Id': '16406'}{'Body': '<p>What is proper terminology to distinguish between an array (ordered list) data structure in which each element is of identical type/class, and an array in which each element can be different?</p>\n', 'ViewCount': '41', 'Title': 'Term for array of identical type and different types', 'LastActivityDate': '2013-10-30T03:12:22.473', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '16563', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '11059', 'Tags': '<terminology><arrays>', 'CreationDate': '2013-10-30T02:34:31.247', 'Id': '16562'}{'Body': '<p>An <em>independent set</em> is a set of vertices in a graph, no two of which are adjacent.</p>\n\n<p>A maximum independent set is a largest independent set for a given graph G.</p>\n\n<p>Is there a standard term for the size of the largest independent set in a given graph?</p>\n\n<p>If not, what short term can you suggest for this size? Maybe "independence number"? </p>\n', 'ViewCount': '37', 'Title': 'Term for size of maximum independent set', 'LastActivityDate': '2013-10-30T09:04:54.070', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '16571', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '1342', 'Tags': '<graph-theory><terminology>', 'CreationDate': '2013-10-30T07:41:00.953', 'Id': '16569'}{'Body': u'<p>I am learning LR(1) parsing from the Dragon Book. I am really confused with this sentence.</p>\n\n<blockquote>\n  <p>Formally we say that a configuration $[A \\to u\u2022v, a]$ is valid for a viable prefix $\u03b1$ if  there is a rightmost derivation $S \\Rightarrow^* \u03b2Aw \\Rightarrow^* \u03b2uvw$ where $\u03b1 = \u03b2u$ and either $a$ is the first symbol of $w$ or $w$ is $\u2202$ and $a$ is $\\$$. </p>\n</blockquote>\n\n<p>I am not able to figure out how validation of a configuration for a viable prefix is <em>useful</em> . What does it speak <em>intutively</em> and why does it matters?</p>\n', 'ViewCount': '47', 'Title': u'what does \u201cConfiguration is valid for a viable prefix \u201d actually means?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-11-03T15:24:39.277', 'LastEditDate': '2013-11-03T15:24:39.277', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '11151', 'Tags': '<terminology><compilers><parsers><parsing>', 'CreationDate': '2013-11-03T14:55:18.830', 'FavoriteCount': '1', 'Id': '16673'}{'ViewCount': '454', 'Title': 'Corresponding noun for "side-effect-free"?', 'LastEditDate': '2013-11-06T06:37:06.640', 'AnswerCount': '9', 'Score': '9', 'PostTypeId': '1', 'OwnerUserId': '11198', 'FavoriteCount': '0', 'Body': '<p>For functions or computations we have terms like:</p>\n\n<ul>\n<li>Deterministic &ndash; Determinism</li>\n<li>Pure &ndash; Purity</li>\n</ul>\n\n<p>Now what is the correct corresponding noun for <strong>side-effect-free</strong>?</p>\n\n<p>"Side-effect freeness"? "Side-effect freedom"? <strike>"Non-side-effective"?</strike></p>\n', 'Tags': '<terminology><programming-languages>', 'LastEditorUserId': '11198', 'LastActivityDate': '2013-11-07T01:19:42.640', 'CommentCount': '10', 'AcceptedAnswerId': '16733', 'CreationDate': '2013-11-05T10:35:12.977', 'Id': '16730'}{'ViewCount': '114', 'Title': 'Why does TSP require no repetition of cities?', 'LastEditDate': '2013-11-09T20:35:56.287', 'AnswerCount': '2', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '8913', 'FavoriteCount': '1', 'Body': '<p>It seems odd to me that the TSP denies the possibility of repeated cities.  The goal of this traveling salesman is to go as fast as possible and visit all of the cities, right?  So what if it is faster to travel through a city you have already been to?</p>\n', 'Tags': '<terminology><traveling-salesman>', 'LastEditorUserId': '98', 'LastActivityDate': '2013-11-09T21:38:56.643', 'CommentCount': '2', 'AcceptedAnswerId': '17856', 'CreationDate': '2013-11-09T19:37:55.033', 'Id': '17854'}{'Body': "<p>I'm struggling to understand this question:</p>\n\n<blockquote>\n  <p>Give an encoding of the Turing machine with lowest index that accepts anything but the empty set.</p>\n</blockquote>\n\n<p>I know what an encoding of a Turing Machine is. But my professor didn't explain what the index of a Turing machine is and how I know that it is lower or higher? Can someone explain what lowest index is and how would I go about this problem?</p>\n", 'ViewCount': '55', 'Title': 'How to I get a TM with lowest index?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-11-12T13:41:37.467', 'LastEditDate': '2013-11-10T10:19:33.097', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '17863', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '10511', 'Tags': '<terminology><turing-machines>', 'CreationDate': '2013-11-10T02:03:49.400', 'Id': '17862'}{'ViewCount': '387', 'Title': 'What is "dynamic" about dynamic programming?', 'LastEditDate': '2013-11-10T17:42:04.283', 'AnswerCount': '3', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '11175', 'FavoriteCount': '1', 'Body': '<p>One of my seniors had a job interview and he was asked why it is called dynamic. He couldn\'t answer and after he gave up the interviewer said that there\'s nothing dynamic about it, its just called like that. That is hard for me to believe.</p>\n\n<p>Does it refer to the fact that the subproblems are solved during run-time and used in reaching the final goal? Like dynamic memory allocation that happens during run-time?</p>\n\n<p><strong>[ANSWER]</strong></p>\n\n<p>I should have read <strong><a href="http://en.wikipedia.org/wiki/Dynamic_programming#History" rel="nofollow">this</a></strong> wiki article before asking the question, sorry.</p>\n', 'Tags': '<terminology><dynamic-programming>', 'LastEditorUserId': '11175', 'LastActivityDate': '2013-11-10T17:42:04.283', 'CommentCount': '2', 'AcceptedAnswerId': '17872', 'CreationDate': '2013-11-10T07:29:30.567', 'Id': '17871'}{'Body': '<p>I need some help understanding the problem statement in CLRS 11.3-4 pg 269.  It says:</p>\n\n<blockquote>\n  <p>Consider a hash table of size $m = 1000$ and a corresponding hash function \n   $ h(k) =\\left \\lfloor m(kA \\bmod 1) \\right \\rfloor $\n  for $A = (\\sqrt5 - 1)/2$. Compute the locations to which the keys\n  61, 62, 63, 64, and 65 are mapped.</p>\n</blockquote>\n\n<p>Is $\\mod 1$ a misprint in my copy? Also $A$ is a real number.  Is modulus defined for non-integer numbers?</p>\n', 'ViewCount': '122', 'Title': 'How does taking modulo 1 make sense?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-11-20T14:54:20.567', 'LastEditDate': '2013-11-18T21:36:32.413', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '18201', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '4251', 'Tags': '<algorithms><terminology><hash>', 'CreationDate': '2013-11-18T21:11:51.583', 'Id': '18130'}{'Body': '<p>Does the term <em>schema</em>, in the context of describing a structure, refer to the actual structure of the data, or the <em>description</em> of this structure? I.e. can I talk about the schema of an entity without a <em>schema language</em>?</p>\n\n<p>For example, suppose I am writing documentation for some JSON API, that always returns a particular structure, say:</p>\n\n<pre><code>{ \n   "name" : "jeroen",\n   "age" :  28\n}\n</code></pre>\n\n<p>Can I say that the <em>schema</em> for the payload returned by this API includes required values for "name" and "age"? Or does the term exclusively refer to another document that formally describes this structure using a schema language of some sort? In that case, what is another appropriate term to refer to the recurring pattern in the structure?</p>\n\n<p>The Github API, has a section titled schema: <a href="http://developer.github.com/v3/#schema" rel="nofollow">http://developer.github.com/v3/#schema</a>. However, the word schema is not mentioned in the text itself, nor do they use any schema language. This would suggest that schema is just a general term for the structure/attributes of the output. Unless they consider english as a schema language, in which case the entire page is a schema. Hmmm.</p>\n', 'ViewCount': '77', 'Title': 'Precise definition of term: *schema*', 'LastEditorUserId': '11059', 'LastActivityDate': '2013-11-22T20:33:50.670', 'LastEditDate': '2013-11-22T19:56:19.423', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '18263', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '11059', 'Tags': '<terminology><encoding-scheme>', 'CreationDate': '2013-11-20T01:22:42.130', 'Id': '18181'}{'Body': '<p>I came to know that the graphic processing unit have something called memory coalescing. On reading on it I was not clear on the topic. Is this any way related to Memory Level Parallelism.</p>\n\n<p>I have searched in Google but was not able to obtain a satisfactory answer. </p>\n\n<p>It would be helpful if someone gives a more comprehensive, easy-to-understand explanation.</p>\n', 'ViewCount': '216', 'Title': 'What is "memory coalescing"?', 'LastEditorUserId': '11539', 'LastActivityDate': '2013-11-22T06:01:41.810', 'LastEditDate': '2013-11-22T06:01:41.810', 'AnswerCount': '2', 'CommentCount': '1', 'AcceptedAnswerId': '18243', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '11539', 'Tags': '<terminology><reference-request><computer-architecture><memory-management>', 'CreationDate': '2013-11-21T17:58:55.743', 'Id': '18229'}{'Body': '<p>Is it common to try to improve an algorithm by decomposing its action on a topological piece of data (e.g. graphs, geometric data) into a series of steps, each of which only makes a local change/perturbation in a confined neighborhood of the data while fixing the rest?</p>\n\n<p>One benefit of this "breakdown" is improved conceptual understanding, and it also facilitates induction proofs (possibly based on invariants that are preserved by each step). Does this "decomposition" have a name in algorithm design? The idea might be similar to Divide and Conquer.</p>\n\n<p>One might say that every individual step in an algorithm, like deleting an edge or labeling a vertex of a graph, is small enough to be considered "local", but I\'m talking more about the "decomposition" in a higher-level description, like how truncating a polyhedron is local but sorting a list is not (even though at the lowest level, comparisons, insertions and deletions are local).</p>\n\n<p><strong>Examples of decomposing into local transformations</strong></p>\n\n<ul>\n<li><p>Augustin Cauchy\'s proof of his <a href="http://en.wikipedia.org/wiki/Cauchy%27s_theorem_%28geometry%29" rel="nofollow">Rigidity Theorem</a> relied on his "<a href="http://www.cs.mcgill.ca/~cs507/projects/1998/sfreel/cauchylemma.html" rel="nofollow">Arm Lemma</a>" that opened up a convex planar chain by sequentially opening at each vertex. Although his proof was found to be wrong, he decomposed the opening algorithm into a series of "local opening moves", and he tried to prove that each local move preserved convexity of the chain. By induction, convexity would still hold after iterating over all vertices.</p></li>\n<li><p>The <em>pivot algorithm</em> for <a href="http://en.wikipedia.org/wiki/Self-avoiding_walk" rel="nofollow">self-avoiding walks</a> (SAW) transforms a SAW into another by rotating or reflecting part of the original SAW. <a href="http://en.wikipedia.org/wiki/Markov_chain_Monte_Carlo" rel="nofollow">Markov Chain Monte Carlo</a> can employ this transformation as a transition between SAW states to sample the space of SAWs.</p></li>\n<li><p>As an application of the above, one technique of <a href="http://en.wikipedia.org/wiki/Protein_folding#Computational_methods_for_studying_protein_folding" rel="nofollow">protein folding prediction</a> is to force an amino acid chain into several known protein structures, choose the one with the lowest energy (due to intermolecular forces), then let the chosen structure "relax" into a configuation with lower energy. Relaxation involves the prescription of a few "local moves", where small parts of the chain can "wriggle around" (e.g. subchains pivoting around their ends), and random wriggles are allowed for a period of time to let the chain "stabilize". Modelling the chain as an SAW allows pivots to be used as a "wriggle".</p></li>\n</ul>\n', 'ViewCount': '171', 'Title': 'Decomposing an Algorithm into Local Transformations/Perturbations', 'LastEditorUserId': '98', 'LastActivityDate': '2013-12-13T22:04:18.290', 'LastEditDate': '2013-12-13T13:27:28.013', 'AnswerCount': '2', 'CommentCount': '7', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '11678', 'Tags': '<algorithms><terminology><reference-request><algorithm-design>', 'CreationDate': '2013-11-28T08:34:39.540', 'Id': '18438'}{'Body': '<p>All the article I can find seems to talk about multitasking and context switch as its a two different thing. It seems that multitasking and context switch are the same thing.</p>\n', 'ViewCount': '68', 'Title': 'Is it possible to do multitasking without context switch with just one cpu?', 'LastEditorUserId': '98', 'LastActivityDate': '2013-12-03T08:41:44.767', 'LastEditDate': '2013-12-03T08:41:44.767', 'AnswerCount': '1', 'CommentCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '11764', 'Tags': '<terminology><computer-architecture><operating-systems><concurrency>', 'CreationDate': '2013-12-02T19:44:56.067', 'Id': '18546'}{'Body': '<p>Given the following:</p>\n\n<p>$$\\{ w\\#x \\mid w^R \\text{ is a substring of $x$, with $x$ and $w \\in \\Sigma^*$} \\}$$</p>\n\n<p>What does $w\\#x$ denote?</p>\n', 'ViewCount': '115', 'Title': 'What does the symbol # mean when it comes to languages', 'LastEditorUserId': '9612', 'LastActivityDate': '2013-12-07T10:37:19.277', 'LastEditDate': '2013-12-07T10:37:19.277', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '18631', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '11616', 'Tags': '<formal-languages><terminology><context-free><automata>', 'CreationDate': '2013-12-05T06:38:57.007', 'Id': '18630'}{'Body': '<p>I can say that $x * y$ is a problem, but also I can say that $x * y$ is an algorithm for finding the area of rectangle.</p>\n\n<p>I been reading Wikipedia about an <a href="http://en.wikipedia.org/wiki/Algorithm">algorithm</a> and a <a href="http://en.wikipedia.org/wiki/Computational_problem">problem</a>, but I am not sure about their definitions. Could you please explain it to me in more detail?</p>\n', 'ViewCount': '219', 'Title': 'What is the difference between a problem and an algorithm?', 'LastEditorUserId': '472', 'LastActivityDate': '2013-12-07T14:08:16.373', 'LastEditDate': '2013-12-07T13:13:20.887', 'AnswerCount': '3', 'CommentCount': '1', 'AcceptedAnswerId': '18718', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '10572', 'Tags': '<algorithms><terminology>', 'CreationDate': '2013-12-07T13:03:18.480', 'Id': '18717'}{'Body': '<p>I was a little confused between these three terms Multitasking, Multithreading and Multiprogramming</p>\n\n<p>Although every one means executing different lines of codes, and for every one we need something like Task State Segment or context to store data for that particular thread/task. </p>\n\n<p>I am missing something, can anyone give me the basic difference between them and how they are actually executed in a processor</p>\n\n<p><strong>Edit:</strong> Actually I was a guy from Electronics background and I was poor at OS related issues. The main thing I understood between multiprogramming and multithreading is that in multiprogramming we execute two separate programs where as in multithreading the scheduler produces two different threads which can be executed independently. I think these are a form of multitasking implementation. Am I correct. I was really confused</p>\n', 'ViewCount': '787', 'Title': 'Difference between multitasking, multithreading and multiprogramming', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-07T13:02:37.500', 'LastEditDate': '2014-01-07T13:02:37.500', 'AnswerCount': '2', 'CommentCount': '1', 'AcceptedAnswerId': '18739', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '11539', 'Tags': '<terminology><operating-systems><concurrency>', 'CreationDate': '2013-12-08T03:22:35.070', 'Id': '18728'}{'ViewCount': '75', 'Title': 'Is radix sort a greedy algorithm?', 'LastEditDate': '2014-01-19T02:27:32.353', 'AnswerCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '8870', 'FavoriteCount': '1', 'Body': '<p>I was thinking of radix sort, and at a sudden thought that it uses de facto the paradigm  of dynamic programming, but I soon changed my mind to greedy algorithm. Is it really a greedy algorithm? </p>\n', 'Tags': '<algorithms><terminology><sorting>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-19T02:27:32.353', 'CommentCount': '3', 'AcceptedAnswerId': '18895', 'CreationDate': '2013-12-11T19:37:58.497', 'Id': '18889'}{'Body': '<p>Functional programming has the very elegant Lambda Calculus and its variants as a backup theory. Is there such a thing for OOP? What is an abstraction for the object oriented model?</p>\n', 'ViewCount': '142', 'Title': 'Is there a theory/abstraction behind OOP?', 'LastEditorUserId': '31', 'LastActivityDate': '2013-12-15T15:43:22.080', 'LastEditDate': '2013-12-15T15:43:22.080', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '11547', 'Tags': '<terminology><lambda-calculus><functional-programming><object-oriented>', 'CreationDate': '2013-12-13T20:43:26.677', 'Id': '18963'}{'Body': '<p>I thinkt this question fits better here than on english.stackexchange.</p>\n\n<p>When describing a figure in a computer science paper, is it safe to use "tick" meaning "tick mark"?</p>\n\n<p>Examples:<br>\n<code>... (see the thick line right of tick "17")</code>  meaning <code>tick mark "17"</code><br>\nor <code>... increase at tick "1e+02"</code> <code>... increase at tick mark "1e+02"</code>.</p>\n', 'ViewCount': '187', 'Title': 'When describing a CS paper, can it be assumed that the meaning of "tick" is known?', 'LastEditorUserId': '39', 'LastActivityDate': '2013-12-17T21:34:45.037', 'LastEditDate': '2013-12-17T21:34:45.037', 'AnswerCount': '2', 'CommentCount': '4', 'AcceptedAnswerId': '19062', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '1829', 'Tags': '<terminology>', 'CreationDate': '2013-12-17T10:51:10.350', 'Id': '19061'}{'Body': '<p>I\'m both asking for me &amp; future readers as to how pictures, sounds, textures, assets, and such are compiled and linked in to one binary/program, and how that process works.</p>\n\n<p>I have seen this in standalone programs I have downloaded on Windows, and I\'m fairly certain any OS can implement this. It appears that, instead of keeping the data stored separately as individual files within the filesystem, all data is converged in to one file. When you run the program, it\'s as if the data could have just, instead of requiring multiple scattered files through the drive, directories, subdirectories, etc., been bound to one program with everything in it; no need for fragmentation, missing files, etc.</p>\n\n<p>So, to sum this question up, let me first illustrate some key points:</p>\n\n<p>I had originally thought that, <strong><em>since all files on the computer are basically high-and-low voltage sources at the lowest level</em></strong>, files can be converged together, being similar to <a href="http://en.wikipedia.org/wiki/Archive_file" rel="nofollow">"zipping/unzipping files."</a> Using this common ground, it\'s easy to see how the data of a file, <strong><em>any file</em></strong>, could be bound/binded together with other data, and act, from the scope of the filesystem and GUI, as "just a file." But many things are actually in it that don\'t have to only represent just a typical idea of a "program" with some people\'s view of it as only instructions like adding, moving data around, etc.</p>\n\n<p>I am not sure of this, but I have a good sense that it\'s similar, so this why I\'m asking for clarification.</p>\n\n<p>When you see a standalone program from one file that contains external assets when you run it (texture files, video data format, image data, sounds, other resources, etc.),  it\'s clear that the single executable file has all the data necessary "packed" in to one somehow, or the such.</p>\n\n<p>How does the compiler/linker do this, how would the program/library/etc. access the data converged in it as opposed to differing from separate "files" independently, and how are compiler\'s/linker\'s settings adjusted to do this in any general sense?</p>\n\n<p>NOTE: Programmers, StackOverflow, Superuser, and few others deny this question, and give no reason why, so I figured this area might see it fit.</p>\n', 'ViewCount': '52', 'Title': 'How are image files, sounds, data, etc. compiled/linked in to a single file?', 'LastEditorUserId': '268', 'LastActivityDate': '2013-12-27T00:44:21.287', 'LastEditDate': '2013-12-27T00:17:49.613', 'AnswerCount': '3', 'CommentCount': '0', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '12391', 'Tags': '<terminology><data-structures><compilers>', 'CreationDate': '2013-12-26T21:57:39.090', 'Id': '19313'}{'Body': '<p>In the theory of NP-completeness, researchers refer to the concept of combinatorial  explosion. Some researchers use it as justification for intractability or NP-completeness. Others use it to refer to the exponential growth of possible solutions of an intractable problem while others use to refer to the apparent exponential time required to solve NP-complete problems. I am interested in formal connection to combinatorics.</p>\n\n<blockquote>\n  <p>Is there combinatorial basis that captures and explains the phenomena of combinatorial explosion?</p>\n</blockquote>\n', 'ViewCount': '295', 'Title': 'What is combinatorial explosion?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-03T06:40:58.943', 'LastEditDate': '2014-01-03T06:40:58.943', 'AnswerCount': '2', 'CommentCount': '5', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '96', 'Tags': '<complexity-theory><terminology><combinatorics>', 'CreationDate': '2014-01-02T17:49:02.183', 'FavoriteCount': '2', 'Id': '19459'}{'Body': u"<p>In the sense of a string distinct from a null reference string, what is the importance of an empty string in CS (and specially in formal languages)? </p>\n\n<p>Why do you need a separate concept, that of 'empty string', which even has it's own Greek letter (\u03b5)?</p>\n\n<p>Couldn't just an EOL character replace it?</p>\n", 'ViewCount': '302', 'Title': 'Importance of the empty string', 'LastActivityDate': '2014-01-09T22:40:24.013', 'AnswerCount': '5', 'CommentCount': '6', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '10637', 'Tags': '<formal-languages><terminology>', 'CreationDate': '2014-01-05T03:56:31.100', 'FavoriteCount': '1', 'Id': '19505'}{'Body': '<p>As far as I understand, a <code>semi-decidable (recursively enumerable)</code> problem could be: </p>\n\n<blockquote>\n  <ol>\n  <li>decidable (recursive) or </li>\n  <li>undecidable (nonrecursively enumerable)</li>\n  </ol>\n</blockquote>\n\n<p>This <a href="http://stackoverflow.com/questions/9453916/why-arent-recursively-enumerable-languages-undecidable">post</a> made me wonder if this is not conventionally followed. <a href="http://stackoverflow.com/questions/9453916/why-arent-recursively-enumerable-languages-undecidable/21056763#21056763">This</a> is my answer to it and as far as I understand it is correct:</p>\n\n<blockquote>\n  <p>A semidecidable problem (or equivalently a recursively enumerable\n  problem) could be:</p>\n  \n  <p>Decidable: If the problem and its complement are both semidecidable\n  (or recursively enumerable), then the problem is decidable\n  (recursive).</p>\n  \n  <p>Undecidable: If the problem is semidecidable and its complement is not\n  semidecidable (that is, is not recursively enumerable).</p>\n  \n  <p>Important note: Remember that a decidable (recursive) problem is also\n  semidecidable (recursively enumerable). Conversely, if a problem is\n  not recursively enumerable (semidecidable), then is not recursive\n  (decidable).</p>\n  \n  <p>What the Wikipedia entry says is that:</p>\n  \n  <p>Partially decidable problems THAT ARE NOT DECIDABLE are called\n  undecidable.</p>\n  \n  <p>In general, a semidecidable problem (recursively enumerable) could be\n  decidable (recursive) or undecidable (nonrecursively enumerable).</p>\n  \n  <p>Also note that a problem and its complement could both (or just one of\n  them) be not even semi-decidable (nonrecursively enumerable). Also\n  note that, if a problem is recursive, its complement is also\n  recursive.</p>\n</blockquote>\n\n<p>Is it conventionally (always) understood this way? Is there some literature that presents semi-decidability (partially decidable, recursively enumerable) problem as an equivalent of undecidability?</p>\n', 'ViewCount': '104', 'Title': 'Can a semi-decidable problem be also decidable?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-18T20:20:44.787', 'LastEditDate': '2014-01-18T20:20:44.787', 'AnswerCount': '1', 'CommentCount': '3', 'AcceptedAnswerId': '19642', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '11974', 'Tags': '<terminology><computability><undecidability><semi-decidability>', 'CreationDate': '2014-01-11T00:45:42.170', 'Id': '19641'}{'Body': '<p>Suppose that I want to optimize a unimodal function defined on some real interval.  I can use the well-known algorithm as described in Wikipedia under the name of <a href="http://en.wikipedia.org/wiki/Ternary_search" rel="nofollow">ternary search</a>.</p>\n\n<p>In case of the algorithm that repeatedly halving intervals, it is common to reserve the term <em>binary search</em> for discrete problems and to use the term <em>bisection method</em> otherwise.  Extrapolating this convention, I suspect that the term <em>trisection method</em> might apply to the algorithm that solves my problem.</p>\n\n<p>My question is whether it is common among academics, and is safe to use in, e.g., senior theses, to apply the term <em>ternary search</em> even if the algorithm is applied to a continuous problem.  I need a reputable source for this.  I\'m also interested whether the term <em>trisection method</em> actually exists.</p>\n', 'ViewCount': '96', 'Title': 'Is "ternary search" an appropriate term for the algorithm that optimizes a unimodal function on a real interval?', 'LastEditorUserId': '12861', 'LastActivityDate': '2014-04-20T03:07:25.000', 'LastEditDate': '2014-01-16T03:45:59.587', 'AnswerCount': '1', 'CommentCount': '9', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '12861', 'Tags': '<algorithms><terminology><numerical-analysis><numerical-algorithms>', 'CreationDate': '2014-01-15T02:37:13.467', 'Id': '19734'}{'Body': "<p>Seemingly, a byte has established itself to be 8bit (is that correct?). RAM and NOR-flash can be normally accessed on a quite granular level, but it is up to the system architecture to determine if the smallest addressable unit is 8bit, 16bit or any other power of two bit number. Would the correct terminology be to call this word-addressable? Or asked differently, is a word the size of smallest addressable unit? Or is there some other term to describe this? </p>\n\n<p>Are mabye nibble, byte, word, double word all variable in bit-length and only defined by the architecture? And it is therefore only coincidence that a byte is always 8 bit? E.g. someone could design some new CPU and memory type and define her byte to be 16bit?</p>\n\n<p><strong>Main question:</strong> What is the precise term for the smallest addressable memory block?</p>\n\n<p><strong>Side question:</strong> What is the antonym to this word I'm looking for (e.g. used in NAND-flash)? Page-addressable, block-addressable? Are both correct or is one inprecise?</p>\n", 'ViewCount': '323', 'Title': 'Word- or byte-addressable? Correct terminology', 'LastEditorUserId': '10634', 'LastActivityDate': '2014-01-20T16:42:35.543', 'LastEditDate': '2014-01-20T16:42:35.543', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '10634', 'Tags': '<terminology><computer-architecture><memory-management><memory-access>', 'CreationDate': '2014-01-20T12:16:10.260', 'Id': '19848'}{'Body': "<p>When defining a Turing Machine formally, you enumerate its states. But I don't understand what states a TM can be in. Reading, Writing, and moving the head are the only ones that come to mind.</p>\n\n<p>Specifically, the turing I am trying to describe behaves like this:</p>\n\n<pre><code>    WHILE the symbol under the FH head is not $ DO\n        IF this symbol is not marked 0 THEN write it on the tape\n        ELSE write the symbol 1 on the tape\n            Read the next symbol (which is a 0) and write a marked 0 on the tape\n    Write $ on the tape\n</code></pre>\n\n<p>Where FH is the reading head which begins on the far left of the tape, and BH is the writing head which begins on the blank space after the last symbol on the tape. Once a cell is read or written into, the head in question moves one cell to the right. </p>\n\n<p>The starting configuration for the TM is this: 100!0110\\$ where the 0! indicates that the 0 is a marked symbol. The FH head begins on the first 1, and the BH head begins on the blank cell after the \\$. The ending configuration for that TM with that input is then 100!0110\\$1010!110\\$</p>\n\n<p>So, when describing this TM, what would its states be? Thanks!</p>\n", 'ViewCount': '54', 'Title': 'Turing Machine states', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-22T19:34:21.213', 'LastEditDate': '2014-01-22T09:29:57.980', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '19900', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '12971', 'Tags': '<terminology><turing-machines>', 'CreationDate': '2014-01-21T20:23:17.490', 'Id': '19880'}{'Body': '<p>I was trying to understand better the definition of a strong PSRG and I came across this expression which I am trying to understand better:</p>\n\n<p>$$ Pr_{r \\in \\{0,1\\}^l}[A(r) = \\text{"yes"}]$$</p>\n\n<p>Where r is a truly random bit string and A is a polynomial time deterministic machine.\nI\'ve been having some problems understanding what this expression means conceptually (or intuitively). </p>\n\n<p>So far these are some of my thoughts and I will try to point out my doubts too.</p>\n\n<p>A is just a standard TM so we can image that on l steps, it will yield $2^l$ branches. Each branch has a chance of occurring depending on which r occurs. Therefore, I was wondering if the above probability expression just mean "the fraction of branches that out yes"? Is that basically the same as the chance that A will output yes on the given random bit string? The thing that was confusing me and I was not sure how to deal with it was that, A(r) always outputs the same thing ("yes" or "no") on a given r (say it always accepts or rejects if r = 1010100 or something), it didn\'t seem to me that it a probabilistic sense, unless we randomly choose r. So I was wondering how the community interpreted this equation and what it mean.</p>\n\n<p>Also, since this is a probability, it seems to me that A(r) is just r.v. that only takes two values (yes or no), right? So this distribution only has two probability values, the one that A outputs yes or no, right? I was wondering how that related to the string r and I was not sure how to resolve this.</p>\n', 'ViewCount': '32', 'Title': 'Interpreting probabilistic time turning machines', 'LastEditorUserId': '13012', 'LastActivityDate': '2014-01-24T19:23:21.040', 'LastEditDate': '2014-01-24T19:23:21.040', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '19943', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '13012', 'Tags': '<terminology><probability-theory><randomized-algorithms><randomness>', 'CreationDate': '2014-01-24T04:54:38.433', 'Id': '19932'}{'ViewCount': '273', 'Title': 'Difference between Parallel and Concurrent programming?', 'LastEditDate': '2014-01-26T17:29:35.977', 'AnswerCount': '3', 'Score': '6', 'OwnerDisplayName': 'nish1013', 'PostTypeId': '1', 'OwnerUserId': '13158', 'FavoriteCount': '1', 'Body': '<p>When looking at concurrent programming, two terms are commonly used i.e. concurrent and parallel.</p>\n\n<p>And some programming languages specifically claim support for parallel programming, such as <a href="http://www.ateji.com/px/whitepapers/Ateji%20PX%20for%20Java%20v1.0.pdf" rel="nofollow">Java</a>.</p>\n\n<p>Does this means parallel and concurrent programming are actually different?</p>\n', 'Tags': '<terminology><parallel-computing><concurrency>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-26T17:31:11.030', 'CommentCount': '6', 'CreationDate': '2014-01-24T12:20:40.377', 'Id': '19987'}{'ViewCount': '69', 'Title': 'How to measure processing power of a quantum computer?', 'LastEditDate': '2014-01-28T08:20:02.857', 'AnswerCount': '1', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '12657', 'FavoriteCount': '1', 'Body': '<p>Is there any way to get an equivalent of computing power of quantum computers in terms of computing power of common computers? I mean, how many teraflops (or so) can a quantum computer compute? How can I calculate that equivalence? I think it depends on the architecture, like a x64 in common computer, and a 512-qubit.</p>\n', 'Tags': '<terminology><quantum-computing>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-28T08:20:02.857', 'CommentCount': '1', 'AcceptedAnswerId': '20024', 'CreationDate': '2014-01-27T19:56:09.843', 'Id': '20014'}{'ViewCount': '156', 'Title': 'Which is the equivalent processing of human brain in terms of computer processing?', 'LastEditDate': '2014-01-28T08:23:06.760', 'AnswerCount': '2', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '12657', 'FavoriteCount': '1', 'Body': '<p>How many flops my brain can process, or how many GHz is a human brain capable of?\nIs it valid to think that each celular brain is like a small cpu? (like cuda architecture). Our brains works in parallel, right?</p>\n', 'Tags': '<terminology><human-computing><computer-vs-human>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-28T11:46:18.233', 'CommentCount': '1', 'AcceptedAnswerId': '20031', 'CreationDate': '2014-01-27T20:04:40.527', 'Id': '20016'}{'Body': u'<p>When talking about general data structure design, my lecture notes talk about one of the concerns being cost of operations. As well as the individual cost, it mentions amortized cost. But then it goes on to say:</p>\n\n<blockquote>\n  <p>Amortized cost can be:</p>\n  \n  <ul>\n  <li>absolute (e.g. for every sequence \u03c3 of operations (O(n log n))</li>\n  <li>competitive (e.g. for every sequence \u03c3 of operations O(OPT(\u03c3)))</li>\n  </ul>\n  \n  <p>where OPT(\u03c3) is the optimal cost of clairvoyant algorithms</p>\n</blockquote>\n\n<p>I can\'t really make any sense of this. Googling <a href="https://en.wikipedia.org/wiki/Page_replacement_algorithm#The_theoretically_optimal_page_replacement_algorithm" rel="nofollow">throws up this</a> but I can\'t see the relevance to data structures more generally. Can anyone help me understand the quoted text?</p>\n', 'ViewCount': '134', 'Title': 'What is a clairvoyant algorithm?', 'LastEditorUserId': '10036', 'LastActivityDate': '2014-02-11T22:58:46.517', 'LastEditDate': '2014-02-11T22:58:46.517', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '20037', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '10036', 'Tags': '<algorithms><terminology><data-structures><amortized-analysis>', 'CreationDate': '2014-01-28T10:31:46.363', 'Id': '20035'}{'ViewCount': '102', 'Title': 'What is Simultaneous Multithreading', 'LastEditDate': '2014-01-29T17:04:27.047', 'AnswerCount': '2', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '11539', 'FavoriteCount': '1', 'Body': '<p>I come from an electronics background. I know that there are three types of implementations of multithreading (see <em>Computer Architecture: A Quantitative Approach, 5th Edition</em>):</p>\n\n<ol>\n<li><p><strong>Fine-grain multithreading</strong> issues instructions for different threads after every cycle.</p></li>\n<li><p><strong>Coarse-grain multithreading</strong> only switches to issue instructions from another thread when the current executing thread causes some long latency events (like page fault etc.)</p></li>\n<li><p><strong>Simultaneous multithreading</strong> issues multiple instructions from multiple threads in one cycle. The processor must be superscalar to do so.</p></li>\n</ol>\n\n<p>Does that mean that SMT is an extension of fine-grain and coarse-grain multithreading, and fine-grain and coarse-grain multithreading are only suitable for single core processor?</p>\n\n<p>What is the exact difference between SMT and the other approaches?</p>\n', 'Tags': '<terminology><operating-systems><computer-architecture>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-11T11:23:32.637', 'CommentCount': '0', 'AcceptedAnswerId': '20077', 'CreationDate': '2014-01-29T14:41:51.280', 'Id': '20063'}{'Body': '<p>I read a paper which talks about "a logic formula in which each variable appears at most twice unnegated and once negated". The term "unnegated" is double-negative, which makes it slightly unclear. Is there a more positive term to denote a variable that is not negated?</p>\n\n<p>I looked in an <a href="http://thesaurus.com/browse/negate" rel="nofollow">English thesaurus</a>, but all suggestions seem out-of-context in logic.</p>\n', 'ViewCount': '56', 'Title': 'Positive term for "unnegated"?', 'LastActivityDate': '2014-01-29T19:41:25.857', 'AnswerCount': '2', 'CommentCount': '4', 'AcceptedAnswerId': '20079', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '1342', 'Tags': '<terminology><logic>', 'CreationDate': '2014-01-29T15:32:50.410', 'Id': '20066'}{'Body': '<p>Latency is defined as the number of intervening cycles between an instruction that produces a result and an instruction that uses the result. The initiation or repeat interval is the number of cycles that must elapse between issuing two operations of a given type.</p>\n\n<p>In the Appendix C, pages 52-54 of <strong>Computer Architecture: A Quantitative approach 5th edition</strong>, it was mentioned that </p>\n\n<ol>\n<li><p>the FP adder is of 4 stages and pipelined, so latency =3(No. of pipeline stages -1) and initiation interval =1 (as pipelined)</p></li>\n<li><p>the FP multiply is of 7 stages  and pipelined, so latency =6(No. of pipeline stages -1) and initiation interval =1 (as pipelined)</p></li>\n</ol>\n\n<p>So for\n3. The FP divide of 24 stages and unpipelined, so latency =23(No. of pipeline stages -1) and initiation interval =24 (as unpipelined). But it was mentioned that   the latency was 24 and initiation interval was 25.</p>\n\n<p><a href="http://postimg.org/image/tdykzabdb/" rel="nofollow">latency and initiation interval</a> and <a href="http://postimg.org/image/6y59uu86d/" rel="nofollow">FP pipeline</a></p>\n\n<p>Why is this?</p>\n\n<p>Can anyone explain me? As I missing something</p>\n', 'ViewCount': '38', 'Title': 'Query about FP Divide latency and Initiation Interval', 'LastEditorUserId': '11539', 'LastActivityDate': '2014-03-20T10:43:12.523', 'LastEditDate': '2014-03-20T10:43:12.523', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '11539', 'Tags': '<terminology><computer-architecture>', 'CreationDate': '2014-01-30T11:21:13.110', 'Id': '20102'}{'Body': '<p>Assuming we have an automaton that simultaneously accepts a string on two paths. Would this mean that the construction of the NFA might be faulty?  In other words; at the end of any string over any alphabet, does the NFA have to end up accepting one single path only? Or could it accept several at the same time?</p>\n', 'ViewCount': '57', 'ClosedDate': '2014-02-16T18:12:58.687', 'Title': '2 threads accepted at the same time', 'LastEditorUserId': '98', 'LastActivityDate': '2014-01-31T09:11:28.767', 'LastEditDate': '2014-01-31T08:26:18.397', 'AnswerCount': '2', 'CommentCount': '2', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '13175', 'Tags': '<terminology><automata><finite-automata><nondeterminism>', 'CreationDate': '2014-01-31T00:41:46.270', 'Id': '20136'}{'Body': '<p>It\'s quite a short question: Refering to <a href="http://en.wikipedia.org/wiki/Computation_tree_logic" rel="nofollow">this Wikipedia article</a> <code>p U q</code> means, that <em><code>p</code> has to hold at least until at some point <code>q</code> holds</em>.</p>\n\n<p>So, does it mean:</p>\n\n<ol>\n<li>On each path starting from the current state <code>p</code> has to hold in each state until a state is reached in which <code>q</code> holds.</li>\n<li>On each path starting from the current state <code>p</code> has to hold in any state before a state is reached in which <code>q</code> holds.</li>\n</ol>\n\n<p><strong>Example</strong>: Suppose <code>p</code> holds in <code>s3</code> and <code>q</code> holds in <code>s5</code>. Let <code>s0</code> be the starting state and the set of edges given by <code>{ (s0,s1),(s1,s2),(s2,s3),(s3,s4),(s4,s5) }</code>. Let\'s assume <code>p</code> and <code>q</code> don\'t hold in all the other states. Is <code>p U q</code> satisfied, starting from <code>s0</code>?</p>\n', 'ViewCount': '35', 'Title': 'Until quantifier of Computation Tree Logic', 'LastEditorUserId': '98', 'LastActivityDate': '2014-02-01T20:48:26.030', 'LastEditDate': '2014-02-01T20:48:26.030', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '20198', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '12502', 'Tags': '<terminology><logic><temporal-logic>', 'CreationDate': '2014-02-01T19:14:08.947', 'Id': '20197'}{'Body': "<p>In case of binary classification problem, what are the $y_i$ 's in the training data set $\\{(x_1, y_1), (x_2, y_2), \\dots (x_n, y_n)\\}$?</p>\n\n<p>I guess they are from $\\{1,-1\\}$. Now I see a method for finding a scoring function $f(x) = w^Tx + b$ by minimizing the squared error between the $f(x_i)$'s and $y_i$'s over $w$ and $b$. Now is it correct to minimize the error between $f(x_i)$'s and $y_i$? The latter is a sign while the former is a value? They seem incomparable to me. </p>\n", 'ViewCount': '43', 'Title': 'What values do $y_i$ in training data for binary classification problems attain?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-04T15:07:53.207', 'LastEditDate': '2014-02-02T13:53:00.000', 'AnswerCount': '2', 'CommentCount': '0', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '13091', 'Tags': '<terminology><machine-learning><classification>', 'CreationDate': '2014-02-02T13:01:37.330', 'Id': '20214'}{'Body': '<p>My professor has been going over Turing machines, and I really don\'t understand how this example of a Turing machine for binary addition has to be read:</p>\n\n<p><img src="http://i.stack.imgur.com/p25i0.png" alt="enter image description here"></p>\n\n<p>I love working with finite state machines; if I knew how to read this Turing machine description I would use FSA\'s.</p>\n\n<p>Could someone give me a few examples of how binary addition could be computed with this Turing machine, and possibly a conversion to an FSA?</p>\n', 'ViewCount': '66', 'Title': 'Understanding a Turing machine description', 'LastEditorUserId': '98', 'LastActivityDate': '2014-02-02T19:14:11.197', 'LastEditDate': '2014-02-02T19:14:11.197', 'AnswerCount': '0', 'CommentCount': '4', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '7173', 'Tags': '<terminology><turing-machines>', 'CreationDate': '2014-02-02T18:21:07.953', 'Id': '20225'}{'Body': "<p>I know that <code>(1 + 0)*</code> is the set of all bit strings; but isn't  <code>1* + 0*</code> the same thing?</p>\n", 'ViewCount': '797', 'Title': 'Difference between 1* + 0* and (1 + 0)*', 'LastEditorUserId': '98', 'LastActivityDate': '2014-02-03T13:43:32.987', 'LastEditDate': '2014-02-03T09:31:45.900', 'AnswerCount': '2', 'CommentCount': '1', 'AcceptedAnswerId': '20236', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '13175', 'Tags': '<formal-languages><terminology><regular-languages><regular-expressions>', 'CreationDate': '2014-02-03T03:58:32.153', 'Id': '20235'}{'Body': "<p>I'm having trouble finding the language represented by the following:</p>\n\n<p>(AA|BB)*</p>\n\n<p>Should the expression be read as... ( A (A|B) B ) *\nor... ( (AA) | (BB) )*</p>\n\n<p>If that isn't clear, should this produce something like... ABABAB or should it produce AABBAABBBBAA</p>\n\n<p>My guess is that AABBAA is part of the represented language, while AB is not.</p>\n", 'ViewCount': '45', 'Title': 'Precedence in regular expressions', 'LastEditorUserId': '98', 'LastActivityDate': '2014-02-03T14:27:36.157', 'LastEditDate': '2014-02-03T09:34:49.770', 'AnswerCount': '3', 'CommentCount': '0', 'AcceptedAnswerId': '20241', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '11616', 'Tags': '<formal-languages><terminology><regular-expressions><precedence>', 'CreationDate': '2014-02-03T05:47:10.583', 'Id': '20239'}{'Body': '<p>I wonder if high-performance computing and parallel computing always mean the same? \nIf not, </p>\n\n<ul>\n<li>what are the differences and relations between  them?</li>\n<li>what are some examples of high-performance computing that are not parallel computing?</li>\n<li>what are some examples of parallel computing that are not high-performance computing?</li>\n</ul>\n\n<p>Are high-throughput computing and high-performance computing the same concept?</p>\n', 'ViewCount': '87', 'Title': 'Differences and relations between high-performance/throughput computing and parallel computing?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-02-03T21:26:08.297', 'LastEditDate': '2014-02-03T16:15:43.477', 'AnswerCount': '2', 'CommentCount': '6', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '336', 'Tags': '<terminology><parallel-computing><high-performance>', 'CreationDate': '2014-02-03T15:02:47.050', 'Id': '20253'}{'Body': '<p>I am confused about clustered index is dense or sparse. I searched for that, sources saying it is sparse, but can be dense also. What is it exactly?</p>\n', 'ViewCount': '51', 'Title': 'Clustered index is dense or sparse?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-26T14:25:23.200', 'LastEditDate': '2014-02-06T10:26:50.050', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '23079', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '12051', 'Tags': '<terminology><database-theory>', 'CreationDate': '2014-02-06T08:46:31.187', 'Id': '21365'}{'Body': '<p>I know that a DFA has to have exactly one transition for each symbol in the alphabet, but is it allowed to have two symbols on the same arrow? If, for example, I have a DFA with states $q_0$ and $q_1$, can I have one arrow from $q_0$ to $q_1$ with both $a$ and $b$? </p>\n\n<p>This may be a stupid question, but I need to be completely sure that this is allowed (I believe it is).</p>\n', 'ViewCount': '52', 'Title': 'Can a DFA have two symbols on one arrow?', 'LastEditorUserId': '472', 'LastActivityDate': '2014-02-06T14:46:04.787', 'LastEditDate': '2014-02-06T13:27:53.107', 'AnswerCount': '2', 'CommentCount': '1', 'AcceptedAnswerId': '21374', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '14436', 'Tags': '<terminology><automata><finite-automata>', 'CreationDate': '2014-02-06T12:51:38.073', 'Id': '21373'}{'Body': '<p>I\'ve been working and experimenting with an algorithm that <em>may</em> take time $O^*(2^\\sqrt{n})$.  Here $O^*(f(n))$ simply neglects all polynomial terms.  I\'ve seen <a href="http://www.scottaaronson.com/blog/?p=394#comment-13888" rel="nofollow">a comment on Scott Aaronson\'s blog</a> that mentions graph isomorphism algorithms run in this time, too.  Actually, $O(2^\\sqrt{n})$.  Is there a designation for this time?</p>\n\n<p>I thought perhaps quasi-exponential may describe it, but I\'m wondering if there is already a name/designation for it.</p>\n', 'ViewCount': '66', 'Title': 'Is there a designation for this not-quite-exponential time?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-02-07T14:07:38.353', 'LastEditDate': '2014-02-06T21:13:30.697', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '21404', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '1667', 'Tags': '<terminology><landau-notation>', 'CreationDate': '2014-02-06T19:14:11.860', 'Id': '21397'}{'Body': "<p>I am working on a homework question, where I have to show a property P is trivial.</p>\n\n<p>This problem has to do with Rice's Theorem, which I do not completely understand. Can someone explain the difference between trivial and non-trivial properties?</p>\n", 'ViewCount': '141', 'Title': "What's a trivial property?", 'LastEditorUserId': '98', 'LastActivityDate': '2014-02-07T07:38:54.810', 'LastEditDate': '2014-02-07T07:38:54.810', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '21399', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '12971', 'Tags': '<terminology><computability>', 'CreationDate': '2014-02-06T19:17:14.787', 'Id': '21398'}{'Body': '<p>I am learning Probabilistic Graphical Models with the help of the videos on Coursera. I am in week 4 and I see cliques being mentioned often. But the graphs being discussed are cluster graphs. So are the cliques and clusters the same?</p>\n', 'ViewCount': '47', 'Title': 'In Probabilistic Graphical Models, are Cliques and Clusters the same?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-09T08:02:50.520', 'LastEditDate': '2014-02-07T07:39:57.253', 'AnswerCount': '1', 'CommentCount': '3', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '12813', 'Tags': '<graph-theory><terminology><probability-theory><graphical-models>', 'CreationDate': '2014-02-06T22:07:25.603', 'Id': '21406'}{'Body': "<p>Consider this nested loop:</p>\n\n<pre><code>for (i=0 to n)\n   for(j=0 to n)\n      for (k=0 to n)\n         sum := sum +k\n      end for\n   end for\nend for\n</code></pre>\n\n<p>Do <code>i</code>,<code>j</code> and <code>k</code> have temporal or spatial locality?</p>\n\n<p>I've considered <code>j</code> and <code>k</code> as temporal since they are revisited again in the loop. But I'm confused about <code>i</code> as it does not match the definitions of temporal or spatial.</p>\n", 'ViewCount': '41', 'Title': 'Are loop counters spatially or temporally local?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-02-08T16:00:13.993', 'LastEditDate': '2014-02-08T16:00:13.993', 'AnswerCount': '2', 'CommentCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '10564', 'Tags': '<terminology><algorithm-analysis>', 'CreationDate': '2014-02-08T06:22:46.200', 'Id': '21443'}{'Body': '<p>I am reading <a href="http://arxiv.org/pdf/1309.7440v2.pdf" rel="nofollow">Decompositions of Triangle-Dense Graphs</a> by Gupta et al. </p>\n\n<p>On page 2, in Definition 1 what is a wedge in a graph? </p>\n\n<p>I know what triangle is but I don\'t know what wedge is and google isn\'t helping!</p>\n', 'ViewCount': '56', 'Title': 'What does a wedge in a graph look like?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-02-09T22:44:08.660', 'LastEditDate': '2014-02-09T22:44:08.660', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '21470', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '244', 'Tags': '<graph-theory><terminology>', 'CreationDate': '2014-02-09T17:21:04.373', 'Id': '21469'}{'Body': '<p>While reading some papers in AI (for a project I have to do), I see expressions "blocks world domain" and "logistics domain". I know what blocks world domain is, but I don\'t know the definition of logistics domain.</p>\n\n<p>Any help would be appreciated.</p>\n', 'ViewCount': '33', 'Title': u'Description of \u201cLogistics Domain\u201d in AI', 'LastEditorUserId': '98', 'LastActivityDate': '2014-02-27T10:42:22.130', 'LastEditDate': '2014-02-10T08:29:41.400', 'AnswerCount': '2', 'CommentCount': '1', 'AcceptedAnswerId': '22086', 'Score': '-3', 'PostTypeId': '1', 'OwnerUserId': '8494', 'Tags': '<terminology><artificial-intelligence>', 'CreationDate': '2014-02-10T01:22:49.273', 'Id': '21481'}{'Body': u'<p>I read a book which says that in Predicate Calculus, syntactic theorem proving is identical (complete and sound) with semantic entailment and this is very useful because it is easier to prove positive witnesses in natural deduction whereas when you seem to fail you better switch to semantic account to demonstrate a counter-example.</p>\n\n<p>Particularly <a href="http://www.google.ee/search?q=%22%20when%20we%20look%20at%20predicate%20logic,%20we%20will%20find%20that%20there%20are%20infinitely%20many%20valuations%22" rel="nofollow">Logic in computer science</a> says</p>\n\n<blockquote>\n  <p>to show that \u0393  \u22a2\u03c8 is valid, we need to provide a proof of \u03c8 from \u0393.\n  Yet, how can we show that \u03c8 is not a consequence of \u0393? Intuitively,\n  this is harder; how can you possibly show that there is no proof of\n  something? You would have to consider every \u2018candidate\u2019 proof and show\n  it is not one. Thus, proof theory gives a \u2018positive\u2019 characterisation\n  of the logic; it provides convincing evidence for assertions like \u2018\u0393\n  \u22a2 \u03c8 is valid,\u2019 but it is not very useful for establishing evidence\n  for assertions of the form \u2018\u0393 \u22a2 \u03c6 is not valid.\u2019</p>\n  \n  <p>Semantics, on the other hand, works in the opposite way. To show\n  that \u03c8 is not a consequence of \u0393 is the \u2018easy\u2019 bit: find a model in\n  which all \u03c6_i are true, but \u03c8 isn\u2019t. Showing that \u03c8 is a consequence\n  of \u0393, on the other hand, is harder in principle. For propositional\n  logic, you need to show that every valuation (an assignment of truth\n  values to all atoms involved) that makes all \u03c6_i true also makes \u03c8\n  true. If there is a small number of valuations, this is not so bad.\n  However, when we look at predicate logic, we will find that there are\n  infinitely many valuations, called \'models\' from hereon, to consider.\n  Thus, in semantics we have a \u2018negative\u2019 characterisation of the logic.\n  We find establishing assertions of the form \u2018\u0393 \u22ad \u03c8\u2019 (\u03c8 is not a\n  semantic entailment of all formulas in \u0393) easier than establishing \u2018\u0393\n  \u22a8 \u03c8\u2019(\u03c8 is a semantic entailment of \u0393), for in the former case we need\n  only talk about one model, whereas in the latter we potentially have\n  to talk about infinitely many. All this goes to show that it is\n  important to study both proof theory and semantics. For example, if\n  you are trying to show that \u03c8 is not a consequence of \u0393 and you have a\n  hard time doing that, you might want to change your strategy for a\n  while by trying to prove the validity of \u0393 \u22a2 \u03c8. If you find a proof,\n  you know for sure that \u03c8 is a consequence of \u0393. If you can\u2019t find a\n  proof, then your attempts at proving it often provide insights which\n  lead you to the construction of a counter example. The fact that proof\n  theory and semantics for predicate logic are equivalent is amazing,\n  but it does not stop them having separate roles in logic, each\n  meriting close study.</p>\n</blockquote>\n\n<p>I was sure that we can prove the opposite by proving \u22a2 \xac\u03c8 and wondered why do we need the entailment. Now I see that validity of the opposite has nothing to do with validity of affirmative statement. Thanks. What we need is the satisfaction of the \xac\u03c8, which says that there is a counterexample. We do not need the validity of \xac\u03c8. But why semantics instead of proof? Do you say that semantics is in patrimony of satisfaction whereas proof theory is dedicated to validity?</p>\n', 'ViewCount': '172', 'Title': u'Why \u22a2 for affirmative predicates and \u22a8 for \xacnegations?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-02T16:33:58.987', 'LastEditDate': '2014-04-02T16:33:58.987', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '2879', 'Tags': '<terminology><logic><first-order-logic>', 'CreationDate': '2014-02-13T11:02:46.557', 'Id': '21596'}{'Body': "<p>Could somebody explain the difference between dependent types and refinement types? As I understand it, a refinement type contains all values of a type fulfilling a predicate. Is there a feature of dependent types which distinguishes them? </p>\n\n<p>If it helps, I came across Refined types via the Liquid Haskell project, and dependent types via Coq and Agda. That said, I'm looking for an explanation of how the theories differ. </p>\n", 'ViewCount': '59', 'Title': 'Dependent types vs refinement types', 'LastEditorUserId': '98', 'LastActivityDate': '2014-02-18T05:57:58.417', 'LastEditDate': '2014-02-17T10:00:36.913', 'AnswerCount': '2', 'CommentCount': '0', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '2253', 'Tags': '<terminology><programming-languages><type-theory><functional-programming><dependent-types>', 'CreationDate': '2014-02-17T07:54:50.867', 'Id': '21728'}{'Body': '<p>I\'ve been reading about the No Free Lunch Theorem, but I can\'t quite understand what it is about.  I\'ve heard this theorem described elsewhere as the claim that "no general purpose universal optimiser exists". On the other hand, the <a href="https://en.wikipedia.org/wiki/No_free_lunch_in_search_and_optimization" rel="nofollow">Wikipedia article</a> talks about \'candidate solutions" that are "evaluated one by one" - if we only consider algorithms of a particular form, then that is a much more limited claim.</p>\n\n<p>Can anyone explain what this theorem actually claims?</p>\n', 'ViewCount': '459', 'Title': 'What is the no free lunch theorem?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-02-18T13:02:10.723', 'LastEditDate': '2014-02-18T12:58:43.690', 'AnswerCount': '2', 'CommentCount': '2', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '644', 'Tags': '<algorithms><terminology><optimization><heuristics>', 'CreationDate': '2014-02-18T10:48:00.223', 'FavoriteCount': '3', 'Id': '21758'}{'Body': "<p>I've seen a lot of text concerning the first NP-Complete problem, Boolean Satisfiability. I guess I'm confused concerning the language. </p>\n\n<p>It sounds to me as though the problem could be difficult to compute (hence the NP-complete), however it still might be satisfiable. As in, there <em>exists</em> a satisfying mapping of literals. We can't necessarily compute it easily, but it's out there.</p>\n\n<p>In fact, I would guess that the two adjectives really have no relation to each other. But, when working with problems, I am often asked to see whether a set of clauses is satisfiable. Does that mean, <em>Can we compute a satisfying mapping?</em> And by extension, does NP-complete imply that a given CNF setup is unsatisfiable?</p>\n", 'ViewCount': '103', 'Title': 'Does NP-Complete imply non-satisfiability?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-02-21T10:30:36.100', 'LastEditDate': '2014-02-21T10:30:36.100', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '21874', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '12971', 'Tags': '<complexity-theory><terminology><np-complete><satisfiability>', 'CreationDate': '2014-02-21T01:53:02.537', 'Id': '21871'}{'Body': '<p>I\'ve got a simple question:</p>\n\n<p>Let\'s say we have the following definition of a language over some alphabet: $L = \\{w \\mid w \\text{ contains the infix } aab\\}$</p>\n\n<p>Does that mean $aab \\in L$? or does "$aab$" have to be "wrapped" on both sides by other letters?</p>\n', 'ViewCount': '56', 'Title': u'Definition of \u201cinfix\u201d in formal languages', 'LastEditorUserId': '98', 'LastActivityDate': '2014-02-22T13:26:15.920', 'LastEditDate': '2014-02-22T13:26:15.920', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '21922', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '14934', 'Tags': '<formal-languages><terminology>', 'CreationDate': '2014-02-22T09:47:07.130', 'Id': '21921'}{'Body': '<p>A forest is a collection of trees. </p>\n\n<p>Is there a similar notion for paths? e.g., a <strong><em>_</em>__<em>_</em>__<em>_</em></strong> is a collection of paths.</p>\n', 'ViewCount': '283', 'Title': 'Tree : Forest :: Path :?', 'LastActivityDate': '2014-02-25T01:23:02.913', 'AnswerCount': '1', 'CommentCount': '9', 'AcceptedAnswerId': '22010', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '8877', 'Tags': '<graph-theory><terminology>', 'CreationDate': '2014-02-25T00:28:58.843', 'Id': '22009'}{'Body': u'<p>The principles of calculus, historically, are differentials and integrals <a href="http://en.wikipedia.org/wiki/Calculus" rel="nofollow">[1]</a>, while those of algebra are operators and equation solving <a href="http://en.wikipedia.org/wiki/Algebra" rel="nofollow">[2]</a>. Contemporary principles are analysis and abstract objects, respectively.</p>\n\n<p>As an example case, why is relational algebra not called a calculus, and why is the \u03c0-calculus not called an algebra?</p>\n', 'ViewCount': '104', 'ClosedDate': '2014-02-28T23:49:38.293', 'Title': "What are the justifications and historical reasons regarding the choice between the words 'calculus' and 'algebra'?", 'LastEditorUserId': '15123', 'LastActivityDate': '2014-02-28T23:54:31.623', 'LastEditDate': '2014-02-28T08:49:47.713', 'AnswerCount': '1', 'CommentCount': '14', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '15123', 'Tags': '<terminology>', 'CreationDate': '2014-02-28T06:37:14.893', 'Id': '22126'}{'Body': '<p>In section 6.3 of the paper <a href="https://smartech.gatech.edu/bitstream/handle/1853/6781/GIT-CC-93-55.pdf" rel="nofollow">Causal memory: definitions, implementations, and programming</a>, the authors define "data-race free" as follows:</p>\n\n<blockquote>\n  <p>Program $\\Pi$ is data-race free if, for all histories $H$ of $\\Pi$ and all causality orders $\\leadsto$ of $H$, if $H$ has a serialization that respects $\\leadsto$ (note that this implies that $H$ is sequentially consistent), then $H$ is data-race free with respect to $\\leadsto$.</p>\n</blockquote>\n\n<p>The one-sentence definition is too complicated for me to follow. It involves various notions and their relations. Specifically, a program is a set of its histories. Given a history, there may be more than one causality order for it, because there may be multiple writes of a value to a variable and thus more than one writes-into order. Let $H$ be a history with causality order $\\leadsto$. We have to consider whether it is sequentially consistent and data-race free with respect to $\\leadsto$.</p>\n\n<p>The following image enumerates all the possible classes of executions <em>which I can think of</em> produced by any program. The red crosses in the image indicate non-existence. For instance, the "path" $\\Pi - H_1 - \\leadsto_{12} - S_{12} - DRF_{12}$ means that $S_{12}$ is a serialization (thus sequentially consistent) of history $H_1$ that respects $\\leadsto_{12}$ but is not data-race free with respect to $\\leadsto_{12}$.</p>\n\n<p><img src="http://i.stack.imgur.com/cW61x.png" alt="data-race free"></p>\n\n<p><strong>EDIT: Here are some explanations of this image.</strong> For any program, there are five possible <em>classes of executions</em>. $H_0$ indicates the class of executions which have no causality orders at all (i.e., it causality orders are cyclic). The executions like $H_1$ have more than one causality orders, such as $\\leadsto_{11}, \\leadsto_{12},$ and $\\leadsto_{13}$. However, $H_1$ (as a representative of its class) is not sequentially consistent respecting $\\leadsto_{11}$ (denoted by the red cross over $S_{11}$); $H_1$ is sequentially consistent respecting $\\leadsto_{12}$ but is not data-race free with respect to $\\leadsto_{12}$ (denoted by the red cross over $DRF_{12}$); and $H_1$ is sequentially consistent respecting $\\leadsto_{13}$ and is data-race free with respect to $\\leadsto_{13}$. The cases for $H_2$, $H_3$, and $H_4$ are similar.</p>\n\n<p>Here comes my first problem:</p>\n\n<blockquote>\n  <p>(1). What are the classes of executions excluded by "data-race free"? (and does the image miss some classes of executions?)</p>\n  \n  <p><em>In my opinion,</em> only the executions like $H_1$ are excluded. The reason is that the "path" $\\Pi - H_1 - \\leadsto_{12} - S_{12} - DRF_{12}$ violates the definition of "data-race free".</p>\n</blockquote>\n\n<hr>\n\n<p>Immediately following the definition of data-race free, the authors show that data-race free programs produce only sequential consistent executions when run on causal memory:</p>\n\n<blockquote>\n  <p><strong>Theorem 5.</strong> If $\\Pi$ is data-race free, then all histories of $\\Pi$ with causal memory are sequentially consistent.</p>\n</blockquote>\n\n<p>In the first paragraph of its proof, it says that "Let $H$ be a finite (infinite) causal history and let $\\leadsto$ be a causality order that proves that $H$ is causal. We will prove that $H$ is data-race free with respect to $\\leadsto$ and has a serialization that respects $\\leadsto$". </p>\n\n<p>Here come my other two problems:</p>\n\n<blockquote>\n  <p>(2). Back to the image above, does the theorem mean that when run on causal memory data-race free programs produce only the executions like $H_3$ which are <em>both sequentially consistent and data-race free</em> with respect to <strong>each</strong> of its causality orders?</p>\n  \n  <p>(3). If so, is it right to conclude that the executions produced by data-race free programs when run on causal memory actually satisfy some stronger consistency model (though not formally defined) than sequentially consistent model?</p>\n</blockquote>\n\n<p>Besides the answers to my problems, any personal (or even subjective) comments worthy of note on the definition "data-race free" are appreciated.</p>\n', 'ViewCount': '59', 'Title': '"Data-race free" programs', 'LastEditorUserId': '4911', 'LastActivityDate': '2014-03-02T06:05:59.563', 'LastEditDate': '2014-03-02T06:05:59.563', 'AnswerCount': '0', 'CommentCount': '3', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '4911', 'Tags': '<terminology><parallel-computing><concurrency>', 'CreationDate': '2014-03-01T14:43:42.677', 'Id': '22158'}{'ViewCount': '101', 'Title': 'Why are pushdown automata countable?', 'LastEditDate': '2014-03-04T19:03:17.140', 'AnswerCount': '2', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '13257', 'FavoriteCount': '0', 'Body': '<p>I began a chapter in a textbook on computational theory where they begin to talk about decidable languages. </p>\n\n<p>The problems in this section are pretty confusing and I honestly don\'t know how to begin them because I\'m not 100% on what they mean when they say "countable". </p>\n\n<p>Can anyone help walk me through this problem in the book, that simply states;</p>\n\n<blockquote>\n  <p>Show that the number of push-down automatons is countable.</p>\n</blockquote>\n', 'ClosedDate': '2014-03-06T15:52:04.650', 'Tags': '<terminology><automata><pushdown-automata><uncountability>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-04T19:03:17.140', 'CommentCount': '6', 'AcceptedAnswerId': '22265', 'CreationDate': '2014-03-04T03:41:50.343', 'Id': '22255'}{'Body': "<p>I have few CS textbooks with me which discuss languages, well actually 2 plus old course notes supplied a few years ago. I have been searching the web too any only seem to come up with vague responses just like the text books I have.</p>\n\n<p>My question is about language recognisers verses generators. </p>\n\n<p>I get the overriding principle of a recogniser. That it analyses a language and is able to determine nay or yay if a String belongs to a language.  This is at least what I have picked up from the books and notes. However, it's much more complex than that is it not? A tokenise and syntax analyser  (which I assume to be recognisers) do not just say yes or no, they also ways where don't they...?</p>\n\n<p>However, language generators. No one seems to be very clear about what they are. The typical description I get is  For example Sebasta's Concepts of programming languages says <em>'A language generator is a device that can be used to generate the sentences of a language. We can think of a generator as a push button that produces a sentence of a language every time it is pressed.'</em>  Seriously? That's it?? Your kidding right.... </p>\n\n<p>I read that Regex is an example of a Generator, then why when people talk of generators to they not talk of the inputs. For example Regex has a target String, and the Regex with defines both the accepted alphabet and it's grammar rules.</p>\n\n<p>Can someone provide for me a clearer distinction of what a recogniser is?</p>\n", 'ViewCount': '89', 'Title': 'Language Recognition Devices and Language Generators', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-05T22:24:39.077', 'LastEditDate': '2014-03-05T07:16:31.087', 'AnswerCount': '3', 'CommentCount': '1', 'AcceptedAnswerId': '22298', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '15290', 'Tags': '<formal-languages><terminology><automata>', 'CreationDate': '2014-03-05T02:39:33.337', 'Id': '22288'}{'Body': '<p>What is a good metaphor or example to explain to an English major the difference between classical computer science and "being good with using MS-Windows"</p>\n\n<ul>\n<li>computer science  </li>\n<li>computer programming  </li>\n<li>using computers</li>\n</ul>\n\n<p>3 profoundly different things.   Most people have no idea what Computer Science even is.  They just see the word "computer". Hence, "he is a Computer Science major" can be interpreted as "He can hook up my printer".  Or that he\'s "good with computers". Even fewer people know the difference between computer programming and Computer Science.</p>\n\n<p>Computer Science is computing theory.  CS can be learned without actual computers.   CPU micro architecture.  How to sort numbers, how to traverse lists, etc.  State machines.  Algorithms, big(Oh), etc.  How to design a programming language or compiler.  </p>\n\n<p>Programming is writing code and creating applications in a language and compiler created by a computer scientist.</p>\n\n<p>Lastly, there is using a computer (using a GUI, mouse, and keyboard.  Internet, MS-Office, etc)</p>\n\n<p>Yet all three of these are used interchangeably by laymen.  </p>\n\n<p>What is a good metaphor or example to explain to an English major the difference between classical computer science and "being good with using MS-Windows"   Or simply, a pithy example of how real computer science has nothing to do with using MS-Windows.</p>\n', 'ViewCount': '1951', 'Title': 'Explaining the difference between computer science and computer literacy', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-26T17:18:05.997', 'LastEditDate': '2014-03-07T09:44:02.960', 'AnswerCount': '8', 'CommentCount': '3', 'Score': '23', 'PostTypeId': '1', 'OwnerUserId': '15352', 'Tags': '<terminology><education>', 'CreationDate': '2014-03-06T17:31:16.130', 'FavoriteCount': '8', 'Id': '22345'}{'Body': '<p>I had a debate with my friend. He argued that $o(1)\\subseteq O(1)$, so if a function converges to 0, then it belongs to both $o(1)$ and $O(1)$. However I imagine that $O(1)$ represents a constant time, in essence, a non-zero constant time. Is there a broad acceptance that a function converging to zero belongs to $o(1)$ and not to $O(1)$?  </p>\n', 'ViewCount': '136', 'Title': 'Should O(1) necessarily stand for a non-zero constant?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-12T22:18:36.997', 'LastEditDate': '2014-03-10T09:02:49.010', 'AnswerCount': '2', 'CommentCount': '2', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '15418', 'Tags': '<terminology><asymptotics>', 'CreationDate': '2014-03-08T15:17:20.457', 'Id': '22398'}{'ViewCount': '179', 'Title': 'Why does merge sort run in $O(n^2)$ time?', 'LastEditDate': '2014-03-16T15:08:35.860', 'AnswerCount': '4', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '12448', 'FavoriteCount': '1', 'Body': '<p>I have been learning about Big O, Big Omega, and Big Theta. I have been reading many SO questions and answers to get a better understanding of the notations. From my understanding, it seems that <strong>Big O is the upper bound</strong> running time/space of the algorithm, <strong>Big Omega is the lower bound</strong> running time/space of the algorithm and <strong>Big Theta is like the in between of the two</strong>.</p>\n\n<p>This particular <a href="http://stackoverflow.com/questions/10376740/big-theta-notation-what-exactly-does-big-theta-represent?lq=1">answer</a> on SO stumbled me with the following statement </p>\n\n<blockquote>\n  <p>For example, merge sort worst case is both ${\\cal O}(n\\log n$) and $\\Omega(n\\log n)$ -\n  and thus is also $\\Theta(n\\log n)$, but it is also ${\\cal O}(n^2)$, since $n^2$ is\n  asymptotically "bigger" than it. However, it is NOT $\\Theta(n^2)$, Since\n  the algorithm is not $\\Omega(n^2)$</p>\n</blockquote>\n\n<p>I thought merge sort is ${\\cal O}(n\\log n)$ but it seems it is also ${\\cal O}(n^2)$ because $n^2$ is asymptotically bigger than it. Can someone explain this to me?</p>\n', 'Tags': '<algorithms><terminology><asymptotics><landau-notation>', 'LastEditorUserId': '683', 'LastActivityDate': '2014-03-16T15:08:35.860', 'CommentCount': '5', 'AcceptedAnswerId': '22674', 'CreationDate': '2014-03-16T00:41:55.560', 'Id': '22662'}{'Body': '<p>Is there any limit to what we can define as a language? Is any set of symbols a language?</p>\n\n<p>For example, given the alphabet $\\Sigma$, do we say that the language $L = \\Sigma$ has alphabet $\\Sigma$?</p>\n\n<p>Also, what is the intuitive modern equivalent to languages (as defined WRT complexity classes)? I always hear languages described as <em>problems</em>, but what are we really saying when we say that a language <em>is</em> a problem?</p>\n', 'ViewCount': '50', 'Title': 'Limits to the definition of a language', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-18T13:26:42.807', 'LastEditDate': '2014-03-18T07:58:02.740', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '22743', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '15660', 'Tags': '<formal-languages><terminology>', 'CreationDate': '2014-03-18T03:24:01.907', 'Id': '22742'}{'Body': "<p>from Sipster's definition: Any language that can be generated by some context-free grammar (call it $G$) is called a context-free language (CFL). However, can $G$ generate strings that are not in the the language that recognizes $G$?</p>\n", 'ViewCount': '49', 'Title': 'Can a context free grammar for $L$, generate a string not in $L$?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-21T08:37:28.153', 'LastEditDate': '2014-03-21T08:37:28.153', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '22883', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '14864', 'Tags': '<terminology><context-free><formal-grammars>', 'CreationDate': '2014-03-20T20:49:23.283', 'Id': '22880'}{'ViewCount': '55', 'Title': 'O(f) vs O(f(n))', 'LastEditDate': '2014-03-21T20:54:17.343', 'AnswerCount': '1', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '10901', 'FavoriteCount': '0', 'Body': '<p>I first learned about the Big O notation in an intro to Algorithms class. He showed us that function $g \\in O(f(n))$ <br>\nAfterwords in Discrete Math another Professor, without knowing of the first, told us that we should never do that and that it should be done as $g \\in O(f)$ where g and f are functions. \nThe question is which one of these is right, why, and if they both are, what is the difference?  </p>\n', 'Tags': '<terminology><asymptotics><landau-notation>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-21T21:04:42.580', 'CommentCount': '3', 'AcceptedAnswerId': '22914', 'CreationDate': '2014-03-21T17:58:00.083', 'Id': '22908'}{'Body': '<p>I have read that linear bounded automaton is a Non deterministic Turing machine. Why is it so?</p>\n', 'ViewCount': '25', 'Title': 'Why it is said that LBA is a non deterministic Turing Machine', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-22T11:35:08.413', 'LastEditDate': '2014-03-22T11:35:08.413', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '22922', 'Score': '-2', 'PostTypeId': '1', 'OwnerUserId': '947', 'Tags': '<terminology><turing-machines><automata><nondeterminism><linear-bounded-automata>', 'CreationDate': '2014-03-22T01:05:54.747', 'Id': '22919'}{'Body': '<p><a href="http://en.wikipedia.org/wiki/NP_%28complexity%29#Formal_definition" rel="nofollow">Wikipedia\'s formal definition of NP based on deterministic verifiers</a> states: </p>\n\n<blockquote>\n  <p>A language L is in NP if and only if there exist polynomials p and q,\n  and a deterministic Turing machine M, such that</p>\n  \n  <ul>\n  <li>For all x and y, the machine M runs in time p(|x|) on input (x,y)</li>\n  <li>For all x in L, there exists a string y of length q(|x|) such that M(x,y) = 1</li>\n  <li>For all x not in L and all strings y of length q(|x|), M(x,y) = 0</li>\n  </ul>\n</blockquote>\n\n<p>I\'m not an expert in the field but the first bullet point leads me to think that M must run in time p(|x|) regardless of the size of y, which doesn\'t seem to be true, at least if M gets to read y completely. What if |y| > p(|x|)? </p>\n\n<p>Is the first bullet point of the definition correct? Shouldn\'t it be </p>\n\n<blockquote>\n  <p>For all x and y, the machine M runs in time p(|x|+|y|) on input (x,y)</p>\n</blockquote>\n\n<p>Can you point me to an authoritative source with the original definition of NP based on deterministic verifiers?</p>\n', 'ViewCount': '105', 'Title': "Is Wikipedia's formal definition of NP correct?", 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-23T13:12:55.713', 'LastEditDate': '2014-03-23T13:12:55.713', 'AnswerCount': '1', 'CommentCount': '2', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '16003', 'Tags': '<complexity-theory><terminology><np>', 'CreationDate': '2014-03-22T23:44:44.197', 'Id': '22952'}{'Body': '<p>Are all Deterministic Finite Automatons also Non Deterministic Finite Automatons?</p>\n', 'ViewCount': '70', 'Title': 'Are all DFAs also NFAs?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-24T21:26:05.983', 'LastEditDate': '2014-03-24T21:26:05.983', 'AnswerCount': '1', 'CommentCount': '3', 'AcceptedAnswerId': '23013', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '11684', 'Tags': '<terminology><automata><finite-automata>', 'CreationDate': '2014-03-24T16:52:37.563', 'Id': '23008'}{'Body': '<p>I have come up with a type of simulation "game" but I cannot find anything describing it online.</p>\n\n<p>The simulation has a 2D "world" with a number of automatons on a discrete grid, similar to the game GNU Robots, although for an interesting game, their behavioral rules should be much more complex:</p>\n\n<pre><code>#.......\n#...#...\n...#....\n....#..#\n..#.....\n</code></pre>\n\n<p>Where each <code>#</code> is a robot.</p>\n\n<p>What\'s this class of simulations called?</p>\n', 'ViewCount': '23', 'Title': 'Name for a Type of Simulation', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-27T08:30:25.417', 'LastEditDate': '2014-03-27T08:30:25.417', 'AnswerCount': '0', 'CommentCount': '5', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '6727', 'Tags': '<terminology><simulation>', 'CreationDate': '2014-03-26T18:11:28.960', 'Id': '23094'}{'ViewCount': '76', 'Title': 'Why should leaf nodes in a red-black tree be black?', 'LastEditDate': '2014-03-27T15:03:50.240', 'AnswerCount': '2', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '16188', 'FavoriteCount': '1', 'Body': u'<p>From the property of Red-Black Trees we know that: </p>\n\n<ul>\n<li>All leaves (NIL) are black. (All leaves are same color as the root.)(Comren et al "Introduction to Algorithms")</li>\n</ul>\n\n<p><img src="http://i.stack.imgur.com/hz7wf.png" alt="An example of a red\u2013black tree. From Wikipedia"></p>\n\n<p>But what is the reason that we should enforce them as Black, even though they\'re NILL\'s? </p>\n', 'Tags': '<terminology><data-structures><search-trees><dictionaries>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-29T05:15:31.620', 'CommentCount': '1', 'AcceptedAnswerId': '23123', 'CreationDate': '2014-03-27T10:13:14.353', 'Id': '23119'}{'Body': "<p>I was trying to find info about this Finite Automata type FAB (Finite Automata Bowl) and wasn't able to find a lot. It is basically the rules that apply to PDA apply to FAB except you drop the temporal order of the stack. So instead of being restricted to only removing the top symbol of the stack, you can remove any symbol of the bowl.</p>\n\n<p>The question is, does there exist a context-free language that is <em>not</em> accepted by an FAB?</p>\n", 'ViewCount': '57', 'Title': 'What is Finite Automata Bowl?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-31T07:58:15.327', 'LastEditDate': '2014-03-31T07:58:15.327', 'AnswerCount': '2', 'CommentCount': '7', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '16197', 'Tags': '<terminology><reference-request><automata><finite-automata>', 'CreationDate': '2014-03-27T14:56:09.013', 'Id': '23128'}{'Body': '<p>If you resize an 1000x1000 raster image to 10x10 and resize it back to 1000x1000 is this considered to be an example of <a href="https://en.wikipedia.org/wiki/Aliasing" rel="nofollow">aliasing</a>?</p>\n', 'ViewCount': '32', 'ClosedDate': '2014-03-30T02:33:04.923', 'Title': 'Resizing and aliasing in computer science', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-28T12:48:00.597', 'LastEditDate': '2014-03-28T12:48:00.597', 'AnswerCount': '1', 'CommentCount': '6', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '16228', 'Tags': '<terminology><image-processing><graphics>', 'CreationDate': '2014-03-28T08:24:19.157', 'Id': '23167'}{'ViewCount': '156', 'Title': 'What is pass-by-value-result and its advantage and disadvantage?', 'LastEditDate': '2014-03-30T05:52:41.380', 'AnswerCount': '1', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '16281', 'Body': '<p>I have searched on Google, but I can\'t quite understand what is pass-by-value-result. What is the advantage and disadvantage of using pass-by-value-result?</p>\n\n<p>If I have a program code like this, what will be the result when parameters are passed by value-result?</p>\n\n<pre><code>#include &lt;stdio.h&gt;\n\nint a=2;\nint b=1;\n\nvoid fun(int x, int y) {\n    b=x+y;\n    x=a+y;\n    y=b+x;\n}\n\nvoid main() {\n    fun(b,b);\n    printf("%d %d\\n",a,b);\n}\n</code></pre>\n', 'ClosedDate': '2014-04-01T02:00:53.887', 'Tags': '<terminology><programming-languages><semantics>', 'LastEditorUserId': '13022', 'LastActivityDate': '2014-03-30T17:03:12.450', 'CommentCount': '1', 'AcceptedAnswerId': '23255', 'CreationDate': '2014-03-30T05:09:09.320', 'Id': '23246'}{'Body': "<p>I've read the wikipedia article, but I don't speak category theory (and I'm not sure how to start so I'm just picking something that sounds interesting). So, can someone give me a simple, possibly incorrect (for learning/clarity), pragmatic (if it applies to programming, which I'm pretty sure it does) explanation of what they are and why they're cool?</p>\n\n<p>I'm trying to get through some reading about the polyadic pi calculus. Perhaps that will be enlightening.</p>\n", 'ViewCount': '28', 'Title': 'What is a polyad?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-31T08:05:22.030', 'LastEditDate': '2014-03-31T08:05:22.030', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '11027', 'Tags': '<terminology><category-theory>', 'CreationDate': '2014-03-30T23:09:01.347', 'FavoriteCount': '1', 'Id': '23272'}{'ViewCount': '85', 'Title': 'Difference between diameter of a graph vs longest path of the graph', 'LastEditDate': '2014-03-31T08:22:09.740', 'AnswerCount': '3', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '9536', 'FavoriteCount': '1', 'Body': '<p>I am curious what is the difference between diameter of a graph vs longest path of a graph. I just read diameter of a graph can be solved using Floyd warshall in O(V^3) while longest path can be calculated in O(V + E) using topological sort. </p>\n', 'Tags': '<graph-theory><terminology>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-03-31T09:19:55.540', 'CommentCount': '0', 'AcceptedAnswerId': '23285', 'CreationDate': '2014-03-31T05:37:49.697', 'Id': '23284'}{'Body': '<p>I\'m reading "Sets for Mathematics" by Lawvere, and he uses the following metaphor at the end of section 1.3: "we will see...how any abstract set F of the right size can act as mappings between given abstract sets. (For example, in computers variable programs are just a particular kind of variable data.)"</p>\n\n<p>The internet seems silent on these so called "variable programs". Has anyone heard of them/has an accessible introduction (at an introductory graduate level)? Extra bonus points if you can explain how this relates to sets and functions.</p>\n', 'ViewCount': '34', 'Title': 'Variable programs and variable data', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-01T07:28:25.367', 'LastEditDate': '2014-04-01T07:28:25.367', 'AnswerCount': '1', 'CommentCount': '1', 'AcceptedAnswerId': '23308', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '16336', 'Tags': '<terminology><programming-languages>', 'CreationDate': '2014-04-01T01:33:22.910', 'Id': '23306'}{'Body': '<p><img src="http://i.stack.imgur.com/lSvI9.png" alt="enter image description here"></p>\n\n<p>Is this state machine a moore machine or a mealy machine? I am confused because the states have outputs and the transitions have output based on the input. I tried making a state table but I think its wrong. Can anyone provide the state machine?</p>\n', 'ViewCount': '44', 'Title': 'How to read edge labels like "01, 1" on a state diagram?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-02T08:46:59.387', 'LastEditDate': '2014-04-02T08:46:59.387', 'AnswerCount': '1', 'CommentCount': '3', 'AcceptedAnswerId': '23333', 'Score': '-1', 'PostTypeId': '1', 'OwnerUserId': '14864', 'Tags': '<terminology><automata><finite-automata>', 'CreationDate': '2014-04-01T23:43:25.007', 'Id': '23329'}{'Body': '<p>In the multi criteria decision making context, let $\\mathcal{A}$ be a set of alternatives or choices. Each alternative $\\alpha\\in \\mathcal{A}$ is a vector of $k$ criteria $\\alpha=(v_1,v_2,\\dots,v_k)$. Let $\\geq_1,\\dots,\\geq_k$ be a set of $k$ partial orders over $\\mathcal{A}$. \nFor any two alternative $\\alpha,\\beta\\in \\mathcal{A}$,  $\\alpha$ <em>dominates</em> $\\beta$ $(\\alpha\\geq \\beta)$ if and only if $\\alpha\\geq_i \\beta$ for all $i\\in\\{1,2,\\dots,k\\}$. </p>\n\n<p>An alternative $\\alpha$ is said to be Pareto optimal if there is no alternative dominates it. That is, $\\beta \\not\\geq \\alpha$ for all $\\beta\\in \\mathcal{A}$. \nThe Pareto set $S_{pareto}$ is the set of all Pareto optimal alternatives. </p>\n\n<p>I am looking for different notions with which one can have a subset of $S_{pareto}$. \nAre there other notions in the literature define a set $S$ which is guaranteed to be a subset of $S_{pareto}$? </p>\n', 'ViewCount': '15', 'Title': 'In multi criteria decision making, what notions are there to get a subset of the Pareto set?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-05T15:50:16.913', 'LastEditDate': '2014-04-05T15:50:16.913', 'AnswerCount': '0', 'CommentCount': '0', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '4598', 'Tags': '<terminology><optimization>', 'CreationDate': '2014-04-04T18:44:32.453', 'Id': '23430'}{'ViewCount': '112', 'Title': 'Is it theoretically exist a computer that never affected by computer virus?', 'LastEditDate': '2014-04-05T07:57:50.503', 'AnswerCount': '2', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '16466', 'FavoriteCount': '1', 'Body': '<p>Is it theoretically exist a computer that never affected by computer virus?</p>\n\n<p>just wonder if there could be a revolution on the computer?</p>\n', 'ClosedDate': '2014-04-05T15:56:16.290', 'Tags': '<terminology><security>', 'LastEditorUserId': '5000', 'LastActivityDate': '2014-04-05T14:10:20.527', 'CommentCount': '4', 'AcceptedAnswerId': '23445', 'CreationDate': '2014-04-05T01:30:05.487', 'Id': '23441'}{'Body': '<p>I\'m trying to understand the material in "A Dual Coordinate Descent Method for Large-scale Linear SVM" by Hsieh et. al. (<a href="http://ntu.csie.org/~cjlin/papers/cddual.pdf" rel="nofollow">link to paper</a>) There is an equation for the Dual form of an unconstrained optimisation problem,</p>\n\n<p>$$\nf(\\mathbf{\\alpha})=\\dfrac{1}{2}\\mathbf{\\alpha}^T\\bar{Q}\\alpha-e^T\\alpha\n$$</p>\n\n<p>I don\'t understand what the $\\mathbf{e}^T$ means, it\'s not explained in the surronding text, so I assume it\'s just some common notation. Later in the paper $\\mathbf{e}_i$ is defined as $\\mathbf{e}_i=[0,\\ldots,1,0,\\ldots,0]^T$, so maybe it\'s some sort of selector term? Not sure if this second mention is even related.</p>\n\n<p>Please may someone explain to be what the $\\mathbf{e}^T$ bit is doing in this formula? Thank you for your time.</p>\n', 'ViewCount': '93', 'Title': 'Unknown notation "$e^T$" in a machine learning paper', 'LastEditorUserId': '472', 'LastActivityDate': '2014-04-08T12:08:07.270', 'LastEditDate': '2014-04-08T12:08:07.270', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '23517', 'Score': '5', 'PostTypeId': '1', 'OwnerUserId': '16012', 'Tags': '<terminology><machine-learning><optimization>', 'CreationDate': '2014-04-07T14:04:03.300', 'Id': '23515'}{'ViewCount': '38', 'Title': 'What is the common terminology to refer to the nth ancestor of a tree root?', 'LastEditDate': '2014-04-07T23:34:03.630', 'AnswerCount': '1', 'Score': '3', 'OwnerDisplayName': 'xtian', 'PostTypeId': '1', 'OwnerUserId': '16569', 'Body': '<p>Reading the Wikipedia article for common terminology for tree <a href="http://en.wikipedia.org/wiki/Tree_%28data_structure%29" rel="nofollow">(data structure)</a> there are several near references, but I don\'t read a formal declaration for how to refer to a specific generation of a tree\'s subtrees. </p>\n\n<p>For example, </p>\n\n<blockquote>\n  <h3>Definition</h3>\n  \n  <p>As a data type, a tree has a value and children, and <strong>the children are \n  themselves trees</strong>;  [...] Due to the use of references to\n  trees in the linked tree data structure, trees are often discussed\n  implicitly assuming that they are being represented <strong>by references to\n  the root node</strong>, as this is often how they are actually implemented.</p>\n</blockquote>\n\n<p>And also,</p>\n\n<blockquote>\n  <h3>Terminology.</h3>\n  \n  <p>"The <strong>height of a node is the length of the longest downward path to a\n  leaf from that node.</strong> The height of the root is the height of the\n  tree. [...] <strong>The root node has depth zero</strong>..."</p>\n</blockquote>\n\n<p>The former implies subtree n could be refered to as the nth decendant of root or the nth tree. Can I be sure subtree only refers to decendants and not other branches at the same distance from root?</p>\n\n<p>The latter refers to the height counting from the root (0). Again, height sounds uncommon to me. As in, <em>"Please refer to the nodes at height 4 to see..."</em> Since a tree is commonly displayed from the root branching downward, I\'m predisposed to bias against the term <em>height</em> versus my preferred notion of <em>depth</em>. </p>\n', 'Tags': '<graph-theory><terminology><trees>', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-07T23:34:03.630', 'CommentCount': '4', 'AcceptedAnswerId': '23523', 'CreationDate': '2014-04-06T16:18:17.753', 'Id': '23519'}{'Body': '<p>Java seems to be categorized as a statically-typed language<a href="http://en.wikipedia.org/wiki/Java_%28programming_language%29" rel="nofollow"> [1]</a>, but I\'m wondering if it would be accurate to describe it as generally statically-typed but having some dynamic typing because of the run-time type checks performed when downcasts are performed.</p>\n', 'ViewCount': '44', 'Title': 'Can Java be accurately described as statically and dynamically typed?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-08T08:10:46.977', 'LastEditDate': '2014-04-07T23:33:02.310', 'AnswerCount': '1', 'CommentCount': '0', 'AcceptedAnswerId': '23536', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '40', 'Tags': '<terminology><programming-languages><typing><type-checking>', 'CreationDate': '2014-04-07T17:47:03.420', 'Id': '23521'}{'Body': u'<p>In an article I am currently reading the grammar</p>\n\n<p><strong>S \u2192 SS | a | \u03b5</strong></p>\n\n<p>is being described as canonical infinitely ambiguous. The infinitely ambiguous part I have no problem recognizing, but does "canonical" mean? Does it mean "typical", "standard example" etc.?</p>\n', 'ViewCount': '21', 'Title': 'Canonical infinitely ambiguous languages', 'LastActivityDate': '2014-04-08T11:06:36.490', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '16549', 'Tags': '<formal-languages><terminology>', 'CreationDate': '2014-04-08T10:14:48.200', 'Id': '23541'}{'Body': "<p>How do people measure performance overhead? Whenever someone is bragging about how their program or application performs better than another, they talk about particular measurements, eg time, performance etc. </p>\n\n<p>Whilst I understand how time to perform a task can be calculated, I cannot understand how performance is measured, and I can't find out thought Google.</p>\n\n<p>Are there multiple ways? Are they all accepted or do people have issues with certain methods?</p>\n", 'ViewCount': '51', 'Title': 'How do people measure performance overhead?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-09T23:26:53.140', 'LastEditDate': '2014-04-09T21:43:47.333', 'AnswerCount': '1', 'CommentCount': '4', 'AcceptedAnswerId': '23614', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '16580', 'Tags': '<algorithms><terminology><performance>', 'CreationDate': '2014-04-09T11:25:17.617', 'Id': '23591'}{'Body': '<p>I was reading up on <a href="http://en.wikipedia.org/wiki/Dynamic_programming">Dynamic Programming</a> when I came across the following quote</p>\n\n<blockquote>\n  <p>A dynamic programming algorithm will examine all possible ways to\n  solve the problem and will pick the best solution. Therefore, we can\n  roughly think of dynamic programming as an <strong>intelligent, brute-force\n  method that enables us to go through all possible solutions to pick\n  the best one</strong>. If the scope of the problem is such that going through\n  all possible solutions is possible and fast enough, dynamic\n  programming guarantees finding the optimal solution</p>\n</blockquote>\n\n<p>The following example was given </p>\n\n<blockquote>\n  <p>For example, let\'s say that you have to get from point A to point B as\n  fast as possible, in a given city, during rush hour. A dynamic\n  programming algorithm will look into the entire traffic report,\n  looking into all possible combinations of roads you might take, and\n  will only then tell you which way is the fastest. Of course, you might\n  have to wait for a while until the algorithm finishes, and only then\n  can you start driving. The path you will take will be the fastest one\n  (assuming that nothing changed in the external environment)</p>\n</blockquote>\n\n<p><a href="http://en.wikipedia.org/wiki/Brute-force_search">Brute Force</a> is trying every possible solution before deciding on the best solution . </p>\n\n<p>How is Dynamic Programming different from Brute Force if it also <strong>goes through all possible solutions before picking the best one</strong> , the only difference i see is that Dynamic Programming takes into account the additional factors ( traffic conditions in this case).</p>\n\n<p>Am  i correct to say that Dynamic Programming is a subset of Brute Force method ??</p>\n', 'ViewCount': '1511', 'Title': 'How is Dynamic programming different from Brute force', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-10T13:32:34.613', 'LastEditDate': '2014-04-09T22:36:34.710', 'AnswerCount': '6', 'CommentCount': '5', 'Score': '8', 'PostTypeId': '1', 'OwnerUserId': '12448', 'Tags': '<algorithms><terminology><optimization><dynamic-programming>', 'CreationDate': '2014-04-09T15:58:08.683', 'FavoriteCount': '1', 'Id': '23599'}{'Body': "<p>I don't know the proper mathematical expression for for-loops, especially those that carry two distinctly behaving variables with each iteration.</p>\n\n<p>For example, assuming <code>n</code> is previously defined and holds some positive integer, how I would I represent the set printed by this for-loop in mathematical notation?</p>\n\n<pre><code>// prints a set of multiples (n previously defined)\nfor (int j=n, k=n; k&gt;=0; j++, k--) {\n  cout &lt;&lt; (n-j)*(n-k) &lt;&lt; endl;\n}\n</code></pre>\n\n<p>Forgive my crudeness, but I'm thinking <em>something</em> along the lines of:</p>\n\n<p>$\\left \\{ \\left ( n-j \\right ) \\cdot \\left ( n-k \\right )\\forall j \\left \\{ n, n+1, ..., 2n \\right \\}  \\forall k  \\left \\{ n, n-1, ..., 0 \\right \\}\\right \\}$</p>\n\n<p>I'm lost. Should I even be using $\\forall$ in this context? Any guidance is greatly appreciated!</p>\n", 'ViewCount': '46', 'Title': 'How do I mathematically express a set generated using two loop variables within a single for loop?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-10T07:54:27.533', 'LastEditDate': '2014-04-10T07:35:34.527', 'AnswerCount': '3', 'CommentCount': '0', 'AcceptedAnswerId': '23626', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '16607', 'Tags': '<terminology><discrete-mathematics><sets>', 'CreationDate': '2014-04-10T00:36:45.333', 'Id': '23615'}{'Body': '<p>Is there any specific name for strings of data that have well defined format ? For example URLS, domain names, IP Addresses, Email addresses, File Paths etc. are all having well defined delimiters and data formats. What are these special strings in general called ? </p>\n', 'ViewCount': '80', 'Title': 'What are these special strings called?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-10T17:39:11.273', 'LastEditDate': '2014-04-10T12:44:59.970', 'AnswerCount': '2', 'CommentCount': '2', 'AcceptedAnswerId': '23635', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '4421', 'Tags': '<terminology><strings>', 'CreationDate': '2014-04-10T12:41:52.730', 'Id': '23634'}{'Body': '<p>Trying to understand the concept of NP-completeness, I came across this pearl on Wikipedia:</p>\n\n<blockquote>\n  <p>From <a href="http://en.wikipedia.org/wiki/NP-complete" rel="nofollow">NP-complete</a>:</p>\n  \n  <p>A decision problem L is <strong>NP-complete</strong> if it is in the set of NP problems\n  and also in the set of <strong>NP-hard</strong> problems.</p>\n  \n  <p>From <a href="http://en.wikipedia.org/wiki/NP-hard" rel="nofollow">NP-hard</a>:</p>\n  \n  <p>A problem H is <strong>NP-hard</strong> if and only if there is an <strong>NP-complete</strong> problem\n  L that is polynomial time Turing-reducible to H [...].</p>\n</blockquote>\n\n<p>So it appears that the definition of NP-completeness depends on the definition of NP-hardness, and vice versa.</p>\n\n<p>What is going on here? How can I untangle these concepts?</p>\n', 'ViewCount': '20', 'ClosedDate': '2014-04-12T13:26:52.730', 'Title': 'Cyclic definition of NP-completeness', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-12T13:26:43.133', 'LastEditDate': '2014-04-12T13:26:43.133', 'AnswerCount': '0', 'CommentCount': '2', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '16709', 'Tags': '<complexity-theory><terminology><np-complete><np-hard>', 'CreationDate': '2014-04-12T11:23:20.347', 'Id': '23700'}{'Body': "<p>Suppose I have an algorithm that has a performance of $O(n + 2)$. Here if n gets really large the 2 becomes insignificant. In this case it's perfectly clear the real performance is $O(n)$.</p>\n\n<p>However, say another algorithm has a performance of $O(n^2/2)$. Here if n gets really large then $n^2/2$ is exactly half of $n^2$, which is not significantly smaller than $n^2$. So why we drop 1/2 from $O(n^2/2)$ and it becomes $O(n^2)$?</p>\n", 'ViewCount': '392', 'Title': 'Why is constant always dropped from big O analysis?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-14T02:45:53.917', 'LastEditDate': '2014-04-12T15:22:48.923', 'AnswerCount': '3', 'CommentCount': '5', 'AcceptedAnswerId': '23704', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '16713', 'Tags': '<terminology><algorithm-analysis><asymptotics><landau-notation>', 'CreationDate': '2014-04-12T14:54:50.047', 'Id': '23703'}{'Body': '<p>I\'m taking a class on graph theory that uses "Graph Theory (Graduate Texts in Mathematics)" by Bondy and Murty. One of the questions is about Cayley graphs and the n-cube, and I don\'t understand how to interpret it. It runs as follows:</p>\n\n<blockquote>\n  <p>Let $\\Gamma$ be a group and $S$ be a subset of $\\Gamma$ not including the\n  identity element. Suppose that the inverse of every element in $S$ also\n  belongs to $S$. The Cayley graph of $\\Gamma$ with respect to $S$ is the graph\n  $CG(\\Gamma, S)$ with vertex set $\\Gamma$ in which two vertices $x$ and $y$ are\n  adjacent iff $xy^{-1}\\in S$.</p>\n</blockquote>\n\n<p>Okay. I follow so far.</p>\n\n<blockquote>\n  <p>Recall that the n-cube is the graph whose vertex set is the set of all\n  n-tuples of 0s and 1s, where two n-tuples are adjacent if they differ\n  in precisely one coordinate.</p>\n</blockquote>\n\n<p>Makes sense.</p>\n\n<blockquote>\n  <p>Show that the n-cube is a Cayley graph.</p>\n</blockquote>\n\n<p>What does it mean to talk about "$xy$" when $x$ and $y$ are n-tuples? What is the inverse of an n-tuple?</p>\n\n<p>Someone I asked about the problem suggested that I treat $\\Gamma$ here as the additive group $({\\mathbb Z}/2{\\mathbb Z})^n$, and so take $xy^{-1}$ to mean elementwise subtraction of $y$ from $x$, mod 2. But then it seems like $(0, 0, ..., 0)\\in\\Gamma$ and, since it\'s the identity element, every vertex will have an edge connecting to it, and that isn\'t what the n-cube looks like. Googling, I also see that there is an <a href="http://en.wikipedia.org/wiki/Tuple#Tuples_as_nested_sets" rel="nofollow">interpretation of tuples as nested sets</a>, but then I don\'t see how the product of two nested sets would ever be in S, since it will have a different cardinality from either of the original tuples. Interpreting the tuples as vectors can\'t work either since then $xy^{-1}$ will have different dimensions than either of the original tuples.</p>\n\n<p>What is this question asking?</p>\n', 'ViewCount': '48', 'Title': 'n-Cube as a Cayley Graph', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-13T10:06:40.313', 'LastEditDate': '2014-04-13T10:03:00.093', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '23733', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '16612', 'Tags': '<graph-theory><terminology><group-theory>', 'CreationDate': '2014-04-13T03:07:11.680', 'Id': '23724'}{'Body': "<p>In mathematics , an $n$-ary relation is subset of cross product on $n$ sets took under consideration.</p>\n\n<p>Let us take $A_1,A_2,A_3 \\cdots A_n$ be the n sets.</p>\n\n<p>Then relation $R \\subseteq A_1\\times A_2\\times A_3 \\times A_n$ .</p>\n\n<p>Here $X$ represents cross product betwen two sets.</p>\n\n<p>If we consider first $k$ sets as input domain and next $n-k$ sets as output range. </p>\n\n<p>Then $R$ is an $k$-ary function that returns $n-k$ multiple outputs. $0 \\le k \\le n$</p>\n\n<p>As we know function is a well-behaved relation. i.e.., A relation can assign same input to any number of outputs.</p>\n\n<p>In the case of functions (well-beahaved relations)  one input at most maps to one output.</p>\n\n<p>My doubt is whether </p>\n\n<ol>\n<li><p>Any program written in any program language ultimately a mathematical relation.</p></li>\n<li><p>Any program written in any program language ultimately a mathematical function.</p></li>\n<li><p>Some programs written in programming languages cannot be a mathematical relation.</p></li>\n<li><p>Some programs written in programming languages cannot be a mathematical function.</p></li>\n</ol>\n\n<p>We know that 2. $\\implies$ 1. and 3. $\\implies$ 4.</p>\n\n<p>Which of the four arguments above are true for all set of programs in all programming languages?</p>\n\n<p>I am arguing with my colleague that 1.,2. are true independent of programming language and program. </p>\n\n<p>But his argument is that procedural languages like c, c++, pascal etc.., doesn't obey 2. but in case of functional programming languages like Haskell it's true.</p>\n\n<p>So, is  functional programming is syntactical extension of mathematical functions or conceptual extension? </p>\n", 'ViewCount': '70', 'Title': 'Mathematical function vs Computer program', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-13T10:08:41.727', 'LastEditDate': '2014-04-13T10:08:41.727', 'AnswerCount': '2', 'CommentCount': '0', 'AcceptedAnswerId': '23730', 'Score': '-1', 'PostTypeId': '1', 'OwnerUserId': '16721', 'Tags': '<terminology><computability><programming-languages><functional-programming>', 'CreationDate': '2014-04-13T04:36:03.103', 'Id': '23725'}{'Body': '<p>I have the following simple algorithm to find duplicate characters in a string:</p>\n\n<pre><code>for i = 1 -&gt; n\n    for j = i + 1 -&gt; n\n        if A[i] == A[j] return true\nreturn false \n</code></pre>\n\n<p>Why is the running time of this algorithm $\\mathcal{O}(n^2)$?\nIf the first iteration is $n$ steps then, $n-1, n-2,n-3,..,1$ it seems to me that \nadding all these would never be $n^2$ or am I wrong?</p>\n', 'ViewCount': '48', 'Title': 'Confusion with the Running Time of an algorithm that finds duplicate character', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-14T07:47:17.597', 'LastEditDate': '2014-04-14T07:47:17.597', 'AnswerCount': '3', 'CommentCount': '2', 'AcceptedAnswerId': '23749', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '16747', 'Tags': '<terminology><asymptotics><runtime-analysis><landau-notation>', 'CreationDate': '2014-04-13T19:40:14.433', 'Id': '23748'}{'ViewCount': '57', 'Title': 'Shortest directed path connecting given subset of vertices', 'LastEditDate': '2014-04-14T18:27:40.627', 'AnswerCount': '1', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '6615', 'FavoriteCount': '1', 'Body': '<p>Given</p>\n\n<ul>\n<li>weighted directed graph $G = (V,E,w)$, where $w : E \\to \\mathbb R^+$</li>\n<li>source vertex $v \\in V$</li>\n<li>vertex subset $U \\subset V$</li>\n</ul>\n\n<p>how to find a shortest directed path from $v$ containing all vertices from $U$? Note that such path may contain vertices that are not in $U$.</p>\n\n<ol>\n<li>Does such problem have a name?</li>\n<li>How to find a solution?</li>\n</ol>\n', 'Tags': '<graph-theory><terminology><shortest-path><weighted-graphs>', 'LastEditorUserId': '6615', 'LastActivityDate': '2014-04-14T18:27:40.627', 'CommentCount': '2', 'AcceptedAnswerId': '23789', 'CreationDate': '2014-04-14T14:52:04.890', 'Id': '23784'}{'Body': '<p>I was asked to give a formal description of a Turing machine I have no experience with this, and was wondering what "formal description" entails.</p>\n', 'ViewCount': '77', 'Title': 'What is the formal description of a Turing machine?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-15T10:09:11.737', 'LastEditDate': '2014-04-15T10:09:11.737', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '23795', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '16769', 'Tags': '<terminology><turing-machines>', 'CreationDate': '2014-04-14T18:44:51.683', 'Id': '23792'}{'ViewCount': '46', 'Title': 'Matrix equality up to row/column permutations problem name', 'LastEditDate': '2014-04-16T10:32:07.080', 'AnswerCount': '1', 'Score': '6', 'PostTypeId': '1', 'OwnerUserId': '140', 'FavoriteCount': '2', 'Body': '<p>Sorry for the trivial question; has the following decision problem an "official" (possibly short) name?</p>\n\n<blockquote>\nGiven two  $n \\times m$ $\\text{0-1}$ (binary) matrices $M_1, M_2$ check if they are the same up to row and column permutations.\n</blockquote>\n\n<p>(something like the short names used in complexity theory for decision problems: e.g. 3SAT, GI (Graph Isomorphism), X3C (Exact Cover By Three Set), CLIQUE, ...)</p>\n', 'Tags': '<terminology><reference-request>', 'LastEditorUserId': '140', 'LastActivityDate': '2014-04-19T10:49:29.547', 'CommentCount': '6', 'AcceptedAnswerId': '23932', 'CreationDate': '2014-04-16T10:19:04.533', 'Id': '23850'}{'Body': '<p>I am trying to find out accept, loop and reject in this Turing Machine because it doesnt have any...I am not sure if I completely understand it but this is the turing machine I am talking about...</p>\n\n<p><img src="http://i.stack.imgur.com/UADRo.png" alt="enter image description here"></p>\n\n<p>so accept state would be --> <code>Accept(T2) - all words with a a</code><br>\n                      loop state would be --> <code>Loop (T2) - /\\</code></p>\n\n<p>reject state would be --> <code>Reject(T2) - Strings with b</code></p>\n\n<p>am I on a right track ? how could I do find accept, loop and reject on this TM? thanks!</p>\n', 'ViewCount': '49', 'ClosedDate': '2014-04-29T23:37:40.617', 'Title': 'How to find out what are accept, loop and reject in this Turing Machine?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-17T08:21:46.130', 'LastEditDate': '2014-04-17T08:21:46.130', 'AnswerCount': '2', 'CommentCount': '3', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '14495', 'Tags': '<terminology><turing-machines>', 'CreationDate': '2014-04-16T17:40:29.290', 'Id': '23861'}{'Body': '<blockquote>\n  <p>Given $n+1$ control points, B-spline blending functions are polynomials\n  of degree $d-1$, $(1&lt;d\\leq n+1)$. </p>\n</blockquote>\n\n<p>This much is easy to comprehend.\n<br/>Now comes the part I am not able to make any sense of. </p>\n\n<blockquote>\n  <p>Each polynomial function is defined over $d$ subintervals of the total\n  range of $u$. The selected set of subinterval endpoints $u_j$ is referred\n  to as a <strong>knot vector</strong>.</p>\n</blockquote>\n\n<p>What is the purpose of <strong>knot vector</strong>? What is its physical significance?</p>\n', 'ViewCount': '17', 'ClosedDate': '2014-04-24T09:57:16.040', 'Title': 'Concept of knots in B-splines', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-24T06:34:16.397', 'LastEditDate': '2014-04-24T06:34:16.397', 'AnswerCount': '0', 'CommentCount': '3', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '10124', 'Tags': '<terminology><mathematical-analysis>', 'CreationDate': '2014-04-23T18:19:09.773', 'Id': '24053'}{'Body': "<p>I came across this notation and I don't know the meaning of it, or if it's a typo:  $\\{$ some set $\\}^{+}$</p>\n\n<p>What does the + mean, i.e., the plus operator applied to a set?</p>\n", 'ViewCount': '75', 'Title': 'What does $\\{$ a set $\\}^{+}$ mean in the context of languages?', 'LastEditorUserId': '755', 'LastActivityDate': '2014-04-25T15:37:18.733', 'LastEditDate': '2014-04-25T15:37:18.733', 'AnswerCount': '1', 'CommentCount': '2', 'AcceptedAnswerId': '24095', 'Score': '4', 'PostTypeId': '1', 'OwnerUserId': '16480', 'Tags': '<formal-languages><terminology><regular-languages><sets>', 'CreationDate': '2014-04-25T05:27:11.613', 'Id': '24094'}{'Body': '<p>I was studying the proof of Ackermann function being recursive, but not primitive recursive, and a question hit me: "So what?". Why does it matter? What is the significance of primitive recursive functions?</p>\n', 'ViewCount': '97', 'Title': 'What is the significance of primitive recursive functions?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-27T21:35:16.937', 'LastEditDate': '2014-04-27T19:41:56.967', 'AnswerCount': '2', 'CommentCount': '2', 'AcceptedAnswerId': '24154', 'Score': '1', 'PostTypeId': '1', 'OwnerUserId': '7410', 'Tags': '<terminology><computability><machine-models>', 'CreationDate': '2014-04-27T15:59:40.287', 'Id': '24152'}{'Body': '<p>I know after some reading Amdahl law is a embarrassingly parallel programming model. Embarrassingly parallel means there is no communication and tasks work independently. Am I to assume a parallel and a non parallel aspect of the program is embarrassingly parallel?  If not, what makes it embarrassingly parallel?</p>\n', 'ViewCount': '29', 'Title': 'Amdahl law and parallelism', 'LastEditorUserId': '98', 'LastActivityDate': '2014-04-30T11:40:27.590', 'LastEditDate': '2014-04-30T11:40:27.590', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '7173', 'Tags': '<terminology><parallel-computing>', 'CreationDate': '2014-04-29T13:34:20.843', 'Id': '24221'}{'Body': "<p>Consider the following program:</p>\n\n<pre><code>const int n = 50;\nint tally;\n\nvoid total() {\n  int count;\n  for (count = 1; count &lt;= n; count++){\n    tally++;\n  }\n}\n\nvoid main() {\n  tally = 0;\n  parbegin (total (), total ());\n  write (tally);\n}\n</code></pre>\n\n<blockquote>\n  <ol>\n  <li><p>Determine the proper lower bound and upper bound on the final value of the\n  shared variable tally output by this concurrent program.Assume processes can execute\n  at any relative speed and that a value can only be incremented after it has\n  been loaded into a register by a separate machine instruction.</p></li>\n  <li><p>Suppose that an arbitrary number of these processes are permitted to execute in\n  parallel under the assumptions of part (a).What effect will this modification have\n  on the range of final values of tally?</p></li>\n  </ol>\n</blockquote>\n\n<p>My problem is that I don't understand the question what does this mean ?</p>\n\n<blockquote>\n  <p>... and that a value can only be incremented after it has been loaded into a register by a separate machine instruction.</p>\n</blockquote>\n\n<p>I feel that when two processes execute simultaneously due to this assumption some value of tally will be lost but I don't know how it can happen because I don't know what this assumption means so I can't find lower bound!it is obvious that if 2 or n process execute one after the other tally will be 100 hence 100 = (number of process *50) is upper bound!</p>\n", 'ViewCount': '72', 'Title': "What does it mean that a value can only be incremented after it's been loaded into a register?", 'LastEditorUserId': '98', 'LastActivityDate': '2014-05-03T08:40:59.377', 'LastEditDate': '2014-04-30T17:24:13.493', 'AnswerCount': '3', 'CommentCount': '3', 'Score': '2', 'PostTypeId': '1', 'OwnerUserId': '17217', 'Tags': '<terminology><concurrency><semantics>', 'CreationDate': '2014-04-30T14:01:31.777', 'FavoriteCount': '0', 'Id': '24255'}{'Body': "<p>I'm working on a graph representation of software for a static analysis project, and I'm finding a distinction that I have no name for between different types of variables.</p>\n\n<p>On one side of the division, we have local variables and parameters, which are not subject to modification by other threads during the execution of a method. For these variables, static single assignment form is valid.</p>\n\n<p>On the other side of the division, we have global variables, fields, and C/C++ static local variables, which can be modified by other threads, meaning static single assignment form is not necessarily valid, as the variable may be modified by a separate thread during the execution of the method.</p>\n\n<p>Is there any existing term for this division?</p>\n", 'ViewCount': '30', 'Title': 'Is there a term for the common semantics of global variables, static local variables, and fields?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-05-01T02:46:38.767', 'LastEditDate': '2014-05-01T02:46:38.767', 'AnswerCount': '0', 'CommentCount': '8', 'Score': '3', 'PostTypeId': '1', 'OwnerUserId': '16841', 'Tags': '<terminology><typing>', 'CreationDate': '2014-04-30T23:38:51.307', 'Id': '24277'}{'Body': '<p>In Sutton and Barto\'s reinforcement learning book, in multi-armed bandit problem a phrase has been used. "finding an optimal action" using greedy/$\\epsilon$-greedy algorithm. When it is said that an algorithm "finds the optimal action " ? </p>\n', 'ViewCount': '25', 'Title': 'What does "finding an optimal action" for a bandit mean?', 'LastEditorUserId': '98', 'LastActivityDate': '2014-05-01T05:10:18.083', 'LastEditDate': '2014-05-01T02:44:31.973', 'AnswerCount': '1', 'CommentCount': '0', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '13091', 'Tags': '<algorithms><terminology><machine-learning><optimization><artificial-intelligence>', 'CreationDate': '2014-05-01T01:17:32.423', 'Id': '24282'}{'Body': "<p>I'm studying for my finals in algorithms and reading the part about flow networks. There's a certain section that has me completely stumped and it is as follows:</p>\n\n<blockquote>\n  <p>Given a graph $G= \\langle V_G, E_G \\rangle$, we can construct the $H(G)=\\langle V_H, E_H\\rangle$ as follows:\n  $$V_H = V_G\\times\\{0,1\\}E_H = \\{((v,0),(v,1))|v\\in V_G\\}\\cup\\{((x,1),(y,0))|(x,y)\\in E_G\\}.$$\n  Say that we have a graph $\\langle G,u,v\\rangle$ where $G$ is some directed graph, which contains vertices $u$ and $v$ then $H(G)$ can be used to find the smallest number of nodes that must be removed from $G$ to separate $u$ to $v$, meaning there will be no simple path from $u$ to $v$.</p>\n</blockquote>\n\n<p>I really don't understand what's going on here, partly because I can't visualise $H(G)$. I assume we'd get some bipartite graph and maybe apply Edmonds-Karp only because the flow networks sections is succinct and there's not much else in this chapter. Could someone tell/show me what $H(G)$ is doing exactly and why this result is true. Much appreciated.</p>\n", 'ViewCount': '65', 'Title': "Don't understand this graph definition", 'LastEditorUserId': '98', 'LastActivityDate': '2014-05-02T21:53:50.963', 'LastEditDate': '2014-05-02T21:53:50.963', 'AnswerCount': '1', 'CommentCount': '4', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '15826', 'Tags': '<graph-theory><terminology><network-flow>', 'CreationDate': '2014-05-01T14:30:30.687', 'Id': '24295'}{'Body': '<p>I have a Computer Science degree and I\'m employed as a software engineer. I\'m regularly approached by recruiters on LinkedIn with "programmer", "software developer", or general "software and/or computer industry" propositions.</p>\n\n<p>Every now and then though a recruiter will approach me with an "IT position" opportunity. I understand that in the absolute general sense anything and everything between the keywords <em>computer</em> and <em>software</em> will at some point include IT, but when it comes to more specific discussions, particularly offers for an interview for an "IT position", I often find that to be a bit odd. It often strikes me as if I am being offered to interview for the position of a DBA, sys admin, or an IT staff manager, positions that are as foreign to me as the medical field.</p>\n\n<p>To avoid subjectivity, I\'ll make my question is simple. Is a <em>software engineer</em>, <em>coder</em>, <em>programmer</em> or a <em>software developer</em>, in an IT position? IT industry (app development, scientific, multimedia/game)?</p>\n', 'ViewCount': '36', 'ClosedDate': '2014-05-03T09:01:19.970', 'Title': 'Computer Science and the IT industry', 'LastActivityDate': '2014-05-03T03:29:09.333', 'AnswerCount': '1', 'CommentCount': '4', 'Score': '0', 'PostTypeId': '1', 'OwnerUserId': '17287', 'Tags': '<terminology><history>', 'CreationDate': '2014-05-03T00:58:01.853', 'Id': '24333'}